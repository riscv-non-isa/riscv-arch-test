
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_56832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910000000ffffff; valaddr_reg:x3; val_offset:170496*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170496*0 + 3*0*FLEN/8, x4, x1, x2)

inst_56833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910000001ffffff; valaddr_reg:x3; val_offset:170499*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170499*0 + 3*1*FLEN/8, x4, x1, x2)

inst_56834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910000003ffffff; valaddr_reg:x3; val_offset:170502*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170502*0 + 3*2*FLEN/8, x4, x1, x2)

inst_56835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910000007ffffff; valaddr_reg:x3; val_offset:170505*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170505*0 + 3*3*FLEN/8, x4, x1, x2)

inst_56836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91000000fffffff; valaddr_reg:x3; val_offset:170508*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170508*0 + 3*4*FLEN/8, x4, x1, x2)

inst_56837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91000001fffffff; valaddr_reg:x3; val_offset:170511*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170511*0 + 3*5*FLEN/8, x4, x1, x2)

inst_56838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91000003fffffff; valaddr_reg:x3; val_offset:170514*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170514*0 + 3*6*FLEN/8, x4, x1, x2)

inst_56839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91000007fffffff; valaddr_reg:x3; val_offset:170517*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170517*0 + 3*7*FLEN/8, x4, x1, x2)

inst_56840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9100000ffffffff; valaddr_reg:x3; val_offset:170520*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170520*0 + 3*8*FLEN/8, x4, x1, x2)

inst_56841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9100001ffffffff; valaddr_reg:x3; val_offset:170523*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170523*0 + 3*9*FLEN/8, x4, x1, x2)

inst_56842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9100003ffffffff; valaddr_reg:x3; val_offset:170526*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170526*0 + 3*10*FLEN/8, x4, x1, x2)

inst_56843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9100007ffffffff; valaddr_reg:x3; val_offset:170529*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170529*0 + 3*11*FLEN/8, x4, x1, x2)

inst_56844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910000fffffffff; valaddr_reg:x3; val_offset:170532*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170532*0 + 3*12*FLEN/8, x4, x1, x2)

inst_56845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910001fffffffff; valaddr_reg:x3; val_offset:170535*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170535*0 + 3*13*FLEN/8, x4, x1, x2)

inst_56846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910003fffffffff; valaddr_reg:x3; val_offset:170538*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170538*0 + 3*14*FLEN/8, x4, x1, x2)

inst_56847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910007fffffffff; valaddr_reg:x3; val_offset:170541*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170541*0 + 3*15*FLEN/8, x4, x1, x2)

inst_56848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91000ffffffffff; valaddr_reg:x3; val_offset:170544*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170544*0 + 3*16*FLEN/8, x4, x1, x2)

inst_56849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91001ffffffffff; valaddr_reg:x3; val_offset:170547*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170547*0 + 3*17*FLEN/8, x4, x1, x2)

inst_56850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91003ffffffffff; valaddr_reg:x3; val_offset:170550*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170550*0 + 3*18*FLEN/8, x4, x1, x2)

inst_56851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91007ffffffffff; valaddr_reg:x3; val_offset:170553*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170553*0 + 3*19*FLEN/8, x4, x1, x2)

inst_56852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9100fffffffffff; valaddr_reg:x3; val_offset:170556*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170556*0 + 3*20*FLEN/8, x4, x1, x2)

inst_56853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9101fffffffffff; valaddr_reg:x3; val_offset:170559*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170559*0 + 3*21*FLEN/8, x4, x1, x2)

inst_56854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9103fffffffffff; valaddr_reg:x3; val_offset:170562*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170562*0 + 3*22*FLEN/8, x4, x1, x2)

inst_56855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb9107fffffffffff; valaddr_reg:x3; val_offset:170565*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170565*0 + 3*23*FLEN/8, x4, x1, x2)

inst_56856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb910ffffffffffff; valaddr_reg:x3; val_offset:170568*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170568*0 + 3*24*FLEN/8, x4, x1, x2)

inst_56857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb911ffffffffffff; valaddr_reg:x3; val_offset:170571*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170571*0 + 3*25*FLEN/8, x4, x1, x2)

inst_56858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb913ffffffffffff; valaddr_reg:x3; val_offset:170574*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170574*0 + 3*26*FLEN/8, x4, x1, x2)

inst_56859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb917ffffffffffff; valaddr_reg:x3; val_offset:170577*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170577*0 + 3*27*FLEN/8, x4, x1, x2)

inst_56860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb918000000000000; valaddr_reg:x3; val_offset:170580*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170580*0 + 3*28*FLEN/8, x4, x1, x2)

inst_56861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91c000000000000; valaddr_reg:x3; val_offset:170583*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170583*0 + 3*29*FLEN/8, x4, x1, x2)

inst_56862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91e000000000000; valaddr_reg:x3; val_offset:170586*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170586*0 + 3*30*FLEN/8, x4, x1, x2)

inst_56863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91f000000000000; valaddr_reg:x3; val_offset:170589*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170589*0 + 3*31*FLEN/8, x4, x1, x2)

inst_56864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91f800000000000; valaddr_reg:x3; val_offset:170592*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170592*0 + 3*32*FLEN/8, x4, x1, x2)

inst_56865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fc00000000000; valaddr_reg:x3; val_offset:170595*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170595*0 + 3*33*FLEN/8, x4, x1, x2)

inst_56866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fe00000000000; valaddr_reg:x3; val_offset:170598*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170598*0 + 3*34*FLEN/8, x4, x1, x2)

inst_56867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ff00000000000; valaddr_reg:x3; val_offset:170601*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170601*0 + 3*35*FLEN/8, x4, x1, x2)

inst_56868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ff80000000000; valaddr_reg:x3; val_offset:170604*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170604*0 + 3*36*FLEN/8, x4, x1, x2)

inst_56869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffc0000000000; valaddr_reg:x3; val_offset:170607*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170607*0 + 3*37*FLEN/8, x4, x1, x2)

inst_56870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffe0000000000; valaddr_reg:x3; val_offset:170610*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170610*0 + 3*38*FLEN/8, x4, x1, x2)

inst_56871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fff0000000000; valaddr_reg:x3; val_offset:170613*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170613*0 + 3*39*FLEN/8, x4, x1, x2)

inst_56872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fff8000000000; valaddr_reg:x3; val_offset:170616*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170616*0 + 3*40*FLEN/8, x4, x1, x2)

inst_56873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffc000000000; valaddr_reg:x3; val_offset:170619*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170619*0 + 3*41*FLEN/8, x4, x1, x2)

inst_56874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffe000000000; valaddr_reg:x3; val_offset:170622*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170622*0 + 3*42*FLEN/8, x4, x1, x2)

inst_56875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffff000000000; valaddr_reg:x3; val_offset:170625*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170625*0 + 3*43*FLEN/8, x4, x1, x2)

inst_56876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffff800000000; valaddr_reg:x3; val_offset:170628*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170628*0 + 3*44*FLEN/8, x4, x1, x2)

inst_56877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffc00000000; valaddr_reg:x3; val_offset:170631*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170631*0 + 3*45*FLEN/8, x4, x1, x2)

inst_56878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffe00000000; valaddr_reg:x3; val_offset:170634*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170634*0 + 3*46*FLEN/8, x4, x1, x2)

inst_56879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffff00000000; valaddr_reg:x3; val_offset:170637*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170637*0 + 3*47*FLEN/8, x4, x1, x2)

inst_56880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffff80000000; valaddr_reg:x3; val_offset:170640*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170640*0 + 3*48*FLEN/8, x4, x1, x2)

inst_56881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffc0000000; valaddr_reg:x3; val_offset:170643*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170643*0 + 3*49*FLEN/8, x4, x1, x2)

inst_56882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffe0000000; valaddr_reg:x3; val_offset:170646*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170646*0 + 3*50*FLEN/8, x4, x1, x2)

inst_56883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffff0000000; valaddr_reg:x3; val_offset:170649*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170649*0 + 3*51*FLEN/8, x4, x1, x2)

inst_56884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffff8000000; valaddr_reg:x3; val_offset:170652*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170652*0 + 3*52*FLEN/8, x4, x1, x2)

inst_56885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffc000000; valaddr_reg:x3; val_offset:170655*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170655*0 + 3*53*FLEN/8, x4, x1, x2)

inst_56886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffe000000; valaddr_reg:x3; val_offset:170658*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170658*0 + 3*54*FLEN/8, x4, x1, x2)

inst_56887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffff000000; valaddr_reg:x3; val_offset:170661*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170661*0 + 3*55*FLEN/8, x4, x1, x2)

inst_56888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffff800000; valaddr_reg:x3; val_offset:170664*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170664*0 + 3*56*FLEN/8, x4, x1, x2)

inst_56889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffc00000; valaddr_reg:x3; val_offset:170667*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170667*0 + 3*57*FLEN/8, x4, x1, x2)

inst_56890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffe00000; valaddr_reg:x3; val_offset:170670*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170670*0 + 3*58*FLEN/8, x4, x1, x2)

inst_56891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffff00000; valaddr_reg:x3; val_offset:170673*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170673*0 + 3*59*FLEN/8, x4, x1, x2)

inst_56892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffff80000; valaddr_reg:x3; val_offset:170676*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170676*0 + 3*60*FLEN/8, x4, x1, x2)

inst_56893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffc0000; valaddr_reg:x3; val_offset:170679*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170679*0 + 3*61*FLEN/8, x4, x1, x2)

inst_56894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffe0000; valaddr_reg:x3; val_offset:170682*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170682*0 + 3*62*FLEN/8, x4, x1, x2)

inst_56895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffff0000; valaddr_reg:x3; val_offset:170685*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170685*0 + 3*63*FLEN/8, x4, x1, x2)

inst_56896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffff8000; valaddr_reg:x3; val_offset:170688*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170688*0 + 3*64*FLEN/8, x4, x1, x2)

inst_56897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffc000; valaddr_reg:x3; val_offset:170691*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170691*0 + 3*65*FLEN/8, x4, x1, x2)

inst_56898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffe000; valaddr_reg:x3; val_offset:170694*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170694*0 + 3*66*FLEN/8, x4, x1, x2)

inst_56899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffff000; valaddr_reg:x3; val_offset:170697*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170697*0 + 3*67*FLEN/8, x4, x1, x2)

inst_56900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffff800; valaddr_reg:x3; val_offset:170700*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170700*0 + 3*68*FLEN/8, x4, x1, x2)

inst_56901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffffc00; valaddr_reg:x3; val_offset:170703*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170703*0 + 3*69*FLEN/8, x4, x1, x2)

inst_56902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffffe00; valaddr_reg:x3; val_offset:170706*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170706*0 + 3*70*FLEN/8, x4, x1, x2)

inst_56903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffff00; valaddr_reg:x3; val_offset:170709*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170709*0 + 3*71*FLEN/8, x4, x1, x2)

inst_56904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffff80; valaddr_reg:x3; val_offset:170712*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170712*0 + 3*72*FLEN/8, x4, x1, x2)

inst_56905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffffc0; valaddr_reg:x3; val_offset:170715*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170715*0 + 3*73*FLEN/8, x4, x1, x2)

inst_56906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffffe0; valaddr_reg:x3; val_offset:170718*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170718*0 + 3*74*FLEN/8, x4, x1, x2)

inst_56907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffffff0; valaddr_reg:x3; val_offset:170721*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170721*0 + 3*75*FLEN/8, x4, x1, x2)

inst_56908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffffff8; valaddr_reg:x3; val_offset:170724*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170724*0 + 3*76*FLEN/8, x4, x1, x2)

inst_56909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffffffc; valaddr_reg:x3; val_offset:170727*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170727*0 + 3*77*FLEN/8, x4, x1, x2)

inst_56910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91ffffffffffffe; valaddr_reg:x3; val_offset:170730*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170730*0 + 3*78*FLEN/8, x4, x1, x2)

inst_56911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xb91fffffffffffff; valaddr_reg:x3; val_offset:170733*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170733*0 + 3*79*FLEN/8, x4, x1, x2)

inst_56912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:170736*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170736*0 + 3*80*FLEN/8, x4, x1, x2)

inst_56913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:170739*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170739*0 + 3*81*FLEN/8, x4, x1, x2)

inst_56914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:170742*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170742*0 + 3*82*FLEN/8, x4, x1, x2)

inst_56915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:170745*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170745*0 + 3*83*FLEN/8, x4, x1, x2)

inst_56916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:170748*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170748*0 + 3*84*FLEN/8, x4, x1, x2)

inst_56917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:170751*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170751*0 + 3*85*FLEN/8, x4, x1, x2)

inst_56918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:170754*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170754*0 + 3*86*FLEN/8, x4, x1, x2)

inst_56919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:170757*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170757*0 + 3*87*FLEN/8, x4, x1, x2)

inst_56920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:170760*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170760*0 + 3*88*FLEN/8, x4, x1, x2)

inst_56921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:170763*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170763*0 + 3*89*FLEN/8, x4, x1, x2)

inst_56922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:170766*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170766*0 + 3*90*FLEN/8, x4, x1, x2)

inst_56923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:170769*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170769*0 + 3*91*FLEN/8, x4, x1, x2)

inst_56924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:170772*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170772*0 + 3*92*FLEN/8, x4, x1, x2)

inst_56925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:170775*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170775*0 + 3*93*FLEN/8, x4, x1, x2)

inst_56926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:170778*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170778*0 + 3*94*FLEN/8, x4, x1, x2)

inst_56927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:170781*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170781*0 + 3*95*FLEN/8, x4, x1, x2)

inst_56928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:170784*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170784*0 + 3*96*FLEN/8, x4, x1, x2)

inst_56929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:170787*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170787*0 + 3*97*FLEN/8, x4, x1, x2)

inst_56930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:170790*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170790*0 + 3*98*FLEN/8, x4, x1, x2)

inst_56931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:170793*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170793*0 + 3*99*FLEN/8, x4, x1, x2)

inst_56932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:170796*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170796*0 + 3*100*FLEN/8, x4, x1, x2)

inst_56933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15f8b7f786fc2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd787befa7b1f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15f8b7f786fc2; op2val:0x9fcd787befa7b1f6;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:170799*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170799*0 + 3*101*FLEN/8, x4, x1, x2)

inst_56934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:170802*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170802*0 + 3*102*FLEN/8, x4, x1, x2)

inst_56935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:170805*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170805*0 + 3*103*FLEN/8, x4, x1, x2)

inst_56936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:170808*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170808*0 + 3*104*FLEN/8, x4, x1, x2)

inst_56937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:170811*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170811*0 + 3*105*FLEN/8, x4, x1, x2)

inst_56938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:170814*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170814*0 + 3*106*FLEN/8, x4, x1, x2)

inst_56939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:170817*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170817*0 + 3*107*FLEN/8, x4, x1, x2)

inst_56940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:170820*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170820*0 + 3*108*FLEN/8, x4, x1, x2)

inst_56941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:170823*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170823*0 + 3*109*FLEN/8, x4, x1, x2)

inst_56942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:170826*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170826*0 + 3*110*FLEN/8, x4, x1, x2)

inst_56943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:170829*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170829*0 + 3*111*FLEN/8, x4, x1, x2)

inst_56944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:170832*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170832*0 + 3*112*FLEN/8, x4, x1, x2)

inst_56945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:170835*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170835*0 + 3*113*FLEN/8, x4, x1, x2)

inst_56946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:170838*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170838*0 + 3*114*FLEN/8, x4, x1, x2)

inst_56947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:170841*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170841*0 + 3*115*FLEN/8, x4, x1, x2)

inst_56948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:170844*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170844*0 + 3*116*FLEN/8, x4, x1, x2)

inst_56949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:170847*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170847*0 + 3*117*FLEN/8, x4, x1, x2)

inst_56950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:170850*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170850*0 + 3*118*FLEN/8, x4, x1, x2)

inst_56951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:170853*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170853*0 + 3*119*FLEN/8, x4, x1, x2)

inst_56952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:170856*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170856*0 + 3*120*FLEN/8, x4, x1, x2)

inst_56953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:170859*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170859*0 + 3*121*FLEN/8, x4, x1, x2)

inst_56954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:170862*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170862*0 + 3*122*FLEN/8, x4, x1, x2)

inst_56955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:170865*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170865*0 + 3*123*FLEN/8, x4, x1, x2)

inst_56956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000000000; valaddr_reg:x3; val_offset:170868*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170868*0 + 3*124*FLEN/8, x4, x1, x2)

inst_56957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000000001; valaddr_reg:x3; val_offset:170871*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170871*0 + 3*125*FLEN/8, x4, x1, x2)

inst_56958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000000003; valaddr_reg:x3; val_offset:170874*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170874*0 + 3*126*FLEN/8, x4, x1, x2)

inst_56959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000000007; valaddr_reg:x3; val_offset:170877*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170877*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_56960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000000000f; valaddr_reg:x3; val_offset:170880*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170880*0 + 3*128*FLEN/8, x4, x1, x2)

inst_56961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000000001f; valaddr_reg:x3; val_offset:170883*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170883*0 + 3*129*FLEN/8, x4, x1, x2)

inst_56962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000000003f; valaddr_reg:x3; val_offset:170886*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170886*0 + 3*130*FLEN/8, x4, x1, x2)

inst_56963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000000007f; valaddr_reg:x3; val_offset:170889*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170889*0 + 3*131*FLEN/8, x4, x1, x2)

inst_56964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000000000ff; valaddr_reg:x3; val_offset:170892*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170892*0 + 3*132*FLEN/8, x4, x1, x2)

inst_56965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000000001ff; valaddr_reg:x3; val_offset:170895*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170895*0 + 3*133*FLEN/8, x4, x1, x2)

inst_56966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000000003ff; valaddr_reg:x3; val_offset:170898*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170898*0 + 3*134*FLEN/8, x4, x1, x2)

inst_56967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000000007ff; valaddr_reg:x3; val_offset:170901*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170901*0 + 3*135*FLEN/8, x4, x1, x2)

inst_56968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000000fff; valaddr_reg:x3; val_offset:170904*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170904*0 + 3*136*FLEN/8, x4, x1, x2)

inst_56969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000001fff; valaddr_reg:x3; val_offset:170907*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170907*0 + 3*137*FLEN/8, x4, x1, x2)

inst_56970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000003fff; valaddr_reg:x3; val_offset:170910*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170910*0 + 3*138*FLEN/8, x4, x1, x2)

inst_56971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000007fff; valaddr_reg:x3; val_offset:170913*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170913*0 + 3*139*FLEN/8, x4, x1, x2)

inst_56972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000000ffff; valaddr_reg:x3; val_offset:170916*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170916*0 + 3*140*FLEN/8, x4, x1, x2)

inst_56973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000001ffff; valaddr_reg:x3; val_offset:170919*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170919*0 + 3*141*FLEN/8, x4, x1, x2)

inst_56974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000003ffff; valaddr_reg:x3; val_offset:170922*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170922*0 + 3*142*FLEN/8, x4, x1, x2)

inst_56975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000007ffff; valaddr_reg:x3; val_offset:170925*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170925*0 + 3*143*FLEN/8, x4, x1, x2)

inst_56976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000000fffff; valaddr_reg:x3; val_offset:170928*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170928*0 + 3*144*FLEN/8, x4, x1, x2)

inst_56977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000001fffff; valaddr_reg:x3; val_offset:170931*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170931*0 + 3*145*FLEN/8, x4, x1, x2)

inst_56978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000003fffff; valaddr_reg:x3; val_offset:170934*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170934*0 + 3*146*FLEN/8, x4, x1, x2)

inst_56979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000007fffff; valaddr_reg:x3; val_offset:170937*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170937*0 + 3*147*FLEN/8, x4, x1, x2)

inst_56980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000000ffffff; valaddr_reg:x3; val_offset:170940*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170940*0 + 3*148*FLEN/8, x4, x1, x2)

inst_56981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000001ffffff; valaddr_reg:x3; val_offset:170943*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170943*0 + 3*149*FLEN/8, x4, x1, x2)

inst_56982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000003ffffff; valaddr_reg:x3; val_offset:170946*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170946*0 + 3*150*FLEN/8, x4, x1, x2)

inst_56983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000007ffffff; valaddr_reg:x3; val_offset:170949*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170949*0 + 3*151*FLEN/8, x4, x1, x2)

inst_56984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000000fffffff; valaddr_reg:x3; val_offset:170952*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170952*0 + 3*152*FLEN/8, x4, x1, x2)

inst_56985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000001fffffff; valaddr_reg:x3; val_offset:170955*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170955*0 + 3*153*FLEN/8, x4, x1, x2)

inst_56986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000003fffffff; valaddr_reg:x3; val_offset:170958*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170958*0 + 3*154*FLEN/8, x4, x1, x2)

inst_56987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000007fffffff; valaddr_reg:x3; val_offset:170961*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170961*0 + 3*155*FLEN/8, x4, x1, x2)

inst_56988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900000ffffffff; valaddr_reg:x3; val_offset:170964*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170964*0 + 3*156*FLEN/8, x4, x1, x2)

inst_56989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900001ffffffff; valaddr_reg:x3; val_offset:170967*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170967*0 + 3*157*FLEN/8, x4, x1, x2)

inst_56990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900003ffffffff; valaddr_reg:x3; val_offset:170970*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170970*0 + 3*158*FLEN/8, x4, x1, x2)

inst_56991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900007ffffffff; valaddr_reg:x3; val_offset:170973*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170973*0 + 3*159*FLEN/8, x4, x1, x2)

inst_56992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190000fffffffff; valaddr_reg:x3; val_offset:170976*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170976*0 + 3*160*FLEN/8, x4, x1, x2)

inst_56993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190001fffffffff; valaddr_reg:x3; val_offset:170979*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170979*0 + 3*161*FLEN/8, x4, x1, x2)

inst_56994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190003fffffffff; valaddr_reg:x3; val_offset:170982*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170982*0 + 3*162*FLEN/8, x4, x1, x2)

inst_56995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190007fffffffff; valaddr_reg:x3; val_offset:170985*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170985*0 + 3*163*FLEN/8, x4, x1, x2)

inst_56996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19000ffffffffff; valaddr_reg:x3; val_offset:170988*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170988*0 + 3*164*FLEN/8, x4, x1, x2)

inst_56997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19001ffffffffff; valaddr_reg:x3; val_offset:170991*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170991*0 + 3*165*FLEN/8, x4, x1, x2)

inst_56998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19003ffffffffff; valaddr_reg:x3; val_offset:170994*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170994*0 + 3*166*FLEN/8, x4, x1, x2)

inst_56999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19007ffffffffff; valaddr_reg:x3; val_offset:170997*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170997*0 + 3*167*FLEN/8, x4, x1, x2)

inst_57000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1900fffffffffff; valaddr_reg:x3; val_offset:171000*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171000*0 + 3*168*FLEN/8, x4, x1, x2)

inst_57001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1901fffffffffff; valaddr_reg:x3; val_offset:171003*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171003*0 + 3*169*FLEN/8, x4, x1, x2)

inst_57002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1903fffffffffff; valaddr_reg:x3; val_offset:171006*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171006*0 + 3*170*FLEN/8, x4, x1, x2)

inst_57003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x1907fffffffffff; valaddr_reg:x3; val_offset:171009*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171009*0 + 3*171*FLEN/8, x4, x1, x2)

inst_57004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x190ffffffffffff; valaddr_reg:x3; val_offset:171012*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171012*0 + 3*172*FLEN/8, x4, x1, x2)

inst_57005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x191ffffffffffff; valaddr_reg:x3; val_offset:171015*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171015*0 + 3*173*FLEN/8, x4, x1, x2)

inst_57006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x193ffffffffffff; valaddr_reg:x3; val_offset:171018*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171018*0 + 3*174*FLEN/8, x4, x1, x2)

inst_57007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x197ffffffffffff; valaddr_reg:x3; val_offset:171021*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171021*0 + 3*175*FLEN/8, x4, x1, x2)

inst_57008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x198000000000000; valaddr_reg:x3; val_offset:171024*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171024*0 + 3*176*FLEN/8, x4, x1, x2)

inst_57009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19c000000000000; valaddr_reg:x3; val_offset:171027*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171027*0 + 3*177*FLEN/8, x4, x1, x2)

inst_57010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19e000000000000; valaddr_reg:x3; val_offset:171030*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171030*0 + 3*178*FLEN/8, x4, x1, x2)

inst_57011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19f000000000000; valaddr_reg:x3; val_offset:171033*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171033*0 + 3*179*FLEN/8, x4, x1, x2)

inst_57012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19f800000000000; valaddr_reg:x3; val_offset:171036*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171036*0 + 3*180*FLEN/8, x4, x1, x2)

inst_57013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fc00000000000; valaddr_reg:x3; val_offset:171039*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171039*0 + 3*181*FLEN/8, x4, x1, x2)

inst_57014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fe00000000000; valaddr_reg:x3; val_offset:171042*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171042*0 + 3*182*FLEN/8, x4, x1, x2)

inst_57015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ff00000000000; valaddr_reg:x3; val_offset:171045*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171045*0 + 3*183*FLEN/8, x4, x1, x2)

inst_57016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ff80000000000; valaddr_reg:x3; val_offset:171048*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171048*0 + 3*184*FLEN/8, x4, x1, x2)

inst_57017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffc0000000000; valaddr_reg:x3; val_offset:171051*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171051*0 + 3*185*FLEN/8, x4, x1, x2)

inst_57018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffe0000000000; valaddr_reg:x3; val_offset:171054*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171054*0 + 3*186*FLEN/8, x4, x1, x2)

inst_57019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fff0000000000; valaddr_reg:x3; val_offset:171057*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171057*0 + 3*187*FLEN/8, x4, x1, x2)

inst_57020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fff8000000000; valaddr_reg:x3; val_offset:171060*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171060*0 + 3*188*FLEN/8, x4, x1, x2)

inst_57021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffc000000000; valaddr_reg:x3; val_offset:171063*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171063*0 + 3*189*FLEN/8, x4, x1, x2)

inst_57022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffe000000000; valaddr_reg:x3; val_offset:171066*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171066*0 + 3*190*FLEN/8, x4, x1, x2)

inst_57023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffff000000000; valaddr_reg:x3; val_offset:171069*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171069*0 + 3*191*FLEN/8, x4, x1, x2)

inst_57024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffff800000000; valaddr_reg:x3; val_offset:171072*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171072*0 + 3*192*FLEN/8, x4, x1, x2)

inst_57025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffc00000000; valaddr_reg:x3; val_offset:171075*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171075*0 + 3*193*FLEN/8, x4, x1, x2)

inst_57026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffe00000000; valaddr_reg:x3; val_offset:171078*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171078*0 + 3*194*FLEN/8, x4, x1, x2)

inst_57027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffff00000000; valaddr_reg:x3; val_offset:171081*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171081*0 + 3*195*FLEN/8, x4, x1, x2)

inst_57028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffff80000000; valaddr_reg:x3; val_offset:171084*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171084*0 + 3*196*FLEN/8, x4, x1, x2)

inst_57029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffc0000000; valaddr_reg:x3; val_offset:171087*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171087*0 + 3*197*FLEN/8, x4, x1, x2)

inst_57030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffe0000000; valaddr_reg:x3; val_offset:171090*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171090*0 + 3*198*FLEN/8, x4, x1, x2)

inst_57031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffff0000000; valaddr_reg:x3; val_offset:171093*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171093*0 + 3*199*FLEN/8, x4, x1, x2)

inst_57032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffff8000000; valaddr_reg:x3; val_offset:171096*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171096*0 + 3*200*FLEN/8, x4, x1, x2)

inst_57033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffc000000; valaddr_reg:x3; val_offset:171099*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171099*0 + 3*201*FLEN/8, x4, x1, x2)

inst_57034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffe000000; valaddr_reg:x3; val_offset:171102*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171102*0 + 3*202*FLEN/8, x4, x1, x2)

inst_57035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffff000000; valaddr_reg:x3; val_offset:171105*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171105*0 + 3*203*FLEN/8, x4, x1, x2)

inst_57036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffff800000; valaddr_reg:x3; val_offset:171108*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171108*0 + 3*204*FLEN/8, x4, x1, x2)

inst_57037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffc00000; valaddr_reg:x3; val_offset:171111*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171111*0 + 3*205*FLEN/8, x4, x1, x2)

inst_57038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffe00000; valaddr_reg:x3; val_offset:171114*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171114*0 + 3*206*FLEN/8, x4, x1, x2)

inst_57039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffff00000; valaddr_reg:x3; val_offset:171117*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171117*0 + 3*207*FLEN/8, x4, x1, x2)

inst_57040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffff80000; valaddr_reg:x3; val_offset:171120*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171120*0 + 3*208*FLEN/8, x4, x1, x2)

inst_57041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffc0000; valaddr_reg:x3; val_offset:171123*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171123*0 + 3*209*FLEN/8, x4, x1, x2)

inst_57042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffe0000; valaddr_reg:x3; val_offset:171126*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171126*0 + 3*210*FLEN/8, x4, x1, x2)

inst_57043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffff0000; valaddr_reg:x3; val_offset:171129*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171129*0 + 3*211*FLEN/8, x4, x1, x2)

inst_57044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffff8000; valaddr_reg:x3; val_offset:171132*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171132*0 + 3*212*FLEN/8, x4, x1, x2)

inst_57045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffc000; valaddr_reg:x3; val_offset:171135*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171135*0 + 3*213*FLEN/8, x4, x1, x2)

inst_57046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffe000; valaddr_reg:x3; val_offset:171138*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171138*0 + 3*214*FLEN/8, x4, x1, x2)

inst_57047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffff000; valaddr_reg:x3; val_offset:171141*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171141*0 + 3*215*FLEN/8, x4, x1, x2)

inst_57048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffff800; valaddr_reg:x3; val_offset:171144*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171144*0 + 3*216*FLEN/8, x4, x1, x2)

inst_57049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffffc00; valaddr_reg:x3; val_offset:171147*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171147*0 + 3*217*FLEN/8, x4, x1, x2)

inst_57050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffffe00; valaddr_reg:x3; val_offset:171150*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171150*0 + 3*218*FLEN/8, x4, x1, x2)

inst_57051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffff00; valaddr_reg:x3; val_offset:171153*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171153*0 + 3*219*FLEN/8, x4, x1, x2)

inst_57052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffff80; valaddr_reg:x3; val_offset:171156*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171156*0 + 3*220*FLEN/8, x4, x1, x2)

inst_57053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffffc0; valaddr_reg:x3; val_offset:171159*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171159*0 + 3*221*FLEN/8, x4, x1, x2)

inst_57054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffffe0; valaddr_reg:x3; val_offset:171162*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171162*0 + 3*222*FLEN/8, x4, x1, x2)

inst_57055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffffff0; valaddr_reg:x3; val_offset:171165*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171165*0 + 3*223*FLEN/8, x4, x1, x2)

inst_57056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffffff8; valaddr_reg:x3; val_offset:171168*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171168*0 + 3*224*FLEN/8, x4, x1, x2)

inst_57057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffffffc; valaddr_reg:x3; val_offset:171171*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171171*0 + 3*225*FLEN/8, x4, x1, x2)

inst_57058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19ffffffffffffe; valaddr_reg:x3; val_offset:171174*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171174*0 + 3*226*FLEN/8, x4, x1, x2)

inst_57059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a461eeb69e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a461eeb69e4; op2val:0x0;
op3val:0x19fffffffffffff; valaddr_reg:x3; val_offset:171177*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171177*0 + 3*227*FLEN/8, x4, x1, x2)

inst_57060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000000000; valaddr_reg:x3; val_offset:171180*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171180*0 + 3*228*FLEN/8, x4, x1, x2)

inst_57061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000000001; valaddr_reg:x3; val_offset:171183*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171183*0 + 3*229*FLEN/8, x4, x1, x2)

inst_57062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000000003; valaddr_reg:x3; val_offset:171186*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171186*0 + 3*230*FLEN/8, x4, x1, x2)

inst_57063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000000007; valaddr_reg:x3; val_offset:171189*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171189*0 + 3*231*FLEN/8, x4, x1, x2)

inst_57064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000000000f; valaddr_reg:x3; val_offset:171192*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171192*0 + 3*232*FLEN/8, x4, x1, x2)

inst_57065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000000001f; valaddr_reg:x3; val_offset:171195*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171195*0 + 3*233*FLEN/8, x4, x1, x2)

inst_57066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000000003f; valaddr_reg:x3; val_offset:171198*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171198*0 + 3*234*FLEN/8, x4, x1, x2)

inst_57067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000000007f; valaddr_reg:x3; val_offset:171201*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171201*0 + 3*235*FLEN/8, x4, x1, x2)

inst_57068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000000000ff; valaddr_reg:x3; val_offset:171204*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171204*0 + 3*236*FLEN/8, x4, x1, x2)

inst_57069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000000001ff; valaddr_reg:x3; val_offset:171207*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171207*0 + 3*237*FLEN/8, x4, x1, x2)

inst_57070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000000003ff; valaddr_reg:x3; val_offset:171210*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171210*0 + 3*238*FLEN/8, x4, x1, x2)

inst_57071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000000007ff; valaddr_reg:x3; val_offset:171213*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171213*0 + 3*239*FLEN/8, x4, x1, x2)

inst_57072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000000fff; valaddr_reg:x3; val_offset:171216*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171216*0 + 3*240*FLEN/8, x4, x1, x2)

inst_57073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000001fff; valaddr_reg:x3; val_offset:171219*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171219*0 + 3*241*FLEN/8, x4, x1, x2)

inst_57074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000003fff; valaddr_reg:x3; val_offset:171222*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171222*0 + 3*242*FLEN/8, x4, x1, x2)

inst_57075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000007fff; valaddr_reg:x3; val_offset:171225*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171225*0 + 3*243*FLEN/8, x4, x1, x2)

inst_57076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000000ffff; valaddr_reg:x3; val_offset:171228*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171228*0 + 3*244*FLEN/8, x4, x1, x2)

inst_57077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000001ffff; valaddr_reg:x3; val_offset:171231*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171231*0 + 3*245*FLEN/8, x4, x1, x2)

inst_57078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000003ffff; valaddr_reg:x3; val_offset:171234*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171234*0 + 3*246*FLEN/8, x4, x1, x2)

inst_57079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000007ffff; valaddr_reg:x3; val_offset:171237*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171237*0 + 3*247*FLEN/8, x4, x1, x2)

inst_57080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000000fffff; valaddr_reg:x3; val_offset:171240*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171240*0 + 3*248*FLEN/8, x4, x1, x2)

inst_57081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000001fffff; valaddr_reg:x3; val_offset:171243*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171243*0 + 3*249*FLEN/8, x4, x1, x2)

inst_57082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000003fffff; valaddr_reg:x3; val_offset:171246*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171246*0 + 3*250*FLEN/8, x4, x1, x2)

inst_57083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000007fffff; valaddr_reg:x3; val_offset:171249*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171249*0 + 3*251*FLEN/8, x4, x1, x2)

inst_57084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000000ffffff; valaddr_reg:x3; val_offset:171252*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171252*0 + 3*252*FLEN/8, x4, x1, x2)

inst_57085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000001ffffff; valaddr_reg:x3; val_offset:171255*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171255*0 + 3*253*FLEN/8, x4, x1, x2)

inst_57086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000003ffffff; valaddr_reg:x3; val_offset:171258*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171258*0 + 3*254*FLEN/8, x4, x1, x2)

inst_57087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000007ffffff; valaddr_reg:x3; val_offset:171261*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171261*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_57088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000000fffffff; valaddr_reg:x3; val_offset:171264*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171264*0 + 3*256*FLEN/8, x4, x1, x2)

inst_57089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000001fffffff; valaddr_reg:x3; val_offset:171267*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171267*0 + 3*257*FLEN/8, x4, x1, x2)

inst_57090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000003fffffff; valaddr_reg:x3; val_offset:171270*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171270*0 + 3*258*FLEN/8, x4, x1, x2)

inst_57091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000007fffffff; valaddr_reg:x3; val_offset:171273*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171273*0 + 3*259*FLEN/8, x4, x1, x2)

inst_57092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700000ffffffff; valaddr_reg:x3; val_offset:171276*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171276*0 + 3*260*FLEN/8, x4, x1, x2)

inst_57093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700001ffffffff; valaddr_reg:x3; val_offset:171279*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171279*0 + 3*261*FLEN/8, x4, x1, x2)

inst_57094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700003ffffffff; valaddr_reg:x3; val_offset:171282*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171282*0 + 3*262*FLEN/8, x4, x1, x2)

inst_57095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700007ffffffff; valaddr_reg:x3; val_offset:171285*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171285*0 + 3*263*FLEN/8, x4, x1, x2)

inst_57096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70000fffffffff; valaddr_reg:x3; val_offset:171288*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171288*0 + 3*264*FLEN/8, x4, x1, x2)

inst_57097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70001fffffffff; valaddr_reg:x3; val_offset:171291*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171291*0 + 3*265*FLEN/8, x4, x1, x2)

inst_57098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70003fffffffff; valaddr_reg:x3; val_offset:171294*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171294*0 + 3*266*FLEN/8, x4, x1, x2)

inst_57099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70007fffffffff; valaddr_reg:x3; val_offset:171297*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171297*0 + 3*267*FLEN/8, x4, x1, x2)

inst_57100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7000ffffffffff; valaddr_reg:x3; val_offset:171300*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171300*0 + 3*268*FLEN/8, x4, x1, x2)

inst_57101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7001ffffffffff; valaddr_reg:x3; val_offset:171303*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171303*0 + 3*269*FLEN/8, x4, x1, x2)

inst_57102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7003ffffffffff; valaddr_reg:x3; val_offset:171306*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171306*0 + 3*270*FLEN/8, x4, x1, x2)

inst_57103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7007ffffffffff; valaddr_reg:x3; val_offset:171309*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171309*0 + 3*271*FLEN/8, x4, x1, x2)

inst_57104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba700fffffffffff; valaddr_reg:x3; val_offset:171312*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171312*0 + 3*272*FLEN/8, x4, x1, x2)

inst_57105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba701fffffffffff; valaddr_reg:x3; val_offset:171315*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171315*0 + 3*273*FLEN/8, x4, x1, x2)

inst_57106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba703fffffffffff; valaddr_reg:x3; val_offset:171318*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171318*0 + 3*274*FLEN/8, x4, x1, x2)

inst_57107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba707fffffffffff; valaddr_reg:x3; val_offset:171321*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171321*0 + 3*275*FLEN/8, x4, x1, x2)

inst_57108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba70ffffffffffff; valaddr_reg:x3; val_offset:171324*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171324*0 + 3*276*FLEN/8, x4, x1, x2)

inst_57109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba71ffffffffffff; valaddr_reg:x3; val_offset:171327*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171327*0 + 3*277*FLEN/8, x4, x1, x2)

inst_57110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba73ffffffffffff; valaddr_reg:x3; val_offset:171330*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171330*0 + 3*278*FLEN/8, x4, x1, x2)

inst_57111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba77ffffffffffff; valaddr_reg:x3; val_offset:171333*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171333*0 + 3*279*FLEN/8, x4, x1, x2)

inst_57112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba78000000000000; valaddr_reg:x3; val_offset:171336*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171336*0 + 3*280*FLEN/8, x4, x1, x2)

inst_57113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7c000000000000; valaddr_reg:x3; val_offset:171339*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171339*0 + 3*281*FLEN/8, x4, x1, x2)

inst_57114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7e000000000000; valaddr_reg:x3; val_offset:171342*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171342*0 + 3*282*FLEN/8, x4, x1, x2)

inst_57115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7f000000000000; valaddr_reg:x3; val_offset:171345*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171345*0 + 3*283*FLEN/8, x4, x1, x2)

inst_57116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7f800000000000; valaddr_reg:x3; val_offset:171348*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171348*0 + 3*284*FLEN/8, x4, x1, x2)

inst_57117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fc00000000000; valaddr_reg:x3; val_offset:171351*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171351*0 + 3*285*FLEN/8, x4, x1, x2)

inst_57118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fe00000000000; valaddr_reg:x3; val_offset:171354*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171354*0 + 3*286*FLEN/8, x4, x1, x2)

inst_57119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ff00000000000; valaddr_reg:x3; val_offset:171357*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171357*0 + 3*287*FLEN/8, x4, x1, x2)

inst_57120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ff80000000000; valaddr_reg:x3; val_offset:171360*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171360*0 + 3*288*FLEN/8, x4, x1, x2)

inst_57121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffc0000000000; valaddr_reg:x3; val_offset:171363*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171363*0 + 3*289*FLEN/8, x4, x1, x2)

inst_57122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffe0000000000; valaddr_reg:x3; val_offset:171366*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171366*0 + 3*290*FLEN/8, x4, x1, x2)

inst_57123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fff0000000000; valaddr_reg:x3; val_offset:171369*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171369*0 + 3*291*FLEN/8, x4, x1, x2)

inst_57124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fff8000000000; valaddr_reg:x3; val_offset:171372*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171372*0 + 3*292*FLEN/8, x4, x1, x2)

inst_57125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffc000000000; valaddr_reg:x3; val_offset:171375*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171375*0 + 3*293*FLEN/8, x4, x1, x2)

inst_57126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffe000000000; valaddr_reg:x3; val_offset:171378*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171378*0 + 3*294*FLEN/8, x4, x1, x2)

inst_57127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffff000000000; valaddr_reg:x3; val_offset:171381*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171381*0 + 3*295*FLEN/8, x4, x1, x2)

inst_57128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffff800000000; valaddr_reg:x3; val_offset:171384*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171384*0 + 3*296*FLEN/8, x4, x1, x2)

inst_57129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffc00000000; valaddr_reg:x3; val_offset:171387*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171387*0 + 3*297*FLEN/8, x4, x1, x2)

inst_57130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffe00000000; valaddr_reg:x3; val_offset:171390*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171390*0 + 3*298*FLEN/8, x4, x1, x2)

inst_57131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffff00000000; valaddr_reg:x3; val_offset:171393*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171393*0 + 3*299*FLEN/8, x4, x1, x2)

inst_57132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffff80000000; valaddr_reg:x3; val_offset:171396*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171396*0 + 3*300*FLEN/8, x4, x1, x2)

inst_57133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffc0000000; valaddr_reg:x3; val_offset:171399*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171399*0 + 3*301*FLEN/8, x4, x1, x2)

inst_57134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffe0000000; valaddr_reg:x3; val_offset:171402*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171402*0 + 3*302*FLEN/8, x4, x1, x2)

inst_57135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffff0000000; valaddr_reg:x3; val_offset:171405*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171405*0 + 3*303*FLEN/8, x4, x1, x2)

inst_57136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffff8000000; valaddr_reg:x3; val_offset:171408*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171408*0 + 3*304*FLEN/8, x4, x1, x2)

inst_57137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffc000000; valaddr_reg:x3; val_offset:171411*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171411*0 + 3*305*FLEN/8, x4, x1, x2)

inst_57138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffe000000; valaddr_reg:x3; val_offset:171414*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171414*0 + 3*306*FLEN/8, x4, x1, x2)

inst_57139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffff000000; valaddr_reg:x3; val_offset:171417*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171417*0 + 3*307*FLEN/8, x4, x1, x2)

inst_57140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffff800000; valaddr_reg:x3; val_offset:171420*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171420*0 + 3*308*FLEN/8, x4, x1, x2)

inst_57141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffc00000; valaddr_reg:x3; val_offset:171423*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171423*0 + 3*309*FLEN/8, x4, x1, x2)

inst_57142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffe00000; valaddr_reg:x3; val_offset:171426*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171426*0 + 3*310*FLEN/8, x4, x1, x2)

inst_57143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffff00000; valaddr_reg:x3; val_offset:171429*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171429*0 + 3*311*FLEN/8, x4, x1, x2)

inst_57144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffff80000; valaddr_reg:x3; val_offset:171432*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171432*0 + 3*312*FLEN/8, x4, x1, x2)

inst_57145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffc0000; valaddr_reg:x3; val_offset:171435*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171435*0 + 3*313*FLEN/8, x4, x1, x2)

inst_57146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffe0000; valaddr_reg:x3; val_offset:171438*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171438*0 + 3*314*FLEN/8, x4, x1, x2)

inst_57147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffff0000; valaddr_reg:x3; val_offset:171441*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171441*0 + 3*315*FLEN/8, x4, x1, x2)

inst_57148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffff8000; valaddr_reg:x3; val_offset:171444*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171444*0 + 3*316*FLEN/8, x4, x1, x2)

inst_57149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffc000; valaddr_reg:x3; val_offset:171447*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171447*0 + 3*317*FLEN/8, x4, x1, x2)

inst_57150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffe000; valaddr_reg:x3; val_offset:171450*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171450*0 + 3*318*FLEN/8, x4, x1, x2)

inst_57151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffff000; valaddr_reg:x3; val_offset:171453*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171453*0 + 3*319*FLEN/8, x4, x1, x2)

inst_57152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffff800; valaddr_reg:x3; val_offset:171456*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171456*0 + 3*320*FLEN/8, x4, x1, x2)

inst_57153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffffc00; valaddr_reg:x3; val_offset:171459*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171459*0 + 3*321*FLEN/8, x4, x1, x2)

inst_57154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffffe00; valaddr_reg:x3; val_offset:171462*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171462*0 + 3*322*FLEN/8, x4, x1, x2)

inst_57155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffff00; valaddr_reg:x3; val_offset:171465*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171465*0 + 3*323*FLEN/8, x4, x1, x2)

inst_57156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffff80; valaddr_reg:x3; val_offset:171468*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171468*0 + 3*324*FLEN/8, x4, x1, x2)

inst_57157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffffc0; valaddr_reg:x3; val_offset:171471*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171471*0 + 3*325*FLEN/8, x4, x1, x2)

inst_57158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffffe0; valaddr_reg:x3; val_offset:171474*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171474*0 + 3*326*FLEN/8, x4, x1, x2)

inst_57159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffffff0; valaddr_reg:x3; val_offset:171477*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171477*0 + 3*327*FLEN/8, x4, x1, x2)

inst_57160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffffff8; valaddr_reg:x3; val_offset:171480*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171480*0 + 3*328*FLEN/8, x4, x1, x2)

inst_57161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffffffc; valaddr_reg:x3; val_offset:171483*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171483*0 + 3*329*FLEN/8, x4, x1, x2)

inst_57162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7ffffffffffffe; valaddr_reg:x3; val_offset:171486*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171486*0 + 3*330*FLEN/8, x4, x1, x2)

inst_57163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xba7fffffffffffff; valaddr_reg:x3; val_offset:171489*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171489*0 + 3*331*FLEN/8, x4, x1, x2)

inst_57164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:171492*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171492*0 + 3*332*FLEN/8, x4, x1, x2)

inst_57165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:171495*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171495*0 + 3*333*FLEN/8, x4, x1, x2)

inst_57166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:171498*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171498*0 + 3*334*FLEN/8, x4, x1, x2)

inst_57167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:171501*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171501*0 + 3*335*FLEN/8, x4, x1, x2)

inst_57168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:171504*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171504*0 + 3*336*FLEN/8, x4, x1, x2)

inst_57169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:171507*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171507*0 + 3*337*FLEN/8, x4, x1, x2)

inst_57170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:171510*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171510*0 + 3*338*FLEN/8, x4, x1, x2)

inst_57171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:171513*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171513*0 + 3*339*FLEN/8, x4, x1, x2)

inst_57172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:171516*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171516*0 + 3*340*FLEN/8, x4, x1, x2)

inst_57173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:171519*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171519*0 + 3*341*FLEN/8, x4, x1, x2)

inst_57174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:171522*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171522*0 + 3*342*FLEN/8, x4, x1, x2)

inst_57175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:171525*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171525*0 + 3*343*FLEN/8, x4, x1, x2)

inst_57176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:171528*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171528*0 + 3*344*FLEN/8, x4, x1, x2)

inst_57177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:171531*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171531*0 + 3*345*FLEN/8, x4, x1, x2)

inst_57178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:171534*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171534*0 + 3*346*FLEN/8, x4, x1, x2)

inst_57179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:171537*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171537*0 + 3*347*FLEN/8, x4, x1, x2)

inst_57180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:171540*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171540*0 + 3*348*FLEN/8, x4, x1, x2)

inst_57181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:171543*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171543*0 + 3*349*FLEN/8, x4, x1, x2)

inst_57182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:171546*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171546*0 + 3*350*FLEN/8, x4, x1, x2)

inst_57183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:171549*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171549*0 + 3*351*FLEN/8, x4, x1, x2)

inst_57184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:171552*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171552*0 + 3*352*FLEN/8, x4, x1, x2)

inst_57185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a4b6a7210ac and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd664b0b0ec558 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a4b6a7210ac; op2val:0x9fcd664b0b0ec558;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:171555*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171555*0 + 3*353*FLEN/8, x4, x1, x2)

inst_57186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:171558*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171558*0 + 3*354*FLEN/8, x4, x1, x2)

inst_57187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:171561*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171561*0 + 3*355*FLEN/8, x4, x1, x2)

inst_57188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:171564*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171564*0 + 3*356*FLEN/8, x4, x1, x2)

inst_57189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:171567*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171567*0 + 3*357*FLEN/8, x4, x1, x2)

inst_57190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:171570*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171570*0 + 3*358*FLEN/8, x4, x1, x2)

inst_57191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:171573*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171573*0 + 3*359*FLEN/8, x4, x1, x2)

inst_57192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:171576*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171576*0 + 3*360*FLEN/8, x4, x1, x2)

inst_57193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:171579*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171579*0 + 3*361*FLEN/8, x4, x1, x2)

inst_57194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:171582*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171582*0 + 3*362*FLEN/8, x4, x1, x2)

inst_57195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:171585*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171585*0 + 3*363*FLEN/8, x4, x1, x2)

inst_57196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:171588*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171588*0 + 3*364*FLEN/8, x4, x1, x2)

inst_57197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:171591*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171591*0 + 3*365*FLEN/8, x4, x1, x2)

inst_57198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:171594*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171594*0 + 3*366*FLEN/8, x4, x1, x2)

inst_57199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:171597*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171597*0 + 3*367*FLEN/8, x4, x1, x2)

inst_57200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:171600*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171600*0 + 3*368*FLEN/8, x4, x1, x2)

inst_57201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:171603*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171603*0 + 3*369*FLEN/8, x4, x1, x2)

inst_57202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:171606*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171606*0 + 3*370*FLEN/8, x4, x1, x2)

inst_57203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:171609*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171609*0 + 3*371*FLEN/8, x4, x1, x2)

inst_57204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:171612*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171612*0 + 3*372*FLEN/8, x4, x1, x2)

inst_57205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:171615*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171615*0 + 3*373*FLEN/8, x4, x1, x2)

inst_57206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:171618*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171618*0 + 3*374*FLEN/8, x4, x1, x2)

inst_57207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:171621*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171621*0 + 3*375*FLEN/8, x4, x1, x2)

inst_57208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000000000; valaddr_reg:x3; val_offset:171624*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171624*0 + 3*376*FLEN/8, x4, x1, x2)

inst_57209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000000001; valaddr_reg:x3; val_offset:171627*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171627*0 + 3*377*FLEN/8, x4, x1, x2)

inst_57210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000000003; valaddr_reg:x3; val_offset:171630*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171630*0 + 3*378*FLEN/8, x4, x1, x2)

inst_57211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000000007; valaddr_reg:x3; val_offset:171633*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171633*0 + 3*379*FLEN/8, x4, x1, x2)

inst_57212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000000000f; valaddr_reg:x3; val_offset:171636*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171636*0 + 3*380*FLEN/8, x4, x1, x2)

inst_57213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000000001f; valaddr_reg:x3; val_offset:171639*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171639*0 + 3*381*FLEN/8, x4, x1, x2)

inst_57214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000000003f; valaddr_reg:x3; val_offset:171642*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171642*0 + 3*382*FLEN/8, x4, x1, x2)

inst_57215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000000007f; valaddr_reg:x3; val_offset:171645*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171645*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_57216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000000000ff; valaddr_reg:x3; val_offset:171648*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171648*0 + 3*384*FLEN/8, x4, x1, x2)

inst_57217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000000001ff; valaddr_reg:x3; val_offset:171651*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171651*0 + 3*385*FLEN/8, x4, x1, x2)

inst_57218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000000003ff; valaddr_reg:x3; val_offset:171654*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171654*0 + 3*386*FLEN/8, x4, x1, x2)

inst_57219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000000007ff; valaddr_reg:x3; val_offset:171657*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171657*0 + 3*387*FLEN/8, x4, x1, x2)

inst_57220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000000fff; valaddr_reg:x3; val_offset:171660*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171660*0 + 3*388*FLEN/8, x4, x1, x2)

inst_57221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000001fff; valaddr_reg:x3; val_offset:171663*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171663*0 + 3*389*FLEN/8, x4, x1, x2)

inst_57222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000003fff; valaddr_reg:x3; val_offset:171666*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171666*0 + 3*390*FLEN/8, x4, x1, x2)

inst_57223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000007fff; valaddr_reg:x3; val_offset:171669*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171669*0 + 3*391*FLEN/8, x4, x1, x2)

inst_57224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000000ffff; valaddr_reg:x3; val_offset:171672*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171672*0 + 3*392*FLEN/8, x4, x1, x2)

inst_57225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000001ffff; valaddr_reg:x3; val_offset:171675*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171675*0 + 3*393*FLEN/8, x4, x1, x2)

inst_57226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000003ffff; valaddr_reg:x3; val_offset:171678*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171678*0 + 3*394*FLEN/8, x4, x1, x2)

inst_57227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000007ffff; valaddr_reg:x3; val_offset:171681*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171681*0 + 3*395*FLEN/8, x4, x1, x2)

inst_57228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000000fffff; valaddr_reg:x3; val_offset:171684*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171684*0 + 3*396*FLEN/8, x4, x1, x2)

inst_57229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000001fffff; valaddr_reg:x3; val_offset:171687*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171687*0 + 3*397*FLEN/8, x4, x1, x2)

inst_57230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000003fffff; valaddr_reg:x3; val_offset:171690*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171690*0 + 3*398*FLEN/8, x4, x1, x2)

inst_57231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000007fffff; valaddr_reg:x3; val_offset:171693*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171693*0 + 3*399*FLEN/8, x4, x1, x2)

inst_57232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000000ffffff; valaddr_reg:x3; val_offset:171696*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171696*0 + 3*400*FLEN/8, x4, x1, x2)

inst_57233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000001ffffff; valaddr_reg:x3; val_offset:171699*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171699*0 + 3*401*FLEN/8, x4, x1, x2)

inst_57234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000003ffffff; valaddr_reg:x3; val_offset:171702*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171702*0 + 3*402*FLEN/8, x4, x1, x2)

inst_57235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000007ffffff; valaddr_reg:x3; val_offset:171705*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171705*0 + 3*403*FLEN/8, x4, x1, x2)

inst_57236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000000fffffff; valaddr_reg:x3; val_offset:171708*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171708*0 + 3*404*FLEN/8, x4, x1, x2)

inst_57237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000001fffffff; valaddr_reg:x3; val_offset:171711*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171711*0 + 3*405*FLEN/8, x4, x1, x2)

inst_57238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000003fffffff; valaddr_reg:x3; val_offset:171714*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171714*0 + 3*406*FLEN/8, x4, x1, x2)

inst_57239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000007fffffff; valaddr_reg:x3; val_offset:171717*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171717*0 + 3*407*FLEN/8, x4, x1, x2)

inst_57240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100000ffffffff; valaddr_reg:x3; val_offset:171720*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171720*0 + 3*408*FLEN/8, x4, x1, x2)

inst_57241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100001ffffffff; valaddr_reg:x3; val_offset:171723*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171723*0 + 3*409*FLEN/8, x4, x1, x2)

inst_57242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100003ffffffff; valaddr_reg:x3; val_offset:171726*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171726*0 + 3*410*FLEN/8, x4, x1, x2)

inst_57243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100007ffffffff; valaddr_reg:x3; val_offset:171729*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171729*0 + 3*411*FLEN/8, x4, x1, x2)

inst_57244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110000fffffffff; valaddr_reg:x3; val_offset:171732*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171732*0 + 3*412*FLEN/8, x4, x1, x2)

inst_57245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110001fffffffff; valaddr_reg:x3; val_offset:171735*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171735*0 + 3*413*FLEN/8, x4, x1, x2)

inst_57246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110003fffffffff; valaddr_reg:x3; val_offset:171738*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171738*0 + 3*414*FLEN/8, x4, x1, x2)

inst_57247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110007fffffffff; valaddr_reg:x3; val_offset:171741*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171741*0 + 3*415*FLEN/8, x4, x1, x2)

inst_57248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811000ffffffffff; valaddr_reg:x3; val_offset:171744*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171744*0 + 3*416*FLEN/8, x4, x1, x2)

inst_57249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811001ffffffffff; valaddr_reg:x3; val_offset:171747*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171747*0 + 3*417*FLEN/8, x4, x1, x2)

inst_57250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811003ffffffffff; valaddr_reg:x3; val_offset:171750*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171750*0 + 3*418*FLEN/8, x4, x1, x2)

inst_57251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811007ffffffffff; valaddr_reg:x3; val_offset:171753*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171753*0 + 3*419*FLEN/8, x4, x1, x2)

inst_57252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81100fffffffffff; valaddr_reg:x3; val_offset:171756*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171756*0 + 3*420*FLEN/8, x4, x1, x2)

inst_57253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81101fffffffffff; valaddr_reg:x3; val_offset:171759*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171759*0 + 3*421*FLEN/8, x4, x1, x2)

inst_57254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81103fffffffffff; valaddr_reg:x3; val_offset:171762*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171762*0 + 3*422*FLEN/8, x4, x1, x2)

inst_57255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x81107fffffffffff; valaddr_reg:x3; val_offset:171765*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171765*0 + 3*423*FLEN/8, x4, x1, x2)

inst_57256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8110ffffffffffff; valaddr_reg:x3; val_offset:171768*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171768*0 + 3*424*FLEN/8, x4, x1, x2)

inst_57257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8111ffffffffffff; valaddr_reg:x3; val_offset:171771*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171771*0 + 3*425*FLEN/8, x4, x1, x2)

inst_57258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8113ffffffffffff; valaddr_reg:x3; val_offset:171774*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171774*0 + 3*426*FLEN/8, x4, x1, x2)

inst_57259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8117ffffffffffff; valaddr_reg:x3; val_offset:171777*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171777*0 + 3*427*FLEN/8, x4, x1, x2)

inst_57260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x8118000000000000; valaddr_reg:x3; val_offset:171780*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171780*0 + 3*428*FLEN/8, x4, x1, x2)

inst_57261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811c000000000000; valaddr_reg:x3; val_offset:171783*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171783*0 + 3*429*FLEN/8, x4, x1, x2)

inst_57262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811e000000000000; valaddr_reg:x3; val_offset:171786*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171786*0 + 3*430*FLEN/8, x4, x1, x2)

inst_57263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811f000000000000; valaddr_reg:x3; val_offset:171789*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171789*0 + 3*431*FLEN/8, x4, x1, x2)

inst_57264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811f800000000000; valaddr_reg:x3; val_offset:171792*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171792*0 + 3*432*FLEN/8, x4, x1, x2)

inst_57265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fc00000000000; valaddr_reg:x3; val_offset:171795*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171795*0 + 3*433*FLEN/8, x4, x1, x2)

inst_57266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fe00000000000; valaddr_reg:x3; val_offset:171798*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171798*0 + 3*434*FLEN/8, x4, x1, x2)

inst_57267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ff00000000000; valaddr_reg:x3; val_offset:171801*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171801*0 + 3*435*FLEN/8, x4, x1, x2)

inst_57268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ff80000000000; valaddr_reg:x3; val_offset:171804*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171804*0 + 3*436*FLEN/8, x4, x1, x2)

inst_57269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffc0000000000; valaddr_reg:x3; val_offset:171807*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171807*0 + 3*437*FLEN/8, x4, x1, x2)

inst_57270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffe0000000000; valaddr_reg:x3; val_offset:171810*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171810*0 + 3*438*FLEN/8, x4, x1, x2)

inst_57271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fff0000000000; valaddr_reg:x3; val_offset:171813*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171813*0 + 3*439*FLEN/8, x4, x1, x2)

inst_57272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fff8000000000; valaddr_reg:x3; val_offset:171816*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171816*0 + 3*440*FLEN/8, x4, x1, x2)

inst_57273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffc000000000; valaddr_reg:x3; val_offset:171819*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171819*0 + 3*441*FLEN/8, x4, x1, x2)

inst_57274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffe000000000; valaddr_reg:x3; val_offset:171822*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171822*0 + 3*442*FLEN/8, x4, x1, x2)

inst_57275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffff000000000; valaddr_reg:x3; val_offset:171825*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171825*0 + 3*443*FLEN/8, x4, x1, x2)

inst_57276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffff800000000; valaddr_reg:x3; val_offset:171828*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171828*0 + 3*444*FLEN/8, x4, x1, x2)

inst_57277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffc00000000; valaddr_reg:x3; val_offset:171831*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171831*0 + 3*445*FLEN/8, x4, x1, x2)

inst_57278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffe00000000; valaddr_reg:x3; val_offset:171834*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171834*0 + 3*446*FLEN/8, x4, x1, x2)

inst_57279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffff00000000; valaddr_reg:x3; val_offset:171837*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171837*0 + 3*447*FLEN/8, x4, x1, x2)

inst_57280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffff80000000; valaddr_reg:x3; val_offset:171840*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171840*0 + 3*448*FLEN/8, x4, x1, x2)

inst_57281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffc0000000; valaddr_reg:x3; val_offset:171843*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171843*0 + 3*449*FLEN/8, x4, x1, x2)

inst_57282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffe0000000; valaddr_reg:x3; val_offset:171846*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171846*0 + 3*450*FLEN/8, x4, x1, x2)

inst_57283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffff0000000; valaddr_reg:x3; val_offset:171849*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171849*0 + 3*451*FLEN/8, x4, x1, x2)

inst_57284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffff8000000; valaddr_reg:x3; val_offset:171852*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171852*0 + 3*452*FLEN/8, x4, x1, x2)

inst_57285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffc000000; valaddr_reg:x3; val_offset:171855*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171855*0 + 3*453*FLEN/8, x4, x1, x2)

inst_57286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffe000000; valaddr_reg:x3; val_offset:171858*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171858*0 + 3*454*FLEN/8, x4, x1, x2)

inst_57287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffff000000; valaddr_reg:x3; val_offset:171861*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171861*0 + 3*455*FLEN/8, x4, x1, x2)

inst_57288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffff800000; valaddr_reg:x3; val_offset:171864*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171864*0 + 3*456*FLEN/8, x4, x1, x2)

inst_57289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffc00000; valaddr_reg:x3; val_offset:171867*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171867*0 + 3*457*FLEN/8, x4, x1, x2)

inst_57290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffe00000; valaddr_reg:x3; val_offset:171870*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171870*0 + 3*458*FLEN/8, x4, x1, x2)

inst_57291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffff00000; valaddr_reg:x3; val_offset:171873*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171873*0 + 3*459*FLEN/8, x4, x1, x2)

inst_57292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffff80000; valaddr_reg:x3; val_offset:171876*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171876*0 + 3*460*FLEN/8, x4, x1, x2)

inst_57293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffc0000; valaddr_reg:x3; val_offset:171879*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171879*0 + 3*461*FLEN/8, x4, x1, x2)

inst_57294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffe0000; valaddr_reg:x3; val_offset:171882*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171882*0 + 3*462*FLEN/8, x4, x1, x2)

inst_57295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffff0000; valaddr_reg:x3; val_offset:171885*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171885*0 + 3*463*FLEN/8, x4, x1, x2)

inst_57296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffff8000; valaddr_reg:x3; val_offset:171888*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171888*0 + 3*464*FLEN/8, x4, x1, x2)

inst_57297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffc000; valaddr_reg:x3; val_offset:171891*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171891*0 + 3*465*FLEN/8, x4, x1, x2)

inst_57298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffe000; valaddr_reg:x3; val_offset:171894*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171894*0 + 3*466*FLEN/8, x4, x1, x2)

inst_57299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffff000; valaddr_reg:x3; val_offset:171897*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171897*0 + 3*467*FLEN/8, x4, x1, x2)

inst_57300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffff800; valaddr_reg:x3; val_offset:171900*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171900*0 + 3*468*FLEN/8, x4, x1, x2)

inst_57301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffffc00; valaddr_reg:x3; val_offset:171903*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171903*0 + 3*469*FLEN/8, x4, x1, x2)

inst_57302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffffe00; valaddr_reg:x3; val_offset:171906*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171906*0 + 3*470*FLEN/8, x4, x1, x2)

inst_57303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffff00; valaddr_reg:x3; val_offset:171909*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171909*0 + 3*471*FLEN/8, x4, x1, x2)

inst_57304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffff80; valaddr_reg:x3; val_offset:171912*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171912*0 + 3*472*FLEN/8, x4, x1, x2)

inst_57305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffffc0; valaddr_reg:x3; val_offset:171915*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171915*0 + 3*473*FLEN/8, x4, x1, x2)

inst_57306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffffe0; valaddr_reg:x3; val_offset:171918*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171918*0 + 3*474*FLEN/8, x4, x1, x2)

inst_57307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffffff0; valaddr_reg:x3; val_offset:171921*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171921*0 + 3*475*FLEN/8, x4, x1, x2)

inst_57308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffffff8; valaddr_reg:x3; val_offset:171924*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171924*0 + 3*476*FLEN/8, x4, x1, x2)

inst_57309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffffffc; valaddr_reg:x3; val_offset:171927*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171927*0 + 3*477*FLEN/8, x4, x1, x2)

inst_57310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811ffffffffffffe; valaddr_reg:x3; val_offset:171930*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171930*0 + 3*478*FLEN/8, x4, x1, x2)

inst_57311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x8000;
op3val:0x811fffffffffffff; valaddr_reg:x3; val_offset:171933*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171933*0 + 3*479*FLEN/8, x4, x1, x2)

inst_57312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:171936*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171936*0 + 3*480*FLEN/8, x4, x1, x2)

inst_57313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:171939*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171939*0 + 3*481*FLEN/8, x4, x1, x2)

inst_57314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:171942*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171942*0 + 3*482*FLEN/8, x4, x1, x2)

inst_57315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:171945*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171945*0 + 3*483*FLEN/8, x4, x1, x2)

inst_57316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:171948*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171948*0 + 3*484*FLEN/8, x4, x1, x2)

inst_57317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:171951*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171951*0 + 3*485*FLEN/8, x4, x1, x2)

inst_57318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:171954*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171954*0 + 3*486*FLEN/8, x4, x1, x2)

inst_57319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:171957*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171957*0 + 3*487*FLEN/8, x4, x1, x2)

inst_57320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:171960*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171960*0 + 3*488*FLEN/8, x4, x1, x2)

inst_57321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:171963*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171963*0 + 3*489*FLEN/8, x4, x1, x2)

inst_57322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:171966*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171966*0 + 3*490*FLEN/8, x4, x1, x2)

inst_57323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:171969*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171969*0 + 3*491*FLEN/8, x4, x1, x2)

inst_57324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:171972*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171972*0 + 3*492*FLEN/8, x4, x1, x2)

inst_57325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:171975*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171975*0 + 3*493*FLEN/8, x4, x1, x2)

inst_57326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:171978*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171978*0 + 3*494*FLEN/8, x4, x1, x2)

inst_57327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:171981*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171981*0 + 3*495*FLEN/8, x4, x1, x2)

inst_57328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:171984*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171984*0 + 3*496*FLEN/8, x4, x1, x2)

inst_57329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:171987*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171987*0 + 3*497*FLEN/8, x4, x1, x2)

inst_57330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:171990*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171990*0 + 3*498*FLEN/8, x4, x1, x2)

inst_57331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:171993*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171993*0 + 3*499*FLEN/8, x4, x1, x2)

inst_57332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:171996*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171996*0 + 3*500*FLEN/8, x4, x1, x2)

inst_57333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:171999*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171999*0 + 3*501*FLEN/8, x4, x1, x2)

inst_57334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000000000; valaddr_reg:x3; val_offset:172002*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172002*0 + 3*502*FLEN/8, x4, x1, x2)

inst_57335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000000001; valaddr_reg:x3; val_offset:172005*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172005*0 + 3*503*FLEN/8, x4, x1, x2)

inst_57336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000000003; valaddr_reg:x3; val_offset:172008*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172008*0 + 3*504*FLEN/8, x4, x1, x2)

inst_57337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000000007; valaddr_reg:x3; val_offset:172011*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172011*0 + 3*505*FLEN/8, x4, x1, x2)

inst_57338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000000000f; valaddr_reg:x3; val_offset:172014*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172014*0 + 3*506*FLEN/8, x4, x1, x2)

inst_57339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000000001f; valaddr_reg:x3; val_offset:172017*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172017*0 + 3*507*FLEN/8, x4, x1, x2)

inst_57340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000000003f; valaddr_reg:x3; val_offset:172020*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172020*0 + 3*508*FLEN/8, x4, x1, x2)

inst_57341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000000007f; valaddr_reg:x3; val_offset:172023*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172023*0 + 3*509*FLEN/8, x4, x1, x2)

inst_57342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000000000ff; valaddr_reg:x3; val_offset:172026*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172026*0 + 3*510*FLEN/8, x4, x1, x2)

inst_57343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000000001ff; valaddr_reg:x3; val_offset:172029*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172029*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_57344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000000003ff; valaddr_reg:x3; val_offset:172032*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172032*0 + 3*512*FLEN/8, x4, x1, x2)

inst_57345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000000007ff; valaddr_reg:x3; val_offset:172035*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172035*0 + 3*513*FLEN/8, x4, x1, x2)

inst_57346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000000fff; valaddr_reg:x3; val_offset:172038*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172038*0 + 3*514*FLEN/8, x4, x1, x2)

inst_57347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000001fff; valaddr_reg:x3; val_offset:172041*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172041*0 + 3*515*FLEN/8, x4, x1, x2)

inst_57348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000003fff; valaddr_reg:x3; val_offset:172044*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172044*0 + 3*516*FLEN/8, x4, x1, x2)

inst_57349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000007fff; valaddr_reg:x3; val_offset:172047*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172047*0 + 3*517*FLEN/8, x4, x1, x2)

inst_57350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000000ffff; valaddr_reg:x3; val_offset:172050*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172050*0 + 3*518*FLEN/8, x4, x1, x2)

inst_57351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000001ffff; valaddr_reg:x3; val_offset:172053*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172053*0 + 3*519*FLEN/8, x4, x1, x2)

inst_57352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000003ffff; valaddr_reg:x3; val_offset:172056*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172056*0 + 3*520*FLEN/8, x4, x1, x2)

inst_57353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000007ffff; valaddr_reg:x3; val_offset:172059*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172059*0 + 3*521*FLEN/8, x4, x1, x2)

inst_57354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000000fffff; valaddr_reg:x3; val_offset:172062*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172062*0 + 3*522*FLEN/8, x4, x1, x2)

inst_57355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000001fffff; valaddr_reg:x3; val_offset:172065*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172065*0 + 3*523*FLEN/8, x4, x1, x2)

inst_57356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000003fffff; valaddr_reg:x3; val_offset:172068*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172068*0 + 3*524*FLEN/8, x4, x1, x2)

inst_57357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000007fffff; valaddr_reg:x3; val_offset:172071*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172071*0 + 3*525*FLEN/8, x4, x1, x2)

inst_57358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000000ffffff; valaddr_reg:x3; val_offset:172074*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172074*0 + 3*526*FLEN/8, x4, x1, x2)

inst_57359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000001ffffff; valaddr_reg:x3; val_offset:172077*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172077*0 + 3*527*FLEN/8, x4, x1, x2)

inst_57360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:172080*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172080*0 + 3*528*FLEN/8, x4, x1, x2)

inst_57361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:172083*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172083*0 + 3*529*FLEN/8, x4, x1, x2)

inst_57362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:172086*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172086*0 + 3*530*FLEN/8, x4, x1, x2)

inst_57363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:172089*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172089*0 + 3*531*FLEN/8, x4, x1, x2)

inst_57364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:172092*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172092*0 + 3*532*FLEN/8, x4, x1, x2)

inst_57365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:172095*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172095*0 + 3*533*FLEN/8, x4, x1, x2)

inst_57366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:172098*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172098*0 + 3*534*FLEN/8, x4, x1, x2)

inst_57367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:172101*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172101*0 + 3*535*FLEN/8, x4, x1, x2)

inst_57368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:172104*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172104*0 + 3*536*FLEN/8, x4, x1, x2)

inst_57369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:172107*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172107*0 + 3*537*FLEN/8, x4, x1, x2)

inst_57370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:172110*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172110*0 + 3*538*FLEN/8, x4, x1, x2)

inst_57371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:172113*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172113*0 + 3*539*FLEN/8, x4, x1, x2)

inst_57372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:172116*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172116*0 + 3*540*FLEN/8, x4, x1, x2)

inst_57373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:172119*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172119*0 + 3*541*FLEN/8, x4, x1, x2)

inst_57374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:172122*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172122*0 + 3*542*FLEN/8, x4, x1, x2)

inst_57375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:172125*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172125*0 + 3*543*FLEN/8, x4, x1, x2)

inst_57376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:172128*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172128*0 + 3*544*FLEN/8, x4, x1, x2)

inst_57377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:172131*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172131*0 + 3*545*FLEN/8, x4, x1, x2)

inst_57378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:172134*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172134*0 + 3*546*FLEN/8, x4, x1, x2)

inst_57379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:172137*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172137*0 + 3*547*FLEN/8, x4, x1, x2)

inst_57380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:172140*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172140*0 + 3*548*FLEN/8, x4, x1, x2)

inst_57381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:172143*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172143*0 + 3*549*FLEN/8, x4, x1, x2)

inst_57382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:172146*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172146*0 + 3*550*FLEN/8, x4, x1, x2)

inst_57383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:172149*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172149*0 + 3*551*FLEN/8, x4, x1, x2)

inst_57384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:172152*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172152*0 + 3*552*FLEN/8, x4, x1, x2)

inst_57385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:172155*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172155*0 + 3*553*FLEN/8, x4, x1, x2)

inst_57386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:172158*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172158*0 + 3*554*FLEN/8, x4, x1, x2)

inst_57387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:172161*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172161*0 + 3*555*FLEN/8, x4, x1, x2)

inst_57388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:172164*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172164*0 + 3*556*FLEN/8, x4, x1, x2)

inst_57389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:172167*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172167*0 + 3*557*FLEN/8, x4, x1, x2)

inst_57390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:172170*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172170*0 + 3*558*FLEN/8, x4, x1, x2)

inst_57391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:172173*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172173*0 + 3*559*FLEN/8, x4, x1, x2)

inst_57392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:172176*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172176*0 + 3*560*FLEN/8, x4, x1, x2)

inst_57393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:172179*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172179*0 + 3*561*FLEN/8, x4, x1, x2)

inst_57394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:172182*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172182*0 + 3*562*FLEN/8, x4, x1, x2)

inst_57395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:172185*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172185*0 + 3*563*FLEN/8, x4, x1, x2)

inst_57396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:172188*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172188*0 + 3*564*FLEN/8, x4, x1, x2)

inst_57397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:172191*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172191*0 + 3*565*FLEN/8, x4, x1, x2)

inst_57398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:172194*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172194*0 + 3*566*FLEN/8, x4, x1, x2)

inst_57399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:172197*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172197*0 + 3*567*FLEN/8, x4, x1, x2)

inst_57400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:172200*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172200*0 + 3*568*FLEN/8, x4, x1, x2)

inst_57401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:172203*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172203*0 + 3*569*FLEN/8, x4, x1, x2)

inst_57402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:172206*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172206*0 + 3*570*FLEN/8, x4, x1, x2)

inst_57403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:172209*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172209*0 + 3*571*FLEN/8, x4, x1, x2)

inst_57404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:172212*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172212*0 + 3*572*FLEN/8, x4, x1, x2)

inst_57405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:172215*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172215*0 + 3*573*FLEN/8, x4, x1, x2)

inst_57406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:172218*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172218*0 + 3*574*FLEN/8, x4, x1, x2)

inst_57407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:172221*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172221*0 + 3*575*FLEN/8, x4, x1, x2)

inst_57408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:172224*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172224*0 + 3*576*FLEN/8, x4, x1, x2)

inst_57409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:172227*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172227*0 + 3*577*FLEN/8, x4, x1, x2)

inst_57410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:172230*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172230*0 + 3*578*FLEN/8, x4, x1, x2)

inst_57411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:172233*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172233*0 + 3*579*FLEN/8, x4, x1, x2)

inst_57412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:172236*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172236*0 + 3*580*FLEN/8, x4, x1, x2)

inst_57413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:172239*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172239*0 + 3*581*FLEN/8, x4, x1, x2)

inst_57414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:172242*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172242*0 + 3*582*FLEN/8, x4, x1, x2)

inst_57415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:172245*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172245*0 + 3*583*FLEN/8, x4, x1, x2)

inst_57416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:172248*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172248*0 + 3*584*FLEN/8, x4, x1, x2)

inst_57417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:172251*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172251*0 + 3*585*FLEN/8, x4, x1, x2)

inst_57418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:172254*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172254*0 + 3*586*FLEN/8, x4, x1, x2)

inst_57419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:172257*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172257*0 + 3*587*FLEN/8, x4, x1, x2)

inst_57420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:172260*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172260*0 + 3*588*FLEN/8, x4, x1, x2)

inst_57421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:172263*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172263*0 + 3*589*FLEN/8, x4, x1, x2)

inst_57422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:172266*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172266*0 + 3*590*FLEN/8, x4, x1, x2)

inst_57423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:172269*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172269*0 + 3*591*FLEN/8, x4, x1, x2)

inst_57424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:172272*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172272*0 + 3*592*FLEN/8, x4, x1, x2)

inst_57425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:172275*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172275*0 + 3*593*FLEN/8, x4, x1, x2)

inst_57426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffff800; valaddr_reg:x3; val_offset:172278*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172278*0 + 3*594*FLEN/8, x4, x1, x2)

inst_57427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffffc00; valaddr_reg:x3; val_offset:172281*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172281*0 + 3*595*FLEN/8, x4, x1, x2)

inst_57428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffffe00; valaddr_reg:x3; val_offset:172284*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172284*0 + 3*596*FLEN/8, x4, x1, x2)

inst_57429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffff00; valaddr_reg:x3; val_offset:172287*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172287*0 + 3*597*FLEN/8, x4, x1, x2)

inst_57430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffff80; valaddr_reg:x3; val_offset:172290*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172290*0 + 3*598*FLEN/8, x4, x1, x2)

inst_57431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffffc0; valaddr_reg:x3; val_offset:172293*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172293*0 + 3*599*FLEN/8, x4, x1, x2)

inst_57432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffffe0; valaddr_reg:x3; val_offset:172296*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172296*0 + 3*600*FLEN/8, x4, x1, x2)

inst_57433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffffff0; valaddr_reg:x3; val_offset:172299*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172299*0 + 3*601*FLEN/8, x4, x1, x2)

inst_57434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffffff8; valaddr_reg:x3; val_offset:172302*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172302*0 + 3*602*FLEN/8, x4, x1, x2)

inst_57435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffffffc; valaddr_reg:x3; val_offset:172305*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172305*0 + 3*603*FLEN/8, x4, x1, x2)

inst_57436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806ffffffffffffe; valaddr_reg:x3; val_offset:172308*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172308*0 + 3*604*FLEN/8, x4, x1, x2)

inst_57437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x173ba796d85b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa173ba796d85b8; op2val:0x8000;
op3val:0x806fffffffffffff; valaddr_reg:x3; val_offset:172311*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172311*0 + 3*605*FLEN/8, x4, x1, x2)

inst_57438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:172314*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172314*0 + 3*606*FLEN/8, x4, x1, x2)

inst_57439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:172317*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172317*0 + 3*607*FLEN/8, x4, x1, x2)

inst_57440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:172320*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172320*0 + 3*608*FLEN/8, x4, x1, x2)

inst_57441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:172323*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172323*0 + 3*609*FLEN/8, x4, x1, x2)

inst_57442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:172326*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172326*0 + 3*610*FLEN/8, x4, x1, x2)

inst_57443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:172329*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172329*0 + 3*611*FLEN/8, x4, x1, x2)

inst_57444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:172332*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172332*0 + 3*612*FLEN/8, x4, x1, x2)

inst_57445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:172335*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172335*0 + 3*613*FLEN/8, x4, x1, x2)

inst_57446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:172338*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172338*0 + 3*614*FLEN/8, x4, x1, x2)

inst_57447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:172341*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172341*0 + 3*615*FLEN/8, x4, x1, x2)

inst_57448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:172344*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172344*0 + 3*616*FLEN/8, x4, x1, x2)

inst_57449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:172347*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172347*0 + 3*617*FLEN/8, x4, x1, x2)

inst_57450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:172350*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172350*0 + 3*618*FLEN/8, x4, x1, x2)

inst_57451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:172353*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172353*0 + 3*619*FLEN/8, x4, x1, x2)

inst_57452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:172356*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172356*0 + 3*620*FLEN/8, x4, x1, x2)

inst_57453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:172359*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172359*0 + 3*621*FLEN/8, x4, x1, x2)

inst_57454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:172362*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172362*0 + 3*622*FLEN/8, x4, x1, x2)

inst_57455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:172365*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172365*0 + 3*623*FLEN/8, x4, x1, x2)

inst_57456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:172368*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172368*0 + 3*624*FLEN/8, x4, x1, x2)

inst_57457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:172371*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172371*0 + 3*625*FLEN/8, x4, x1, x2)

inst_57458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:172374*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172374*0 + 3*626*FLEN/8, x4, x1, x2)

inst_57459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:172377*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172377*0 + 3*627*FLEN/8, x4, x1, x2)

inst_57460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000000000; valaddr_reg:x3; val_offset:172380*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172380*0 + 3*628*FLEN/8, x4, x1, x2)

inst_57461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000000001; valaddr_reg:x3; val_offset:172383*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172383*0 + 3*629*FLEN/8, x4, x1, x2)

inst_57462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000000003; valaddr_reg:x3; val_offset:172386*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172386*0 + 3*630*FLEN/8, x4, x1, x2)

inst_57463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000000007; valaddr_reg:x3; val_offset:172389*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172389*0 + 3*631*FLEN/8, x4, x1, x2)

inst_57464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000000000f; valaddr_reg:x3; val_offset:172392*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172392*0 + 3*632*FLEN/8, x4, x1, x2)

inst_57465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000000001f; valaddr_reg:x3; val_offset:172395*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172395*0 + 3*633*FLEN/8, x4, x1, x2)

inst_57466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000000003f; valaddr_reg:x3; val_offset:172398*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172398*0 + 3*634*FLEN/8, x4, x1, x2)

inst_57467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000000007f; valaddr_reg:x3; val_offset:172401*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172401*0 + 3*635*FLEN/8, x4, x1, x2)

inst_57468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000000000ff; valaddr_reg:x3; val_offset:172404*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172404*0 + 3*636*FLEN/8, x4, x1, x2)

inst_57469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000000001ff; valaddr_reg:x3; val_offset:172407*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172407*0 + 3*637*FLEN/8, x4, x1, x2)

inst_57470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000000003ff; valaddr_reg:x3; val_offset:172410*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172410*0 + 3*638*FLEN/8, x4, x1, x2)

inst_57471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000000007ff; valaddr_reg:x3; val_offset:172413*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172413*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_57472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000000fff; valaddr_reg:x3; val_offset:172416*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172416*0 + 3*640*FLEN/8, x4, x1, x2)

inst_57473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000001fff; valaddr_reg:x3; val_offset:172419*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172419*0 + 3*641*FLEN/8, x4, x1, x2)

inst_57474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000003fff; valaddr_reg:x3; val_offset:172422*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172422*0 + 3*642*FLEN/8, x4, x1, x2)

inst_57475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000007fff; valaddr_reg:x3; val_offset:172425*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172425*0 + 3*643*FLEN/8, x4, x1, x2)

inst_57476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000000ffff; valaddr_reg:x3; val_offset:172428*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172428*0 + 3*644*FLEN/8, x4, x1, x2)

inst_57477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000001ffff; valaddr_reg:x3; val_offset:172431*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172431*0 + 3*645*FLEN/8, x4, x1, x2)

inst_57478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000003ffff; valaddr_reg:x3; val_offset:172434*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172434*0 + 3*646*FLEN/8, x4, x1, x2)

inst_57479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000007ffff; valaddr_reg:x3; val_offset:172437*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172437*0 + 3*647*FLEN/8, x4, x1, x2)

inst_57480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000000fffff; valaddr_reg:x3; val_offset:172440*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172440*0 + 3*648*FLEN/8, x4, x1, x2)

inst_57481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000001fffff; valaddr_reg:x3; val_offset:172443*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172443*0 + 3*649*FLEN/8, x4, x1, x2)

inst_57482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000003fffff; valaddr_reg:x3; val_offset:172446*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172446*0 + 3*650*FLEN/8, x4, x1, x2)

inst_57483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000007fffff; valaddr_reg:x3; val_offset:172449*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172449*0 + 3*651*FLEN/8, x4, x1, x2)

inst_57484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000000ffffff; valaddr_reg:x3; val_offset:172452*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172452*0 + 3*652*FLEN/8, x4, x1, x2)

inst_57485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000001ffffff; valaddr_reg:x3; val_offset:172455*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172455*0 + 3*653*FLEN/8, x4, x1, x2)

inst_57486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000003ffffff; valaddr_reg:x3; val_offset:172458*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172458*0 + 3*654*FLEN/8, x4, x1, x2)

inst_57487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000007ffffff; valaddr_reg:x3; val_offset:172461*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172461*0 + 3*655*FLEN/8, x4, x1, x2)

inst_57488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000000fffffff; valaddr_reg:x3; val_offset:172464*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172464*0 + 3*656*FLEN/8, x4, x1, x2)

inst_57489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000001fffffff; valaddr_reg:x3; val_offset:172467*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172467*0 + 3*657*FLEN/8, x4, x1, x2)

inst_57490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000003fffffff; valaddr_reg:x3; val_offset:172470*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172470*0 + 3*658*FLEN/8, x4, x1, x2)

inst_57491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000007fffffff; valaddr_reg:x3; val_offset:172473*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172473*0 + 3*659*FLEN/8, x4, x1, x2)

inst_57492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00000ffffffff; valaddr_reg:x3; val_offset:172476*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172476*0 + 3*660*FLEN/8, x4, x1, x2)

inst_57493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00001ffffffff; valaddr_reg:x3; val_offset:172479*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172479*0 + 3*661*FLEN/8, x4, x1, x2)

inst_57494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00003ffffffff; valaddr_reg:x3; val_offset:172482*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172482*0 + 3*662*FLEN/8, x4, x1, x2)

inst_57495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00007ffffffff; valaddr_reg:x3; val_offset:172485*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172485*0 + 3*663*FLEN/8, x4, x1, x2)

inst_57496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0000fffffffff; valaddr_reg:x3; val_offset:172488*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172488*0 + 3*664*FLEN/8, x4, x1, x2)

inst_57497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0001fffffffff; valaddr_reg:x3; val_offset:172491*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172491*0 + 3*665*FLEN/8, x4, x1, x2)

inst_57498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0003fffffffff; valaddr_reg:x3; val_offset:172494*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172494*0 + 3*666*FLEN/8, x4, x1, x2)

inst_57499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0007fffffffff; valaddr_reg:x3; val_offset:172497*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172497*0 + 3*667*FLEN/8, x4, x1, x2)

inst_57500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f000ffffffffff; valaddr_reg:x3; val_offset:172500*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172500*0 + 3*668*FLEN/8, x4, x1, x2)

inst_57501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f001ffffffffff; valaddr_reg:x3; val_offset:172503*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172503*0 + 3*669*FLEN/8, x4, x1, x2)

inst_57502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f003ffffffffff; valaddr_reg:x3; val_offset:172506*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172506*0 + 3*670*FLEN/8, x4, x1, x2)

inst_57503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f007ffffffffff; valaddr_reg:x3; val_offset:172509*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172509*0 + 3*671*FLEN/8, x4, x1, x2)

inst_57504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f00fffffffffff; valaddr_reg:x3; val_offset:172512*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172512*0 + 3*672*FLEN/8, x4, x1, x2)

inst_57505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f01fffffffffff; valaddr_reg:x3; val_offset:172515*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172515*0 + 3*673*FLEN/8, x4, x1, x2)

inst_57506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f03fffffffffff; valaddr_reg:x3; val_offset:172518*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172518*0 + 3*674*FLEN/8, x4, x1, x2)

inst_57507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f07fffffffffff; valaddr_reg:x3; val_offset:172521*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172521*0 + 3*675*FLEN/8, x4, x1, x2)

inst_57508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f0ffffffffffff; valaddr_reg:x3; val_offset:172524*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172524*0 + 3*676*FLEN/8, x4, x1, x2)

inst_57509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f1ffffffffffff; valaddr_reg:x3; val_offset:172527*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172527*0 + 3*677*FLEN/8, x4, x1, x2)

inst_57510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f3ffffffffffff; valaddr_reg:x3; val_offset:172530*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172530*0 + 3*678*FLEN/8, x4, x1, x2)

inst_57511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f7ffffffffffff; valaddr_reg:x3; val_offset:172533*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172533*0 + 3*679*FLEN/8, x4, x1, x2)

inst_57512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1f8000000000000; valaddr_reg:x3; val_offset:172536*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172536*0 + 3*680*FLEN/8, x4, x1, x2)

inst_57513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fc000000000000; valaddr_reg:x3; val_offset:172539*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172539*0 + 3*681*FLEN/8, x4, x1, x2)

inst_57514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fe000000000000; valaddr_reg:x3; val_offset:172542*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172542*0 + 3*682*FLEN/8, x4, x1, x2)

inst_57515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ff000000000000; valaddr_reg:x3; val_offset:172545*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172545*0 + 3*683*FLEN/8, x4, x1, x2)

inst_57516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ff800000000000; valaddr_reg:x3; val_offset:172548*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172548*0 + 3*684*FLEN/8, x4, x1, x2)

inst_57517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffc00000000000; valaddr_reg:x3; val_offset:172551*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172551*0 + 3*685*FLEN/8, x4, x1, x2)

inst_57518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffe00000000000; valaddr_reg:x3; val_offset:172554*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172554*0 + 3*686*FLEN/8, x4, x1, x2)

inst_57519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fff00000000000; valaddr_reg:x3; val_offset:172557*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172557*0 + 3*687*FLEN/8, x4, x1, x2)

inst_57520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fff80000000000; valaddr_reg:x3; val_offset:172560*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172560*0 + 3*688*FLEN/8, x4, x1, x2)

inst_57521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffc0000000000; valaddr_reg:x3; val_offset:172563*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172563*0 + 3*689*FLEN/8, x4, x1, x2)

inst_57522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffe0000000000; valaddr_reg:x3; val_offset:172566*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172566*0 + 3*690*FLEN/8, x4, x1, x2)

inst_57523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffff0000000000; valaddr_reg:x3; val_offset:172569*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172569*0 + 3*691*FLEN/8, x4, x1, x2)

inst_57524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffff8000000000; valaddr_reg:x3; val_offset:172572*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172572*0 + 3*692*FLEN/8, x4, x1, x2)

inst_57525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffc000000000; valaddr_reg:x3; val_offset:172575*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172575*0 + 3*693*FLEN/8, x4, x1, x2)

inst_57526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffe000000000; valaddr_reg:x3; val_offset:172578*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172578*0 + 3*694*FLEN/8, x4, x1, x2)

inst_57527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffff000000000; valaddr_reg:x3; val_offset:172581*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172581*0 + 3*695*FLEN/8, x4, x1, x2)

inst_57528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffff800000000; valaddr_reg:x3; val_offset:172584*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172584*0 + 3*696*FLEN/8, x4, x1, x2)

inst_57529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffc00000000; valaddr_reg:x3; val_offset:172587*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172587*0 + 3*697*FLEN/8, x4, x1, x2)

inst_57530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffe00000000; valaddr_reg:x3; val_offset:172590*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172590*0 + 3*698*FLEN/8, x4, x1, x2)

inst_57531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffff00000000; valaddr_reg:x3; val_offset:172593*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172593*0 + 3*699*FLEN/8, x4, x1, x2)

inst_57532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffff80000000; valaddr_reg:x3; val_offset:172596*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172596*0 + 3*700*FLEN/8, x4, x1, x2)

inst_57533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffc0000000; valaddr_reg:x3; val_offset:172599*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172599*0 + 3*701*FLEN/8, x4, x1, x2)

inst_57534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffe0000000; valaddr_reg:x3; val_offset:172602*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172602*0 + 3*702*FLEN/8, x4, x1, x2)

inst_57535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffff0000000; valaddr_reg:x3; val_offset:172605*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172605*0 + 3*703*FLEN/8, x4, x1, x2)

inst_57536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffff8000000; valaddr_reg:x3; val_offset:172608*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172608*0 + 3*704*FLEN/8, x4, x1, x2)

inst_57537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffc000000; valaddr_reg:x3; val_offset:172611*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172611*0 + 3*705*FLEN/8, x4, x1, x2)

inst_57538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffe000000; valaddr_reg:x3; val_offset:172614*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172614*0 + 3*706*FLEN/8, x4, x1, x2)

inst_57539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffff000000; valaddr_reg:x3; val_offset:172617*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172617*0 + 3*707*FLEN/8, x4, x1, x2)

inst_57540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffff800000; valaddr_reg:x3; val_offset:172620*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172620*0 + 3*708*FLEN/8, x4, x1, x2)

inst_57541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffc00000; valaddr_reg:x3; val_offset:172623*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172623*0 + 3*709*FLEN/8, x4, x1, x2)

inst_57542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffe00000; valaddr_reg:x3; val_offset:172626*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172626*0 + 3*710*FLEN/8, x4, x1, x2)

inst_57543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffff00000; valaddr_reg:x3; val_offset:172629*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172629*0 + 3*711*FLEN/8, x4, x1, x2)

inst_57544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffff80000; valaddr_reg:x3; val_offset:172632*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172632*0 + 3*712*FLEN/8, x4, x1, x2)

inst_57545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffc0000; valaddr_reg:x3; val_offset:172635*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172635*0 + 3*713*FLEN/8, x4, x1, x2)

inst_57546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffe0000; valaddr_reg:x3; val_offset:172638*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172638*0 + 3*714*FLEN/8, x4, x1, x2)

inst_57547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffff0000; valaddr_reg:x3; val_offset:172641*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172641*0 + 3*715*FLEN/8, x4, x1, x2)

inst_57548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffff8000; valaddr_reg:x3; val_offset:172644*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172644*0 + 3*716*FLEN/8, x4, x1, x2)

inst_57549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffc000; valaddr_reg:x3; val_offset:172647*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172647*0 + 3*717*FLEN/8, x4, x1, x2)

inst_57550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffe000; valaddr_reg:x3; val_offset:172650*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172650*0 + 3*718*FLEN/8, x4, x1, x2)

inst_57551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffff000; valaddr_reg:x3; val_offset:172653*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172653*0 + 3*719*FLEN/8, x4, x1, x2)

inst_57552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffff800; valaddr_reg:x3; val_offset:172656*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172656*0 + 3*720*FLEN/8, x4, x1, x2)

inst_57553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffc00; valaddr_reg:x3; val_offset:172659*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172659*0 + 3*721*FLEN/8, x4, x1, x2)

inst_57554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffe00; valaddr_reg:x3; val_offset:172662*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172662*0 + 3*722*FLEN/8, x4, x1, x2)

inst_57555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffff00; valaddr_reg:x3; val_offset:172665*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172665*0 + 3*723*FLEN/8, x4, x1, x2)

inst_57556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffff80; valaddr_reg:x3; val_offset:172668*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172668*0 + 3*724*FLEN/8, x4, x1, x2)

inst_57557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffffc0; valaddr_reg:x3; val_offset:172671*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172671*0 + 3*725*FLEN/8, x4, x1, x2)

inst_57558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffffe0; valaddr_reg:x3; val_offset:172674*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172674*0 + 3*726*FLEN/8, x4, x1, x2)

inst_57559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffff0; valaddr_reg:x3; val_offset:172677*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172677*0 + 3*727*FLEN/8, x4, x1, x2)

inst_57560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffff8; valaddr_reg:x3; val_offset:172680*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172680*0 + 3*728*FLEN/8, x4, x1, x2)

inst_57561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffffc; valaddr_reg:x3; val_offset:172683*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172683*0 + 3*729*FLEN/8, x4, x1, x2)

inst_57562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1fffffffffffffe; valaddr_reg:x3; val_offset:172686*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172686*0 + 3*730*FLEN/8, x4, x1, x2)

inst_57563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1806a95a68db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1806a95a68db9; op2val:0x0;
op3val:0x1ffffffffffffff; valaddr_reg:x3; val_offset:172689*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172689*0 + 3*731*FLEN/8, x4, x1, x2)

inst_57564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000000000; valaddr_reg:x3; val_offset:172692*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172692*0 + 3*732*FLEN/8, x4, x1, x2)

inst_57565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000000001; valaddr_reg:x3; val_offset:172695*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172695*0 + 3*733*FLEN/8, x4, x1, x2)

inst_57566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000000003; valaddr_reg:x3; val_offset:172698*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172698*0 + 3*734*FLEN/8, x4, x1, x2)

inst_57567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000000007; valaddr_reg:x3; val_offset:172701*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172701*0 + 3*735*FLEN/8, x4, x1, x2)

inst_57568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000000000f; valaddr_reg:x3; val_offset:172704*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172704*0 + 3*736*FLEN/8, x4, x1, x2)

inst_57569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000000001f; valaddr_reg:x3; val_offset:172707*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172707*0 + 3*737*FLEN/8, x4, x1, x2)

inst_57570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000000003f; valaddr_reg:x3; val_offset:172710*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172710*0 + 3*738*FLEN/8, x4, x1, x2)

inst_57571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000000007f; valaddr_reg:x3; val_offset:172713*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172713*0 + 3*739*FLEN/8, x4, x1, x2)

inst_57572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000000000ff; valaddr_reg:x3; val_offset:172716*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172716*0 + 3*740*FLEN/8, x4, x1, x2)

inst_57573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000000001ff; valaddr_reg:x3; val_offset:172719*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172719*0 + 3*741*FLEN/8, x4, x1, x2)

inst_57574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000000003ff; valaddr_reg:x3; val_offset:172722*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172722*0 + 3*742*FLEN/8, x4, x1, x2)

inst_57575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000000007ff; valaddr_reg:x3; val_offset:172725*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172725*0 + 3*743*FLEN/8, x4, x1, x2)

inst_57576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000000fff; valaddr_reg:x3; val_offset:172728*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172728*0 + 3*744*FLEN/8, x4, x1, x2)

inst_57577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000001fff; valaddr_reg:x3; val_offset:172731*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172731*0 + 3*745*FLEN/8, x4, x1, x2)

inst_57578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000003fff; valaddr_reg:x3; val_offset:172734*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172734*0 + 3*746*FLEN/8, x4, x1, x2)

inst_57579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000007fff; valaddr_reg:x3; val_offset:172737*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172737*0 + 3*747*FLEN/8, x4, x1, x2)

inst_57580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000000ffff; valaddr_reg:x3; val_offset:172740*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172740*0 + 3*748*FLEN/8, x4, x1, x2)

inst_57581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000001ffff; valaddr_reg:x3; val_offset:172743*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172743*0 + 3*749*FLEN/8, x4, x1, x2)

inst_57582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000003ffff; valaddr_reg:x3; val_offset:172746*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172746*0 + 3*750*FLEN/8, x4, x1, x2)

inst_57583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000007ffff; valaddr_reg:x3; val_offset:172749*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172749*0 + 3*751*FLEN/8, x4, x1, x2)

inst_57584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000000fffff; valaddr_reg:x3; val_offset:172752*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172752*0 + 3*752*FLEN/8, x4, x1, x2)

inst_57585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000001fffff; valaddr_reg:x3; val_offset:172755*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172755*0 + 3*753*FLEN/8, x4, x1, x2)

inst_57586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000003fffff; valaddr_reg:x3; val_offset:172758*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172758*0 + 3*754*FLEN/8, x4, x1, x2)

inst_57587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000007fffff; valaddr_reg:x3; val_offset:172761*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172761*0 + 3*755*FLEN/8, x4, x1, x2)

inst_57588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000000ffffff; valaddr_reg:x3; val_offset:172764*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172764*0 + 3*756*FLEN/8, x4, x1, x2)

inst_57589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000001ffffff; valaddr_reg:x3; val_offset:172767*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172767*0 + 3*757*FLEN/8, x4, x1, x2)

inst_57590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000003ffffff; valaddr_reg:x3; val_offset:172770*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172770*0 + 3*758*FLEN/8, x4, x1, x2)

inst_57591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000007ffffff; valaddr_reg:x3; val_offset:172773*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172773*0 + 3*759*FLEN/8, x4, x1, x2)

inst_57592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000000fffffff; valaddr_reg:x3; val_offset:172776*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172776*0 + 3*760*FLEN/8, x4, x1, x2)

inst_57593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000001fffffff; valaddr_reg:x3; val_offset:172779*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172779*0 + 3*761*FLEN/8, x4, x1, x2)

inst_57594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000003fffffff; valaddr_reg:x3; val_offset:172782*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172782*0 + 3*762*FLEN/8, x4, x1, x2)

inst_57595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000007fffffff; valaddr_reg:x3; val_offset:172785*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172785*0 + 3*763*FLEN/8, x4, x1, x2)

inst_57596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900000ffffffff; valaddr_reg:x3; val_offset:172788*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172788*0 + 3*764*FLEN/8, x4, x1, x2)

inst_57597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900001ffffffff; valaddr_reg:x3; val_offset:172791*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172791*0 + 3*765*FLEN/8, x4, x1, x2)

inst_57598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900003ffffffff; valaddr_reg:x3; val_offset:172794*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172794*0 + 3*766*FLEN/8, x4, x1, x2)

inst_57599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900007ffffffff; valaddr_reg:x3; val_offset:172797*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172797*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158496660815871,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158496677593087,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158496711147519,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158496778256383,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158496912474111,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158497180909567,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158497717780479,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158498791522303,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158500939005951,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158505233973247,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158513823907839,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158531003777023,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158565363515391,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158634082992127,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335158771521945599,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335159046399852543,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335159596155666431,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335160695667294207,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335162894690549759,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335167292737060863,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335176088830083071,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335193681016127487,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335228865388216319,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335299234132393983,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335439971620749311,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13335721446597459967,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13336284396550881279,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13337410296457723903,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13337410296457723904,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13338536196364566528,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339099146317987840,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339380621294698496,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339521358783053824,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339591727527231488,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339626911899320320,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339644504085364736,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339653300178386944,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339657698224898048,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339659897248153600,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339660996759781376,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339661546515595264,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339661821393502208,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339661958832455680,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662027551932416,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662061911670784,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662079091539968,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662087681474560,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662091976441856,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662094123925504,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662095197667328,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662095734538240,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096002973696,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096137191424,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096204300288,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096237854720,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096254631936,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096263020544,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096267214848,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096269312000,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096270360576,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096270884864,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271147008,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271278080,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271343616,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271376384,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271392768,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271400960,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271405056,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271407104,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271408128,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271408640,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271408896,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409024,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409088,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409120,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409136,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409144,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409148,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409150,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13339662096271409151,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(11514992295953281526,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262400,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262401,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262403,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262407,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262415,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262431,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262463,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262527,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262655,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262911,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684263423,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684264447,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684266495,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684270591,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684278783,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684295167,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684327935,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684393471,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684524543,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684786687,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990685310975,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990686359551,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990688456703,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990692651007,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990701039615,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990717816831,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990751371263,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990818480127,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990952697855,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991221133311,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991758004223,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589992831746047,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589994979229695,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589999274196991,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590007864131583,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590025044000767,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590059403739135,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590128123215871,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590265562169343,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590540440076287,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112591090195890175,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112592189707517951,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112594388730773503,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112598786777284607,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112607582870306815,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112625175056351231,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112660359428440063,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112730728172617727,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112871465660973055,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113152940637683711,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113715890591105023,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947647,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947648,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(115967690404790272,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116530640358211584,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116812115334922240,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116952852823277568,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117023221567455232,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117058405939544064,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117075998125588480,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117084794218610688,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117089192265121792,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117091391288377344,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117092490800005120,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093040555819008,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093315433725952,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093452872679424,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093521592156160,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093555951894528,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093573131763712,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093581721698304,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093586016665600,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093588164149248,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589237891072,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589774761984,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590043197440,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590177415168,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590244524032,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590278078464,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590294855680,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590303244288,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590307438592,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590309535744,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590310584320,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311108608,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311370752,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311501824,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311567360,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311600128,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311616512,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311624704,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311628800,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311630848,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311631872,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632384,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632640,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632768,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632832,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632864,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632880,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632888,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632892,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632894,64,FLEN)
NAN_BOXED(6890905754252569060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632895,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189568,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189569,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189571,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189575,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189583,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189599,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189631,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189695,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446189823,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446190079,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446190591,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446191615,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446193663,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446197759,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446205951,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446222335,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446255103,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446320639,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446451711,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688446713855,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688447238143,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688448286719,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688450383871,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688454578175,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688462966783,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688479743999,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688513298431,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688580407295,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688714625023,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237688983060479,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237689519931391,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237690593673215,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237692741156863,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237697036124159,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237705626058751,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237722805927935,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237757165666303,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237825885143039,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434237963324096511,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434238238202003455,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434238787957817343,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434239887469445119,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434242086492700671,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434246484539211775,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434255280632233983,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434272872818278399,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434308057190367231,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434378425934544895,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434519163422900223,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13434800638399610879,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13435363588353032191,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13436489488259874815,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13436489488259874816,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13437615388166717440,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438178338120138752,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438459813096849408,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438600550585204736,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438670919329382400,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438706103701471232,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438723695887515648,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438732491980537856,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438736890027048960,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438739089050304512,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438740188561932288,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438740738317746176,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741013195653120,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741150634606592,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741219354083328,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741253713821696,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741270893690880,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741279483625472,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741283778592768,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741285926076416,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741286999818240,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741287536689152,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741287805124608,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741287939342336,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288006451200,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288040005632,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288056782848,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288065171456,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288069365760,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288071462912,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288072511488,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073035776,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073297920,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073428992,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073494528,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073527296,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073543680,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073551872,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073555968,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073558016,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073559040,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073559552,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073559808,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073559936,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560000,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560032,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560048,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560056,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560060,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560062,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13438741288073560063,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890905776994521260,64,FLEN)
NAN_BOXED(11514972294750324056,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074240,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074241,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074243,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074247,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074255,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074271,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074303,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074367,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074495,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074751,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520075263,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520076287,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520078335,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520082431,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520090623,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520107007,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520139775,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520205311,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520336383,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520598527,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230521122815,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230522171391,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230524268543,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230528462847,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230536851455,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230553628671,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230587183103,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230654291967,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230788509695,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231056945151,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231593816063,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933232667557887,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933234815041535,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933239110008831,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933247699943423,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933264879812607,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933299239550975,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933367959027711,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933505397981183,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933780275888127,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299934330031702015,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299935429543329791,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299937628566585343,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299942026613096447,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299950822706118655,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299968414892163071,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300003599264251903,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300073968008429567,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300214705496784895,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300496180473495551,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9301059130426916863,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759487,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759488,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303310930240602112,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303873880194023424,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304155355170734080,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304296092659089408,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304366461403267072,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304401645775355904,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304419237961400320,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304428034054422528,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304432432100933632,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304434631124189184,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304435730635816960,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436280391630848,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436555269537792,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436692708491264,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436761427968000,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436795787706368,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436812967575552,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436821557510144,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436825852477440,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436827999961088,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829073702912,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829610573824,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829879009280,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830013227008,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830080335872,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830113890304,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830130667520,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830139056128,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830143250432,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830145347584,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146396160,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146920448,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147182592,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147313664,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147379200,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147411968,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147428352,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147436544,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147440640,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147442688,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147443712,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444224,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444480,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444608,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444672,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444704,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444720,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444728,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444732,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444734,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444735,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998784,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998785,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998787,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998791,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998799,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998815,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998847,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998911,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999039,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999295,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999807,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619000831,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619002879,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619006975,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619015167,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619031551,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619064319,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619129855,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619260927,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619523071,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634620047359,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634621095935,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634623193087,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634627387391,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634635775999,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634652553215,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246367232,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368256,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368768,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369024,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369152,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369216,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369248,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369264,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369272,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369276,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369278,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369279,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485376,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485377,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485379,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485383,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485391,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485407,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485439,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485503,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485631,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485887,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448486399,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448487423,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448489471,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448493567,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448501759,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448518143,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448550911,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448616447,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448747519,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449009663,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449533951,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588450582527,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588452679679,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588456873983,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588465262591,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588482039807,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588515594239,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588582703103,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588716920831,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588985356287,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611589522227199,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611590595969023,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611592743452671,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611597038419967,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611605628354559,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611622808223743,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611657167962111,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611725887438847,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611863326392319,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612138204299263,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612687960113151,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139613787471740927,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139615986494996479,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139620384541507583,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139629180634529791,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139646772820574207,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139681957192663039,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139752325936840703,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139893063425196031,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140174538401906687,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327999,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170623,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170624,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(142989288169013248,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143552238122434560,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143833713099145216,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143974450587500544,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144044819331678208,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144080003703767040,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144097595889811456,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144106391982833664,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144110790029344768,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144112989052600320,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114088564228096,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114638320041984,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114913197948928,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115050636902400,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115119356379136,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115153716117504,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115170895986688,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115179485921280,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115183780888576,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115185928372224,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187002114048,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187538984960,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187807420416,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187941638144,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188008747008,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188042301440,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188059078656,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188067467264,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188071661568,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188073758720,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188074807296,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075331584,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075593728,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075724800,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075790336,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075823104,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075839488,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075847680,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075851776,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075853824,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075854848,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855360,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855616,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855744,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855808,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855840,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855856,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855864,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855868,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855870,64,FLEN)
NAN_BOXED(6890930100119178681,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855871,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010624,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010625,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010627,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010631,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010639,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010655,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010687,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010751,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922010879,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922011135,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922011647,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922012671,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922014719,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922018815,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922027007,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922043391,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922076159,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922141695,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922272767,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038922534911,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038923059199,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038924107775,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038926204927,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038930399231,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038938787839,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038955565055,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988038989119487,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988039056228351,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988039190446079,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988039458881535,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988039995752447,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988041069494271,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988043216977919,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988047511945215,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988056101879807,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988073281748991,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
