
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x2400fffffffffff; valaddr_reg:x3; val_offset:29952*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29952*0 + 3*0*FLEN/8, x4, x1, x2)

inst_9985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x2401fffffffffff; valaddr_reg:x3; val_offset:29955*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29955*0 + 3*1*FLEN/8, x4, x1, x2)

inst_9986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x2403fffffffffff; valaddr_reg:x3; val_offset:29958*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29958*0 + 3*2*FLEN/8, x4, x1, x2)

inst_9987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x2407fffffffffff; valaddr_reg:x3; val_offset:29961*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29961*0 + 3*3*FLEN/8, x4, x1, x2)

inst_9988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x240ffffffffffff; valaddr_reg:x3; val_offset:29964*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29964*0 + 3*4*FLEN/8, x4, x1, x2)

inst_9989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x241ffffffffffff; valaddr_reg:x3; val_offset:29967*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29967*0 + 3*5*FLEN/8, x4, x1, x2)

inst_9990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x243ffffffffffff; valaddr_reg:x3; val_offset:29970*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29970*0 + 3*6*FLEN/8, x4, x1, x2)

inst_9991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x247ffffffffffff; valaddr_reg:x3; val_offset:29973*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29973*0 + 3*7*FLEN/8, x4, x1, x2)

inst_9992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x248000000000000; valaddr_reg:x3; val_offset:29976*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29976*0 + 3*8*FLEN/8, x4, x1, x2)

inst_9993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24c000000000000; valaddr_reg:x3; val_offset:29979*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29979*0 + 3*9*FLEN/8, x4, x1, x2)

inst_9994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24e000000000000; valaddr_reg:x3; val_offset:29982*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29982*0 + 3*10*FLEN/8, x4, x1, x2)

inst_9995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24f000000000000; valaddr_reg:x3; val_offset:29985*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29985*0 + 3*11*FLEN/8, x4, x1, x2)

inst_9996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24f800000000000; valaddr_reg:x3; val_offset:29988*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29988*0 + 3*12*FLEN/8, x4, x1, x2)

inst_9997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fc00000000000; valaddr_reg:x3; val_offset:29991*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29991*0 + 3*13*FLEN/8, x4, x1, x2)

inst_9998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fe00000000000; valaddr_reg:x3; val_offset:29994*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29994*0 + 3*14*FLEN/8, x4, x1, x2)

inst_9999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ff00000000000; valaddr_reg:x3; val_offset:29997*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29997*0 + 3*15*FLEN/8, x4, x1, x2)

inst_10000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ff80000000000; valaddr_reg:x3; val_offset:30000*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30000*0 + 3*16*FLEN/8, x4, x1, x2)

inst_10001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffc0000000000; valaddr_reg:x3; val_offset:30003*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30003*0 + 3*17*FLEN/8, x4, x1, x2)

inst_10002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffe0000000000; valaddr_reg:x3; val_offset:30006*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30006*0 + 3*18*FLEN/8, x4, x1, x2)

inst_10003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fff0000000000; valaddr_reg:x3; val_offset:30009*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30009*0 + 3*19*FLEN/8, x4, x1, x2)

inst_10004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fff8000000000; valaddr_reg:x3; val_offset:30012*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30012*0 + 3*20*FLEN/8, x4, x1, x2)

inst_10005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffc000000000; valaddr_reg:x3; val_offset:30015*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30015*0 + 3*21*FLEN/8, x4, x1, x2)

inst_10006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffe000000000; valaddr_reg:x3; val_offset:30018*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30018*0 + 3*22*FLEN/8, x4, x1, x2)

inst_10007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffff000000000; valaddr_reg:x3; val_offset:30021*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30021*0 + 3*23*FLEN/8, x4, x1, x2)

inst_10008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffff800000000; valaddr_reg:x3; val_offset:30024*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30024*0 + 3*24*FLEN/8, x4, x1, x2)

inst_10009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffc00000000; valaddr_reg:x3; val_offset:30027*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30027*0 + 3*25*FLEN/8, x4, x1, x2)

inst_10010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffe00000000; valaddr_reg:x3; val_offset:30030*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30030*0 + 3*26*FLEN/8, x4, x1, x2)

inst_10011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffff00000000; valaddr_reg:x3; val_offset:30033*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30033*0 + 3*27*FLEN/8, x4, x1, x2)

inst_10012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffff80000000; valaddr_reg:x3; val_offset:30036*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30036*0 + 3*28*FLEN/8, x4, x1, x2)

inst_10013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffc0000000; valaddr_reg:x3; val_offset:30039*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30039*0 + 3*29*FLEN/8, x4, x1, x2)

inst_10014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffe0000000; valaddr_reg:x3; val_offset:30042*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30042*0 + 3*30*FLEN/8, x4, x1, x2)

inst_10015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffff0000000; valaddr_reg:x3; val_offset:30045*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30045*0 + 3*31*FLEN/8, x4, x1, x2)

inst_10016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffff8000000; valaddr_reg:x3; val_offset:30048*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30048*0 + 3*32*FLEN/8, x4, x1, x2)

inst_10017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffc000000; valaddr_reg:x3; val_offset:30051*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30051*0 + 3*33*FLEN/8, x4, x1, x2)

inst_10018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffe000000; valaddr_reg:x3; val_offset:30054*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30054*0 + 3*34*FLEN/8, x4, x1, x2)

inst_10019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffff000000; valaddr_reg:x3; val_offset:30057*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30057*0 + 3*35*FLEN/8, x4, x1, x2)

inst_10020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffff800000; valaddr_reg:x3; val_offset:30060*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30060*0 + 3*36*FLEN/8, x4, x1, x2)

inst_10021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffc00000; valaddr_reg:x3; val_offset:30063*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30063*0 + 3*37*FLEN/8, x4, x1, x2)

inst_10022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffe00000; valaddr_reg:x3; val_offset:30066*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30066*0 + 3*38*FLEN/8, x4, x1, x2)

inst_10023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffff00000; valaddr_reg:x3; val_offset:30069*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30069*0 + 3*39*FLEN/8, x4, x1, x2)

inst_10024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffff80000; valaddr_reg:x3; val_offset:30072*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30072*0 + 3*40*FLEN/8, x4, x1, x2)

inst_10025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffc0000; valaddr_reg:x3; val_offset:30075*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30075*0 + 3*41*FLEN/8, x4, x1, x2)

inst_10026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffe0000; valaddr_reg:x3; val_offset:30078*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30078*0 + 3*42*FLEN/8, x4, x1, x2)

inst_10027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffff0000; valaddr_reg:x3; val_offset:30081*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30081*0 + 3*43*FLEN/8, x4, x1, x2)

inst_10028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffff8000; valaddr_reg:x3; val_offset:30084*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30084*0 + 3*44*FLEN/8, x4, x1, x2)

inst_10029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffc000; valaddr_reg:x3; val_offset:30087*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30087*0 + 3*45*FLEN/8, x4, x1, x2)

inst_10030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffe000; valaddr_reg:x3; val_offset:30090*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30090*0 + 3*46*FLEN/8, x4, x1, x2)

inst_10031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffff000; valaddr_reg:x3; val_offset:30093*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30093*0 + 3*47*FLEN/8, x4, x1, x2)

inst_10032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffff800; valaddr_reg:x3; val_offset:30096*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30096*0 + 3*48*FLEN/8, x4, x1, x2)

inst_10033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffffc00; valaddr_reg:x3; val_offset:30099*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30099*0 + 3*49*FLEN/8, x4, x1, x2)

inst_10034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffffe00; valaddr_reg:x3; val_offset:30102*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30102*0 + 3*50*FLEN/8, x4, x1, x2)

inst_10035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffff00; valaddr_reg:x3; val_offset:30105*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30105*0 + 3*51*FLEN/8, x4, x1, x2)

inst_10036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffff80; valaddr_reg:x3; val_offset:30108*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30108*0 + 3*52*FLEN/8, x4, x1, x2)

inst_10037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffffc0; valaddr_reg:x3; val_offset:30111*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30111*0 + 3*53*FLEN/8, x4, x1, x2)

inst_10038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffffe0; valaddr_reg:x3; val_offset:30114*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30114*0 + 3*54*FLEN/8, x4, x1, x2)

inst_10039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffffff0; valaddr_reg:x3; val_offset:30117*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30117*0 + 3*55*FLEN/8, x4, x1, x2)

inst_10040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffffff8; valaddr_reg:x3; val_offset:30120*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30120*0 + 3*56*FLEN/8, x4, x1, x2)

inst_10041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffffffc; valaddr_reg:x3; val_offset:30123*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30123*0 + 3*57*FLEN/8, x4, x1, x2)

inst_10042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24ffffffffffffe; valaddr_reg:x3; val_offset:30126*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30126*0 + 3*58*FLEN/8, x4, x1, x2)

inst_10043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9999e25f2f1af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79999e25f2f1af; op2val:0x0;
op3val:0x24fffffffffffff; valaddr_reg:x3; val_offset:30129*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30129*0 + 3*59*FLEN/8, x4, x1, x2)

inst_10044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000000000; valaddr_reg:x3; val_offset:30132*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30132*0 + 3*60*FLEN/8, x4, x1, x2)

inst_10045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000000001; valaddr_reg:x3; val_offset:30135*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30135*0 + 3*61*FLEN/8, x4, x1, x2)

inst_10046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000000003; valaddr_reg:x3; val_offset:30138*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30138*0 + 3*62*FLEN/8, x4, x1, x2)

inst_10047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000000007; valaddr_reg:x3; val_offset:30141*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30141*0 + 3*63*FLEN/8, x4, x1, x2)

inst_10048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000000000f; valaddr_reg:x3; val_offset:30144*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30144*0 + 3*64*FLEN/8, x4, x1, x2)

inst_10049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000000001f; valaddr_reg:x3; val_offset:30147*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30147*0 + 3*65*FLEN/8, x4, x1, x2)

inst_10050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000000003f; valaddr_reg:x3; val_offset:30150*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30150*0 + 3*66*FLEN/8, x4, x1, x2)

inst_10051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000000007f; valaddr_reg:x3; val_offset:30153*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30153*0 + 3*67*FLEN/8, x4, x1, x2)

inst_10052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000000000ff; valaddr_reg:x3; val_offset:30156*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30156*0 + 3*68*FLEN/8, x4, x1, x2)

inst_10053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000000001ff; valaddr_reg:x3; val_offset:30159*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30159*0 + 3*69*FLEN/8, x4, x1, x2)

inst_10054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000000003ff; valaddr_reg:x3; val_offset:30162*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30162*0 + 3*70*FLEN/8, x4, x1, x2)

inst_10055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000000007ff; valaddr_reg:x3; val_offset:30165*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30165*0 + 3*71*FLEN/8, x4, x1, x2)

inst_10056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000000fff; valaddr_reg:x3; val_offset:30168*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30168*0 + 3*72*FLEN/8, x4, x1, x2)

inst_10057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000001fff; valaddr_reg:x3; val_offset:30171*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30171*0 + 3*73*FLEN/8, x4, x1, x2)

inst_10058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000003fff; valaddr_reg:x3; val_offset:30174*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30174*0 + 3*74*FLEN/8, x4, x1, x2)

inst_10059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000007fff; valaddr_reg:x3; val_offset:30177*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30177*0 + 3*75*FLEN/8, x4, x1, x2)

inst_10060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000000ffff; valaddr_reg:x3; val_offset:30180*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30180*0 + 3*76*FLEN/8, x4, x1, x2)

inst_10061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000001ffff; valaddr_reg:x3; val_offset:30183*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30183*0 + 3*77*FLEN/8, x4, x1, x2)

inst_10062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000003ffff; valaddr_reg:x3; val_offset:30186*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30186*0 + 3*78*FLEN/8, x4, x1, x2)

inst_10063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000007ffff; valaddr_reg:x3; val_offset:30189*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30189*0 + 3*79*FLEN/8, x4, x1, x2)

inst_10064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000000fffff; valaddr_reg:x3; val_offset:30192*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30192*0 + 3*80*FLEN/8, x4, x1, x2)

inst_10065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000001fffff; valaddr_reg:x3; val_offset:30195*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30195*0 + 3*81*FLEN/8, x4, x1, x2)

inst_10066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000003fffff; valaddr_reg:x3; val_offset:30198*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30198*0 + 3*82*FLEN/8, x4, x1, x2)

inst_10067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000007fffff; valaddr_reg:x3; val_offset:30201*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30201*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000000ffffff; valaddr_reg:x3; val_offset:30204*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30204*0 + 3*84*FLEN/8, x4, x1, x2)

inst_10069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000001ffffff; valaddr_reg:x3; val_offset:30207*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30207*0 + 3*85*FLEN/8, x4, x1, x2)

inst_10070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000003ffffff; valaddr_reg:x3; val_offset:30210*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30210*0 + 3*86*FLEN/8, x4, x1, x2)

inst_10071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000007ffffff; valaddr_reg:x3; val_offset:30213*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30213*0 + 3*87*FLEN/8, x4, x1, x2)

inst_10072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000000fffffff; valaddr_reg:x3; val_offset:30216*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30216*0 + 3*88*FLEN/8, x4, x1, x2)

inst_10073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000001fffffff; valaddr_reg:x3; val_offset:30219*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30219*0 + 3*89*FLEN/8, x4, x1, x2)

inst_10074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000003fffffff; valaddr_reg:x3; val_offset:30222*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30222*0 + 3*90*FLEN/8, x4, x1, x2)

inst_10075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000007fffffff; valaddr_reg:x3; val_offset:30225*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30225*0 + 3*91*FLEN/8, x4, x1, x2)

inst_10076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000000ffffffff; valaddr_reg:x3; val_offset:30228*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30228*0 + 3*92*FLEN/8, x4, x1, x2)

inst_10077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000001ffffffff; valaddr_reg:x3; val_offset:30231*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30231*0 + 3*93*FLEN/8, x4, x1, x2)

inst_10078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000003ffffffff; valaddr_reg:x3; val_offset:30234*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30234*0 + 3*94*FLEN/8, x4, x1, x2)

inst_10079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000007ffffffff; valaddr_reg:x3; val_offset:30237*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30237*0 + 3*95*FLEN/8, x4, x1, x2)

inst_10080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800000fffffffff; valaddr_reg:x3; val_offset:30240*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30240*0 + 3*96*FLEN/8, x4, x1, x2)

inst_10081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800001fffffffff; valaddr_reg:x3; val_offset:30243*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30243*0 + 3*97*FLEN/8, x4, x1, x2)

inst_10082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800003fffffffff; valaddr_reg:x3; val_offset:30246*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30246*0 + 3*98*FLEN/8, x4, x1, x2)

inst_10083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800007fffffffff; valaddr_reg:x3; val_offset:30249*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30249*0 + 3*99*FLEN/8, x4, x1, x2)

inst_10084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80000ffffffffff; valaddr_reg:x3; val_offset:30252*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30252*0 + 3*100*FLEN/8, x4, x1, x2)

inst_10085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80001ffffffffff; valaddr_reg:x3; val_offset:30255*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30255*0 + 3*101*FLEN/8, x4, x1, x2)

inst_10086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80003ffffffffff; valaddr_reg:x3; val_offset:30258*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30258*0 + 3*102*FLEN/8, x4, x1, x2)

inst_10087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80007ffffffffff; valaddr_reg:x3; val_offset:30261*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30261*0 + 3*103*FLEN/8, x4, x1, x2)

inst_10088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8000fffffffffff; valaddr_reg:x3; val_offset:30264*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30264*0 + 3*104*FLEN/8, x4, x1, x2)

inst_10089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8001fffffffffff; valaddr_reg:x3; val_offset:30267*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30267*0 + 3*105*FLEN/8, x4, x1, x2)

inst_10090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8003fffffffffff; valaddr_reg:x3; val_offset:30270*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30270*0 + 3*106*FLEN/8, x4, x1, x2)

inst_10091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb8007fffffffffff; valaddr_reg:x3; val_offset:30273*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30273*0 + 3*107*FLEN/8, x4, x1, x2)

inst_10092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb800ffffffffffff; valaddr_reg:x3; val_offset:30276*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30276*0 + 3*108*FLEN/8, x4, x1, x2)

inst_10093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb801ffffffffffff; valaddr_reg:x3; val_offset:30279*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30279*0 + 3*109*FLEN/8, x4, x1, x2)

inst_10094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb803ffffffffffff; valaddr_reg:x3; val_offset:30282*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30282*0 + 3*110*FLEN/8, x4, x1, x2)

inst_10095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb807ffffffffffff; valaddr_reg:x3; val_offset:30285*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30285*0 + 3*111*FLEN/8, x4, x1, x2)

inst_10096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb808000000000000; valaddr_reg:x3; val_offset:30288*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30288*0 + 3*112*FLEN/8, x4, x1, x2)

inst_10097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80c000000000000; valaddr_reg:x3; val_offset:30291*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30291*0 + 3*113*FLEN/8, x4, x1, x2)

inst_10098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80e000000000000; valaddr_reg:x3; val_offset:30294*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30294*0 + 3*114*FLEN/8, x4, x1, x2)

inst_10099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80f000000000000; valaddr_reg:x3; val_offset:30297*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30297*0 + 3*115*FLEN/8, x4, x1, x2)

inst_10100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80f800000000000; valaddr_reg:x3; val_offset:30300*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30300*0 + 3*116*FLEN/8, x4, x1, x2)

inst_10101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fc00000000000; valaddr_reg:x3; val_offset:30303*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30303*0 + 3*117*FLEN/8, x4, x1, x2)

inst_10102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fe00000000000; valaddr_reg:x3; val_offset:30306*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30306*0 + 3*118*FLEN/8, x4, x1, x2)

inst_10103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ff00000000000; valaddr_reg:x3; val_offset:30309*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30309*0 + 3*119*FLEN/8, x4, x1, x2)

inst_10104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ff80000000000; valaddr_reg:x3; val_offset:30312*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30312*0 + 3*120*FLEN/8, x4, x1, x2)

inst_10105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffc0000000000; valaddr_reg:x3; val_offset:30315*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30315*0 + 3*121*FLEN/8, x4, x1, x2)

inst_10106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffe0000000000; valaddr_reg:x3; val_offset:30318*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30318*0 + 3*122*FLEN/8, x4, x1, x2)

inst_10107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fff0000000000; valaddr_reg:x3; val_offset:30321*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30321*0 + 3*123*FLEN/8, x4, x1, x2)

inst_10108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fff8000000000; valaddr_reg:x3; val_offset:30324*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30324*0 + 3*124*FLEN/8, x4, x1, x2)

inst_10109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffc000000000; valaddr_reg:x3; val_offset:30327*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30327*0 + 3*125*FLEN/8, x4, x1, x2)

inst_10110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffe000000000; valaddr_reg:x3; val_offset:30330*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30330*0 + 3*126*FLEN/8, x4, x1, x2)

inst_10111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffff000000000; valaddr_reg:x3; val_offset:30333*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30333*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffff800000000; valaddr_reg:x3; val_offset:30336*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30336*0 + 3*128*FLEN/8, x4, x1, x2)

inst_10113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffc00000000; valaddr_reg:x3; val_offset:30339*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30339*0 + 3*129*FLEN/8, x4, x1, x2)

inst_10114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffe00000000; valaddr_reg:x3; val_offset:30342*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30342*0 + 3*130*FLEN/8, x4, x1, x2)

inst_10115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffff00000000; valaddr_reg:x3; val_offset:30345*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30345*0 + 3*131*FLEN/8, x4, x1, x2)

inst_10116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffff80000000; valaddr_reg:x3; val_offset:30348*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30348*0 + 3*132*FLEN/8, x4, x1, x2)

inst_10117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffc0000000; valaddr_reg:x3; val_offset:30351*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30351*0 + 3*133*FLEN/8, x4, x1, x2)

inst_10118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffe0000000; valaddr_reg:x3; val_offset:30354*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30354*0 + 3*134*FLEN/8, x4, x1, x2)

inst_10119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffff0000000; valaddr_reg:x3; val_offset:30357*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30357*0 + 3*135*FLEN/8, x4, x1, x2)

inst_10120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffff8000000; valaddr_reg:x3; val_offset:30360*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30360*0 + 3*136*FLEN/8, x4, x1, x2)

inst_10121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffc000000; valaddr_reg:x3; val_offset:30363*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30363*0 + 3*137*FLEN/8, x4, x1, x2)

inst_10122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffe000000; valaddr_reg:x3; val_offset:30366*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30366*0 + 3*138*FLEN/8, x4, x1, x2)

inst_10123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffff000000; valaddr_reg:x3; val_offset:30369*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30369*0 + 3*139*FLEN/8, x4, x1, x2)

inst_10124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffff800000; valaddr_reg:x3; val_offset:30372*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30372*0 + 3*140*FLEN/8, x4, x1, x2)

inst_10125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffc00000; valaddr_reg:x3; val_offset:30375*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30375*0 + 3*141*FLEN/8, x4, x1, x2)

inst_10126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffe00000; valaddr_reg:x3; val_offset:30378*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30378*0 + 3*142*FLEN/8, x4, x1, x2)

inst_10127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffff00000; valaddr_reg:x3; val_offset:30381*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30381*0 + 3*143*FLEN/8, x4, x1, x2)

inst_10128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffff80000; valaddr_reg:x3; val_offset:30384*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30384*0 + 3*144*FLEN/8, x4, x1, x2)

inst_10129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffc0000; valaddr_reg:x3; val_offset:30387*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30387*0 + 3*145*FLEN/8, x4, x1, x2)

inst_10130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffe0000; valaddr_reg:x3; val_offset:30390*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30390*0 + 3*146*FLEN/8, x4, x1, x2)

inst_10131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffff0000; valaddr_reg:x3; val_offset:30393*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30393*0 + 3*147*FLEN/8, x4, x1, x2)

inst_10132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffff8000; valaddr_reg:x3; val_offset:30396*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30396*0 + 3*148*FLEN/8, x4, x1, x2)

inst_10133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffc000; valaddr_reg:x3; val_offset:30399*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30399*0 + 3*149*FLEN/8, x4, x1, x2)

inst_10134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffe000; valaddr_reg:x3; val_offset:30402*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30402*0 + 3*150*FLEN/8, x4, x1, x2)

inst_10135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffff000; valaddr_reg:x3; val_offset:30405*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30405*0 + 3*151*FLEN/8, x4, x1, x2)

inst_10136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffff800; valaddr_reg:x3; val_offset:30408*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30408*0 + 3*152*FLEN/8, x4, x1, x2)

inst_10137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffffc00; valaddr_reg:x3; val_offset:30411*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30411*0 + 3*153*FLEN/8, x4, x1, x2)

inst_10138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffffe00; valaddr_reg:x3; val_offset:30414*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30414*0 + 3*154*FLEN/8, x4, x1, x2)

inst_10139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffff00; valaddr_reg:x3; val_offset:30417*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30417*0 + 3*155*FLEN/8, x4, x1, x2)

inst_10140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffff80; valaddr_reg:x3; val_offset:30420*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30420*0 + 3*156*FLEN/8, x4, x1, x2)

inst_10141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffffc0; valaddr_reg:x3; val_offset:30423*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30423*0 + 3*157*FLEN/8, x4, x1, x2)

inst_10142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffffe0; valaddr_reg:x3; val_offset:30426*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30426*0 + 3*158*FLEN/8, x4, x1, x2)

inst_10143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffffff0; valaddr_reg:x3; val_offset:30429*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30429*0 + 3*159*FLEN/8, x4, x1, x2)

inst_10144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffffff8; valaddr_reg:x3; val_offset:30432*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30432*0 + 3*160*FLEN/8, x4, x1, x2)

inst_10145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffffffc; valaddr_reg:x3; val_offset:30435*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30435*0 + 3*161*FLEN/8, x4, x1, x2)

inst_10146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80ffffffffffffe; valaddr_reg:x3; val_offset:30438*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30438*0 + 3*162*FLEN/8, x4, x1, x2)

inst_10147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xb80fffffffffffff; valaddr_reg:x3; val_offset:30441*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30441*0 + 3*163*FLEN/8, x4, x1, x2)

inst_10148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:30444*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30444*0 + 3*164*FLEN/8, x4, x1, x2)

inst_10149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:30447*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30447*0 + 3*165*FLEN/8, x4, x1, x2)

inst_10150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:30450*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30450*0 + 3*166*FLEN/8, x4, x1, x2)

inst_10151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:30453*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30453*0 + 3*167*FLEN/8, x4, x1, x2)

inst_10152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:30456*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30456*0 + 3*168*FLEN/8, x4, x1, x2)

inst_10153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:30459*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30459*0 + 3*169*FLEN/8, x4, x1, x2)

inst_10154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:30462*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30462*0 + 3*170*FLEN/8, x4, x1, x2)

inst_10155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:30465*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30465*0 + 3*171*FLEN/8, x4, x1, x2)

inst_10156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:30468*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30468*0 + 3*172*FLEN/8, x4, x1, x2)

inst_10157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:30471*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30471*0 + 3*173*FLEN/8, x4, x1, x2)

inst_10158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:30474*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30474*0 + 3*174*FLEN/8, x4, x1, x2)

inst_10159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:30477*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30477*0 + 3*175*FLEN/8, x4, x1, x2)

inst_10160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:30480*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30480*0 + 3*176*FLEN/8, x4, x1, x2)

inst_10161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:30483*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30483*0 + 3*177*FLEN/8, x4, x1, x2)

inst_10162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:30486*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30486*0 + 3*178*FLEN/8, x4, x1, x2)

inst_10163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:30489*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30489*0 + 3*179*FLEN/8, x4, x1, x2)

inst_10164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:30492*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30492*0 + 3*180*FLEN/8, x4, x1, x2)

inst_10165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:30495*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30495*0 + 3*181*FLEN/8, x4, x1, x2)

inst_10166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:30498*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30498*0 + 3*182*FLEN/8, x4, x1, x2)

inst_10167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:30501*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30501*0 + 3*183*FLEN/8, x4, x1, x2)

inst_10168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:30504*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30504*0 + 3*184*FLEN/8, x4, x1, x2)

inst_10169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9a21046a4c767 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x3f96577b6ca79 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79a21046a4c767; op2val:0x9ff3f96577b6ca79;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:30507*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30507*0 + 3*185*FLEN/8, x4, x1, x2)

inst_10170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:30510*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30510*0 + 3*186*FLEN/8, x4, x1, x2)

inst_10171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:30513*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30513*0 + 3*187*FLEN/8, x4, x1, x2)

inst_10172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:30516*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30516*0 + 3*188*FLEN/8, x4, x1, x2)

inst_10173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:30519*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30519*0 + 3*189*FLEN/8, x4, x1, x2)

inst_10174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:30522*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30522*0 + 3*190*FLEN/8, x4, x1, x2)

inst_10175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:30525*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30525*0 + 3*191*FLEN/8, x4, x1, x2)

inst_10176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:30528*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30528*0 + 3*192*FLEN/8, x4, x1, x2)

inst_10177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:30531*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30531*0 + 3*193*FLEN/8, x4, x1, x2)

inst_10178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:30534*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30534*0 + 3*194*FLEN/8, x4, x1, x2)

inst_10179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:30537*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30537*0 + 3*195*FLEN/8, x4, x1, x2)

inst_10180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:30540*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30540*0 + 3*196*FLEN/8, x4, x1, x2)

inst_10181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:30543*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30543*0 + 3*197*FLEN/8, x4, x1, x2)

inst_10182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:30546*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30546*0 + 3*198*FLEN/8, x4, x1, x2)

inst_10183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:30549*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30549*0 + 3*199*FLEN/8, x4, x1, x2)

inst_10184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:30552*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30552*0 + 3*200*FLEN/8, x4, x1, x2)

inst_10185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:30555*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30555*0 + 3*201*FLEN/8, x4, x1, x2)

inst_10186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:30558*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30558*0 + 3*202*FLEN/8, x4, x1, x2)

inst_10187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:30561*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30561*0 + 3*203*FLEN/8, x4, x1, x2)

inst_10188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:30564*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30564*0 + 3*204*FLEN/8, x4, x1, x2)

inst_10189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:30567*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30567*0 + 3*205*FLEN/8, x4, x1, x2)

inst_10190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:30570*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30570*0 + 3*206*FLEN/8, x4, x1, x2)

inst_10191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:30573*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30573*0 + 3*207*FLEN/8, x4, x1, x2)

inst_10192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000000000; valaddr_reg:x3; val_offset:30576*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30576*0 + 3*208*FLEN/8, x4, x1, x2)

inst_10193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000000001; valaddr_reg:x3; val_offset:30579*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30579*0 + 3*209*FLEN/8, x4, x1, x2)

inst_10194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000000003; valaddr_reg:x3; val_offset:30582*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30582*0 + 3*210*FLEN/8, x4, x1, x2)

inst_10195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000000007; valaddr_reg:x3; val_offset:30585*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30585*0 + 3*211*FLEN/8, x4, x1, x2)

inst_10196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000000000f; valaddr_reg:x3; val_offset:30588*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30588*0 + 3*212*FLEN/8, x4, x1, x2)

inst_10197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000000001f; valaddr_reg:x3; val_offset:30591*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30591*0 + 3*213*FLEN/8, x4, x1, x2)

inst_10198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000000003f; valaddr_reg:x3; val_offset:30594*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30594*0 + 3*214*FLEN/8, x4, x1, x2)

inst_10199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000000007f; valaddr_reg:x3; val_offset:30597*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30597*0 + 3*215*FLEN/8, x4, x1, x2)

inst_10200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000000000ff; valaddr_reg:x3; val_offset:30600*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30600*0 + 3*216*FLEN/8, x4, x1, x2)

inst_10201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000000001ff; valaddr_reg:x3; val_offset:30603*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30603*0 + 3*217*FLEN/8, x4, x1, x2)

inst_10202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000000003ff; valaddr_reg:x3; val_offset:30606*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30606*0 + 3*218*FLEN/8, x4, x1, x2)

inst_10203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000000007ff; valaddr_reg:x3; val_offset:30609*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30609*0 + 3*219*FLEN/8, x4, x1, x2)

inst_10204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000000fff; valaddr_reg:x3; val_offset:30612*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30612*0 + 3*220*FLEN/8, x4, x1, x2)

inst_10205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000001fff; valaddr_reg:x3; val_offset:30615*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30615*0 + 3*221*FLEN/8, x4, x1, x2)

inst_10206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000003fff; valaddr_reg:x3; val_offset:30618*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30618*0 + 3*222*FLEN/8, x4, x1, x2)

inst_10207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000007fff; valaddr_reg:x3; val_offset:30621*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30621*0 + 3*223*FLEN/8, x4, x1, x2)

inst_10208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000000ffff; valaddr_reg:x3; val_offset:30624*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30624*0 + 3*224*FLEN/8, x4, x1, x2)

inst_10209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000001ffff; valaddr_reg:x3; val_offset:30627*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30627*0 + 3*225*FLEN/8, x4, x1, x2)

inst_10210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000003ffff; valaddr_reg:x3; val_offset:30630*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30630*0 + 3*226*FLEN/8, x4, x1, x2)

inst_10211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000007ffff; valaddr_reg:x3; val_offset:30633*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30633*0 + 3*227*FLEN/8, x4, x1, x2)

inst_10212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000000fffff; valaddr_reg:x3; val_offset:30636*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30636*0 + 3*228*FLEN/8, x4, x1, x2)

inst_10213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000001fffff; valaddr_reg:x3; val_offset:30639*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30639*0 + 3*229*FLEN/8, x4, x1, x2)

inst_10214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000003fffff; valaddr_reg:x3; val_offset:30642*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30642*0 + 3*230*FLEN/8, x4, x1, x2)

inst_10215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000007fffff; valaddr_reg:x3; val_offset:30645*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30645*0 + 3*231*FLEN/8, x4, x1, x2)

inst_10216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000000ffffff; valaddr_reg:x3; val_offset:30648*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30648*0 + 3*232*FLEN/8, x4, x1, x2)

inst_10217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000001ffffff; valaddr_reg:x3; val_offset:30651*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30651*0 + 3*233*FLEN/8, x4, x1, x2)

inst_10218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000003ffffff; valaddr_reg:x3; val_offset:30654*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30654*0 + 3*234*FLEN/8, x4, x1, x2)

inst_10219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000007ffffff; valaddr_reg:x3; val_offset:30657*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30657*0 + 3*235*FLEN/8, x4, x1, x2)

inst_10220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000000fffffff; valaddr_reg:x3; val_offset:30660*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30660*0 + 3*236*FLEN/8, x4, x1, x2)

inst_10221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000001fffffff; valaddr_reg:x3; val_offset:30663*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30663*0 + 3*237*FLEN/8, x4, x1, x2)

inst_10222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000003fffffff; valaddr_reg:x3; val_offset:30666*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30666*0 + 3*238*FLEN/8, x4, x1, x2)

inst_10223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000007fffffff; valaddr_reg:x3; val_offset:30669*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30669*0 + 3*239*FLEN/8, x4, x1, x2)

inst_10224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00000ffffffff; valaddr_reg:x3; val_offset:30672*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30672*0 + 3*240*FLEN/8, x4, x1, x2)

inst_10225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00001ffffffff; valaddr_reg:x3; val_offset:30675*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30675*0 + 3*241*FLEN/8, x4, x1, x2)

inst_10226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00003ffffffff; valaddr_reg:x3; val_offset:30678*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30678*0 + 3*242*FLEN/8, x4, x1, x2)

inst_10227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00007ffffffff; valaddr_reg:x3; val_offset:30681*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30681*0 + 3*243*FLEN/8, x4, x1, x2)

inst_10228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0000fffffffff; valaddr_reg:x3; val_offset:30684*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30684*0 + 3*244*FLEN/8, x4, x1, x2)

inst_10229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0001fffffffff; valaddr_reg:x3; val_offset:30687*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30687*0 + 3*245*FLEN/8, x4, x1, x2)

inst_10230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0003fffffffff; valaddr_reg:x3; val_offset:30690*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30690*0 + 3*246*FLEN/8, x4, x1, x2)

inst_10231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0007fffffffff; valaddr_reg:x3; val_offset:30693*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30693*0 + 3*247*FLEN/8, x4, x1, x2)

inst_10232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e000ffffffffff; valaddr_reg:x3; val_offset:30696*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30696*0 + 3*248*FLEN/8, x4, x1, x2)

inst_10233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e001ffffffffff; valaddr_reg:x3; val_offset:30699*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30699*0 + 3*249*FLEN/8, x4, x1, x2)

inst_10234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e003ffffffffff; valaddr_reg:x3; val_offset:30702*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30702*0 + 3*250*FLEN/8, x4, x1, x2)

inst_10235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e007ffffffffff; valaddr_reg:x3; val_offset:30705*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30705*0 + 3*251*FLEN/8, x4, x1, x2)

inst_10236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e00fffffffffff; valaddr_reg:x3; val_offset:30708*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30708*0 + 3*252*FLEN/8, x4, x1, x2)

inst_10237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e01fffffffffff; valaddr_reg:x3; val_offset:30711*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30711*0 + 3*253*FLEN/8, x4, x1, x2)

inst_10238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e03fffffffffff; valaddr_reg:x3; val_offset:30714*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30714*0 + 3*254*FLEN/8, x4, x1, x2)

inst_10239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e07fffffffffff; valaddr_reg:x3; val_offset:30717*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30717*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_10240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e0ffffffffffff; valaddr_reg:x3; val_offset:30720*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30720*0 + 3*256*FLEN/8, x4, x1, x2)

inst_10241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e1ffffffffffff; valaddr_reg:x3; val_offset:30723*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30723*0 + 3*257*FLEN/8, x4, x1, x2)

inst_10242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e3ffffffffffff; valaddr_reg:x3; val_offset:30726*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30726*0 + 3*258*FLEN/8, x4, x1, x2)

inst_10243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e7ffffffffffff; valaddr_reg:x3; val_offset:30729*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30729*0 + 3*259*FLEN/8, x4, x1, x2)

inst_10244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1e8000000000000; valaddr_reg:x3; val_offset:30732*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30732*0 + 3*260*FLEN/8, x4, x1, x2)

inst_10245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1ec000000000000; valaddr_reg:x3; val_offset:30735*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30735*0 + 3*261*FLEN/8, x4, x1, x2)

inst_10246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1ee000000000000; valaddr_reg:x3; val_offset:30738*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30738*0 + 3*262*FLEN/8, x4, x1, x2)

inst_10247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1ef000000000000; valaddr_reg:x3; val_offset:30741*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30741*0 + 3*263*FLEN/8, x4, x1, x2)

inst_10248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1ef800000000000; valaddr_reg:x3; val_offset:30744*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30744*0 + 3*264*FLEN/8, x4, x1, x2)

inst_10249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efc00000000000; valaddr_reg:x3; val_offset:30747*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30747*0 + 3*265*FLEN/8, x4, x1, x2)

inst_10250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efe00000000000; valaddr_reg:x3; val_offset:30750*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30750*0 + 3*266*FLEN/8, x4, x1, x2)

inst_10251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1eff00000000000; valaddr_reg:x3; val_offset:30753*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30753*0 + 3*267*FLEN/8, x4, x1, x2)

inst_10252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1eff80000000000; valaddr_reg:x3; val_offset:30756*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30756*0 + 3*268*FLEN/8, x4, x1, x2)

inst_10253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effc0000000000; valaddr_reg:x3; val_offset:30759*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30759*0 + 3*269*FLEN/8, x4, x1, x2)

inst_10254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effe0000000000; valaddr_reg:x3; val_offset:30762*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30762*0 + 3*270*FLEN/8, x4, x1, x2)

inst_10255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efff0000000000; valaddr_reg:x3; val_offset:30765*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30765*0 + 3*271*FLEN/8, x4, x1, x2)

inst_10256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efff8000000000; valaddr_reg:x3; val_offset:30768*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30768*0 + 3*272*FLEN/8, x4, x1, x2)

inst_10257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffc000000000; valaddr_reg:x3; val_offset:30771*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30771*0 + 3*273*FLEN/8, x4, x1, x2)

inst_10258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffe000000000; valaddr_reg:x3; val_offset:30774*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30774*0 + 3*274*FLEN/8, x4, x1, x2)

inst_10259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effff000000000; valaddr_reg:x3; val_offset:30777*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30777*0 + 3*275*FLEN/8, x4, x1, x2)

inst_10260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effff800000000; valaddr_reg:x3; val_offset:30780*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30780*0 + 3*276*FLEN/8, x4, x1, x2)

inst_10261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffc00000000; valaddr_reg:x3; val_offset:30783*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30783*0 + 3*277*FLEN/8, x4, x1, x2)

inst_10262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffe00000000; valaddr_reg:x3; val_offset:30786*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30786*0 + 3*278*FLEN/8, x4, x1, x2)

inst_10263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffff00000000; valaddr_reg:x3; val_offset:30789*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30789*0 + 3*279*FLEN/8, x4, x1, x2)

inst_10264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffff80000000; valaddr_reg:x3; val_offset:30792*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30792*0 + 3*280*FLEN/8, x4, x1, x2)

inst_10265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffc0000000; valaddr_reg:x3; val_offset:30795*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30795*0 + 3*281*FLEN/8, x4, x1, x2)

inst_10266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffe0000000; valaddr_reg:x3; val_offset:30798*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30798*0 + 3*282*FLEN/8, x4, x1, x2)

inst_10267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffff0000000; valaddr_reg:x3; val_offset:30801*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30801*0 + 3*283*FLEN/8, x4, x1, x2)

inst_10268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffff8000000; valaddr_reg:x3; val_offset:30804*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30804*0 + 3*284*FLEN/8, x4, x1, x2)

inst_10269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffc000000; valaddr_reg:x3; val_offset:30807*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30807*0 + 3*285*FLEN/8, x4, x1, x2)

inst_10270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffe000000; valaddr_reg:x3; val_offset:30810*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30810*0 + 3*286*FLEN/8, x4, x1, x2)

inst_10271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffff000000; valaddr_reg:x3; val_offset:30813*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30813*0 + 3*287*FLEN/8, x4, x1, x2)

inst_10272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffff800000; valaddr_reg:x3; val_offset:30816*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30816*0 + 3*288*FLEN/8, x4, x1, x2)

inst_10273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffc00000; valaddr_reg:x3; val_offset:30819*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30819*0 + 3*289*FLEN/8, x4, x1, x2)

inst_10274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffe00000; valaddr_reg:x3; val_offset:30822*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30822*0 + 3*290*FLEN/8, x4, x1, x2)

inst_10275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffff00000; valaddr_reg:x3; val_offset:30825*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30825*0 + 3*291*FLEN/8, x4, x1, x2)

inst_10276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffff80000; valaddr_reg:x3; val_offset:30828*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30828*0 + 3*292*FLEN/8, x4, x1, x2)

inst_10277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffc0000; valaddr_reg:x3; val_offset:30831*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30831*0 + 3*293*FLEN/8, x4, x1, x2)

inst_10278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffe0000; valaddr_reg:x3; val_offset:30834*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30834*0 + 3*294*FLEN/8, x4, x1, x2)

inst_10279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffff0000; valaddr_reg:x3; val_offset:30837*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30837*0 + 3*295*FLEN/8, x4, x1, x2)

inst_10280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffff8000; valaddr_reg:x3; val_offset:30840*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30840*0 + 3*296*FLEN/8, x4, x1, x2)

inst_10281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffc000; valaddr_reg:x3; val_offset:30843*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30843*0 + 3*297*FLEN/8, x4, x1, x2)

inst_10282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffe000; valaddr_reg:x3; val_offset:30846*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30846*0 + 3*298*FLEN/8, x4, x1, x2)

inst_10283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffff000; valaddr_reg:x3; val_offset:30849*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30849*0 + 3*299*FLEN/8, x4, x1, x2)

inst_10284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffff800; valaddr_reg:x3; val_offset:30852*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30852*0 + 3*300*FLEN/8, x4, x1, x2)

inst_10285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffffc00; valaddr_reg:x3; val_offset:30855*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30855*0 + 3*301*FLEN/8, x4, x1, x2)

inst_10286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffffe00; valaddr_reg:x3; val_offset:30858*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30858*0 + 3*302*FLEN/8, x4, x1, x2)

inst_10287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffff00; valaddr_reg:x3; val_offset:30861*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30861*0 + 3*303*FLEN/8, x4, x1, x2)

inst_10288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffff80; valaddr_reg:x3; val_offset:30864*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30864*0 + 3*304*FLEN/8, x4, x1, x2)

inst_10289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffffc0; valaddr_reg:x3; val_offset:30867*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30867*0 + 3*305*FLEN/8, x4, x1, x2)

inst_10290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffffe0; valaddr_reg:x3; val_offset:30870*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30870*0 + 3*306*FLEN/8, x4, x1, x2)

inst_10291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffffff0; valaddr_reg:x3; val_offset:30873*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30873*0 + 3*307*FLEN/8, x4, x1, x2)

inst_10292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffffff8; valaddr_reg:x3; val_offset:30876*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30876*0 + 3*308*FLEN/8, x4, x1, x2)

inst_10293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffffffc; valaddr_reg:x3; val_offset:30879*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30879*0 + 3*309*FLEN/8, x4, x1, x2)

inst_10294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1effffffffffffe; valaddr_reg:x3; val_offset:30882*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30882*0 + 3*310*FLEN/8, x4, x1, x2)

inst_10295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9de2de88f932f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79de2de88f932f; op2val:0x0;
op3val:0x1efffffffffffff; valaddr_reg:x3; val_offset:30885*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30885*0 + 3*311*FLEN/8, x4, x1, x2)

inst_10296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:30888*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30888*0 + 3*312*FLEN/8, x4, x1, x2)

inst_10297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:30891*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30891*0 + 3*313*FLEN/8, x4, x1, x2)

inst_10298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:30894*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30894*0 + 3*314*FLEN/8, x4, x1, x2)

inst_10299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:30897*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30897*0 + 3*315*FLEN/8, x4, x1, x2)

inst_10300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:30900*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30900*0 + 3*316*FLEN/8, x4, x1, x2)

inst_10301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:30903*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30903*0 + 3*317*FLEN/8, x4, x1, x2)

inst_10302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:30906*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30906*0 + 3*318*FLEN/8, x4, x1, x2)

inst_10303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:30909*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30909*0 + 3*319*FLEN/8, x4, x1, x2)

inst_10304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:30912*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30912*0 + 3*320*FLEN/8, x4, x1, x2)

inst_10305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:30915*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30915*0 + 3*321*FLEN/8, x4, x1, x2)

inst_10306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:30918*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30918*0 + 3*322*FLEN/8, x4, x1, x2)

inst_10307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:30921*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30921*0 + 3*323*FLEN/8, x4, x1, x2)

inst_10308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:30924*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30924*0 + 3*324*FLEN/8, x4, x1, x2)

inst_10309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:30927*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30927*0 + 3*325*FLEN/8, x4, x1, x2)

inst_10310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:30930*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30930*0 + 3*326*FLEN/8, x4, x1, x2)

inst_10311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:30933*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30933*0 + 3*327*FLEN/8, x4, x1, x2)

inst_10312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:30936*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30936*0 + 3*328*FLEN/8, x4, x1, x2)

inst_10313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:30939*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30939*0 + 3*329*FLEN/8, x4, x1, x2)

inst_10314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:30942*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30942*0 + 3*330*FLEN/8, x4, x1, x2)

inst_10315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:30945*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30945*0 + 3*331*FLEN/8, x4, x1, x2)

inst_10316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:30948*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30948*0 + 3*332*FLEN/8, x4, x1, x2)

inst_10317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:30951*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30951*0 + 3*333*FLEN/8, x4, x1, x2)

inst_10318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000000000; valaddr_reg:x3; val_offset:30954*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30954*0 + 3*334*FLEN/8, x4, x1, x2)

inst_10319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000000001; valaddr_reg:x3; val_offset:30957*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30957*0 + 3*335*FLEN/8, x4, x1, x2)

inst_10320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000000003; valaddr_reg:x3; val_offset:30960*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30960*0 + 3*336*FLEN/8, x4, x1, x2)

inst_10321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000000007; valaddr_reg:x3; val_offset:30963*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30963*0 + 3*337*FLEN/8, x4, x1, x2)

inst_10322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000000000f; valaddr_reg:x3; val_offset:30966*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30966*0 + 3*338*FLEN/8, x4, x1, x2)

inst_10323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000000001f; valaddr_reg:x3; val_offset:30969*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30969*0 + 3*339*FLEN/8, x4, x1, x2)

inst_10324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000000003f; valaddr_reg:x3; val_offset:30972*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30972*0 + 3*340*FLEN/8, x4, x1, x2)

inst_10325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000000007f; valaddr_reg:x3; val_offset:30975*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30975*0 + 3*341*FLEN/8, x4, x1, x2)

inst_10326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000000000ff; valaddr_reg:x3; val_offset:30978*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30978*0 + 3*342*FLEN/8, x4, x1, x2)

inst_10327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000000001ff; valaddr_reg:x3; val_offset:30981*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30981*0 + 3*343*FLEN/8, x4, x1, x2)

inst_10328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000000003ff; valaddr_reg:x3; val_offset:30984*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30984*0 + 3*344*FLEN/8, x4, x1, x2)

inst_10329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000000007ff; valaddr_reg:x3; val_offset:30987*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30987*0 + 3*345*FLEN/8, x4, x1, x2)

inst_10330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000000fff; valaddr_reg:x3; val_offset:30990*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30990*0 + 3*346*FLEN/8, x4, x1, x2)

inst_10331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000001fff; valaddr_reg:x3; val_offset:30993*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30993*0 + 3*347*FLEN/8, x4, x1, x2)

inst_10332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000003fff; valaddr_reg:x3; val_offset:30996*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30996*0 + 3*348*FLEN/8, x4, x1, x2)

inst_10333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000007fff; valaddr_reg:x3; val_offset:30999*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 30999*0 + 3*349*FLEN/8, x4, x1, x2)

inst_10334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000000ffff; valaddr_reg:x3; val_offset:31002*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31002*0 + 3*350*FLEN/8, x4, x1, x2)

inst_10335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000001ffff; valaddr_reg:x3; val_offset:31005*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31005*0 + 3*351*FLEN/8, x4, x1, x2)

inst_10336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000003ffff; valaddr_reg:x3; val_offset:31008*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31008*0 + 3*352*FLEN/8, x4, x1, x2)

inst_10337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000007ffff; valaddr_reg:x3; val_offset:31011*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31011*0 + 3*353*FLEN/8, x4, x1, x2)

inst_10338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000000fffff; valaddr_reg:x3; val_offset:31014*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31014*0 + 3*354*FLEN/8, x4, x1, x2)

inst_10339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000001fffff; valaddr_reg:x3; val_offset:31017*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31017*0 + 3*355*FLEN/8, x4, x1, x2)

inst_10340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000003fffff; valaddr_reg:x3; val_offset:31020*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31020*0 + 3*356*FLEN/8, x4, x1, x2)

inst_10341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000007fffff; valaddr_reg:x3; val_offset:31023*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31023*0 + 3*357*FLEN/8, x4, x1, x2)

inst_10342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000000ffffff; valaddr_reg:x3; val_offset:31026*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31026*0 + 3*358*FLEN/8, x4, x1, x2)

inst_10343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000001ffffff; valaddr_reg:x3; val_offset:31029*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31029*0 + 3*359*FLEN/8, x4, x1, x2)

inst_10344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000003ffffff; valaddr_reg:x3; val_offset:31032*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31032*0 + 3*360*FLEN/8, x4, x1, x2)

inst_10345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000007ffffff; valaddr_reg:x3; val_offset:31035*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31035*0 + 3*361*FLEN/8, x4, x1, x2)

inst_10346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000000fffffff; valaddr_reg:x3; val_offset:31038*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31038*0 + 3*362*FLEN/8, x4, x1, x2)

inst_10347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000001fffffff; valaddr_reg:x3; val_offset:31041*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31041*0 + 3*363*FLEN/8, x4, x1, x2)

inst_10348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000003fffffff; valaddr_reg:x3; val_offset:31044*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31044*0 + 3*364*FLEN/8, x4, x1, x2)

inst_10349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000007fffffff; valaddr_reg:x3; val_offset:31047*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31047*0 + 3*365*FLEN/8, x4, x1, x2)

inst_10350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00000ffffffff; valaddr_reg:x3; val_offset:31050*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31050*0 + 3*366*FLEN/8, x4, x1, x2)

inst_10351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00001ffffffff; valaddr_reg:x3; val_offset:31053*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31053*0 + 3*367*FLEN/8, x4, x1, x2)

inst_10352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00003ffffffff; valaddr_reg:x3; val_offset:31056*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31056*0 + 3*368*FLEN/8, x4, x1, x2)

inst_10353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00007ffffffff; valaddr_reg:x3; val_offset:31059*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31059*0 + 3*369*FLEN/8, x4, x1, x2)

inst_10354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0000fffffffff; valaddr_reg:x3; val_offset:31062*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31062*0 + 3*370*FLEN/8, x4, x1, x2)

inst_10355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0001fffffffff; valaddr_reg:x3; val_offset:31065*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31065*0 + 3*371*FLEN/8, x4, x1, x2)

inst_10356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0003fffffffff; valaddr_reg:x3; val_offset:31068*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31068*0 + 3*372*FLEN/8, x4, x1, x2)

inst_10357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0007fffffffff; valaddr_reg:x3; val_offset:31071*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31071*0 + 3*373*FLEN/8, x4, x1, x2)

inst_10358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf000ffffffffff; valaddr_reg:x3; val_offset:31074*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31074*0 + 3*374*FLEN/8, x4, x1, x2)

inst_10359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf001ffffffffff; valaddr_reg:x3; val_offset:31077*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31077*0 + 3*375*FLEN/8, x4, x1, x2)

inst_10360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf003ffffffffff; valaddr_reg:x3; val_offset:31080*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31080*0 + 3*376*FLEN/8, x4, x1, x2)

inst_10361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf007ffffffffff; valaddr_reg:x3; val_offset:31083*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31083*0 + 3*377*FLEN/8, x4, x1, x2)

inst_10362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf00fffffffffff; valaddr_reg:x3; val_offset:31086*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31086*0 + 3*378*FLEN/8, x4, x1, x2)

inst_10363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf01fffffffffff; valaddr_reg:x3; val_offset:31089*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31089*0 + 3*379*FLEN/8, x4, x1, x2)

inst_10364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf03fffffffffff; valaddr_reg:x3; val_offset:31092*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31092*0 + 3*380*FLEN/8, x4, x1, x2)

inst_10365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf07fffffffffff; valaddr_reg:x3; val_offset:31095*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31095*0 + 3*381*FLEN/8, x4, x1, x2)

inst_10366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf0ffffffffffff; valaddr_reg:x3; val_offset:31098*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31098*0 + 3*382*FLEN/8, x4, x1, x2)

inst_10367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf1ffffffffffff; valaddr_reg:x3; val_offset:31101*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31101*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_10368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf3ffffffffffff; valaddr_reg:x3; val_offset:31104*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31104*0 + 3*384*FLEN/8, x4, x1, x2)

inst_10369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf7ffffffffffff; valaddr_reg:x3; val_offset:31107*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31107*0 + 3*385*FLEN/8, x4, x1, x2)

inst_10370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xf8000000000000; valaddr_reg:x3; val_offset:31110*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31110*0 + 3*386*FLEN/8, x4, x1, x2)

inst_10371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfc000000000000; valaddr_reg:x3; val_offset:31113*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31113*0 + 3*387*FLEN/8, x4, x1, x2)

inst_10372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfe000000000000; valaddr_reg:x3; val_offset:31116*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31116*0 + 3*388*FLEN/8, x4, x1, x2)

inst_10373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xff000000000000; valaddr_reg:x3; val_offset:31119*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31119*0 + 3*389*FLEN/8, x4, x1, x2)

inst_10374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xff800000000000; valaddr_reg:x3; val_offset:31122*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31122*0 + 3*390*FLEN/8, x4, x1, x2)

inst_10375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffc00000000000; valaddr_reg:x3; val_offset:31125*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31125*0 + 3*391*FLEN/8, x4, x1, x2)

inst_10376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffe00000000000; valaddr_reg:x3; val_offset:31128*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31128*0 + 3*392*FLEN/8, x4, x1, x2)

inst_10377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfff00000000000; valaddr_reg:x3; val_offset:31131*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31131*0 + 3*393*FLEN/8, x4, x1, x2)

inst_10378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfff80000000000; valaddr_reg:x3; val_offset:31134*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31134*0 + 3*394*FLEN/8, x4, x1, x2)

inst_10379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffc0000000000; valaddr_reg:x3; val_offset:31137*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31137*0 + 3*395*FLEN/8, x4, x1, x2)

inst_10380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffe0000000000; valaddr_reg:x3; val_offset:31140*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31140*0 + 3*396*FLEN/8, x4, x1, x2)

inst_10381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffff0000000000; valaddr_reg:x3; val_offset:31143*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31143*0 + 3*397*FLEN/8, x4, x1, x2)

inst_10382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffff8000000000; valaddr_reg:x3; val_offset:31146*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31146*0 + 3*398*FLEN/8, x4, x1, x2)

inst_10383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffc000000000; valaddr_reg:x3; val_offset:31149*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31149*0 + 3*399*FLEN/8, x4, x1, x2)

inst_10384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffe000000000; valaddr_reg:x3; val_offset:31152*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31152*0 + 3*400*FLEN/8, x4, x1, x2)

inst_10385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffff000000000; valaddr_reg:x3; val_offset:31155*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31155*0 + 3*401*FLEN/8, x4, x1, x2)

inst_10386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffff800000000; valaddr_reg:x3; val_offset:31158*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31158*0 + 3*402*FLEN/8, x4, x1, x2)

inst_10387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffc00000000; valaddr_reg:x3; val_offset:31161*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31161*0 + 3*403*FLEN/8, x4, x1, x2)

inst_10388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffe00000000; valaddr_reg:x3; val_offset:31164*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31164*0 + 3*404*FLEN/8, x4, x1, x2)

inst_10389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffff00000000; valaddr_reg:x3; val_offset:31167*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31167*0 + 3*405*FLEN/8, x4, x1, x2)

inst_10390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffff80000000; valaddr_reg:x3; val_offset:31170*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31170*0 + 3*406*FLEN/8, x4, x1, x2)

inst_10391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffc0000000; valaddr_reg:x3; val_offset:31173*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31173*0 + 3*407*FLEN/8, x4, x1, x2)

inst_10392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffe0000000; valaddr_reg:x3; val_offset:31176*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31176*0 + 3*408*FLEN/8, x4, x1, x2)

inst_10393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffff0000000; valaddr_reg:x3; val_offset:31179*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31179*0 + 3*409*FLEN/8, x4, x1, x2)

inst_10394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffff8000000; valaddr_reg:x3; val_offset:31182*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31182*0 + 3*410*FLEN/8, x4, x1, x2)

inst_10395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffc000000; valaddr_reg:x3; val_offset:31185*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31185*0 + 3*411*FLEN/8, x4, x1, x2)

inst_10396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffe000000; valaddr_reg:x3; val_offset:31188*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31188*0 + 3*412*FLEN/8, x4, x1, x2)

inst_10397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffff000000; valaddr_reg:x3; val_offset:31191*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31191*0 + 3*413*FLEN/8, x4, x1, x2)

inst_10398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffff800000; valaddr_reg:x3; val_offset:31194*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31194*0 + 3*414*FLEN/8, x4, x1, x2)

inst_10399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffc00000; valaddr_reg:x3; val_offset:31197*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31197*0 + 3*415*FLEN/8, x4, x1, x2)

inst_10400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffe00000; valaddr_reg:x3; val_offset:31200*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31200*0 + 3*416*FLEN/8, x4, x1, x2)

inst_10401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffff00000; valaddr_reg:x3; val_offset:31203*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31203*0 + 3*417*FLEN/8, x4, x1, x2)

inst_10402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffff80000; valaddr_reg:x3; val_offset:31206*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31206*0 + 3*418*FLEN/8, x4, x1, x2)

inst_10403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffc0000; valaddr_reg:x3; val_offset:31209*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31209*0 + 3*419*FLEN/8, x4, x1, x2)

inst_10404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffe0000; valaddr_reg:x3; val_offset:31212*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31212*0 + 3*420*FLEN/8, x4, x1, x2)

inst_10405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffff0000; valaddr_reg:x3; val_offset:31215*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31215*0 + 3*421*FLEN/8, x4, x1, x2)

inst_10406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffff8000; valaddr_reg:x3; val_offset:31218*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31218*0 + 3*422*FLEN/8, x4, x1, x2)

inst_10407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffc000; valaddr_reg:x3; val_offset:31221*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31221*0 + 3*423*FLEN/8, x4, x1, x2)

inst_10408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffe000; valaddr_reg:x3; val_offset:31224*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31224*0 + 3*424*FLEN/8, x4, x1, x2)

inst_10409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffff000; valaddr_reg:x3; val_offset:31227*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31227*0 + 3*425*FLEN/8, x4, x1, x2)

inst_10410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffff800; valaddr_reg:x3; val_offset:31230*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31230*0 + 3*426*FLEN/8, x4, x1, x2)

inst_10411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffc00; valaddr_reg:x3; val_offset:31233*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31233*0 + 3*427*FLEN/8, x4, x1, x2)

inst_10412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffe00; valaddr_reg:x3; val_offset:31236*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31236*0 + 3*428*FLEN/8, x4, x1, x2)

inst_10413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffff00; valaddr_reg:x3; val_offset:31239*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31239*0 + 3*429*FLEN/8, x4, x1, x2)

inst_10414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffff80; valaddr_reg:x3; val_offset:31242*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31242*0 + 3*430*FLEN/8, x4, x1, x2)

inst_10415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffffc0; valaddr_reg:x3; val_offset:31245*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31245*0 + 3*431*FLEN/8, x4, x1, x2)

inst_10416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffffe0; valaddr_reg:x3; val_offset:31248*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31248*0 + 3*432*FLEN/8, x4, x1, x2)

inst_10417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffff0; valaddr_reg:x3; val_offset:31251*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31251*0 + 3*433*FLEN/8, x4, x1, x2)

inst_10418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffff8; valaddr_reg:x3; val_offset:31254*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31254*0 + 3*434*FLEN/8, x4, x1, x2)

inst_10419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffffc; valaddr_reg:x3; val_offset:31257*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31257*0 + 3*435*FLEN/8, x4, x1, x2)

inst_10420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xfffffffffffffe; valaddr_reg:x3; val_offset:31260*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31260*0 + 3*436*FLEN/8, x4, x1, x2)

inst_10421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa2b8f1cd87e5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a2b8f1cd87e5f; op2val:0x0;
op3val:0xffffffffffffff; valaddr_reg:x3; val_offset:31263*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31263*0 + 3*437*FLEN/8, x4, x1, x2)

inst_10422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000000000; valaddr_reg:x3; val_offset:31266*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31266*0 + 3*438*FLEN/8, x4, x1, x2)

inst_10423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000000001; valaddr_reg:x3; val_offset:31269*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31269*0 + 3*439*FLEN/8, x4, x1, x2)

inst_10424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000000003; valaddr_reg:x3; val_offset:31272*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31272*0 + 3*440*FLEN/8, x4, x1, x2)

inst_10425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000000007; valaddr_reg:x3; val_offset:31275*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31275*0 + 3*441*FLEN/8, x4, x1, x2)

inst_10426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000000000f; valaddr_reg:x3; val_offset:31278*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31278*0 + 3*442*FLEN/8, x4, x1, x2)

inst_10427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000000001f; valaddr_reg:x3; val_offset:31281*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31281*0 + 3*443*FLEN/8, x4, x1, x2)

inst_10428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000000003f; valaddr_reg:x3; val_offset:31284*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31284*0 + 3*444*FLEN/8, x4, x1, x2)

inst_10429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000000007f; valaddr_reg:x3; val_offset:31287*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31287*0 + 3*445*FLEN/8, x4, x1, x2)

inst_10430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000000000ff; valaddr_reg:x3; val_offset:31290*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31290*0 + 3*446*FLEN/8, x4, x1, x2)

inst_10431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000000001ff; valaddr_reg:x3; val_offset:31293*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31293*0 + 3*447*FLEN/8, x4, x1, x2)

inst_10432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000000003ff; valaddr_reg:x3; val_offset:31296*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31296*0 + 3*448*FLEN/8, x4, x1, x2)

inst_10433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000000007ff; valaddr_reg:x3; val_offset:31299*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31299*0 + 3*449*FLEN/8, x4, x1, x2)

inst_10434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000000fff; valaddr_reg:x3; val_offset:31302*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31302*0 + 3*450*FLEN/8, x4, x1, x2)

inst_10435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000001fff; valaddr_reg:x3; val_offset:31305*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31305*0 + 3*451*FLEN/8, x4, x1, x2)

inst_10436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000003fff; valaddr_reg:x3; val_offset:31308*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31308*0 + 3*452*FLEN/8, x4, x1, x2)

inst_10437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000007fff; valaddr_reg:x3; val_offset:31311*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31311*0 + 3*453*FLEN/8, x4, x1, x2)

inst_10438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000000ffff; valaddr_reg:x3; val_offset:31314*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31314*0 + 3*454*FLEN/8, x4, x1, x2)

inst_10439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000001ffff; valaddr_reg:x3; val_offset:31317*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31317*0 + 3*455*FLEN/8, x4, x1, x2)

inst_10440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000003ffff; valaddr_reg:x3; val_offset:31320*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31320*0 + 3*456*FLEN/8, x4, x1, x2)

inst_10441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000007ffff; valaddr_reg:x3; val_offset:31323*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31323*0 + 3*457*FLEN/8, x4, x1, x2)

inst_10442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000000fffff; valaddr_reg:x3; val_offset:31326*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31326*0 + 3*458*FLEN/8, x4, x1, x2)

inst_10443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000001fffff; valaddr_reg:x3; val_offset:31329*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31329*0 + 3*459*FLEN/8, x4, x1, x2)

inst_10444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000003fffff; valaddr_reg:x3; val_offset:31332*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31332*0 + 3*460*FLEN/8, x4, x1, x2)

inst_10445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000007fffff; valaddr_reg:x3; val_offset:31335*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31335*0 + 3*461*FLEN/8, x4, x1, x2)

inst_10446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000000ffffff; valaddr_reg:x3; val_offset:31338*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31338*0 + 3*462*FLEN/8, x4, x1, x2)

inst_10447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000001ffffff; valaddr_reg:x3; val_offset:31341*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31341*0 + 3*463*FLEN/8, x4, x1, x2)

inst_10448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000003ffffff; valaddr_reg:x3; val_offset:31344*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31344*0 + 3*464*FLEN/8, x4, x1, x2)

inst_10449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000007ffffff; valaddr_reg:x3; val_offset:31347*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31347*0 + 3*465*FLEN/8, x4, x1, x2)

inst_10450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000000fffffff; valaddr_reg:x3; val_offset:31350*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31350*0 + 3*466*FLEN/8, x4, x1, x2)

inst_10451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000001fffffff; valaddr_reg:x3; val_offset:31353*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31353*0 + 3*467*FLEN/8, x4, x1, x2)

inst_10452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000003fffffff; valaddr_reg:x3; val_offset:31356*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31356*0 + 3*468*FLEN/8, x4, x1, x2)

inst_10453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000007fffffff; valaddr_reg:x3; val_offset:31359*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31359*0 + 3*469*FLEN/8, x4, x1, x2)

inst_10454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800000ffffffff; valaddr_reg:x3; val_offset:31362*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31362*0 + 3*470*FLEN/8, x4, x1, x2)

inst_10455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800001ffffffff; valaddr_reg:x3; val_offset:31365*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31365*0 + 3*471*FLEN/8, x4, x1, x2)

inst_10456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800003ffffffff; valaddr_reg:x3; val_offset:31368*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31368*0 + 3*472*FLEN/8, x4, x1, x2)

inst_10457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800007ffffffff; valaddr_reg:x3; val_offset:31371*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31371*0 + 3*473*FLEN/8, x4, x1, x2)

inst_10458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780000fffffffff; valaddr_reg:x3; val_offset:31374*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31374*0 + 3*474*FLEN/8, x4, x1, x2)

inst_10459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780001fffffffff; valaddr_reg:x3; val_offset:31377*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31377*0 + 3*475*FLEN/8, x4, x1, x2)

inst_10460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780003fffffffff; valaddr_reg:x3; val_offset:31380*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31380*0 + 3*476*FLEN/8, x4, x1, x2)

inst_10461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780007fffffffff; valaddr_reg:x3; val_offset:31383*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31383*0 + 3*477*FLEN/8, x4, x1, x2)

inst_10462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78000ffffffffff; valaddr_reg:x3; val_offset:31386*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31386*0 + 3*478*FLEN/8, x4, x1, x2)

inst_10463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78001ffffffffff; valaddr_reg:x3; val_offset:31389*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31389*0 + 3*479*FLEN/8, x4, x1, x2)

inst_10464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78003ffffffffff; valaddr_reg:x3; val_offset:31392*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31392*0 + 3*480*FLEN/8, x4, x1, x2)

inst_10465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78007ffffffffff; valaddr_reg:x3; val_offset:31395*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31395*0 + 3*481*FLEN/8, x4, x1, x2)

inst_10466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7800fffffffffff; valaddr_reg:x3; val_offset:31398*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31398*0 + 3*482*FLEN/8, x4, x1, x2)

inst_10467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7801fffffffffff; valaddr_reg:x3; val_offset:31401*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31401*0 + 3*483*FLEN/8, x4, x1, x2)

inst_10468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7803fffffffffff; valaddr_reg:x3; val_offset:31404*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31404*0 + 3*484*FLEN/8, x4, x1, x2)

inst_10469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb7807fffffffffff; valaddr_reg:x3; val_offset:31407*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31407*0 + 3*485*FLEN/8, x4, x1, x2)

inst_10470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb780ffffffffffff; valaddr_reg:x3; val_offset:31410*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31410*0 + 3*486*FLEN/8, x4, x1, x2)

inst_10471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb781ffffffffffff; valaddr_reg:x3; val_offset:31413*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31413*0 + 3*487*FLEN/8, x4, x1, x2)

inst_10472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb783ffffffffffff; valaddr_reg:x3; val_offset:31416*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31416*0 + 3*488*FLEN/8, x4, x1, x2)

inst_10473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb787ffffffffffff; valaddr_reg:x3; val_offset:31419*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31419*0 + 3*489*FLEN/8, x4, x1, x2)

inst_10474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb788000000000000; valaddr_reg:x3; val_offset:31422*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31422*0 + 3*490*FLEN/8, x4, x1, x2)

inst_10475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78c000000000000; valaddr_reg:x3; val_offset:31425*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31425*0 + 3*491*FLEN/8, x4, x1, x2)

inst_10476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78e000000000000; valaddr_reg:x3; val_offset:31428*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31428*0 + 3*492*FLEN/8, x4, x1, x2)

inst_10477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78f000000000000; valaddr_reg:x3; val_offset:31431*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31431*0 + 3*493*FLEN/8, x4, x1, x2)

inst_10478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78f800000000000; valaddr_reg:x3; val_offset:31434*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31434*0 + 3*494*FLEN/8, x4, x1, x2)

inst_10479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fc00000000000; valaddr_reg:x3; val_offset:31437*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31437*0 + 3*495*FLEN/8, x4, x1, x2)

inst_10480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fe00000000000; valaddr_reg:x3; val_offset:31440*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31440*0 + 3*496*FLEN/8, x4, x1, x2)

inst_10481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ff00000000000; valaddr_reg:x3; val_offset:31443*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31443*0 + 3*497*FLEN/8, x4, x1, x2)

inst_10482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ff80000000000; valaddr_reg:x3; val_offset:31446*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31446*0 + 3*498*FLEN/8, x4, x1, x2)

inst_10483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffc0000000000; valaddr_reg:x3; val_offset:31449*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31449*0 + 3*499*FLEN/8, x4, x1, x2)

inst_10484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffe0000000000; valaddr_reg:x3; val_offset:31452*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31452*0 + 3*500*FLEN/8, x4, x1, x2)

inst_10485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fff0000000000; valaddr_reg:x3; val_offset:31455*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31455*0 + 3*501*FLEN/8, x4, x1, x2)

inst_10486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fff8000000000; valaddr_reg:x3; val_offset:31458*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31458*0 + 3*502*FLEN/8, x4, x1, x2)

inst_10487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffc000000000; valaddr_reg:x3; val_offset:31461*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31461*0 + 3*503*FLEN/8, x4, x1, x2)

inst_10488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffe000000000; valaddr_reg:x3; val_offset:31464*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31464*0 + 3*504*FLEN/8, x4, x1, x2)

inst_10489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffff000000000; valaddr_reg:x3; val_offset:31467*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31467*0 + 3*505*FLEN/8, x4, x1, x2)

inst_10490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffff800000000; valaddr_reg:x3; val_offset:31470*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31470*0 + 3*506*FLEN/8, x4, x1, x2)

inst_10491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffc00000000; valaddr_reg:x3; val_offset:31473*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31473*0 + 3*507*FLEN/8, x4, x1, x2)

inst_10492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffe00000000; valaddr_reg:x3; val_offset:31476*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31476*0 + 3*508*FLEN/8, x4, x1, x2)

inst_10493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffff00000000; valaddr_reg:x3; val_offset:31479*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31479*0 + 3*509*FLEN/8, x4, x1, x2)

inst_10494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffff80000000; valaddr_reg:x3; val_offset:31482*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31482*0 + 3*510*FLEN/8, x4, x1, x2)

inst_10495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffc0000000; valaddr_reg:x3; val_offset:31485*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31485*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_10496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffe0000000; valaddr_reg:x3; val_offset:31488*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31488*0 + 3*512*FLEN/8, x4, x1, x2)

inst_10497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffff0000000; valaddr_reg:x3; val_offset:31491*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31491*0 + 3*513*FLEN/8, x4, x1, x2)

inst_10498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffff8000000; valaddr_reg:x3; val_offset:31494*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31494*0 + 3*514*FLEN/8, x4, x1, x2)

inst_10499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffc000000; valaddr_reg:x3; val_offset:31497*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31497*0 + 3*515*FLEN/8, x4, x1, x2)

inst_10500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffe000000; valaddr_reg:x3; val_offset:31500*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31500*0 + 3*516*FLEN/8, x4, x1, x2)

inst_10501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffff000000; valaddr_reg:x3; val_offset:31503*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31503*0 + 3*517*FLEN/8, x4, x1, x2)

inst_10502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffff800000; valaddr_reg:x3; val_offset:31506*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31506*0 + 3*518*FLEN/8, x4, x1, x2)

inst_10503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffc00000; valaddr_reg:x3; val_offset:31509*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31509*0 + 3*519*FLEN/8, x4, x1, x2)

inst_10504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffe00000; valaddr_reg:x3; val_offset:31512*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31512*0 + 3*520*FLEN/8, x4, x1, x2)

inst_10505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffff00000; valaddr_reg:x3; val_offset:31515*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31515*0 + 3*521*FLEN/8, x4, x1, x2)

inst_10506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffff80000; valaddr_reg:x3; val_offset:31518*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31518*0 + 3*522*FLEN/8, x4, x1, x2)

inst_10507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffc0000; valaddr_reg:x3; val_offset:31521*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31521*0 + 3*523*FLEN/8, x4, x1, x2)

inst_10508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffe0000; valaddr_reg:x3; val_offset:31524*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31524*0 + 3*524*FLEN/8, x4, x1, x2)

inst_10509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffff0000; valaddr_reg:x3; val_offset:31527*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31527*0 + 3*525*FLEN/8, x4, x1, x2)

inst_10510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffff8000; valaddr_reg:x3; val_offset:31530*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31530*0 + 3*526*FLEN/8, x4, x1, x2)

inst_10511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffc000; valaddr_reg:x3; val_offset:31533*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31533*0 + 3*527*FLEN/8, x4, x1, x2)

inst_10512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffe000; valaddr_reg:x3; val_offset:31536*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31536*0 + 3*528*FLEN/8, x4, x1, x2)

inst_10513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffff000; valaddr_reg:x3; val_offset:31539*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31539*0 + 3*529*FLEN/8, x4, x1, x2)

inst_10514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffff800; valaddr_reg:x3; val_offset:31542*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31542*0 + 3*530*FLEN/8, x4, x1, x2)

inst_10515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffffc00; valaddr_reg:x3; val_offset:31545*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31545*0 + 3*531*FLEN/8, x4, x1, x2)

inst_10516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffffe00; valaddr_reg:x3; val_offset:31548*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31548*0 + 3*532*FLEN/8, x4, x1, x2)

inst_10517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffff00; valaddr_reg:x3; val_offset:31551*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31551*0 + 3*533*FLEN/8, x4, x1, x2)

inst_10518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffff80; valaddr_reg:x3; val_offset:31554*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31554*0 + 3*534*FLEN/8, x4, x1, x2)

inst_10519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffffc0; valaddr_reg:x3; val_offset:31557*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31557*0 + 3*535*FLEN/8, x4, x1, x2)

inst_10520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffffe0; valaddr_reg:x3; val_offset:31560*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31560*0 + 3*536*FLEN/8, x4, x1, x2)

inst_10521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffffff0; valaddr_reg:x3; val_offset:31563*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31563*0 + 3*537*FLEN/8, x4, x1, x2)

inst_10522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffffff8; valaddr_reg:x3; val_offset:31566*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31566*0 + 3*538*FLEN/8, x4, x1, x2)

inst_10523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffffffc; valaddr_reg:x3; val_offset:31569*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31569*0 + 3*539*FLEN/8, x4, x1, x2)

inst_10524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78ffffffffffffe; valaddr_reg:x3; val_offset:31572*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31572*0 + 3*540*FLEN/8, x4, x1, x2)

inst_10525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x378 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xb78fffffffffffff; valaddr_reg:x3; val_offset:31575*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31575*0 + 3*541*FLEN/8, x4, x1, x2)

inst_10526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:31578*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31578*0 + 3*542*FLEN/8, x4, x1, x2)

inst_10527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:31581*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31581*0 + 3*543*FLEN/8, x4, x1, x2)

inst_10528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:31584*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31584*0 + 3*544*FLEN/8, x4, x1, x2)

inst_10529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:31587*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31587*0 + 3*545*FLEN/8, x4, x1, x2)

inst_10530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:31590*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31590*0 + 3*546*FLEN/8, x4, x1, x2)

inst_10531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:31593*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31593*0 + 3*547*FLEN/8, x4, x1, x2)

inst_10532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:31596*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31596*0 + 3*548*FLEN/8, x4, x1, x2)

inst_10533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:31599*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31599*0 + 3*549*FLEN/8, x4, x1, x2)

inst_10534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:31602*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31602*0 + 3*550*FLEN/8, x4, x1, x2)

inst_10535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:31605*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31605*0 + 3*551*FLEN/8, x4, x1, x2)

inst_10536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:31608*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31608*0 + 3*552*FLEN/8, x4, x1, x2)

inst_10537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:31611*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31611*0 + 3*553*FLEN/8, x4, x1, x2)

inst_10538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:31614*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31614*0 + 3*554*FLEN/8, x4, x1, x2)

inst_10539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:31617*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31617*0 + 3*555*FLEN/8, x4, x1, x2)

inst_10540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:31620*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31620*0 + 3*556*FLEN/8, x4, x1, x2)

inst_10541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:31623*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31623*0 + 3*557*FLEN/8, x4, x1, x2)

inst_10542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:31626*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31626*0 + 3*558*FLEN/8, x4, x1, x2)

inst_10543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:31629*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31629*0 + 3*559*FLEN/8, x4, x1, x2)

inst_10544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:31632*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31632*0 + 3*560*FLEN/8, x4, x1, x2)

inst_10545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:31635*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31635*0 + 3*561*FLEN/8, x4, x1, x2)

inst_10546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:31638*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31638*0 + 3*562*FLEN/8, x4, x1, x2)

inst_10547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x372e4161002f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x9ff372e4161002f3;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:31641*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31641*0 + 3*563*FLEN/8, x4, x1, x2)

inst_10548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:31644*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31644*0 + 3*564*FLEN/8, x4, x1, x2)

inst_10549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:31647*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31647*0 + 3*565*FLEN/8, x4, x1, x2)

inst_10550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:31650*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31650*0 + 3*566*FLEN/8, x4, x1, x2)

inst_10551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:31653*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31653*0 + 3*567*FLEN/8, x4, x1, x2)

inst_10552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:31656*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31656*0 + 3*568*FLEN/8, x4, x1, x2)

inst_10553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:31659*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31659*0 + 3*569*FLEN/8, x4, x1, x2)

inst_10554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:31662*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31662*0 + 3*570*FLEN/8, x4, x1, x2)

inst_10555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:31665*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31665*0 + 3*571*FLEN/8, x4, x1, x2)

inst_10556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:31668*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31668*0 + 3*572*FLEN/8, x4, x1, x2)

inst_10557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:31671*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31671*0 + 3*573*FLEN/8, x4, x1, x2)

inst_10558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:31674*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31674*0 + 3*574*FLEN/8, x4, x1, x2)

inst_10559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:31677*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31677*0 + 3*575*FLEN/8, x4, x1, x2)

inst_10560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:31680*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31680*0 + 3*576*FLEN/8, x4, x1, x2)

inst_10561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:31683*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31683*0 + 3*577*FLEN/8, x4, x1, x2)

inst_10562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:31686*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31686*0 + 3*578*FLEN/8, x4, x1, x2)

inst_10563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:31689*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31689*0 + 3*579*FLEN/8, x4, x1, x2)

inst_10564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:31692*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31692*0 + 3*580*FLEN/8, x4, x1, x2)

inst_10565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:31695*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31695*0 + 3*581*FLEN/8, x4, x1, x2)

inst_10566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:31698*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31698*0 + 3*582*FLEN/8, x4, x1, x2)

inst_10567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:31701*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31701*0 + 3*583*FLEN/8, x4, x1, x2)

inst_10568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:31704*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31704*0 + 3*584*FLEN/8, x4, x1, x2)

inst_10569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:31707*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31707*0 + 3*585*FLEN/8, x4, x1, x2)

inst_10570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:31710*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31710*0 + 3*586*FLEN/8, x4, x1, x2)

inst_10571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:31713*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31713*0 + 3*587*FLEN/8, x4, x1, x2)

inst_10572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:31716*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31716*0 + 3*588*FLEN/8, x4, x1, x2)

inst_10573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:31719*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31719*0 + 3*589*FLEN/8, x4, x1, x2)

inst_10574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:31722*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31722*0 + 3*590*FLEN/8, x4, x1, x2)

inst_10575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:31725*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31725*0 + 3*591*FLEN/8, x4, x1, x2)

inst_10576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:31728*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31728*0 + 3*592*FLEN/8, x4, x1, x2)

inst_10577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:31731*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31731*0 + 3*593*FLEN/8, x4, x1, x2)

inst_10578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:31734*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31734*0 + 3*594*FLEN/8, x4, x1, x2)

inst_10579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:31737*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31737*0 + 3*595*FLEN/8, x4, x1, x2)

inst_10580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:31740*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31740*0 + 3*596*FLEN/8, x4, x1, x2)

inst_10581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:31743*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31743*0 + 3*597*FLEN/8, x4, x1, x2)

inst_10582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:31746*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31746*0 + 3*598*FLEN/8, x4, x1, x2)

inst_10583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:31749*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31749*0 + 3*599*FLEN/8, x4, x1, x2)

inst_10584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:31752*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31752*0 + 3*600*FLEN/8, x4, x1, x2)

inst_10585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:31755*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31755*0 + 3*601*FLEN/8, x4, x1, x2)

inst_10586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:31758*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31758*0 + 3*602*FLEN/8, x4, x1, x2)

inst_10587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:31761*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31761*0 + 3*603*FLEN/8, x4, x1, x2)

inst_10588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:31764*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31764*0 + 3*604*FLEN/8, x4, x1, x2)

inst_10589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:31767*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31767*0 + 3*605*FLEN/8, x4, x1, x2)

inst_10590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:31770*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31770*0 + 3*606*FLEN/8, x4, x1, x2)

inst_10591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:31773*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31773*0 + 3*607*FLEN/8, x4, x1, x2)

inst_10592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:31776*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31776*0 + 3*608*FLEN/8, x4, x1, x2)

inst_10593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:31779*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31779*0 + 3*609*FLEN/8, x4, x1, x2)

inst_10594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:31782*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31782*0 + 3*610*FLEN/8, x4, x1, x2)

inst_10595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:31785*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31785*0 + 3*611*FLEN/8, x4, x1, x2)

inst_10596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:31788*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31788*0 + 3*612*FLEN/8, x4, x1, x2)

inst_10597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:31791*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31791*0 + 3*613*FLEN/8, x4, x1, x2)

inst_10598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:31794*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31794*0 + 3*614*FLEN/8, x4, x1, x2)

inst_10599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:31797*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31797*0 + 3*615*FLEN/8, x4, x1, x2)

inst_10600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:31800*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31800*0 + 3*616*FLEN/8, x4, x1, x2)

inst_10601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:31803*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31803*0 + 3*617*FLEN/8, x4, x1, x2)

inst_10602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:31806*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31806*0 + 3*618*FLEN/8, x4, x1, x2)

inst_10603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:31809*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31809*0 + 3*619*FLEN/8, x4, x1, x2)

inst_10604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:31812*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31812*0 + 3*620*FLEN/8, x4, x1, x2)

inst_10605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:31815*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31815*0 + 3*621*FLEN/8, x4, x1, x2)

inst_10606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:31818*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31818*0 + 3*622*FLEN/8, x4, x1, x2)

inst_10607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:31821*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31821*0 + 3*623*FLEN/8, x4, x1, x2)

inst_10608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:31824*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31824*0 + 3*624*FLEN/8, x4, x1, x2)

inst_10609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:31827*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31827*0 + 3*625*FLEN/8, x4, x1, x2)

inst_10610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:31830*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31830*0 + 3*626*FLEN/8, x4, x1, x2)

inst_10611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:31833*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31833*0 + 3*627*FLEN/8, x4, x1, x2)

inst_10612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:31836*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31836*0 + 3*628*FLEN/8, x4, x1, x2)

inst_10613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:31839*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31839*0 + 3*629*FLEN/8, x4, x1, x2)

inst_10614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:31842*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31842*0 + 3*630*FLEN/8, x4, x1, x2)

inst_10615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:31845*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31845*0 + 3*631*FLEN/8, x4, x1, x2)

inst_10616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:31848*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31848*0 + 3*632*FLEN/8, x4, x1, x2)

inst_10617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:31851*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31851*0 + 3*633*FLEN/8, x4, x1, x2)

inst_10618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:31854*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31854*0 + 3*634*FLEN/8, x4, x1, x2)

inst_10619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:31857*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31857*0 + 3*635*FLEN/8, x4, x1, x2)

inst_10620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:31860*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31860*0 + 3*636*FLEN/8, x4, x1, x2)

inst_10621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:31863*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31863*0 + 3*637*FLEN/8, x4, x1, x2)

inst_10622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:31866*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31866*0 + 3*638*FLEN/8, x4, x1, x2)

inst_10623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:31869*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31869*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_10624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:31872*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31872*0 + 3*640*FLEN/8, x4, x1, x2)

inst_10625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:31875*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31875*0 + 3*641*FLEN/8, x4, x1, x2)

inst_10626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:31878*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31878*0 + 3*642*FLEN/8, x4, x1, x2)

inst_10627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:31881*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31881*0 + 3*643*FLEN/8, x4, x1, x2)

inst_10628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:31884*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31884*0 + 3*644*FLEN/8, x4, x1, x2)

inst_10629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:31887*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31887*0 + 3*645*FLEN/8, x4, x1, x2)

inst_10630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:31890*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31890*0 + 3*646*FLEN/8, x4, x1, x2)

inst_10631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:31893*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31893*0 + 3*647*FLEN/8, x4, x1, x2)

inst_10632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:31896*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31896*0 + 3*648*FLEN/8, x4, x1, x2)

inst_10633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:31899*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31899*0 + 3*649*FLEN/8, x4, x1, x2)

inst_10634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:31902*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31902*0 + 3*650*FLEN/8, x4, x1, x2)

inst_10635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:31905*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31905*0 + 3*651*FLEN/8, x4, x1, x2)

inst_10636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:31908*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31908*0 + 3*652*FLEN/8, x4, x1, x2)

inst_10637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:31911*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31911*0 + 3*653*FLEN/8, x4, x1, x2)

inst_10638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:31914*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31914*0 + 3*654*FLEN/8, x4, x1, x2)

inst_10639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:31917*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31917*0 + 3*655*FLEN/8, x4, x1, x2)

inst_10640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:31920*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31920*0 + 3*656*FLEN/8, x4, x1, x2)

inst_10641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:31923*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31923*0 + 3*657*FLEN/8, x4, x1, x2)

inst_10642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:31926*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31926*0 + 3*658*FLEN/8, x4, x1, x2)

inst_10643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:31929*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31929*0 + 3*659*FLEN/8, x4, x1, x2)

inst_10644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:31932*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31932*0 + 3*660*FLEN/8, x4, x1, x2)

inst_10645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:31935*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31935*0 + 3*661*FLEN/8, x4, x1, x2)

inst_10646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:31938*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31938*0 + 3*662*FLEN/8, x4, x1, x2)

inst_10647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:31941*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31941*0 + 3*663*FLEN/8, x4, x1, x2)

inst_10648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:31944*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31944*0 + 3*664*FLEN/8, x4, x1, x2)

inst_10649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:31947*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31947*0 + 3*665*FLEN/8, x4, x1, x2)

inst_10650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:31950*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31950*0 + 3*666*FLEN/8, x4, x1, x2)

inst_10651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:31953*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31953*0 + 3*667*FLEN/8, x4, x1, x2)

inst_10652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:31956*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31956*0 + 3*668*FLEN/8, x4, x1, x2)

inst_10653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:31959*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31959*0 + 3*669*FLEN/8, x4, x1, x2)

inst_10654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:31962*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31962*0 + 3*670*FLEN/8, x4, x1, x2)

inst_10655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:31965*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31965*0 + 3*671*FLEN/8, x4, x1, x2)

inst_10656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:31968*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31968*0 + 3*672*FLEN/8, x4, x1, x2)

inst_10657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:31971*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31971*0 + 3*673*FLEN/8, x4, x1, x2)

inst_10658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:31974*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31974*0 + 3*674*FLEN/8, x4, x1, x2)

inst_10659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:31977*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31977*0 + 3*675*FLEN/8, x4, x1, x2)

inst_10660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:31980*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31980*0 + 3*676*FLEN/8, x4, x1, x2)

inst_10661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:31983*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31983*0 + 3*677*FLEN/8, x4, x1, x2)

inst_10662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:31986*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31986*0 + 3*678*FLEN/8, x4, x1, x2)

inst_10663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:31989*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31989*0 + 3*679*FLEN/8, x4, x1, x2)

inst_10664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:31992*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31992*0 + 3*680*FLEN/8, x4, x1, x2)

inst_10665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:31995*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31995*0 + 3*681*FLEN/8, x4, x1, x2)

inst_10666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:31998*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 31998*0 + 3*682*FLEN/8, x4, x1, x2)

inst_10667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:32001*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32001*0 + 3*683*FLEN/8, x4, x1, x2)

inst_10668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:32004*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32004*0 + 3*684*FLEN/8, x4, x1, x2)

inst_10669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:32007*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32007*0 + 3*685*FLEN/8, x4, x1, x2)

inst_10670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:32010*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32010*0 + 3*686*FLEN/8, x4, x1, x2)

inst_10671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:32013*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32013*0 + 3*687*FLEN/8, x4, x1, x2)

inst_10672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:32016*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32016*0 + 3*688*FLEN/8, x4, x1, x2)

inst_10673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaccd40426b1d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7accd40426b1d7; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:32019*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32019*0 + 3*689*FLEN/8, x4, x1, x2)

inst_10674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:32022*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32022*0 + 3*690*FLEN/8, x4, x1, x2)

inst_10675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:32025*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32025*0 + 3*691*FLEN/8, x4, x1, x2)

inst_10676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:32028*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32028*0 + 3*692*FLEN/8, x4, x1, x2)

inst_10677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:32031*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32031*0 + 3*693*FLEN/8, x4, x1, x2)

inst_10678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:32034*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32034*0 + 3*694*FLEN/8, x4, x1, x2)

inst_10679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:32037*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32037*0 + 3*695*FLEN/8, x4, x1, x2)

inst_10680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:32040*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32040*0 + 3*696*FLEN/8, x4, x1, x2)

inst_10681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:32043*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32043*0 + 3*697*FLEN/8, x4, x1, x2)

inst_10682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:32046*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32046*0 + 3*698*FLEN/8, x4, x1, x2)

inst_10683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:32049*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32049*0 + 3*699*FLEN/8, x4, x1, x2)

inst_10684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:32052*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32052*0 + 3*700*FLEN/8, x4, x1, x2)

inst_10685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:32055*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32055*0 + 3*701*FLEN/8, x4, x1, x2)

inst_10686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:32058*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32058*0 + 3*702*FLEN/8, x4, x1, x2)

inst_10687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:32061*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32061*0 + 3*703*FLEN/8, x4, x1, x2)

inst_10688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:32064*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32064*0 + 3*704*FLEN/8, x4, x1, x2)

inst_10689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:32067*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32067*0 + 3*705*FLEN/8, x4, x1, x2)

inst_10690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:32070*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32070*0 + 3*706*FLEN/8, x4, x1, x2)

inst_10691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:32073*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32073*0 + 3*707*FLEN/8, x4, x1, x2)

inst_10692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:32076*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32076*0 + 3*708*FLEN/8, x4, x1, x2)

inst_10693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:32079*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32079*0 + 3*709*FLEN/8, x4, x1, x2)

inst_10694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:32082*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32082*0 + 3*710*FLEN/8, x4, x1, x2)

inst_10695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:32085*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32085*0 + 3*711*FLEN/8, x4, x1, x2)

inst_10696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:32088*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32088*0 + 3*712*FLEN/8, x4, x1, x2)

inst_10697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:32091*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32091*0 + 3*713*FLEN/8, x4, x1, x2)

inst_10698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:32094*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32094*0 + 3*714*FLEN/8, x4, x1, x2)

inst_10699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:32097*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32097*0 + 3*715*FLEN/8, x4, x1, x2)

inst_10700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:32100*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32100*0 + 3*716*FLEN/8, x4, x1, x2)

inst_10701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:32103*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32103*0 + 3*717*FLEN/8, x4, x1, x2)

inst_10702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:32106*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32106*0 + 3*718*FLEN/8, x4, x1, x2)

inst_10703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:32109*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32109*0 + 3*719*FLEN/8, x4, x1, x2)

inst_10704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:32112*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32112*0 + 3*720*FLEN/8, x4, x1, x2)

inst_10705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:32115*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32115*0 + 3*721*FLEN/8, x4, x1, x2)

inst_10706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:32118*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32118*0 + 3*722*FLEN/8, x4, x1, x2)

inst_10707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:32121*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32121*0 + 3*723*FLEN/8, x4, x1, x2)

inst_10708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:32124*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32124*0 + 3*724*FLEN/8, x4, x1, x2)

inst_10709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:32127*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32127*0 + 3*725*FLEN/8, x4, x1, x2)

inst_10710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:32130*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32130*0 + 3*726*FLEN/8, x4, x1, x2)

inst_10711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:32133*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32133*0 + 3*727*FLEN/8, x4, x1, x2)

inst_10712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:32136*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32136*0 + 3*728*FLEN/8, x4, x1, x2)

inst_10713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:32139*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32139*0 + 3*729*FLEN/8, x4, x1, x2)

inst_10714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:32142*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32142*0 + 3*730*FLEN/8, x4, x1, x2)

inst_10715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:32145*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32145*0 + 3*731*FLEN/8, x4, x1, x2)

inst_10716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:32148*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32148*0 + 3*732*FLEN/8, x4, x1, x2)

inst_10717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:32151*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32151*0 + 3*733*FLEN/8, x4, x1, x2)

inst_10718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:32154*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32154*0 + 3*734*FLEN/8, x4, x1, x2)

inst_10719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:32157*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32157*0 + 3*735*FLEN/8, x4, x1, x2)

inst_10720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:32160*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32160*0 + 3*736*FLEN/8, x4, x1, x2)

inst_10721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:32163*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32163*0 + 3*737*FLEN/8, x4, x1, x2)

inst_10722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:32166*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32166*0 + 3*738*FLEN/8, x4, x1, x2)

inst_10723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:32169*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32169*0 + 3*739*FLEN/8, x4, x1, x2)

inst_10724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:32172*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32172*0 + 3*740*FLEN/8, x4, x1, x2)

inst_10725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:32175*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32175*0 + 3*741*FLEN/8, x4, x1, x2)

inst_10726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:32178*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32178*0 + 3*742*FLEN/8, x4, x1, x2)

inst_10727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:32181*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32181*0 + 3*743*FLEN/8, x4, x1, x2)

inst_10728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:32184*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32184*0 + 3*744*FLEN/8, x4, x1, x2)

inst_10729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:32187*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32187*0 + 3*745*FLEN/8, x4, x1, x2)

inst_10730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:32190*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32190*0 + 3*746*FLEN/8, x4, x1, x2)

inst_10731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:32193*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32193*0 + 3*747*FLEN/8, x4, x1, x2)

inst_10732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:32196*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32196*0 + 3*748*FLEN/8, x4, x1, x2)

inst_10733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:32199*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32199*0 + 3*749*FLEN/8, x4, x1, x2)

inst_10734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:32202*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32202*0 + 3*750*FLEN/8, x4, x1, x2)

inst_10735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:32205*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32205*0 + 3*751*FLEN/8, x4, x1, x2)

inst_10736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:32208*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32208*0 + 3*752*FLEN/8, x4, x1, x2)

inst_10737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:32211*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32211*0 + 3*753*FLEN/8, x4, x1, x2)

inst_10738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:32214*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32214*0 + 3*754*FLEN/8, x4, x1, x2)

inst_10739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:32217*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32217*0 + 3*755*FLEN/8, x4, x1, x2)

inst_10740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:32220*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32220*0 + 3*756*FLEN/8, x4, x1, x2)

inst_10741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:32223*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32223*0 + 3*757*FLEN/8, x4, x1, x2)

inst_10742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:32226*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32226*0 + 3*758*FLEN/8, x4, x1, x2)

inst_10743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:32229*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32229*0 + 3*759*FLEN/8, x4, x1, x2)

inst_10744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:32232*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32232*0 + 3*760*FLEN/8, x4, x1, x2)

inst_10745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:32235*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32235*0 + 3*761*FLEN/8, x4, x1, x2)

inst_10746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:32238*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32238*0 + 3*762*FLEN/8, x4, x1, x2)

inst_10747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:32241*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32241*0 + 3*763*FLEN/8, x4, x1, x2)

inst_10748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:32244*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32244*0 + 3*764*FLEN/8, x4, x1, x2)

inst_10749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:32247*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32247*0 + 3*765*FLEN/8, x4, x1, x2)

inst_10750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:32250*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32250*0 + 3*766*FLEN/8, x4, x1, x2)

inst_10751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb3c136748a917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b3c136748a917; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:32253*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32253*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162147178771382271,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162164770957426687,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162199955329515519,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162270324073693183,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162411061562048511,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162692536538759167,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(163255486492180479,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023103,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023104,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(165507286305865728,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166070236259287040,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166351711235997696,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166492448724353024,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166562817468530688,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166598001840619520,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166615594026663936,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166624390119686144,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166628788166197248,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166630987189452800,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632086701080576,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632636456894464,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632911334801408,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633048773754880,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633117493231616,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633151852969984,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633169032839168,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633177622773760,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633181917741056,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633184065224704,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185138966528,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185675837440,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185944272896,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186078490624,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186145599488,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186179153920,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186195931136,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186204319744,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186208514048,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186210611200,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186211659776,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212184064,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212446208,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212577280,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212642816,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212675584,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212691968,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212700160,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212704256,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212706304,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707328,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707840,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708096,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708224,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708288,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708320,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708336,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708344,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708348,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708350,64,FLEN)
NAN_BOXED(6879698810305704367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708351,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740224,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740225,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740227,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740231,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740239,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740255,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740287,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740351,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740479,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978740735,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978741247,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978742271,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978744319,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978748415,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978756607,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978772991,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978805759,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302978871295,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302979002367,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302979264511,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302979788799,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302980837375,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302982934527,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302987128831,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597302995517439,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597303012294655,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597303045849087,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597303112957951,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597303247175679,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597303515611135,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597304052482047,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597305126223871,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597307273707519,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597311568674815,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597320158609407,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597337338478591,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597371698216959,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597440417693695,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597577856647167,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258597852734554111,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258598402490367999,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258599502001995775,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258601701025251327,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258606099071762431,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258614895164784639,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258632487350829055,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258667671722917887,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258738040467095551,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13258878777955450879,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13259160252932161535,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13259723202885582847,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13260849102792425471,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13260849102792425472,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13261975002699268096,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13262537952652689408,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13262819427629400064,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13262960165117755392,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263030533861933056,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263065718234021888,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263083310420066304,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263092106513088512,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263096504559599616,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263098703582855168,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263099803094482944,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100352850296832,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100627728203776,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100765167157248,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100833886633984,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100868246372352,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100885426241536,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100894016176128,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100898311143424,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100900458627072,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100901532368896,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902069239808,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902337675264,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902471892992,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902539001856,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902572556288,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902589333504,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902597722112,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902601916416,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902604013568,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902605062144,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902605586432,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902605848576,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902605979648,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606045184,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606077952,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606094336,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606102528,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606106624,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606108672,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606109696,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110208,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110464,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110592,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110656,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110688,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110704,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110712,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110716,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110718,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13263100902606110719,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6879708096573523815,64,FLEN)
NAN_BOXED(11525830085566712441,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114880,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114881,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114883,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114887,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114895,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114911,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114943,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115007,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115135,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115391,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115903,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821116927,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821118975,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821123071,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821131263,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821147647,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821180415,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821245951,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821377023,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821639167,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988822163455,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988823212031,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988825309183,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988829503487,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988837892095,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988854669311,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988888223743,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988955332607,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989089550335,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989357985791,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989894856703,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107990968598527,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107993116082175,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107997411049471,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108006000984063,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108023180853247,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108057540591615,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108126260068351,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108263699021823,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108538576928767,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135109088332742655,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135110187844370431,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135112386867625983,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135116784914137087,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135125581007159295,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135143173193203711,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135178357565292543,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135248726309470207,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135389463797825535,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135670938774536191,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(136233888727957503,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800127,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800128,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(138485688541642752,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139048638495064064,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139330113471774720,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139470850960130048,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139541219704307712,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139576404076396544,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139593996262440960,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139602792355463168,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139607190401974272,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139609389425229824,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139610488936857600,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611038692671488,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611313570578432,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611451009531904,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611519729008640,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611554088747008,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611571268616192,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611579858550784,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611584153518080,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611586301001728,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587374743552,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587911614464,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588180049920,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588314267648,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588381376512,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588414930944,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588431708160,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588440096768,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588444291072,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588446388224,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447436800,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447961088,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448223232,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448354304,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448419840,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448452608,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448468992,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448477184,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448481280,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448483328,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484352,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484864,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485120,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485248,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485312,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485344,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485360,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485368,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485372,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485374,64,FLEN)
NAN_BOXED(6879774194541761327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485375,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557440,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557441,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557443,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557447,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557455,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557471,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557503,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557567,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557695,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557951,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410558463,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410559487,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410561535,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410565631,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410573823,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410590207,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410622975,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410688511,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410819583,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994411081727,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994411606015,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994412654591,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994414751743,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994418946047,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994427334655,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994444111871,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994477666303,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994544775167,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994678992895,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994947428351,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553995484299263,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553996558041087,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553998705524735,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554003000492031,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554011590426623,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554028770295807,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554063130034175,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554131849510911,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554269288464383,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554544166371327,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67555093922185215,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67556193433812991,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67558392457068543,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67562790503579647,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67571586596601855,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67589178782646271,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67624363154735103,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67694731898912767,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67835469387268095,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68116944363978751,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68679894317400063,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(69805794224242687,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(69805794224242688,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70931694131085312,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71494644084506624,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71776119061217280,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71916856549572608,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71987225293750272,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72022409665839104,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72040001851883520,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72048797944905728,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72053195991416832,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72055395014672384,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72056494526300160,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057044282114048,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057319160020992,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057456598974464,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057525318451200,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057559678189568,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057576858058752,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057585447993344,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057589742960640,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057591890444288,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057592964186112,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593501057024,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593769492480,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593903710208,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593970819072,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594004373504,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594021150720,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594029539328,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594033733632,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594035830784,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594036879360,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037403648,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037665792,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037796864,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037862400,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037895168,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037911552,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037919744,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037923840,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037925888,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037926912,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927424,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927680,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927808,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927872,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927904,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927920,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927928,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927932,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927934,64,FLEN)
NAN_BOXED(6879859274426121823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927935,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776256,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776257,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776259,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776263,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776271,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776287,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776319,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776383,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776511,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959776767,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959777279,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959778303,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959780351,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959784447,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959792639,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959809023,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959841791,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505959907327,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505960038399,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505960300543,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505960824831,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505961873407,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505963970559,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505968164863,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505976553471,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568505993330687,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568506026885119,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568506093993983,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568506228211711,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568506496647167,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568507033518079,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568508107259903,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568510254743551,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568514549710847,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568523139645439,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568540319514623,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568574679252991,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568643398729727,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222568780837683199,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222569055715590143,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222569605471404031,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222570704983031807,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222572904006287359,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222577302052798463,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222586098145820671,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222603690331865087,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222638874703953919,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222709243448131583,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13222849980936486911,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13223131455913197567,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13223694405866618879,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13224820305773461503,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13224820305773461504,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13225946205680304128,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13226509155633725440,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13226790630610436096,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13226931368098791424,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227001736842969088,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227036921215057920,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227054513401102336,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227063309494124544,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227067707540635648,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227069906563891200,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227071006075518976,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227071555831332864,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227071830709239808,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227071968148193280,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072036867670016,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072071227408384,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072088407277568,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072096997212160,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072101292179456,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072103439663104,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072104513404928,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105050275840,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105318711296,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105452929024,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105520037888,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105553592320,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105570369536,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105578758144,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105582952448,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105585049600,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105586098176,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105586622464,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105586884608,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587015680,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587081216,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587113984,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587130368,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587138560,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587142656,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587144704,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587145728,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146240,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146496,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146624,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146688,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146720,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146736,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146744,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146748,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146750,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13227072105587146751,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(11525682195319489267,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6880036591736631767,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6880158909773424919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
