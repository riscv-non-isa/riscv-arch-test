
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_89088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x70003fffffffff; valaddr_reg:x3; val_offset:267264*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267264*0 + 3*0*FLEN/8, x4, x1, x2)

inst_89089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x70007fffffffff; valaddr_reg:x3; val_offset:267267*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267267*0 + 3*1*FLEN/8, x4, x1, x2)

inst_89090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7000ffffffffff; valaddr_reg:x3; val_offset:267270*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267270*0 + 3*2*FLEN/8, x4, x1, x2)

inst_89091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7001ffffffffff; valaddr_reg:x3; val_offset:267273*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267273*0 + 3*3*FLEN/8, x4, x1, x2)

inst_89092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7003ffffffffff; valaddr_reg:x3; val_offset:267276*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267276*0 + 3*4*FLEN/8, x4, x1, x2)

inst_89093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7007ffffffffff; valaddr_reg:x3; val_offset:267279*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267279*0 + 3*5*FLEN/8, x4, x1, x2)

inst_89094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x700fffffffffff; valaddr_reg:x3; val_offset:267282*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267282*0 + 3*6*FLEN/8, x4, x1, x2)

inst_89095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x701fffffffffff; valaddr_reg:x3; val_offset:267285*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267285*0 + 3*7*FLEN/8, x4, x1, x2)

inst_89096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x703fffffffffff; valaddr_reg:x3; val_offset:267288*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267288*0 + 3*8*FLEN/8, x4, x1, x2)

inst_89097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x707fffffffffff; valaddr_reg:x3; val_offset:267291*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267291*0 + 3*9*FLEN/8, x4, x1, x2)

inst_89098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x70ffffffffffff; valaddr_reg:x3; val_offset:267294*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267294*0 + 3*10*FLEN/8, x4, x1, x2)

inst_89099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x71ffffffffffff; valaddr_reg:x3; val_offset:267297*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267297*0 + 3*11*FLEN/8, x4, x1, x2)

inst_89100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x73ffffffffffff; valaddr_reg:x3; val_offset:267300*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267300*0 + 3*12*FLEN/8, x4, x1, x2)

inst_89101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x77ffffffffffff; valaddr_reg:x3; val_offset:267303*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267303*0 + 3*13*FLEN/8, x4, x1, x2)

inst_89102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x78000000000000; valaddr_reg:x3; val_offset:267306*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267306*0 + 3*14*FLEN/8, x4, x1, x2)

inst_89103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7c000000000000; valaddr_reg:x3; val_offset:267309*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267309*0 + 3*15*FLEN/8, x4, x1, x2)

inst_89104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7e000000000000; valaddr_reg:x3; val_offset:267312*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267312*0 + 3*16*FLEN/8, x4, x1, x2)

inst_89105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7f000000000000; valaddr_reg:x3; val_offset:267315*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267315*0 + 3*17*FLEN/8, x4, x1, x2)

inst_89106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7f800000000000; valaddr_reg:x3; val_offset:267318*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267318*0 + 3*18*FLEN/8, x4, x1, x2)

inst_89107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fc00000000000; valaddr_reg:x3; val_offset:267321*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267321*0 + 3*19*FLEN/8, x4, x1, x2)

inst_89108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fe00000000000; valaddr_reg:x3; val_offset:267324*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267324*0 + 3*20*FLEN/8, x4, x1, x2)

inst_89109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ff00000000000; valaddr_reg:x3; val_offset:267327*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267327*0 + 3*21*FLEN/8, x4, x1, x2)

inst_89110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ff80000000000; valaddr_reg:x3; val_offset:267330*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267330*0 + 3*22*FLEN/8, x4, x1, x2)

inst_89111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffc0000000000; valaddr_reg:x3; val_offset:267333*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267333*0 + 3*23*FLEN/8, x4, x1, x2)

inst_89112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffe0000000000; valaddr_reg:x3; val_offset:267336*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267336*0 + 3*24*FLEN/8, x4, x1, x2)

inst_89113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fff0000000000; valaddr_reg:x3; val_offset:267339*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267339*0 + 3*25*FLEN/8, x4, x1, x2)

inst_89114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fff8000000000; valaddr_reg:x3; val_offset:267342*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267342*0 + 3*26*FLEN/8, x4, x1, x2)

inst_89115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffc000000000; valaddr_reg:x3; val_offset:267345*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267345*0 + 3*27*FLEN/8, x4, x1, x2)

inst_89116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffe000000000; valaddr_reg:x3; val_offset:267348*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267348*0 + 3*28*FLEN/8, x4, x1, x2)

inst_89117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffff000000000; valaddr_reg:x3; val_offset:267351*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267351*0 + 3*29*FLEN/8, x4, x1, x2)

inst_89118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffff800000000; valaddr_reg:x3; val_offset:267354*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267354*0 + 3*30*FLEN/8, x4, x1, x2)

inst_89119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffc00000000; valaddr_reg:x3; val_offset:267357*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267357*0 + 3*31*FLEN/8, x4, x1, x2)

inst_89120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffe00000000; valaddr_reg:x3; val_offset:267360*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267360*0 + 3*32*FLEN/8, x4, x1, x2)

inst_89121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffff00000000; valaddr_reg:x3; val_offset:267363*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267363*0 + 3*33*FLEN/8, x4, x1, x2)

inst_89122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffff80000000; valaddr_reg:x3; val_offset:267366*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267366*0 + 3*34*FLEN/8, x4, x1, x2)

inst_89123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffc0000000; valaddr_reg:x3; val_offset:267369*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267369*0 + 3*35*FLEN/8, x4, x1, x2)

inst_89124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffe0000000; valaddr_reg:x3; val_offset:267372*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267372*0 + 3*36*FLEN/8, x4, x1, x2)

inst_89125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffff0000000; valaddr_reg:x3; val_offset:267375*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267375*0 + 3*37*FLEN/8, x4, x1, x2)

inst_89126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffff8000000; valaddr_reg:x3; val_offset:267378*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267378*0 + 3*38*FLEN/8, x4, x1, x2)

inst_89127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffc000000; valaddr_reg:x3; val_offset:267381*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267381*0 + 3*39*FLEN/8, x4, x1, x2)

inst_89128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffe000000; valaddr_reg:x3; val_offset:267384*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267384*0 + 3*40*FLEN/8, x4, x1, x2)

inst_89129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffff000000; valaddr_reg:x3; val_offset:267387*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267387*0 + 3*41*FLEN/8, x4, x1, x2)

inst_89130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffff800000; valaddr_reg:x3; val_offset:267390*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267390*0 + 3*42*FLEN/8, x4, x1, x2)

inst_89131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffc00000; valaddr_reg:x3; val_offset:267393*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267393*0 + 3*43*FLEN/8, x4, x1, x2)

inst_89132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffe00000; valaddr_reg:x3; val_offset:267396*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267396*0 + 3*44*FLEN/8, x4, x1, x2)

inst_89133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffff00000; valaddr_reg:x3; val_offset:267399*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267399*0 + 3*45*FLEN/8, x4, x1, x2)

inst_89134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffff80000; valaddr_reg:x3; val_offset:267402*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267402*0 + 3*46*FLEN/8, x4, x1, x2)

inst_89135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffc0000; valaddr_reg:x3; val_offset:267405*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267405*0 + 3*47*FLEN/8, x4, x1, x2)

inst_89136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffe0000; valaddr_reg:x3; val_offset:267408*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267408*0 + 3*48*FLEN/8, x4, x1, x2)

inst_89137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffff0000; valaddr_reg:x3; val_offset:267411*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267411*0 + 3*49*FLEN/8, x4, x1, x2)

inst_89138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffff8000; valaddr_reg:x3; val_offset:267414*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267414*0 + 3*50*FLEN/8, x4, x1, x2)

inst_89139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffc000; valaddr_reg:x3; val_offset:267417*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267417*0 + 3*51*FLEN/8, x4, x1, x2)

inst_89140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffe000; valaddr_reg:x3; val_offset:267420*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267420*0 + 3*52*FLEN/8, x4, x1, x2)

inst_89141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffff000; valaddr_reg:x3; val_offset:267423*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267423*0 + 3*53*FLEN/8, x4, x1, x2)

inst_89142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffff800; valaddr_reg:x3; val_offset:267426*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267426*0 + 3*54*FLEN/8, x4, x1, x2)

inst_89143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffffc00; valaddr_reg:x3; val_offset:267429*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267429*0 + 3*55*FLEN/8, x4, x1, x2)

inst_89144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffffe00; valaddr_reg:x3; val_offset:267432*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267432*0 + 3*56*FLEN/8, x4, x1, x2)

inst_89145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffff00; valaddr_reg:x3; val_offset:267435*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267435*0 + 3*57*FLEN/8, x4, x1, x2)

inst_89146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffff80; valaddr_reg:x3; val_offset:267438*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267438*0 + 3*58*FLEN/8, x4, x1, x2)

inst_89147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffffc0; valaddr_reg:x3; val_offset:267441*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267441*0 + 3*59*FLEN/8, x4, x1, x2)

inst_89148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffffe0; valaddr_reg:x3; val_offset:267444*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267444*0 + 3*60*FLEN/8, x4, x1, x2)

inst_89149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffffff0; valaddr_reg:x3; val_offset:267447*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267447*0 + 3*61*FLEN/8, x4, x1, x2)

inst_89150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffffff8; valaddr_reg:x3; val_offset:267450*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267450*0 + 3*62*FLEN/8, x4, x1, x2)

inst_89151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffffffc; valaddr_reg:x3; val_offset:267453*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267453*0 + 3*63*FLEN/8, x4, x1, x2)

inst_89152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7ffffffffffffe; valaddr_reg:x3; val_offset:267456*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267456*0 + 3*64*FLEN/8, x4, x1, x2)

inst_89153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc960d9f57d2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac960d9f57d2cd; op2val:0x0;
op3val:0x7fffffffffffff; valaddr_reg:x3; val_offset:267459*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267459*0 + 3*65*FLEN/8, x4, x1, x2)

inst_89154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000000000; valaddr_reg:x3; val_offset:267462*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267462*0 + 3*66*FLEN/8, x4, x1, x2)

inst_89155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000000001; valaddr_reg:x3; val_offset:267465*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267465*0 + 3*67*FLEN/8, x4, x1, x2)

inst_89156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000000003; valaddr_reg:x3; val_offset:267468*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267468*0 + 3*68*FLEN/8, x4, x1, x2)

inst_89157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000000007; valaddr_reg:x3; val_offset:267471*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267471*0 + 3*69*FLEN/8, x4, x1, x2)

inst_89158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000000000f; valaddr_reg:x3; val_offset:267474*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267474*0 + 3*70*FLEN/8, x4, x1, x2)

inst_89159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000000001f; valaddr_reg:x3; val_offset:267477*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267477*0 + 3*71*FLEN/8, x4, x1, x2)

inst_89160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000000003f; valaddr_reg:x3; val_offset:267480*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267480*0 + 3*72*FLEN/8, x4, x1, x2)

inst_89161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000000007f; valaddr_reg:x3; val_offset:267483*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267483*0 + 3*73*FLEN/8, x4, x1, x2)

inst_89162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000000000ff; valaddr_reg:x3; val_offset:267486*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267486*0 + 3*74*FLEN/8, x4, x1, x2)

inst_89163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000000001ff; valaddr_reg:x3; val_offset:267489*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267489*0 + 3*75*FLEN/8, x4, x1, x2)

inst_89164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000000003ff; valaddr_reg:x3; val_offset:267492*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267492*0 + 3*76*FLEN/8, x4, x1, x2)

inst_89165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000000007ff; valaddr_reg:x3; val_offset:267495*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267495*0 + 3*77*FLEN/8, x4, x1, x2)

inst_89166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000000fff; valaddr_reg:x3; val_offset:267498*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267498*0 + 3*78*FLEN/8, x4, x1, x2)

inst_89167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000001fff; valaddr_reg:x3; val_offset:267501*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267501*0 + 3*79*FLEN/8, x4, x1, x2)

inst_89168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000003fff; valaddr_reg:x3; val_offset:267504*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267504*0 + 3*80*FLEN/8, x4, x1, x2)

inst_89169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000007fff; valaddr_reg:x3; val_offset:267507*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267507*0 + 3*81*FLEN/8, x4, x1, x2)

inst_89170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000000ffff; valaddr_reg:x3; val_offset:267510*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267510*0 + 3*82*FLEN/8, x4, x1, x2)

inst_89171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000001ffff; valaddr_reg:x3; val_offset:267513*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267513*0 + 3*83*FLEN/8, x4, x1, x2)

inst_89172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000003ffff; valaddr_reg:x3; val_offset:267516*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267516*0 + 3*84*FLEN/8, x4, x1, x2)

inst_89173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000007ffff; valaddr_reg:x3; val_offset:267519*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267519*0 + 3*85*FLEN/8, x4, x1, x2)

inst_89174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000000fffff; valaddr_reg:x3; val_offset:267522*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267522*0 + 3*86*FLEN/8, x4, x1, x2)

inst_89175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000001fffff; valaddr_reg:x3; val_offset:267525*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267525*0 + 3*87*FLEN/8, x4, x1, x2)

inst_89176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000003fffff; valaddr_reg:x3; val_offset:267528*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267528*0 + 3*88*FLEN/8, x4, x1, x2)

inst_89177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000007fffff; valaddr_reg:x3; val_offset:267531*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267531*0 + 3*89*FLEN/8, x4, x1, x2)

inst_89178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000000ffffff; valaddr_reg:x3; val_offset:267534*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267534*0 + 3*90*FLEN/8, x4, x1, x2)

inst_89179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000001ffffff; valaddr_reg:x3; val_offset:267537*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267537*0 + 3*91*FLEN/8, x4, x1, x2)

inst_89180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000003ffffff; valaddr_reg:x3; val_offset:267540*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267540*0 + 3*92*FLEN/8, x4, x1, x2)

inst_89181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000007ffffff; valaddr_reg:x3; val_offset:267543*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267543*0 + 3*93*FLEN/8, x4, x1, x2)

inst_89182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000000fffffff; valaddr_reg:x3; val_offset:267546*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267546*0 + 3*94*FLEN/8, x4, x1, x2)

inst_89183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000001fffffff; valaddr_reg:x3; val_offset:267549*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267549*0 + 3*95*FLEN/8, x4, x1, x2)

inst_89184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000003fffffff; valaddr_reg:x3; val_offset:267552*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267552*0 + 3*96*FLEN/8, x4, x1, x2)

inst_89185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000007fffffff; valaddr_reg:x3; val_offset:267555*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267555*0 + 3*97*FLEN/8, x4, x1, x2)

inst_89186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400000ffffffff; valaddr_reg:x3; val_offset:267558*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267558*0 + 3*98*FLEN/8, x4, x1, x2)

inst_89187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400001ffffffff; valaddr_reg:x3; val_offset:267561*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267561*0 + 3*99*FLEN/8, x4, x1, x2)

inst_89188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400003ffffffff; valaddr_reg:x3; val_offset:267564*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267564*0 + 3*100*FLEN/8, x4, x1, x2)

inst_89189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400007ffffffff; valaddr_reg:x3; val_offset:267567*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267567*0 + 3*101*FLEN/8, x4, x1, x2)

inst_89190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40000fffffffff; valaddr_reg:x3; val_offset:267570*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267570*0 + 3*102*FLEN/8, x4, x1, x2)

inst_89191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40001fffffffff; valaddr_reg:x3; val_offset:267573*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267573*0 + 3*103*FLEN/8, x4, x1, x2)

inst_89192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40003fffffffff; valaddr_reg:x3; val_offset:267576*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267576*0 + 3*104*FLEN/8, x4, x1, x2)

inst_89193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40007fffffffff; valaddr_reg:x3; val_offset:267579*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267579*0 + 3*105*FLEN/8, x4, x1, x2)

inst_89194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4000ffffffffff; valaddr_reg:x3; val_offset:267582*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267582*0 + 3*106*FLEN/8, x4, x1, x2)

inst_89195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4001ffffffffff; valaddr_reg:x3; val_offset:267585*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267585*0 + 3*107*FLEN/8, x4, x1, x2)

inst_89196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4003ffffffffff; valaddr_reg:x3; val_offset:267588*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267588*0 + 3*108*FLEN/8, x4, x1, x2)

inst_89197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4007ffffffffff; valaddr_reg:x3; val_offset:267591*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267591*0 + 3*109*FLEN/8, x4, x1, x2)

inst_89198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba400fffffffffff; valaddr_reg:x3; val_offset:267594*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267594*0 + 3*110*FLEN/8, x4, x1, x2)

inst_89199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba401fffffffffff; valaddr_reg:x3; val_offset:267597*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267597*0 + 3*111*FLEN/8, x4, x1, x2)

inst_89200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba403fffffffffff; valaddr_reg:x3; val_offset:267600*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267600*0 + 3*112*FLEN/8, x4, x1, x2)

inst_89201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba407fffffffffff; valaddr_reg:x3; val_offset:267603*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267603*0 + 3*113*FLEN/8, x4, x1, x2)

inst_89202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba40ffffffffffff; valaddr_reg:x3; val_offset:267606*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267606*0 + 3*114*FLEN/8, x4, x1, x2)

inst_89203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba41ffffffffffff; valaddr_reg:x3; val_offset:267609*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267609*0 + 3*115*FLEN/8, x4, x1, x2)

inst_89204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba43ffffffffffff; valaddr_reg:x3; val_offset:267612*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267612*0 + 3*116*FLEN/8, x4, x1, x2)

inst_89205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba47ffffffffffff; valaddr_reg:x3; val_offset:267615*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267615*0 + 3*117*FLEN/8, x4, x1, x2)

inst_89206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba48000000000000; valaddr_reg:x3; val_offset:267618*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267618*0 + 3*118*FLEN/8, x4, x1, x2)

inst_89207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4c000000000000; valaddr_reg:x3; val_offset:267621*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267621*0 + 3*119*FLEN/8, x4, x1, x2)

inst_89208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4e000000000000; valaddr_reg:x3; val_offset:267624*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267624*0 + 3*120*FLEN/8, x4, x1, x2)

inst_89209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4f000000000000; valaddr_reg:x3; val_offset:267627*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267627*0 + 3*121*FLEN/8, x4, x1, x2)

inst_89210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4f800000000000; valaddr_reg:x3; val_offset:267630*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267630*0 + 3*122*FLEN/8, x4, x1, x2)

inst_89211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fc00000000000; valaddr_reg:x3; val_offset:267633*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267633*0 + 3*123*FLEN/8, x4, x1, x2)

inst_89212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fe00000000000; valaddr_reg:x3; val_offset:267636*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267636*0 + 3*124*FLEN/8, x4, x1, x2)

inst_89213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ff00000000000; valaddr_reg:x3; val_offset:267639*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267639*0 + 3*125*FLEN/8, x4, x1, x2)

inst_89214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ff80000000000; valaddr_reg:x3; val_offset:267642*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267642*0 + 3*126*FLEN/8, x4, x1, x2)

inst_89215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffc0000000000; valaddr_reg:x3; val_offset:267645*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267645*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_89216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffe0000000000; valaddr_reg:x3; val_offset:267648*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267648*0 + 3*128*FLEN/8, x4, x1, x2)

inst_89217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fff0000000000; valaddr_reg:x3; val_offset:267651*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267651*0 + 3*129*FLEN/8, x4, x1, x2)

inst_89218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fff8000000000; valaddr_reg:x3; val_offset:267654*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267654*0 + 3*130*FLEN/8, x4, x1, x2)

inst_89219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffc000000000; valaddr_reg:x3; val_offset:267657*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267657*0 + 3*131*FLEN/8, x4, x1, x2)

inst_89220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffe000000000; valaddr_reg:x3; val_offset:267660*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267660*0 + 3*132*FLEN/8, x4, x1, x2)

inst_89221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffff000000000; valaddr_reg:x3; val_offset:267663*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267663*0 + 3*133*FLEN/8, x4, x1, x2)

inst_89222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffff800000000; valaddr_reg:x3; val_offset:267666*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267666*0 + 3*134*FLEN/8, x4, x1, x2)

inst_89223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffc00000000; valaddr_reg:x3; val_offset:267669*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267669*0 + 3*135*FLEN/8, x4, x1, x2)

inst_89224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffe00000000; valaddr_reg:x3; val_offset:267672*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267672*0 + 3*136*FLEN/8, x4, x1, x2)

inst_89225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffff00000000; valaddr_reg:x3; val_offset:267675*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267675*0 + 3*137*FLEN/8, x4, x1, x2)

inst_89226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffff80000000; valaddr_reg:x3; val_offset:267678*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267678*0 + 3*138*FLEN/8, x4, x1, x2)

inst_89227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffc0000000; valaddr_reg:x3; val_offset:267681*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267681*0 + 3*139*FLEN/8, x4, x1, x2)

inst_89228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffe0000000; valaddr_reg:x3; val_offset:267684*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267684*0 + 3*140*FLEN/8, x4, x1, x2)

inst_89229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffff0000000; valaddr_reg:x3; val_offset:267687*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267687*0 + 3*141*FLEN/8, x4, x1, x2)

inst_89230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffff8000000; valaddr_reg:x3; val_offset:267690*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267690*0 + 3*142*FLEN/8, x4, x1, x2)

inst_89231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffc000000; valaddr_reg:x3; val_offset:267693*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267693*0 + 3*143*FLEN/8, x4, x1, x2)

inst_89232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffe000000; valaddr_reg:x3; val_offset:267696*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267696*0 + 3*144*FLEN/8, x4, x1, x2)

inst_89233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffff000000; valaddr_reg:x3; val_offset:267699*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267699*0 + 3*145*FLEN/8, x4, x1, x2)

inst_89234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffff800000; valaddr_reg:x3; val_offset:267702*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267702*0 + 3*146*FLEN/8, x4, x1, x2)

inst_89235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffc00000; valaddr_reg:x3; val_offset:267705*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267705*0 + 3*147*FLEN/8, x4, x1, x2)

inst_89236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffe00000; valaddr_reg:x3; val_offset:267708*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267708*0 + 3*148*FLEN/8, x4, x1, x2)

inst_89237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffff00000; valaddr_reg:x3; val_offset:267711*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267711*0 + 3*149*FLEN/8, x4, x1, x2)

inst_89238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffff80000; valaddr_reg:x3; val_offset:267714*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267714*0 + 3*150*FLEN/8, x4, x1, x2)

inst_89239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffc0000; valaddr_reg:x3; val_offset:267717*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267717*0 + 3*151*FLEN/8, x4, x1, x2)

inst_89240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffe0000; valaddr_reg:x3; val_offset:267720*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267720*0 + 3*152*FLEN/8, x4, x1, x2)

inst_89241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffff0000; valaddr_reg:x3; val_offset:267723*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267723*0 + 3*153*FLEN/8, x4, x1, x2)

inst_89242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffff8000; valaddr_reg:x3; val_offset:267726*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267726*0 + 3*154*FLEN/8, x4, x1, x2)

inst_89243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffc000; valaddr_reg:x3; val_offset:267729*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267729*0 + 3*155*FLEN/8, x4, x1, x2)

inst_89244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffe000; valaddr_reg:x3; val_offset:267732*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267732*0 + 3*156*FLEN/8, x4, x1, x2)

inst_89245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffff000; valaddr_reg:x3; val_offset:267735*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267735*0 + 3*157*FLEN/8, x4, x1, x2)

inst_89246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffff800; valaddr_reg:x3; val_offset:267738*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267738*0 + 3*158*FLEN/8, x4, x1, x2)

inst_89247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffffc00; valaddr_reg:x3; val_offset:267741*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267741*0 + 3*159*FLEN/8, x4, x1, x2)

inst_89248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffffe00; valaddr_reg:x3; val_offset:267744*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267744*0 + 3*160*FLEN/8, x4, x1, x2)

inst_89249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffff00; valaddr_reg:x3; val_offset:267747*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267747*0 + 3*161*FLEN/8, x4, x1, x2)

inst_89250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffff80; valaddr_reg:x3; val_offset:267750*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267750*0 + 3*162*FLEN/8, x4, x1, x2)

inst_89251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffffc0; valaddr_reg:x3; val_offset:267753*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267753*0 + 3*163*FLEN/8, x4, x1, x2)

inst_89252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffffe0; valaddr_reg:x3; val_offset:267756*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267756*0 + 3*164*FLEN/8, x4, x1, x2)

inst_89253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffffff0; valaddr_reg:x3; val_offset:267759*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267759*0 + 3*165*FLEN/8, x4, x1, x2)

inst_89254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffffff8; valaddr_reg:x3; val_offset:267762*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267762*0 + 3*166*FLEN/8, x4, x1, x2)

inst_89255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffffffc; valaddr_reg:x3; val_offset:267765*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267765*0 + 3*167*FLEN/8, x4, x1, x2)

inst_89256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4ffffffffffffe; valaddr_reg:x3; val_offset:267768*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267768*0 + 3*168*FLEN/8, x4, x1, x2)

inst_89257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xba4fffffffffffff; valaddr_reg:x3; val_offset:267771*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267771*0 + 3*169*FLEN/8, x4, x1, x2)

inst_89258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:267774*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267774*0 + 3*170*FLEN/8, x4, x1, x2)

inst_89259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:267777*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267777*0 + 3*171*FLEN/8, x4, x1, x2)

inst_89260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:267780*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267780*0 + 3*172*FLEN/8, x4, x1, x2)

inst_89261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:267783*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267783*0 + 3*173*FLEN/8, x4, x1, x2)

inst_89262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:267786*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267786*0 + 3*174*FLEN/8, x4, x1, x2)

inst_89263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:267789*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267789*0 + 3*175*FLEN/8, x4, x1, x2)

inst_89264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:267792*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267792*0 + 3*176*FLEN/8, x4, x1, x2)

inst_89265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:267795*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267795*0 + 3*177*FLEN/8, x4, x1, x2)

inst_89266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:267798*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267798*0 + 3*178*FLEN/8, x4, x1, x2)

inst_89267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:267801*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267801*0 + 3*179*FLEN/8, x4, x1, x2)

inst_89268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:267804*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267804*0 + 3*180*FLEN/8, x4, x1, x2)

inst_89269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:267807*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267807*0 + 3*181*FLEN/8, x4, x1, x2)

inst_89270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:267810*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267810*0 + 3*182*FLEN/8, x4, x1, x2)

inst_89271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:267813*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267813*0 + 3*183*FLEN/8, x4, x1, x2)

inst_89272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:267816*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267816*0 + 3*184*FLEN/8, x4, x1, x2)

inst_89273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:267819*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267819*0 + 3*185*FLEN/8, x4, x1, x2)

inst_89274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:267822*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267822*0 + 3*186*FLEN/8, x4, x1, x2)

inst_89275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:267825*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267825*0 + 3*187*FLEN/8, x4, x1, x2)

inst_89276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:267828*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267828*0 + 3*188*FLEN/8, x4, x1, x2)

inst_89277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:267831*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267831*0 + 3*189*FLEN/8, x4, x1, x2)

inst_89278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:267834*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267834*0 + 3*190*FLEN/8, x4, x1, x2)

inst_89279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc978dd3af76c1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e837d58eb801 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac978dd3af76c1; op2val:0x9fc1e837d58eb801;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:267837*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267837*0 + 3*191*FLEN/8, x4, x1, x2)

inst_89280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000000000; valaddr_reg:x3; val_offset:267840*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267840*0 + 3*192*FLEN/8, x4, x1, x2)

inst_89281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000000001; valaddr_reg:x3; val_offset:267843*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267843*0 + 3*193*FLEN/8, x4, x1, x2)

inst_89282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000000003; valaddr_reg:x3; val_offset:267846*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267846*0 + 3*194*FLEN/8, x4, x1, x2)

inst_89283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000000007; valaddr_reg:x3; val_offset:267849*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267849*0 + 3*195*FLEN/8, x4, x1, x2)

inst_89284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000000000f; valaddr_reg:x3; val_offset:267852*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267852*0 + 3*196*FLEN/8, x4, x1, x2)

inst_89285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000000001f; valaddr_reg:x3; val_offset:267855*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267855*0 + 3*197*FLEN/8, x4, x1, x2)

inst_89286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000000003f; valaddr_reg:x3; val_offset:267858*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267858*0 + 3*198*FLEN/8, x4, x1, x2)

inst_89287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000000007f; valaddr_reg:x3; val_offset:267861*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267861*0 + 3*199*FLEN/8, x4, x1, x2)

inst_89288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000000000ff; valaddr_reg:x3; val_offset:267864*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267864*0 + 3*200*FLEN/8, x4, x1, x2)

inst_89289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000000001ff; valaddr_reg:x3; val_offset:267867*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267867*0 + 3*201*FLEN/8, x4, x1, x2)

inst_89290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000000003ff; valaddr_reg:x3; val_offset:267870*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267870*0 + 3*202*FLEN/8, x4, x1, x2)

inst_89291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000000007ff; valaddr_reg:x3; val_offset:267873*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267873*0 + 3*203*FLEN/8, x4, x1, x2)

inst_89292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000000fff; valaddr_reg:x3; val_offset:267876*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267876*0 + 3*204*FLEN/8, x4, x1, x2)

inst_89293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000001fff; valaddr_reg:x3; val_offset:267879*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267879*0 + 3*205*FLEN/8, x4, x1, x2)

inst_89294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000003fff; valaddr_reg:x3; val_offset:267882*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267882*0 + 3*206*FLEN/8, x4, x1, x2)

inst_89295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000007fff; valaddr_reg:x3; val_offset:267885*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267885*0 + 3*207*FLEN/8, x4, x1, x2)

inst_89296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000000ffff; valaddr_reg:x3; val_offset:267888*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267888*0 + 3*208*FLEN/8, x4, x1, x2)

inst_89297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000001ffff; valaddr_reg:x3; val_offset:267891*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267891*0 + 3*209*FLEN/8, x4, x1, x2)

inst_89298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000003ffff; valaddr_reg:x3; val_offset:267894*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267894*0 + 3*210*FLEN/8, x4, x1, x2)

inst_89299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000007ffff; valaddr_reg:x3; val_offset:267897*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267897*0 + 3*211*FLEN/8, x4, x1, x2)

inst_89300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000000fffff; valaddr_reg:x3; val_offset:267900*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267900*0 + 3*212*FLEN/8, x4, x1, x2)

inst_89301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000001fffff; valaddr_reg:x3; val_offset:267903*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267903*0 + 3*213*FLEN/8, x4, x1, x2)

inst_89302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000003fffff; valaddr_reg:x3; val_offset:267906*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267906*0 + 3*214*FLEN/8, x4, x1, x2)

inst_89303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000007fffff; valaddr_reg:x3; val_offset:267909*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267909*0 + 3*215*FLEN/8, x4, x1, x2)

inst_89304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000000ffffff; valaddr_reg:x3; val_offset:267912*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267912*0 + 3*216*FLEN/8, x4, x1, x2)

inst_89305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000001ffffff; valaddr_reg:x3; val_offset:267915*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267915*0 + 3*217*FLEN/8, x4, x1, x2)

inst_89306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000003ffffff; valaddr_reg:x3; val_offset:267918*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267918*0 + 3*218*FLEN/8, x4, x1, x2)

inst_89307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000007ffffff; valaddr_reg:x3; val_offset:267921*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267921*0 + 3*219*FLEN/8, x4, x1, x2)

inst_89308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000000fffffff; valaddr_reg:x3; val_offset:267924*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267924*0 + 3*220*FLEN/8, x4, x1, x2)

inst_89309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000001fffffff; valaddr_reg:x3; val_offset:267927*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267927*0 + 3*221*FLEN/8, x4, x1, x2)

inst_89310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000003fffffff; valaddr_reg:x3; val_offset:267930*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267930*0 + 3*222*FLEN/8, x4, x1, x2)

inst_89311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000007fffffff; valaddr_reg:x3; val_offset:267933*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267933*0 + 3*223*FLEN/8, x4, x1, x2)

inst_89312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400000ffffffff; valaddr_reg:x3; val_offset:267936*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267936*0 + 3*224*FLEN/8, x4, x1, x2)

inst_89313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400001ffffffff; valaddr_reg:x3; val_offset:267939*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267939*0 + 3*225*FLEN/8, x4, x1, x2)

inst_89314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400003ffffffff; valaddr_reg:x3; val_offset:267942*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267942*0 + 3*226*FLEN/8, x4, x1, x2)

inst_89315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400007ffffffff; valaddr_reg:x3; val_offset:267945*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267945*0 + 3*227*FLEN/8, x4, x1, x2)

inst_89316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40000fffffffff; valaddr_reg:x3; val_offset:267948*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267948*0 + 3*228*FLEN/8, x4, x1, x2)

inst_89317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40001fffffffff; valaddr_reg:x3; val_offset:267951*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267951*0 + 3*229*FLEN/8, x4, x1, x2)

inst_89318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40003fffffffff; valaddr_reg:x3; val_offset:267954*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267954*0 + 3*230*FLEN/8, x4, x1, x2)

inst_89319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40007fffffffff; valaddr_reg:x3; val_offset:267957*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267957*0 + 3*231*FLEN/8, x4, x1, x2)

inst_89320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4000ffffffffff; valaddr_reg:x3; val_offset:267960*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267960*0 + 3*232*FLEN/8, x4, x1, x2)

inst_89321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4001ffffffffff; valaddr_reg:x3; val_offset:267963*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267963*0 + 3*233*FLEN/8, x4, x1, x2)

inst_89322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4003ffffffffff; valaddr_reg:x3; val_offset:267966*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267966*0 + 3*234*FLEN/8, x4, x1, x2)

inst_89323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4007ffffffffff; valaddr_reg:x3; val_offset:267969*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267969*0 + 3*235*FLEN/8, x4, x1, x2)

inst_89324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc400fffffffffff; valaddr_reg:x3; val_offset:267972*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267972*0 + 3*236*FLEN/8, x4, x1, x2)

inst_89325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc401fffffffffff; valaddr_reg:x3; val_offset:267975*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267975*0 + 3*237*FLEN/8, x4, x1, x2)

inst_89326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc403fffffffffff; valaddr_reg:x3; val_offset:267978*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267978*0 + 3*238*FLEN/8, x4, x1, x2)

inst_89327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc407fffffffffff; valaddr_reg:x3; val_offset:267981*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267981*0 + 3*239*FLEN/8, x4, x1, x2)

inst_89328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc40ffffffffffff; valaddr_reg:x3; val_offset:267984*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267984*0 + 3*240*FLEN/8, x4, x1, x2)

inst_89329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc41ffffffffffff; valaddr_reg:x3; val_offset:267987*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267987*0 + 3*241*FLEN/8, x4, x1, x2)

inst_89330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc43ffffffffffff; valaddr_reg:x3; val_offset:267990*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267990*0 + 3*242*FLEN/8, x4, x1, x2)

inst_89331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc47ffffffffffff; valaddr_reg:x3; val_offset:267993*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267993*0 + 3*243*FLEN/8, x4, x1, x2)

inst_89332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc48000000000000; valaddr_reg:x3; val_offset:267996*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267996*0 + 3*244*FLEN/8, x4, x1, x2)

inst_89333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4c000000000000; valaddr_reg:x3; val_offset:267999*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267999*0 + 3*245*FLEN/8, x4, x1, x2)

inst_89334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4e000000000000; valaddr_reg:x3; val_offset:268002*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268002*0 + 3*246*FLEN/8, x4, x1, x2)

inst_89335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4f000000000000; valaddr_reg:x3; val_offset:268005*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268005*0 + 3*247*FLEN/8, x4, x1, x2)

inst_89336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4f800000000000; valaddr_reg:x3; val_offset:268008*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268008*0 + 3*248*FLEN/8, x4, x1, x2)

inst_89337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fc00000000000; valaddr_reg:x3; val_offset:268011*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268011*0 + 3*249*FLEN/8, x4, x1, x2)

inst_89338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fe00000000000; valaddr_reg:x3; val_offset:268014*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268014*0 + 3*250*FLEN/8, x4, x1, x2)

inst_89339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ff00000000000; valaddr_reg:x3; val_offset:268017*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268017*0 + 3*251*FLEN/8, x4, x1, x2)

inst_89340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ff80000000000; valaddr_reg:x3; val_offset:268020*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268020*0 + 3*252*FLEN/8, x4, x1, x2)

inst_89341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffc0000000000; valaddr_reg:x3; val_offset:268023*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268023*0 + 3*253*FLEN/8, x4, x1, x2)

inst_89342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffe0000000000; valaddr_reg:x3; val_offset:268026*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268026*0 + 3*254*FLEN/8, x4, x1, x2)

inst_89343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fff0000000000; valaddr_reg:x3; val_offset:268029*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268029*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_89344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fff8000000000; valaddr_reg:x3; val_offset:268032*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268032*0 + 3*256*FLEN/8, x4, x1, x2)

inst_89345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffc000000000; valaddr_reg:x3; val_offset:268035*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268035*0 + 3*257*FLEN/8, x4, x1, x2)

inst_89346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffe000000000; valaddr_reg:x3; val_offset:268038*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268038*0 + 3*258*FLEN/8, x4, x1, x2)

inst_89347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffff000000000; valaddr_reg:x3; val_offset:268041*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268041*0 + 3*259*FLEN/8, x4, x1, x2)

inst_89348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffff800000000; valaddr_reg:x3; val_offset:268044*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268044*0 + 3*260*FLEN/8, x4, x1, x2)

inst_89349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffc00000000; valaddr_reg:x3; val_offset:268047*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268047*0 + 3*261*FLEN/8, x4, x1, x2)

inst_89350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffe00000000; valaddr_reg:x3; val_offset:268050*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268050*0 + 3*262*FLEN/8, x4, x1, x2)

inst_89351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffff00000000; valaddr_reg:x3; val_offset:268053*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268053*0 + 3*263*FLEN/8, x4, x1, x2)

inst_89352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffff80000000; valaddr_reg:x3; val_offset:268056*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268056*0 + 3*264*FLEN/8, x4, x1, x2)

inst_89353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffc0000000; valaddr_reg:x3; val_offset:268059*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268059*0 + 3*265*FLEN/8, x4, x1, x2)

inst_89354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffe0000000; valaddr_reg:x3; val_offset:268062*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268062*0 + 3*266*FLEN/8, x4, x1, x2)

inst_89355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffff0000000; valaddr_reg:x3; val_offset:268065*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268065*0 + 3*267*FLEN/8, x4, x1, x2)

inst_89356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffff8000000; valaddr_reg:x3; val_offset:268068*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268068*0 + 3*268*FLEN/8, x4, x1, x2)

inst_89357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffc000000; valaddr_reg:x3; val_offset:268071*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268071*0 + 3*269*FLEN/8, x4, x1, x2)

inst_89358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffe000000; valaddr_reg:x3; val_offset:268074*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268074*0 + 3*270*FLEN/8, x4, x1, x2)

inst_89359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffff000000; valaddr_reg:x3; val_offset:268077*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268077*0 + 3*271*FLEN/8, x4, x1, x2)

inst_89360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffff800000; valaddr_reg:x3; val_offset:268080*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268080*0 + 3*272*FLEN/8, x4, x1, x2)

inst_89361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffc00000; valaddr_reg:x3; val_offset:268083*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268083*0 + 3*273*FLEN/8, x4, x1, x2)

inst_89362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffe00000; valaddr_reg:x3; val_offset:268086*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268086*0 + 3*274*FLEN/8, x4, x1, x2)

inst_89363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffff00000; valaddr_reg:x3; val_offset:268089*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268089*0 + 3*275*FLEN/8, x4, x1, x2)

inst_89364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffff80000; valaddr_reg:x3; val_offset:268092*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268092*0 + 3*276*FLEN/8, x4, x1, x2)

inst_89365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffc0000; valaddr_reg:x3; val_offset:268095*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268095*0 + 3*277*FLEN/8, x4, x1, x2)

inst_89366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffe0000; valaddr_reg:x3; val_offset:268098*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268098*0 + 3*278*FLEN/8, x4, x1, x2)

inst_89367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffff0000; valaddr_reg:x3; val_offset:268101*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268101*0 + 3*279*FLEN/8, x4, x1, x2)

inst_89368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffff8000; valaddr_reg:x3; val_offset:268104*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268104*0 + 3*280*FLEN/8, x4, x1, x2)

inst_89369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffc000; valaddr_reg:x3; val_offset:268107*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268107*0 + 3*281*FLEN/8, x4, x1, x2)

inst_89370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffe000; valaddr_reg:x3; val_offset:268110*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268110*0 + 3*282*FLEN/8, x4, x1, x2)

inst_89371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffff000; valaddr_reg:x3; val_offset:268113*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268113*0 + 3*283*FLEN/8, x4, x1, x2)

inst_89372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffff800; valaddr_reg:x3; val_offset:268116*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268116*0 + 3*284*FLEN/8, x4, x1, x2)

inst_89373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffffc00; valaddr_reg:x3; val_offset:268119*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268119*0 + 3*285*FLEN/8, x4, x1, x2)

inst_89374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffffe00; valaddr_reg:x3; val_offset:268122*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268122*0 + 3*286*FLEN/8, x4, x1, x2)

inst_89375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffff00; valaddr_reg:x3; val_offset:268125*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268125*0 + 3*287*FLEN/8, x4, x1, x2)

inst_89376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffff80; valaddr_reg:x3; val_offset:268128*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268128*0 + 3*288*FLEN/8, x4, x1, x2)

inst_89377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffffc0; valaddr_reg:x3; val_offset:268131*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268131*0 + 3*289*FLEN/8, x4, x1, x2)

inst_89378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffffe0; valaddr_reg:x3; val_offset:268134*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268134*0 + 3*290*FLEN/8, x4, x1, x2)

inst_89379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffffff0; valaddr_reg:x3; val_offset:268137*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268137*0 + 3*291*FLEN/8, x4, x1, x2)

inst_89380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffffff8; valaddr_reg:x3; val_offset:268140*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268140*0 + 3*292*FLEN/8, x4, x1, x2)

inst_89381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffffffc; valaddr_reg:x3; val_offset:268143*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268143*0 + 3*293*FLEN/8, x4, x1, x2)

inst_89382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4ffffffffffffe; valaddr_reg:x3; val_offset:268146*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268146*0 + 3*294*FLEN/8, x4, x1, x2)

inst_89383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbc4fffffffffffff; valaddr_reg:x3; val_offset:268149*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268149*0 + 3*295*FLEN/8, x4, x1, x2)

inst_89384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:268152*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268152*0 + 3*296*FLEN/8, x4, x1, x2)

inst_89385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:268155*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268155*0 + 3*297*FLEN/8, x4, x1, x2)

inst_89386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:268158*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268158*0 + 3*298*FLEN/8, x4, x1, x2)

inst_89387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:268161*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268161*0 + 3*299*FLEN/8, x4, x1, x2)

inst_89388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:268164*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268164*0 + 3*300*FLEN/8, x4, x1, x2)

inst_89389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:268167*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268167*0 + 3*301*FLEN/8, x4, x1, x2)

inst_89390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:268170*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268170*0 + 3*302*FLEN/8, x4, x1, x2)

inst_89391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:268173*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268173*0 + 3*303*FLEN/8, x4, x1, x2)

inst_89392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:268176*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268176*0 + 3*304*FLEN/8, x4, x1, x2)

inst_89393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:268179*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268179*0 + 3*305*FLEN/8, x4, x1, x2)

inst_89394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:268182*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268182*0 + 3*306*FLEN/8, x4, x1, x2)

inst_89395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:268185*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268185*0 + 3*307*FLEN/8, x4, x1, x2)

inst_89396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:268188*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268188*0 + 3*308*FLEN/8, x4, x1, x2)

inst_89397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:268191*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268191*0 + 3*309*FLEN/8, x4, x1, x2)

inst_89398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:268194*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268194*0 + 3*310*FLEN/8, x4, x1, x2)

inst_89399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:268197*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268197*0 + 3*311*FLEN/8, x4, x1, x2)

inst_89400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:268200*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268200*0 + 3*312*FLEN/8, x4, x1, x2)

inst_89401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:268203*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268203*0 + 3*313*FLEN/8, x4, x1, x2)

inst_89402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:268206*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268206*0 + 3*314*FLEN/8, x4, x1, x2)

inst_89403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:268209*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268209*0 + 3*315*FLEN/8, x4, x1, x2)

inst_89404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:268212*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268212*0 + 3*316*FLEN/8, x4, x1, x2)

inst_89405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc99ac0cd3b3ca and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e6e456e4cbd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac99ac0cd3b3ca; op2val:0x9fc1e6e456e4cbd8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:268215*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268215*0 + 3*317*FLEN/8, x4, x1, x2)

inst_89406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:268218*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268218*0 + 3*318*FLEN/8, x4, x1, x2)

inst_89407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:268221*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268221*0 + 3*319*FLEN/8, x4, x1, x2)

inst_89408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:268224*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268224*0 + 3*320*FLEN/8, x4, x1, x2)

inst_89409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:268227*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268227*0 + 3*321*FLEN/8, x4, x1, x2)

inst_89410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:268230*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268230*0 + 3*322*FLEN/8, x4, x1, x2)

inst_89411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:268233*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268233*0 + 3*323*FLEN/8, x4, x1, x2)

inst_89412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:268236*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268236*0 + 3*324*FLEN/8, x4, x1, x2)

inst_89413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:268239*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268239*0 + 3*325*FLEN/8, x4, x1, x2)

inst_89414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:268242*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268242*0 + 3*326*FLEN/8, x4, x1, x2)

inst_89415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:268245*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268245*0 + 3*327*FLEN/8, x4, x1, x2)

inst_89416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:268248*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268248*0 + 3*328*FLEN/8, x4, x1, x2)

inst_89417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:268251*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268251*0 + 3*329*FLEN/8, x4, x1, x2)

inst_89418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:268254*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268254*0 + 3*330*FLEN/8, x4, x1, x2)

inst_89419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:268257*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268257*0 + 3*331*FLEN/8, x4, x1, x2)

inst_89420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:268260*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268260*0 + 3*332*FLEN/8, x4, x1, x2)

inst_89421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:268263*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268263*0 + 3*333*FLEN/8, x4, x1, x2)

inst_89422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:268266*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268266*0 + 3*334*FLEN/8, x4, x1, x2)

inst_89423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:268269*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268269*0 + 3*335*FLEN/8, x4, x1, x2)

inst_89424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:268272*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268272*0 + 3*336*FLEN/8, x4, x1, x2)

inst_89425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:268275*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268275*0 + 3*337*FLEN/8, x4, x1, x2)

inst_89426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:268278*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268278*0 + 3*338*FLEN/8, x4, x1, x2)

inst_89427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:268281*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268281*0 + 3*339*FLEN/8, x4, x1, x2)

inst_89428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:268284*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268284*0 + 3*340*FLEN/8, x4, x1, x2)

inst_89429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:268287*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268287*0 + 3*341*FLEN/8, x4, x1, x2)

inst_89430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:268290*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268290*0 + 3*342*FLEN/8, x4, x1, x2)

inst_89431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:268293*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268293*0 + 3*343*FLEN/8, x4, x1, x2)

inst_89432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:268296*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268296*0 + 3*344*FLEN/8, x4, x1, x2)

inst_89433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:268299*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268299*0 + 3*345*FLEN/8, x4, x1, x2)

inst_89434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:268302*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268302*0 + 3*346*FLEN/8, x4, x1, x2)

inst_89435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:268305*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268305*0 + 3*347*FLEN/8, x4, x1, x2)

inst_89436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:268308*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268308*0 + 3*348*FLEN/8, x4, x1, x2)

inst_89437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:268311*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268311*0 + 3*349*FLEN/8, x4, x1, x2)

inst_89438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:268314*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268314*0 + 3*350*FLEN/8, x4, x1, x2)

inst_89439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:268317*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268317*0 + 3*351*FLEN/8, x4, x1, x2)

inst_89440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:268320*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268320*0 + 3*352*FLEN/8, x4, x1, x2)

inst_89441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:268323*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268323*0 + 3*353*FLEN/8, x4, x1, x2)

inst_89442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:268326*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268326*0 + 3*354*FLEN/8, x4, x1, x2)

inst_89443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:268329*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268329*0 + 3*355*FLEN/8, x4, x1, x2)

inst_89444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:268332*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268332*0 + 3*356*FLEN/8, x4, x1, x2)

inst_89445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:268335*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268335*0 + 3*357*FLEN/8, x4, x1, x2)

inst_89446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:268338*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268338*0 + 3*358*FLEN/8, x4, x1, x2)

inst_89447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:268341*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268341*0 + 3*359*FLEN/8, x4, x1, x2)

inst_89448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:268344*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268344*0 + 3*360*FLEN/8, x4, x1, x2)

inst_89449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:268347*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268347*0 + 3*361*FLEN/8, x4, x1, x2)

inst_89450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:268350*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268350*0 + 3*362*FLEN/8, x4, x1, x2)

inst_89451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:268353*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268353*0 + 3*363*FLEN/8, x4, x1, x2)

inst_89452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:268356*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268356*0 + 3*364*FLEN/8, x4, x1, x2)

inst_89453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:268359*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268359*0 + 3*365*FLEN/8, x4, x1, x2)

inst_89454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:268362*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268362*0 + 3*366*FLEN/8, x4, x1, x2)

inst_89455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:268365*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268365*0 + 3*367*FLEN/8, x4, x1, x2)

inst_89456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:268368*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268368*0 + 3*368*FLEN/8, x4, x1, x2)

inst_89457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:268371*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268371*0 + 3*369*FLEN/8, x4, x1, x2)

inst_89458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:268374*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268374*0 + 3*370*FLEN/8, x4, x1, x2)

inst_89459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:268377*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268377*0 + 3*371*FLEN/8, x4, x1, x2)

inst_89460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:268380*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268380*0 + 3*372*FLEN/8, x4, x1, x2)

inst_89461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:268383*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268383*0 + 3*373*FLEN/8, x4, x1, x2)

inst_89462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:268386*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268386*0 + 3*374*FLEN/8, x4, x1, x2)

inst_89463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:268389*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268389*0 + 3*375*FLEN/8, x4, x1, x2)

inst_89464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:268392*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268392*0 + 3*376*FLEN/8, x4, x1, x2)

inst_89465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:268395*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268395*0 + 3*377*FLEN/8, x4, x1, x2)

inst_89466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:268398*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268398*0 + 3*378*FLEN/8, x4, x1, x2)

inst_89467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:268401*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268401*0 + 3*379*FLEN/8, x4, x1, x2)

inst_89468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:268404*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268404*0 + 3*380*FLEN/8, x4, x1, x2)

inst_89469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:268407*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268407*0 + 3*381*FLEN/8, x4, x1, x2)

inst_89470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:268410*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268410*0 + 3*382*FLEN/8, x4, x1, x2)

inst_89471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:268413*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268413*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_89472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:268416*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268416*0 + 3*384*FLEN/8, x4, x1, x2)

inst_89473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:268419*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268419*0 + 3*385*FLEN/8, x4, x1, x2)

inst_89474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:268422*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268422*0 + 3*386*FLEN/8, x4, x1, x2)

inst_89475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:268425*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268425*0 + 3*387*FLEN/8, x4, x1, x2)

inst_89476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:268428*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268428*0 + 3*388*FLEN/8, x4, x1, x2)

inst_89477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:268431*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268431*0 + 3*389*FLEN/8, x4, x1, x2)

inst_89478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:268434*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268434*0 + 3*390*FLEN/8, x4, x1, x2)

inst_89479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:268437*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268437*0 + 3*391*FLEN/8, x4, x1, x2)

inst_89480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:268440*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268440*0 + 3*392*FLEN/8, x4, x1, x2)

inst_89481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:268443*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268443*0 + 3*393*FLEN/8, x4, x1, x2)

inst_89482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:268446*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268446*0 + 3*394*FLEN/8, x4, x1, x2)

inst_89483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:268449*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268449*0 + 3*395*FLEN/8, x4, x1, x2)

inst_89484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:268452*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268452*0 + 3*396*FLEN/8, x4, x1, x2)

inst_89485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:268455*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268455*0 + 3*397*FLEN/8, x4, x1, x2)

inst_89486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:268458*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268458*0 + 3*398*FLEN/8, x4, x1, x2)

inst_89487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:268461*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268461*0 + 3*399*FLEN/8, x4, x1, x2)

inst_89488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:268464*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268464*0 + 3*400*FLEN/8, x4, x1, x2)

inst_89489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:268467*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268467*0 + 3*401*FLEN/8, x4, x1, x2)

inst_89490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:268470*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268470*0 + 3*402*FLEN/8, x4, x1, x2)

inst_89491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:268473*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268473*0 + 3*403*FLEN/8, x4, x1, x2)

inst_89492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:268476*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268476*0 + 3*404*FLEN/8, x4, x1, x2)

inst_89493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:268479*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268479*0 + 3*405*FLEN/8, x4, x1, x2)

inst_89494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:268482*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268482*0 + 3*406*FLEN/8, x4, x1, x2)

inst_89495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:268485*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268485*0 + 3*407*FLEN/8, x4, x1, x2)

inst_89496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:268488*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268488*0 + 3*408*FLEN/8, x4, x1, x2)

inst_89497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:268491*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268491*0 + 3*409*FLEN/8, x4, x1, x2)

inst_89498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:268494*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268494*0 + 3*410*FLEN/8, x4, x1, x2)

inst_89499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:268497*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268497*0 + 3*411*FLEN/8, x4, x1, x2)

inst_89500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:268500*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268500*0 + 3*412*FLEN/8, x4, x1, x2)

inst_89501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:268503*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268503*0 + 3*413*FLEN/8, x4, x1, x2)

inst_89502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:268506*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268506*0 + 3*414*FLEN/8, x4, x1, x2)

inst_89503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:268509*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268509*0 + 3*415*FLEN/8, x4, x1, x2)

inst_89504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:268512*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268512*0 + 3*416*FLEN/8, x4, x1, x2)

inst_89505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:268515*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268515*0 + 3*417*FLEN/8, x4, x1, x2)

inst_89506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:268518*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268518*0 + 3*418*FLEN/8, x4, x1, x2)

inst_89507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:268521*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268521*0 + 3*419*FLEN/8, x4, x1, x2)

inst_89508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:268524*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268524*0 + 3*420*FLEN/8, x4, x1, x2)

inst_89509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:268527*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268527*0 + 3*421*FLEN/8, x4, x1, x2)

inst_89510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:268530*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268530*0 + 3*422*FLEN/8, x4, x1, x2)

inst_89511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:268533*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268533*0 + 3*423*FLEN/8, x4, x1, x2)

inst_89512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:268536*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268536*0 + 3*424*FLEN/8, x4, x1, x2)

inst_89513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:268539*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268539*0 + 3*425*FLEN/8, x4, x1, x2)

inst_89514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:268542*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268542*0 + 3*426*FLEN/8, x4, x1, x2)

inst_89515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:268545*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268545*0 + 3*427*FLEN/8, x4, x1, x2)

inst_89516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:268548*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268548*0 + 3*428*FLEN/8, x4, x1, x2)

inst_89517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:268551*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268551*0 + 3*429*FLEN/8, x4, x1, x2)

inst_89518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:268554*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268554*0 + 3*430*FLEN/8, x4, x1, x2)

inst_89519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:268557*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268557*0 + 3*431*FLEN/8, x4, x1, x2)

inst_89520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:268560*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268560*0 + 3*432*FLEN/8, x4, x1, x2)

inst_89521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:268563*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268563*0 + 3*433*FLEN/8, x4, x1, x2)

inst_89522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:268566*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268566*0 + 3*434*FLEN/8, x4, x1, x2)

inst_89523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:268569*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268569*0 + 3*435*FLEN/8, x4, x1, x2)

inst_89524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:268572*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268572*0 + 3*436*FLEN/8, x4, x1, x2)

inst_89525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:268575*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268575*0 + 3*437*FLEN/8, x4, x1, x2)

inst_89526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:268578*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268578*0 + 3*438*FLEN/8, x4, x1, x2)

inst_89527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:268581*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268581*0 + 3*439*FLEN/8, x4, x1, x2)

inst_89528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:268584*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268584*0 + 3*440*FLEN/8, x4, x1, x2)

inst_89529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:268587*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268587*0 + 3*441*FLEN/8, x4, x1, x2)

inst_89530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:268590*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268590*0 + 3*442*FLEN/8, x4, x1, x2)

inst_89531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca73a6994ac3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca73a6994ac3a; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:268593*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268593*0 + 3*443*FLEN/8, x4, x1, x2)

inst_89532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:268596*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268596*0 + 3*444*FLEN/8, x4, x1, x2)

inst_89533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:268599*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268599*0 + 3*445*FLEN/8, x4, x1, x2)

inst_89534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:268602*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268602*0 + 3*446*FLEN/8, x4, x1, x2)

inst_89535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:268605*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268605*0 + 3*447*FLEN/8, x4, x1, x2)

inst_89536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:268608*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268608*0 + 3*448*FLEN/8, x4, x1, x2)

inst_89537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:268611*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268611*0 + 3*449*FLEN/8, x4, x1, x2)

inst_89538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:268614*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268614*0 + 3*450*FLEN/8, x4, x1, x2)

inst_89539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:268617*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268617*0 + 3*451*FLEN/8, x4, x1, x2)

inst_89540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:268620*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268620*0 + 3*452*FLEN/8, x4, x1, x2)

inst_89541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:268623*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268623*0 + 3*453*FLEN/8, x4, x1, x2)

inst_89542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:268626*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268626*0 + 3*454*FLEN/8, x4, x1, x2)

inst_89543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:268629*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268629*0 + 3*455*FLEN/8, x4, x1, x2)

inst_89544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:268632*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268632*0 + 3*456*FLEN/8, x4, x1, x2)

inst_89545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:268635*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268635*0 + 3*457*FLEN/8, x4, x1, x2)

inst_89546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:268638*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268638*0 + 3*458*FLEN/8, x4, x1, x2)

inst_89547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:268641*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268641*0 + 3*459*FLEN/8, x4, x1, x2)

inst_89548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:268644*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268644*0 + 3*460*FLEN/8, x4, x1, x2)

inst_89549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:268647*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268647*0 + 3*461*FLEN/8, x4, x1, x2)

inst_89550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:268650*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268650*0 + 3*462*FLEN/8, x4, x1, x2)

inst_89551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:268653*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268653*0 + 3*463*FLEN/8, x4, x1, x2)

inst_89552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:268656*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268656*0 + 3*464*FLEN/8, x4, x1, x2)

inst_89553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:268659*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268659*0 + 3*465*FLEN/8, x4, x1, x2)

inst_89554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:268662*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268662*0 + 3*466*FLEN/8, x4, x1, x2)

inst_89555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:268665*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268665*0 + 3*467*FLEN/8, x4, x1, x2)

inst_89556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:268668*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268668*0 + 3*468*FLEN/8, x4, x1, x2)

inst_89557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:268671*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268671*0 + 3*469*FLEN/8, x4, x1, x2)

inst_89558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:268674*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268674*0 + 3*470*FLEN/8, x4, x1, x2)

inst_89559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:268677*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268677*0 + 3*471*FLEN/8, x4, x1, x2)

inst_89560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:268680*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268680*0 + 3*472*FLEN/8, x4, x1, x2)

inst_89561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:268683*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268683*0 + 3*473*FLEN/8, x4, x1, x2)

inst_89562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:268686*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268686*0 + 3*474*FLEN/8, x4, x1, x2)

inst_89563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:268689*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268689*0 + 3*475*FLEN/8, x4, x1, x2)

inst_89564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:268692*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268692*0 + 3*476*FLEN/8, x4, x1, x2)

inst_89565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:268695*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268695*0 + 3*477*FLEN/8, x4, x1, x2)

inst_89566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:268698*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268698*0 + 3*478*FLEN/8, x4, x1, x2)

inst_89567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:268701*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268701*0 + 3*479*FLEN/8, x4, x1, x2)

inst_89568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:268704*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268704*0 + 3*480*FLEN/8, x4, x1, x2)

inst_89569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:268707*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268707*0 + 3*481*FLEN/8, x4, x1, x2)

inst_89570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:268710*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268710*0 + 3*482*FLEN/8, x4, x1, x2)

inst_89571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:268713*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268713*0 + 3*483*FLEN/8, x4, x1, x2)

inst_89572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:268716*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268716*0 + 3*484*FLEN/8, x4, x1, x2)

inst_89573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:268719*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268719*0 + 3*485*FLEN/8, x4, x1, x2)

inst_89574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:268722*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268722*0 + 3*486*FLEN/8, x4, x1, x2)

inst_89575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:268725*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268725*0 + 3*487*FLEN/8, x4, x1, x2)

inst_89576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:268728*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268728*0 + 3*488*FLEN/8, x4, x1, x2)

inst_89577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:268731*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268731*0 + 3*489*FLEN/8, x4, x1, x2)

inst_89578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:268734*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268734*0 + 3*490*FLEN/8, x4, x1, x2)

inst_89579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:268737*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268737*0 + 3*491*FLEN/8, x4, x1, x2)

inst_89580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:268740*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268740*0 + 3*492*FLEN/8, x4, x1, x2)

inst_89581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:268743*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268743*0 + 3*493*FLEN/8, x4, x1, x2)

inst_89582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:268746*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268746*0 + 3*494*FLEN/8, x4, x1, x2)

inst_89583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:268749*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268749*0 + 3*495*FLEN/8, x4, x1, x2)

inst_89584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:268752*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268752*0 + 3*496*FLEN/8, x4, x1, x2)

inst_89585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:268755*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268755*0 + 3*497*FLEN/8, x4, x1, x2)

inst_89586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:268758*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268758*0 + 3*498*FLEN/8, x4, x1, x2)

inst_89587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:268761*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268761*0 + 3*499*FLEN/8, x4, x1, x2)

inst_89588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:268764*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268764*0 + 3*500*FLEN/8, x4, x1, x2)

inst_89589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:268767*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268767*0 + 3*501*FLEN/8, x4, x1, x2)

inst_89590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:268770*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268770*0 + 3*502*FLEN/8, x4, x1, x2)

inst_89591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:268773*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268773*0 + 3*503*FLEN/8, x4, x1, x2)

inst_89592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:268776*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268776*0 + 3*504*FLEN/8, x4, x1, x2)

inst_89593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:268779*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268779*0 + 3*505*FLEN/8, x4, x1, x2)

inst_89594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:268782*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268782*0 + 3*506*FLEN/8, x4, x1, x2)

inst_89595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:268785*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268785*0 + 3*507*FLEN/8, x4, x1, x2)

inst_89596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:268788*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268788*0 + 3*508*FLEN/8, x4, x1, x2)

inst_89597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:268791*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268791*0 + 3*509*FLEN/8, x4, x1, x2)

inst_89598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:268794*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268794*0 + 3*510*FLEN/8, x4, x1, x2)

inst_89599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:268797*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268797*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_89600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:268800*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268800*0 + 3*512*FLEN/8, x4, x1, x2)

inst_89601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:268803*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268803*0 + 3*513*FLEN/8, x4, x1, x2)

inst_89602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:268806*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268806*0 + 3*514*FLEN/8, x4, x1, x2)

inst_89603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:268809*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268809*0 + 3*515*FLEN/8, x4, x1, x2)

inst_89604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:268812*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268812*0 + 3*516*FLEN/8, x4, x1, x2)

inst_89605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:268815*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268815*0 + 3*517*FLEN/8, x4, x1, x2)

inst_89606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:268818*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268818*0 + 3*518*FLEN/8, x4, x1, x2)

inst_89607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:268821*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268821*0 + 3*519*FLEN/8, x4, x1, x2)

inst_89608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:268824*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268824*0 + 3*520*FLEN/8, x4, x1, x2)

inst_89609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:268827*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268827*0 + 3*521*FLEN/8, x4, x1, x2)

inst_89610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:268830*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268830*0 + 3*522*FLEN/8, x4, x1, x2)

inst_89611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:268833*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268833*0 + 3*523*FLEN/8, x4, x1, x2)

inst_89612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:268836*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268836*0 + 3*524*FLEN/8, x4, x1, x2)

inst_89613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:268839*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268839*0 + 3*525*FLEN/8, x4, x1, x2)

inst_89614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:268842*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268842*0 + 3*526*FLEN/8, x4, x1, x2)

inst_89615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:268845*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268845*0 + 3*527*FLEN/8, x4, x1, x2)

inst_89616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:268848*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268848*0 + 3*528*FLEN/8, x4, x1, x2)

inst_89617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:268851*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268851*0 + 3*529*FLEN/8, x4, x1, x2)

inst_89618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:268854*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268854*0 + 3*530*FLEN/8, x4, x1, x2)

inst_89619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:268857*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268857*0 + 3*531*FLEN/8, x4, x1, x2)

inst_89620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:268860*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268860*0 + 3*532*FLEN/8, x4, x1, x2)

inst_89621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:268863*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268863*0 + 3*533*FLEN/8, x4, x1, x2)

inst_89622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:268866*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268866*0 + 3*534*FLEN/8, x4, x1, x2)

inst_89623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:268869*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268869*0 + 3*535*FLEN/8, x4, x1, x2)

inst_89624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:268872*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268872*0 + 3*536*FLEN/8, x4, x1, x2)

inst_89625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:268875*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268875*0 + 3*537*FLEN/8, x4, x1, x2)

inst_89626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:268878*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268878*0 + 3*538*FLEN/8, x4, x1, x2)

inst_89627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:268881*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268881*0 + 3*539*FLEN/8, x4, x1, x2)

inst_89628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:268884*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268884*0 + 3*540*FLEN/8, x4, x1, x2)

inst_89629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:268887*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268887*0 + 3*541*FLEN/8, x4, x1, x2)

inst_89630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:268890*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268890*0 + 3*542*FLEN/8, x4, x1, x2)

inst_89631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:268893*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268893*0 + 3*543*FLEN/8, x4, x1, x2)

inst_89632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:268896*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268896*0 + 3*544*FLEN/8, x4, x1, x2)

inst_89633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:268899*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268899*0 + 3*545*FLEN/8, x4, x1, x2)

inst_89634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:268902*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268902*0 + 3*546*FLEN/8, x4, x1, x2)

inst_89635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:268905*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268905*0 + 3*547*FLEN/8, x4, x1, x2)

inst_89636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:268908*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268908*0 + 3*548*FLEN/8, x4, x1, x2)

inst_89637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:268911*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268911*0 + 3*549*FLEN/8, x4, x1, x2)

inst_89638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:268914*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268914*0 + 3*550*FLEN/8, x4, x1, x2)

inst_89639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:268917*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268917*0 + 3*551*FLEN/8, x4, x1, x2)

inst_89640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:268920*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268920*0 + 3*552*FLEN/8, x4, x1, x2)

inst_89641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:268923*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268923*0 + 3*553*FLEN/8, x4, x1, x2)

inst_89642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:268926*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268926*0 + 3*554*FLEN/8, x4, x1, x2)

inst_89643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:268929*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268929*0 + 3*555*FLEN/8, x4, x1, x2)

inst_89644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:268932*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268932*0 + 3*556*FLEN/8, x4, x1, x2)

inst_89645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:268935*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268935*0 + 3*557*FLEN/8, x4, x1, x2)

inst_89646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:268938*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268938*0 + 3*558*FLEN/8, x4, x1, x2)

inst_89647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:268941*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268941*0 + 3*559*FLEN/8, x4, x1, x2)

inst_89648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:268944*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268944*0 + 3*560*FLEN/8, x4, x1, x2)

inst_89649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:268947*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268947*0 + 3*561*FLEN/8, x4, x1, x2)

inst_89650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:268950*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268950*0 + 3*562*FLEN/8, x4, x1, x2)

inst_89651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:268953*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268953*0 + 3*563*FLEN/8, x4, x1, x2)

inst_89652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:268956*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268956*0 + 3*564*FLEN/8, x4, x1, x2)

inst_89653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:268959*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268959*0 + 3*565*FLEN/8, x4, x1, x2)

inst_89654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:268962*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268962*0 + 3*566*FLEN/8, x4, x1, x2)

inst_89655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:268965*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268965*0 + 3*567*FLEN/8, x4, x1, x2)

inst_89656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:268968*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268968*0 + 3*568*FLEN/8, x4, x1, x2)

inst_89657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca88dbae2cccd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca88dbae2cccd; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:268971*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268971*0 + 3*569*FLEN/8, x4, x1, x2)

inst_89658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000000000; valaddr_reg:x3; val_offset:268974*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268974*0 + 3*570*FLEN/8, x4, x1, x2)

inst_89659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000000001; valaddr_reg:x3; val_offset:268977*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268977*0 + 3*571*FLEN/8, x4, x1, x2)

inst_89660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000000003; valaddr_reg:x3; val_offset:268980*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268980*0 + 3*572*FLEN/8, x4, x1, x2)

inst_89661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000000007; valaddr_reg:x3; val_offset:268983*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268983*0 + 3*573*FLEN/8, x4, x1, x2)

inst_89662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000000000f; valaddr_reg:x3; val_offset:268986*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268986*0 + 3*574*FLEN/8, x4, x1, x2)

inst_89663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000000001f; valaddr_reg:x3; val_offset:268989*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268989*0 + 3*575*FLEN/8, x4, x1, x2)

inst_89664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000000003f; valaddr_reg:x3; val_offset:268992*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268992*0 + 3*576*FLEN/8, x4, x1, x2)

inst_89665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000000007f; valaddr_reg:x3; val_offset:268995*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268995*0 + 3*577*FLEN/8, x4, x1, x2)

inst_89666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000000000ff; valaddr_reg:x3; val_offset:268998*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 268998*0 + 3*578*FLEN/8, x4, x1, x2)

inst_89667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000000001ff; valaddr_reg:x3; val_offset:269001*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269001*0 + 3*579*FLEN/8, x4, x1, x2)

inst_89668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000000003ff; valaddr_reg:x3; val_offset:269004*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269004*0 + 3*580*FLEN/8, x4, x1, x2)

inst_89669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000000007ff; valaddr_reg:x3; val_offset:269007*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269007*0 + 3*581*FLEN/8, x4, x1, x2)

inst_89670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000000fff; valaddr_reg:x3; val_offset:269010*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269010*0 + 3*582*FLEN/8, x4, x1, x2)

inst_89671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000001fff; valaddr_reg:x3; val_offset:269013*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269013*0 + 3*583*FLEN/8, x4, x1, x2)

inst_89672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000003fff; valaddr_reg:x3; val_offset:269016*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269016*0 + 3*584*FLEN/8, x4, x1, x2)

inst_89673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000007fff; valaddr_reg:x3; val_offset:269019*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269019*0 + 3*585*FLEN/8, x4, x1, x2)

inst_89674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000000ffff; valaddr_reg:x3; val_offset:269022*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269022*0 + 3*586*FLEN/8, x4, x1, x2)

inst_89675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000001ffff; valaddr_reg:x3; val_offset:269025*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269025*0 + 3*587*FLEN/8, x4, x1, x2)

inst_89676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000003ffff; valaddr_reg:x3; val_offset:269028*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269028*0 + 3*588*FLEN/8, x4, x1, x2)

inst_89677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000007ffff; valaddr_reg:x3; val_offset:269031*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269031*0 + 3*589*FLEN/8, x4, x1, x2)

inst_89678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000000fffff; valaddr_reg:x3; val_offset:269034*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269034*0 + 3*590*FLEN/8, x4, x1, x2)

inst_89679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000001fffff; valaddr_reg:x3; val_offset:269037*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269037*0 + 3*591*FLEN/8, x4, x1, x2)

inst_89680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000003fffff; valaddr_reg:x3; val_offset:269040*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269040*0 + 3*592*FLEN/8, x4, x1, x2)

inst_89681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000007fffff; valaddr_reg:x3; val_offset:269043*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269043*0 + 3*593*FLEN/8, x4, x1, x2)

inst_89682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000000ffffff; valaddr_reg:x3; val_offset:269046*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269046*0 + 3*594*FLEN/8, x4, x1, x2)

inst_89683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000001ffffff; valaddr_reg:x3; val_offset:269049*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269049*0 + 3*595*FLEN/8, x4, x1, x2)

inst_89684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000003ffffff; valaddr_reg:x3; val_offset:269052*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269052*0 + 3*596*FLEN/8, x4, x1, x2)

inst_89685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000007ffffff; valaddr_reg:x3; val_offset:269055*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269055*0 + 3*597*FLEN/8, x4, x1, x2)

inst_89686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000000fffffff; valaddr_reg:x3; val_offset:269058*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269058*0 + 3*598*FLEN/8, x4, x1, x2)

inst_89687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000001fffffff; valaddr_reg:x3; val_offset:269061*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269061*0 + 3*599*FLEN/8, x4, x1, x2)

inst_89688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000003fffffff; valaddr_reg:x3; val_offset:269064*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269064*0 + 3*600*FLEN/8, x4, x1, x2)

inst_89689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000007fffffff; valaddr_reg:x3; val_offset:269067*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269067*0 + 3*601*FLEN/8, x4, x1, x2)

inst_89690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600000ffffffff; valaddr_reg:x3; val_offset:269070*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269070*0 + 3*602*FLEN/8, x4, x1, x2)

inst_89691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600001ffffffff; valaddr_reg:x3; val_offset:269073*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269073*0 + 3*603*FLEN/8, x4, x1, x2)

inst_89692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600003ffffffff; valaddr_reg:x3; val_offset:269076*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269076*0 + 3*604*FLEN/8, x4, x1, x2)

inst_89693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600007ffffffff; valaddr_reg:x3; val_offset:269079*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269079*0 + 3*605*FLEN/8, x4, x1, x2)

inst_89694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60000fffffffff; valaddr_reg:x3; val_offset:269082*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269082*0 + 3*606*FLEN/8, x4, x1, x2)

inst_89695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60001fffffffff; valaddr_reg:x3; val_offset:269085*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269085*0 + 3*607*FLEN/8, x4, x1, x2)

inst_89696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60003fffffffff; valaddr_reg:x3; val_offset:269088*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269088*0 + 3*608*FLEN/8, x4, x1, x2)

inst_89697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60007fffffffff; valaddr_reg:x3; val_offset:269091*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269091*0 + 3*609*FLEN/8, x4, x1, x2)

inst_89698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6000ffffffffff; valaddr_reg:x3; val_offset:269094*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269094*0 + 3*610*FLEN/8, x4, x1, x2)

inst_89699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6001ffffffffff; valaddr_reg:x3; val_offset:269097*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269097*0 + 3*611*FLEN/8, x4, x1, x2)

inst_89700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6003ffffffffff; valaddr_reg:x3; val_offset:269100*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269100*0 + 3*612*FLEN/8, x4, x1, x2)

inst_89701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6007ffffffffff; valaddr_reg:x3; val_offset:269103*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269103*0 + 3*613*FLEN/8, x4, x1, x2)

inst_89702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b600fffffffffff; valaddr_reg:x3; val_offset:269106*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269106*0 + 3*614*FLEN/8, x4, x1, x2)

inst_89703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b601fffffffffff; valaddr_reg:x3; val_offset:269109*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269109*0 + 3*615*FLEN/8, x4, x1, x2)

inst_89704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b603fffffffffff; valaddr_reg:x3; val_offset:269112*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269112*0 + 3*616*FLEN/8, x4, x1, x2)

inst_89705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b607fffffffffff; valaddr_reg:x3; val_offset:269115*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269115*0 + 3*617*FLEN/8, x4, x1, x2)

inst_89706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b60ffffffffffff; valaddr_reg:x3; val_offset:269118*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269118*0 + 3*618*FLEN/8, x4, x1, x2)

inst_89707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b61ffffffffffff; valaddr_reg:x3; val_offset:269121*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269121*0 + 3*619*FLEN/8, x4, x1, x2)

inst_89708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b63ffffffffffff; valaddr_reg:x3; val_offset:269124*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269124*0 + 3*620*FLEN/8, x4, x1, x2)

inst_89709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b67ffffffffffff; valaddr_reg:x3; val_offset:269127*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269127*0 + 3*621*FLEN/8, x4, x1, x2)

inst_89710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b68000000000000; valaddr_reg:x3; val_offset:269130*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269130*0 + 3*622*FLEN/8, x4, x1, x2)

inst_89711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6c000000000000; valaddr_reg:x3; val_offset:269133*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269133*0 + 3*623*FLEN/8, x4, x1, x2)

inst_89712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6e000000000000; valaddr_reg:x3; val_offset:269136*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269136*0 + 3*624*FLEN/8, x4, x1, x2)

inst_89713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6f000000000000; valaddr_reg:x3; val_offset:269139*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269139*0 + 3*625*FLEN/8, x4, x1, x2)

inst_89714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6f800000000000; valaddr_reg:x3; val_offset:269142*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269142*0 + 3*626*FLEN/8, x4, x1, x2)

inst_89715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fc00000000000; valaddr_reg:x3; val_offset:269145*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269145*0 + 3*627*FLEN/8, x4, x1, x2)

inst_89716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fe00000000000; valaddr_reg:x3; val_offset:269148*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269148*0 + 3*628*FLEN/8, x4, x1, x2)

inst_89717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ff00000000000; valaddr_reg:x3; val_offset:269151*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269151*0 + 3*629*FLEN/8, x4, x1, x2)

inst_89718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ff80000000000; valaddr_reg:x3; val_offset:269154*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269154*0 + 3*630*FLEN/8, x4, x1, x2)

inst_89719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffc0000000000; valaddr_reg:x3; val_offset:269157*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269157*0 + 3*631*FLEN/8, x4, x1, x2)

inst_89720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffe0000000000; valaddr_reg:x3; val_offset:269160*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269160*0 + 3*632*FLEN/8, x4, x1, x2)

inst_89721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fff0000000000; valaddr_reg:x3; val_offset:269163*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269163*0 + 3*633*FLEN/8, x4, x1, x2)

inst_89722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fff8000000000; valaddr_reg:x3; val_offset:269166*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269166*0 + 3*634*FLEN/8, x4, x1, x2)

inst_89723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffc000000000; valaddr_reg:x3; val_offset:269169*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269169*0 + 3*635*FLEN/8, x4, x1, x2)

inst_89724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffe000000000; valaddr_reg:x3; val_offset:269172*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269172*0 + 3*636*FLEN/8, x4, x1, x2)

inst_89725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffff000000000; valaddr_reg:x3; val_offset:269175*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269175*0 + 3*637*FLEN/8, x4, x1, x2)

inst_89726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffff800000000; valaddr_reg:x3; val_offset:269178*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269178*0 + 3*638*FLEN/8, x4, x1, x2)

inst_89727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffc00000000; valaddr_reg:x3; val_offset:269181*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269181*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_89728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffe00000000; valaddr_reg:x3; val_offset:269184*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269184*0 + 3*640*FLEN/8, x4, x1, x2)

inst_89729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffff00000000; valaddr_reg:x3; val_offset:269187*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269187*0 + 3*641*FLEN/8, x4, x1, x2)

inst_89730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffff80000000; valaddr_reg:x3; val_offset:269190*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269190*0 + 3*642*FLEN/8, x4, x1, x2)

inst_89731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffc0000000; valaddr_reg:x3; val_offset:269193*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269193*0 + 3*643*FLEN/8, x4, x1, x2)

inst_89732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffe0000000; valaddr_reg:x3; val_offset:269196*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269196*0 + 3*644*FLEN/8, x4, x1, x2)

inst_89733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffff0000000; valaddr_reg:x3; val_offset:269199*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269199*0 + 3*645*FLEN/8, x4, x1, x2)

inst_89734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffff8000000; valaddr_reg:x3; val_offset:269202*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269202*0 + 3*646*FLEN/8, x4, x1, x2)

inst_89735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffc000000; valaddr_reg:x3; val_offset:269205*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269205*0 + 3*647*FLEN/8, x4, x1, x2)

inst_89736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffe000000; valaddr_reg:x3; val_offset:269208*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269208*0 + 3*648*FLEN/8, x4, x1, x2)

inst_89737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffff000000; valaddr_reg:x3; val_offset:269211*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269211*0 + 3*649*FLEN/8, x4, x1, x2)

inst_89738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffff800000; valaddr_reg:x3; val_offset:269214*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269214*0 + 3*650*FLEN/8, x4, x1, x2)

inst_89739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffc00000; valaddr_reg:x3; val_offset:269217*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269217*0 + 3*651*FLEN/8, x4, x1, x2)

inst_89740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffe00000; valaddr_reg:x3; val_offset:269220*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269220*0 + 3*652*FLEN/8, x4, x1, x2)

inst_89741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffff00000; valaddr_reg:x3; val_offset:269223*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269223*0 + 3*653*FLEN/8, x4, x1, x2)

inst_89742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffff80000; valaddr_reg:x3; val_offset:269226*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269226*0 + 3*654*FLEN/8, x4, x1, x2)

inst_89743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffc0000; valaddr_reg:x3; val_offset:269229*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269229*0 + 3*655*FLEN/8, x4, x1, x2)

inst_89744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffe0000; valaddr_reg:x3; val_offset:269232*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269232*0 + 3*656*FLEN/8, x4, x1, x2)

inst_89745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffff0000; valaddr_reg:x3; val_offset:269235*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269235*0 + 3*657*FLEN/8, x4, x1, x2)

inst_89746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffff8000; valaddr_reg:x3; val_offset:269238*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269238*0 + 3*658*FLEN/8, x4, x1, x2)

inst_89747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffc000; valaddr_reg:x3; val_offset:269241*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269241*0 + 3*659*FLEN/8, x4, x1, x2)

inst_89748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffe000; valaddr_reg:x3; val_offset:269244*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269244*0 + 3*660*FLEN/8, x4, x1, x2)

inst_89749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffff000; valaddr_reg:x3; val_offset:269247*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269247*0 + 3*661*FLEN/8, x4, x1, x2)

inst_89750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffff800; valaddr_reg:x3; val_offset:269250*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269250*0 + 3*662*FLEN/8, x4, x1, x2)

inst_89751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffffc00; valaddr_reg:x3; val_offset:269253*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269253*0 + 3*663*FLEN/8, x4, x1, x2)

inst_89752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffffe00; valaddr_reg:x3; val_offset:269256*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269256*0 + 3*664*FLEN/8, x4, x1, x2)

inst_89753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffff00; valaddr_reg:x3; val_offset:269259*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269259*0 + 3*665*FLEN/8, x4, x1, x2)

inst_89754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffff80; valaddr_reg:x3; val_offset:269262*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269262*0 + 3*666*FLEN/8, x4, x1, x2)

inst_89755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffffc0; valaddr_reg:x3; val_offset:269265*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269265*0 + 3*667*FLEN/8, x4, x1, x2)

inst_89756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffffe0; valaddr_reg:x3; val_offset:269268*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269268*0 + 3*668*FLEN/8, x4, x1, x2)

inst_89757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffffff0; valaddr_reg:x3; val_offset:269271*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269271*0 + 3*669*FLEN/8, x4, x1, x2)

inst_89758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffffff8; valaddr_reg:x3; val_offset:269274*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269274*0 + 3*670*FLEN/8, x4, x1, x2)

inst_89759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffffffc; valaddr_reg:x3; val_offset:269277*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269277*0 + 3*671*FLEN/8, x4, x1, x2)

inst_89760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6ffffffffffffe; valaddr_reg:x3; val_offset:269280*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269280*0 + 3*672*FLEN/8, x4, x1, x2)

inst_89761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3b6fffffffffffff; valaddr_reg:x3; val_offset:269283*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269283*0 + 3*673*FLEN/8, x4, x1, x2)

inst_89762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:269286*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269286*0 + 3*674*FLEN/8, x4, x1, x2)

inst_89763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:269289*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269289*0 + 3*675*FLEN/8, x4, x1, x2)

inst_89764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:269292*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269292*0 + 3*676*FLEN/8, x4, x1, x2)

inst_89765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:269295*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269295*0 + 3*677*FLEN/8, x4, x1, x2)

inst_89766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:269298*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269298*0 + 3*678*FLEN/8, x4, x1, x2)

inst_89767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:269301*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269301*0 + 3*679*FLEN/8, x4, x1, x2)

inst_89768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:269304*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269304*0 + 3*680*FLEN/8, x4, x1, x2)

inst_89769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:269307*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269307*0 + 3*681*FLEN/8, x4, x1, x2)

inst_89770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:269310*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269310*0 + 3*682*FLEN/8, x4, x1, x2)

inst_89771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:269313*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269313*0 + 3*683*FLEN/8, x4, x1, x2)

inst_89772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:269316*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269316*0 + 3*684*FLEN/8, x4, x1, x2)

inst_89773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:269319*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269319*0 + 3*685*FLEN/8, x4, x1, x2)

inst_89774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:269322*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269322*0 + 3*686*FLEN/8, x4, x1, x2)

inst_89775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:269325*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269325*0 + 3*687*FLEN/8, x4, x1, x2)

inst_89776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:269328*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269328*0 + 3*688*FLEN/8, x4, x1, x2)

inst_89777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:269331*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269331*0 + 3*689*FLEN/8, x4, x1, x2)

inst_89778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:269334*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269334*0 + 3*690*FLEN/8, x4, x1, x2)

inst_89779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:269337*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269337*0 + 3*691*FLEN/8, x4, x1, x2)

inst_89780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:269340*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269340*0 + 3*692*FLEN/8, x4, x1, x2)

inst_89781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:269343*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269343*0 + 3*693*FLEN/8, x4, x1, x2)

inst_89782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:269346*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269346*0 + 3*694*FLEN/8, x4, x1, x2)

inst_89783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0aaa5bb5745 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d88b3f3ace5d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb0aaa5bb5745; op2val:0x2031d88b3f3ace5d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:269349*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269349*0 + 3*695*FLEN/8, x4, x1, x2)

inst_89784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000000000; valaddr_reg:x3; val_offset:269352*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269352*0 + 3*696*FLEN/8, x4, x1, x2)

inst_89785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000000001; valaddr_reg:x3; val_offset:269355*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269355*0 + 3*697*FLEN/8, x4, x1, x2)

inst_89786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000000003; valaddr_reg:x3; val_offset:269358*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269358*0 + 3*698*FLEN/8, x4, x1, x2)

inst_89787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000000007; valaddr_reg:x3; val_offset:269361*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269361*0 + 3*699*FLEN/8, x4, x1, x2)

inst_89788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000000000f; valaddr_reg:x3; val_offset:269364*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269364*0 + 3*700*FLEN/8, x4, x1, x2)

inst_89789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000000001f; valaddr_reg:x3; val_offset:269367*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269367*0 + 3*701*FLEN/8, x4, x1, x2)

inst_89790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000000003f; valaddr_reg:x3; val_offset:269370*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269370*0 + 3*702*FLEN/8, x4, x1, x2)

inst_89791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000000007f; valaddr_reg:x3; val_offset:269373*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269373*0 + 3*703*FLEN/8, x4, x1, x2)

inst_89792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000000000ff; valaddr_reg:x3; val_offset:269376*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269376*0 + 3*704*FLEN/8, x4, x1, x2)

inst_89793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000000001ff; valaddr_reg:x3; val_offset:269379*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269379*0 + 3*705*FLEN/8, x4, x1, x2)

inst_89794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000000003ff; valaddr_reg:x3; val_offset:269382*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269382*0 + 3*706*FLEN/8, x4, x1, x2)

inst_89795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000000007ff; valaddr_reg:x3; val_offset:269385*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269385*0 + 3*707*FLEN/8, x4, x1, x2)

inst_89796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000000fff; valaddr_reg:x3; val_offset:269388*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269388*0 + 3*708*FLEN/8, x4, x1, x2)

inst_89797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000001fff; valaddr_reg:x3; val_offset:269391*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269391*0 + 3*709*FLEN/8, x4, x1, x2)

inst_89798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000003fff; valaddr_reg:x3; val_offset:269394*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269394*0 + 3*710*FLEN/8, x4, x1, x2)

inst_89799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000007fff; valaddr_reg:x3; val_offset:269397*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269397*0 + 3*711*FLEN/8, x4, x1, x2)

inst_89800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000000ffff; valaddr_reg:x3; val_offset:269400*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269400*0 + 3*712*FLEN/8, x4, x1, x2)

inst_89801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000001ffff; valaddr_reg:x3; val_offset:269403*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269403*0 + 3*713*FLEN/8, x4, x1, x2)

inst_89802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000003ffff; valaddr_reg:x3; val_offset:269406*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269406*0 + 3*714*FLEN/8, x4, x1, x2)

inst_89803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000007ffff; valaddr_reg:x3; val_offset:269409*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269409*0 + 3*715*FLEN/8, x4, x1, x2)

inst_89804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000000fffff; valaddr_reg:x3; val_offset:269412*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269412*0 + 3*716*FLEN/8, x4, x1, x2)

inst_89805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000001fffff; valaddr_reg:x3; val_offset:269415*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269415*0 + 3*717*FLEN/8, x4, x1, x2)

inst_89806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000003fffff; valaddr_reg:x3; val_offset:269418*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269418*0 + 3*718*FLEN/8, x4, x1, x2)

inst_89807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000007fffff; valaddr_reg:x3; val_offset:269421*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269421*0 + 3*719*FLEN/8, x4, x1, x2)

inst_89808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000000ffffff; valaddr_reg:x3; val_offset:269424*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269424*0 + 3*720*FLEN/8, x4, x1, x2)

inst_89809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000001ffffff; valaddr_reg:x3; val_offset:269427*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269427*0 + 3*721*FLEN/8, x4, x1, x2)

inst_89810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000003ffffff; valaddr_reg:x3; val_offset:269430*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269430*0 + 3*722*FLEN/8, x4, x1, x2)

inst_89811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000007ffffff; valaddr_reg:x3; val_offset:269433*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269433*0 + 3*723*FLEN/8, x4, x1, x2)

inst_89812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000000fffffff; valaddr_reg:x3; val_offset:269436*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269436*0 + 3*724*FLEN/8, x4, x1, x2)

inst_89813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000001fffffff; valaddr_reg:x3; val_offset:269439*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269439*0 + 3*725*FLEN/8, x4, x1, x2)

inst_89814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000003fffffff; valaddr_reg:x3; val_offset:269442*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269442*0 + 3*726*FLEN/8, x4, x1, x2)

inst_89815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000007fffffff; valaddr_reg:x3; val_offset:269445*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269445*0 + 3*727*FLEN/8, x4, x1, x2)

inst_89816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200000ffffffff; valaddr_reg:x3; val_offset:269448*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269448*0 + 3*728*FLEN/8, x4, x1, x2)

inst_89817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200001ffffffff; valaddr_reg:x3; val_offset:269451*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269451*0 + 3*729*FLEN/8, x4, x1, x2)

inst_89818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200003ffffffff; valaddr_reg:x3; val_offset:269454*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269454*0 + 3*730*FLEN/8, x4, x1, x2)

inst_89819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200007ffffffff; valaddr_reg:x3; val_offset:269457*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269457*0 + 3*731*FLEN/8, x4, x1, x2)

inst_89820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20000fffffffff; valaddr_reg:x3; val_offset:269460*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269460*0 + 3*732*FLEN/8, x4, x1, x2)

inst_89821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20001fffffffff; valaddr_reg:x3; val_offset:269463*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269463*0 + 3*733*FLEN/8, x4, x1, x2)

inst_89822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20003fffffffff; valaddr_reg:x3; val_offset:269466*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269466*0 + 3*734*FLEN/8, x4, x1, x2)

inst_89823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20007fffffffff; valaddr_reg:x3; val_offset:269469*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269469*0 + 3*735*FLEN/8, x4, x1, x2)

inst_89824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2000ffffffffff; valaddr_reg:x3; val_offset:269472*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269472*0 + 3*736*FLEN/8, x4, x1, x2)

inst_89825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2001ffffffffff; valaddr_reg:x3; val_offset:269475*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269475*0 + 3*737*FLEN/8, x4, x1, x2)

inst_89826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2003ffffffffff; valaddr_reg:x3; val_offset:269478*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269478*0 + 3*738*FLEN/8, x4, x1, x2)

inst_89827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2007ffffffffff; valaddr_reg:x3; val_offset:269481*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269481*0 + 3*739*FLEN/8, x4, x1, x2)

inst_89828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f200fffffffffff; valaddr_reg:x3; val_offset:269484*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269484*0 + 3*740*FLEN/8, x4, x1, x2)

inst_89829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f201fffffffffff; valaddr_reg:x3; val_offset:269487*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269487*0 + 3*741*FLEN/8, x4, x1, x2)

inst_89830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f203fffffffffff; valaddr_reg:x3; val_offset:269490*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269490*0 + 3*742*FLEN/8, x4, x1, x2)

inst_89831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f207fffffffffff; valaddr_reg:x3; val_offset:269493*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269493*0 + 3*743*FLEN/8, x4, x1, x2)

inst_89832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f20ffffffffffff; valaddr_reg:x3; val_offset:269496*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269496*0 + 3*744*FLEN/8, x4, x1, x2)

inst_89833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f21ffffffffffff; valaddr_reg:x3; val_offset:269499*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269499*0 + 3*745*FLEN/8, x4, x1, x2)

inst_89834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f23ffffffffffff; valaddr_reg:x3; val_offset:269502*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269502*0 + 3*746*FLEN/8, x4, x1, x2)

inst_89835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f27ffffffffffff; valaddr_reg:x3; val_offset:269505*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269505*0 + 3*747*FLEN/8, x4, x1, x2)

inst_89836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f28000000000000; valaddr_reg:x3; val_offset:269508*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269508*0 + 3*748*FLEN/8, x4, x1, x2)

inst_89837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2c000000000000; valaddr_reg:x3; val_offset:269511*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269511*0 + 3*749*FLEN/8, x4, x1, x2)

inst_89838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2e000000000000; valaddr_reg:x3; val_offset:269514*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269514*0 + 3*750*FLEN/8, x4, x1, x2)

inst_89839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2f000000000000; valaddr_reg:x3; val_offset:269517*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269517*0 + 3*751*FLEN/8, x4, x1, x2)

inst_89840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2f800000000000; valaddr_reg:x3; val_offset:269520*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269520*0 + 3*752*FLEN/8, x4, x1, x2)

inst_89841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fc00000000000; valaddr_reg:x3; val_offset:269523*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269523*0 + 3*753*FLEN/8, x4, x1, x2)

inst_89842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fe00000000000; valaddr_reg:x3; val_offset:269526*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269526*0 + 3*754*FLEN/8, x4, x1, x2)

inst_89843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ff00000000000; valaddr_reg:x3; val_offset:269529*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269529*0 + 3*755*FLEN/8, x4, x1, x2)

inst_89844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ff80000000000; valaddr_reg:x3; val_offset:269532*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269532*0 + 3*756*FLEN/8, x4, x1, x2)

inst_89845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffc0000000000; valaddr_reg:x3; val_offset:269535*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269535*0 + 3*757*FLEN/8, x4, x1, x2)

inst_89846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffe0000000000; valaddr_reg:x3; val_offset:269538*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269538*0 + 3*758*FLEN/8, x4, x1, x2)

inst_89847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fff0000000000; valaddr_reg:x3; val_offset:269541*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269541*0 + 3*759*FLEN/8, x4, x1, x2)

inst_89848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fff8000000000; valaddr_reg:x3; val_offset:269544*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269544*0 + 3*760*FLEN/8, x4, x1, x2)

inst_89849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffc000000000; valaddr_reg:x3; val_offset:269547*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269547*0 + 3*761*FLEN/8, x4, x1, x2)

inst_89850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffe000000000; valaddr_reg:x3; val_offset:269550*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269550*0 + 3*762*FLEN/8, x4, x1, x2)

inst_89851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffff000000000; valaddr_reg:x3; val_offset:269553*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269553*0 + 3*763*FLEN/8, x4, x1, x2)

inst_89852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffff800000000; valaddr_reg:x3; val_offset:269556*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269556*0 + 3*764*FLEN/8, x4, x1, x2)

inst_89853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffc00000000; valaddr_reg:x3; val_offset:269559*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269559*0 + 3*765*FLEN/8, x4, x1, x2)

inst_89854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffe00000000; valaddr_reg:x3; val_offset:269562*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269562*0 + 3*766*FLEN/8, x4, x1, x2)

inst_89855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffff00000000; valaddr_reg:x3; val_offset:269565*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269565*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525472269500415,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525747147407359,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31526296903221247,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31527396414849023,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31529595438104575,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31533993484615679,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31542789577637887,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31560381763682303,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31595566135771135,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31665934879948799,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31806672368304127,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32088147345014783,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32651097298436095,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278719,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278720,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34902897112121344,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35465847065542656,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35747322042253312,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35888059530608640,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35958428274786304,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35993612646875136,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36011204832919552,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36020000925941760,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36024398972452864,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36026597995708416,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36027697507336192,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028247263150080,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028522141057024,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028659580010496,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028728299487232,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028762659225600,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028779839094784,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028788429029376,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028792723996672,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028794871480320,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028795945222144,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796482093056,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796750528512,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796884746240,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796951855104,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796985409536,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797002186752,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797010575360,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797014769664,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797016866816,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797017915392,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018439680,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018701824,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018832896,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018898432,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018931200,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018947584,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018955776,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018959872,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018961920,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018962944,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963456,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963712,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963840,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963904,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963936,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963952,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963960,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963964,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963966,64,FLEN)
NAN_BOXED(6894050114849460941,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963967,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078080,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078081,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078083,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078087,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078095,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078111,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078143,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078207,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078335,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564078591,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564079103,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564080127,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564082175,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564086271,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564094463,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564110847,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564143615,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564209151,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564340223,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889564602367,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889565126655,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889566175231,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889568272383,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889572466687,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889580855295,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889597632511,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889631186943,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889698295807,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726889832513535,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726890100948991,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726890637819903,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726891711561727,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726893859045375,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726898154012671,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726906743947263,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726923923816447,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420726958283554815,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420727027003031551,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420727164441985023,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420727439319891967,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420727989075705855,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420729088587333631,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420731287610589183,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420735685657100287,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420744481750122495,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420762073936166911,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420797258308255743,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13420867627052433407,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13421008364540788735,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13421289839517499391,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13421852789470920703,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13422978689377763327,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13422978689377763328,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13424104589284605952,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13424667539238027264,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13424949014214737920,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425089751703093248,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425160120447270912,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425195304819359744,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425212897005404160,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425221693098426368,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425226091144937472,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425228290168193024,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425229389679820800,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425229939435634688,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230214313541632,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230351752495104,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230420471971840,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230454831710208,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230472011579392,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230480601513984,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230484896481280,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230487043964928,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230488117706752,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230488654577664,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230488923013120,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489057230848,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489124339712,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489157894144,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489174671360,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489183059968,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489187254272,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489189351424,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489190400000,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489190924288,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191186432,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191317504,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191383040,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191415808,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191432192,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191440384,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191444480,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191446528,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191447552,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448064,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448320,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448448,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448512,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448544,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448560,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448568,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448572,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448574,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13425230489191448575,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894051764995061441,64,FLEN)
NAN_BOXED(11511737449039443969,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639933952,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639933953,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639933955,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639933959,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639933967,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639933983,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639934015,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639934079,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639934207,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639934463,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639934975,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639935999,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639938047,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639942143,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639950335,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639966719,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077639999487,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077640065023,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077640196095,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077640458239,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077640982527,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077642031103,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077644128255,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077648322559,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077656711167,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077673488383,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077707042815,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077774151679,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842077908369407,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842078176804863,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842078713675775,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842079787417599,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842081934901247,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842086229868543,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842094819803135,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842111999672319,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842146359410687,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842215078887423,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842352517840895,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564842627395747839,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564843177151561727,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564844276663189503,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564846475686445055,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564850873732956159,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564859669825978367,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564877262012022783,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564912446384111615,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13564982815128289279,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13565123552616644607,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13565405027593355263,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13565967977546776575,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13567093877453619199,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13567093877453619200,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13568219777360461824,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13568782727313883136,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569064202290593792,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569204939778949120,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569275308523126784,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569310492895215616,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569328085081260032,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569336881174282240,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569341279220793344,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569343478244048896,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569344577755676672,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345127511490560,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345402389397504,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345539828350976,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345608547827712,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345642907566080,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345660087435264,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345668677369856,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345672972337152,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345675119820800,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345676193562624,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345676730433536,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345676998868992,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677133086720,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677200195584,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677233750016,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677250527232,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677258915840,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677263110144,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677265207296,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677266255872,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677266780160,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267042304,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267173376,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267238912,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267271680,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267288064,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267296256,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267300352,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267302400,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267303424,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267303936,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304192,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304320,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304384,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304416,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304432,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304440,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304444,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304446,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13569345677267304447,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(11511735990920465368,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747776,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747777,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747779,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747783,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747791,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747807,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747839,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747903,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748031,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748287,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748799,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132749823,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132751871,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132755967,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132764159,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132780543,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132813311,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132878847,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133009919,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133272063,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133796351,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579134844927,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579136942079,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579141136383,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579149524991,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579166302207,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579199856639,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579266965503,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579401183231,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579669618687,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201580206489599,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201581280231423,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201583427715071,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201587722682367,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201596312616959,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201613492486143,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201647852224511,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201716571701247,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201854010654719,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202128888561663,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202678644375551,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252203778156003327,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252205977179258879,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252210375225769983,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252219171318792191,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252236763504836607,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252271947876925439,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252342316621103103,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252483054109458431,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252764529086169087,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(253327479039590399,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433023,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433024,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255579278853275648,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256142228806696960,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256423703783407616,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256564441271762944,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256634810015940608,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256669994388029440,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256687586574073856,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256696382667096064,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256700780713607168,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256702979736862720,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704079248490496,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704629004304384,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704903882211328,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705041321164800,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705110040641536,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705144400379904,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705161580249088,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705170170183680,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705174465150976,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705176612634624,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705177686376448,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178223247360,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178491682816,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178625900544,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178693009408,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178726563840,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178743341056,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178751729664,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178755923968,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178758021120,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759069696,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759593984,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759856128,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759987200,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760052736,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760085504,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760101888,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760110080,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760114176,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760116224,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117248,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117760,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118016,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118144,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118208,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118240,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118256,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118264,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118268,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118270,64,FLEN)
NAN_BOXED(6894068998918679610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118271,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6894070456276667597,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971200,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971201,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971203,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971207,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971215,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971231,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971263,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971327,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971455,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001971711,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001972223,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001973247,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001975295,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001979391,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646001987583,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646002003967,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646002036735,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646002102271,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646002233343,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646002495487,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646003019775,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646004068351,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646006165503,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646010359807,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646018748415,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646035525631,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646069080063,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646136188927,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646270406655,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419646538842111,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419647075713023,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419648149454847,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419650296938495,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419654591905791,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419663181840383,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419680361709567,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419714721447935,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419783440924671,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278419920879878143,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278420195757785087,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278420745513598975,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278421845025226751,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278424044048482303,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278428442094993407,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278437238188015615,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278454830374060031,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278490014746148863,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278560383490326527,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278701120978681855,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4278982595955392511,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4279545545908813823,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4280671445815656447,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4280671445815656448,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4281797345722499072,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282360295675920384,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282641770652631040,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282782508140986368,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282852876885164032,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282888061257252864,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282905653443297280,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282914449536319488,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282918847582830592,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282921046606086144,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282922146117713920,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282922695873527808,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282922970751434752,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923108190388224,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923176909864960,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923211269603328,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923228449472512,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923237039407104,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923241334374400,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923243481858048,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923244555599872,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245092470784,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245360906240,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245495123968,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245562232832,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245595787264,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245612564480,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245620953088,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245625147392,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245627244544,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245628293120,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245628817408,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629079552,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629210624,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629276160,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629308928,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629325312,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629333504,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629337600,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629339648,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629340672,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341184,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341440,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341568,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341632,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341664,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341680,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341688,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341692,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341694,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4282923245629341695,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894079376568833861,64,FLEN)
NAN_BOXED(2319873375645388381,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644200960,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644200961,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644200963,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644200967,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644200975,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644200991,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644201023,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644201087,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644201215,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644201471,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644201983,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644203007,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644205055,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644209151,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644217343,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644233727,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644266495,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644332031,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644463103,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623644725247,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623645249535,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623646298111,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623648395263,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623652589567,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623660978175,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623677755391,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623711309823,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623778418687,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635623912636415,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635624181071871,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635624717942783,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635625791684607,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635627939168255,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635632234135551,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635640824070143,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635658003939327,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635692363677695,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635761083154431,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548635898522107903,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548636173400014847,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548636723155828735,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548637822667456511,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548640021690712063,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548644419737223167,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548653215830245375,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548670808016289791,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548705992388378623,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548776361132556287,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4548917098620911615,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4549198573597622271,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4549761523551043583,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4550887423457886207,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4550887423457886208,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4552013323364728832,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4552576273318150144,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4552857748294860800,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4552998485783216128,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553068854527393792,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553104038899482624,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553121631085527040,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553130427178549248,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553134825225060352,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553137024248315904,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553138123759943680,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553138673515757568,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553138948393664512,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139085832617984,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139154552094720,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139188911833088,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139206091702272,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139214681636864,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139218976604160,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
