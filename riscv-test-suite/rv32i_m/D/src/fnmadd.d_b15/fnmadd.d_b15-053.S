
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_39936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffff800000; valaddr_reg:x3; val_offset:119808*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119808*0 + 3*0*FLEN/8, x4, x1, x2)

inst_39937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffc00000; valaddr_reg:x3; val_offset:119811*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119811*0 + 3*1*FLEN/8, x4, x1, x2)

inst_39938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffe00000; valaddr_reg:x3; val_offset:119814*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119814*0 + 3*2*FLEN/8, x4, x1, x2)

inst_39939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffff00000; valaddr_reg:x3; val_offset:119817*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119817*0 + 3*3*FLEN/8, x4, x1, x2)

inst_39940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffff80000; valaddr_reg:x3; val_offset:119820*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119820*0 + 3*4*FLEN/8, x4, x1, x2)

inst_39941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffc0000; valaddr_reg:x3; val_offset:119823*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119823*0 + 3*5*FLEN/8, x4, x1, x2)

inst_39942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffe0000; valaddr_reg:x3; val_offset:119826*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119826*0 + 3*6*FLEN/8, x4, x1, x2)

inst_39943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffff0000; valaddr_reg:x3; val_offset:119829*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119829*0 + 3*7*FLEN/8, x4, x1, x2)

inst_39944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffff8000; valaddr_reg:x3; val_offset:119832*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119832*0 + 3*8*FLEN/8, x4, x1, x2)

inst_39945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffc000; valaddr_reg:x3; val_offset:119835*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119835*0 + 3*9*FLEN/8, x4, x1, x2)

inst_39946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffe000; valaddr_reg:x3; val_offset:119838*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119838*0 + 3*10*FLEN/8, x4, x1, x2)

inst_39947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffff000; valaddr_reg:x3; val_offset:119841*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119841*0 + 3*11*FLEN/8, x4, x1, x2)

inst_39948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffff800; valaddr_reg:x3; val_offset:119844*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119844*0 + 3*12*FLEN/8, x4, x1, x2)

inst_39949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffffc00; valaddr_reg:x3; val_offset:119847*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119847*0 + 3*13*FLEN/8, x4, x1, x2)

inst_39950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffffe00; valaddr_reg:x3; val_offset:119850*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119850*0 + 3*14*FLEN/8, x4, x1, x2)

inst_39951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffff00; valaddr_reg:x3; val_offset:119853*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119853*0 + 3*15*FLEN/8, x4, x1, x2)

inst_39952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffff80; valaddr_reg:x3; val_offset:119856*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119856*0 + 3*16*FLEN/8, x4, x1, x2)

inst_39953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffffc0; valaddr_reg:x3; val_offset:119859*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119859*0 + 3*17*FLEN/8, x4, x1, x2)

inst_39954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffffe0; valaddr_reg:x3; val_offset:119862*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119862*0 + 3*18*FLEN/8, x4, x1, x2)

inst_39955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffffff0; valaddr_reg:x3; val_offset:119865*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119865*0 + 3*19*FLEN/8, x4, x1, x2)

inst_39956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffffff8; valaddr_reg:x3; val_offset:119868*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119868*0 + 3*20*FLEN/8, x4, x1, x2)

inst_39957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffffffc; valaddr_reg:x3; val_offset:119871*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119871*0 + 3*21*FLEN/8, x4, x1, x2)

inst_39958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dffffffffffffe; valaddr_reg:x3; val_offset:119874*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119874*0 + 3*22*FLEN/8, x4, x1, x2)

inst_39959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x8000;
op3val:0xb9dfffffffffffff; valaddr_reg:x3; val_offset:119877*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119877*0 + 3*23*FLEN/8, x4, x1, x2)

inst_39960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:119880*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119880*0 + 3*24*FLEN/8, x4, x1, x2)

inst_39961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:119883*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119883*0 + 3*25*FLEN/8, x4, x1, x2)

inst_39962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:119886*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119886*0 + 3*26*FLEN/8, x4, x1, x2)

inst_39963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:119889*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119889*0 + 3*27*FLEN/8, x4, x1, x2)

inst_39964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:119892*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119892*0 + 3*28*FLEN/8, x4, x1, x2)

inst_39965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:119895*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119895*0 + 3*29*FLEN/8, x4, x1, x2)

inst_39966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:119898*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119898*0 + 3*30*FLEN/8, x4, x1, x2)

inst_39967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:119901*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119901*0 + 3*31*FLEN/8, x4, x1, x2)

inst_39968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:119904*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119904*0 + 3*32*FLEN/8, x4, x1, x2)

inst_39969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:119907*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119907*0 + 3*33*FLEN/8, x4, x1, x2)

inst_39970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:119910*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119910*0 + 3*34*FLEN/8, x4, x1, x2)

inst_39971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:119913*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119913*0 + 3*35*FLEN/8, x4, x1, x2)

inst_39972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:119916*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119916*0 + 3*36*FLEN/8, x4, x1, x2)

inst_39973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:119919*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119919*0 + 3*37*FLEN/8, x4, x1, x2)

inst_39974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:119922*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119922*0 + 3*38*FLEN/8, x4, x1, x2)

inst_39975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:119925*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119925*0 + 3*39*FLEN/8, x4, x1, x2)

inst_39976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:119928*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119928*0 + 3*40*FLEN/8, x4, x1, x2)

inst_39977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:119931*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119931*0 + 3*41*FLEN/8, x4, x1, x2)

inst_39978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:119934*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119934*0 + 3*42*FLEN/8, x4, x1, x2)

inst_39979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:119937*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119937*0 + 3*43*FLEN/8, x4, x1, x2)

inst_39980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:119940*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119940*0 + 3*44*FLEN/8, x4, x1, x2)

inst_39981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:119943*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119943*0 + 3*45*FLEN/8, x4, x1, x2)

inst_39982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000000000; valaddr_reg:x3; val_offset:119946*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119946*0 + 3*46*FLEN/8, x4, x1, x2)

inst_39983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000000001; valaddr_reg:x3; val_offset:119949*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119949*0 + 3*47*FLEN/8, x4, x1, x2)

inst_39984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000000003; valaddr_reg:x3; val_offset:119952*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119952*0 + 3*48*FLEN/8, x4, x1, x2)

inst_39985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000000007; valaddr_reg:x3; val_offset:119955*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119955*0 + 3*49*FLEN/8, x4, x1, x2)

inst_39986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000000000f; valaddr_reg:x3; val_offset:119958*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119958*0 + 3*50*FLEN/8, x4, x1, x2)

inst_39987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000000001f; valaddr_reg:x3; val_offset:119961*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119961*0 + 3*51*FLEN/8, x4, x1, x2)

inst_39988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000000003f; valaddr_reg:x3; val_offset:119964*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119964*0 + 3*52*FLEN/8, x4, x1, x2)

inst_39989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000000007f; valaddr_reg:x3; val_offset:119967*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119967*0 + 3*53*FLEN/8, x4, x1, x2)

inst_39990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000000000ff; valaddr_reg:x3; val_offset:119970*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119970*0 + 3*54*FLEN/8, x4, x1, x2)

inst_39991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000000001ff; valaddr_reg:x3; val_offset:119973*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119973*0 + 3*55*FLEN/8, x4, x1, x2)

inst_39992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000000003ff; valaddr_reg:x3; val_offset:119976*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119976*0 + 3*56*FLEN/8, x4, x1, x2)

inst_39993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000000007ff; valaddr_reg:x3; val_offset:119979*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119979*0 + 3*57*FLEN/8, x4, x1, x2)

inst_39994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000000fff; valaddr_reg:x3; val_offset:119982*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119982*0 + 3*58*FLEN/8, x4, x1, x2)

inst_39995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000001fff; valaddr_reg:x3; val_offset:119985*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119985*0 + 3*59*FLEN/8, x4, x1, x2)

inst_39996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000003fff; valaddr_reg:x3; val_offset:119988*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119988*0 + 3*60*FLEN/8, x4, x1, x2)

inst_39997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000007fff; valaddr_reg:x3; val_offset:119991*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119991*0 + 3*61*FLEN/8, x4, x1, x2)

inst_39998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000000ffff; valaddr_reg:x3; val_offset:119994*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119994*0 + 3*62*FLEN/8, x4, x1, x2)

inst_39999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000001ffff; valaddr_reg:x3; val_offset:119997*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119997*0 + 3*63*FLEN/8, x4, x1, x2)

inst_40000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000003ffff; valaddr_reg:x3; val_offset:120000*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120000*0 + 3*64*FLEN/8, x4, x1, x2)

inst_40001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000007ffff; valaddr_reg:x3; val_offset:120003*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120003*0 + 3*65*FLEN/8, x4, x1, x2)

inst_40002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000000fffff; valaddr_reg:x3; val_offset:120006*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120006*0 + 3*66*FLEN/8, x4, x1, x2)

inst_40003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000001fffff; valaddr_reg:x3; val_offset:120009*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120009*0 + 3*67*FLEN/8, x4, x1, x2)

inst_40004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000003fffff; valaddr_reg:x3; val_offset:120012*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120012*0 + 3*68*FLEN/8, x4, x1, x2)

inst_40005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000007fffff; valaddr_reg:x3; val_offset:120015*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120015*0 + 3*69*FLEN/8, x4, x1, x2)

inst_40006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000000ffffff; valaddr_reg:x3; val_offset:120018*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120018*0 + 3*70*FLEN/8, x4, x1, x2)

inst_40007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000001ffffff; valaddr_reg:x3; val_offset:120021*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120021*0 + 3*71*FLEN/8, x4, x1, x2)

inst_40008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000003ffffff; valaddr_reg:x3; val_offset:120024*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120024*0 + 3*72*FLEN/8, x4, x1, x2)

inst_40009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000007ffffff; valaddr_reg:x3; val_offset:120027*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120027*0 + 3*73*FLEN/8, x4, x1, x2)

inst_40010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000000fffffff; valaddr_reg:x3; val_offset:120030*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120030*0 + 3*74*FLEN/8, x4, x1, x2)

inst_40011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000001fffffff; valaddr_reg:x3; val_offset:120033*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120033*0 + 3*75*FLEN/8, x4, x1, x2)

inst_40012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000003fffffff; valaddr_reg:x3; val_offset:120036*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120036*0 + 3*76*FLEN/8, x4, x1, x2)

inst_40013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000007fffffff; valaddr_reg:x3; val_offset:120039*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120039*0 + 3*77*FLEN/8, x4, x1, x2)

inst_40014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400000ffffffff; valaddr_reg:x3; val_offset:120042*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120042*0 + 3*78*FLEN/8, x4, x1, x2)

inst_40015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400001ffffffff; valaddr_reg:x3; val_offset:120045*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120045*0 + 3*79*FLEN/8, x4, x1, x2)

inst_40016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400003ffffffff; valaddr_reg:x3; val_offset:120048*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120048*0 + 3*80*FLEN/8, x4, x1, x2)

inst_40017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400007ffffffff; valaddr_reg:x3; val_offset:120051*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120051*0 + 3*81*FLEN/8, x4, x1, x2)

inst_40018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340000fffffffff; valaddr_reg:x3; val_offset:120054*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120054*0 + 3*82*FLEN/8, x4, x1, x2)

inst_40019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340001fffffffff; valaddr_reg:x3; val_offset:120057*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120057*0 + 3*83*FLEN/8, x4, x1, x2)

inst_40020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340003fffffffff; valaddr_reg:x3; val_offset:120060*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120060*0 + 3*84*FLEN/8, x4, x1, x2)

inst_40021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340007fffffffff; valaddr_reg:x3; val_offset:120063*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120063*0 + 3*85*FLEN/8, x4, x1, x2)

inst_40022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34000ffffffffff; valaddr_reg:x3; val_offset:120066*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120066*0 + 3*86*FLEN/8, x4, x1, x2)

inst_40023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34001ffffffffff; valaddr_reg:x3; val_offset:120069*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120069*0 + 3*87*FLEN/8, x4, x1, x2)

inst_40024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34003ffffffffff; valaddr_reg:x3; val_offset:120072*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120072*0 + 3*88*FLEN/8, x4, x1, x2)

inst_40025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34007ffffffffff; valaddr_reg:x3; val_offset:120075*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120075*0 + 3*89*FLEN/8, x4, x1, x2)

inst_40026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3400fffffffffff; valaddr_reg:x3; val_offset:120078*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120078*0 + 3*90*FLEN/8, x4, x1, x2)

inst_40027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3401fffffffffff; valaddr_reg:x3; val_offset:120081*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120081*0 + 3*91*FLEN/8, x4, x1, x2)

inst_40028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3403fffffffffff; valaddr_reg:x3; val_offset:120084*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120084*0 + 3*92*FLEN/8, x4, x1, x2)

inst_40029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x3407fffffffffff; valaddr_reg:x3; val_offset:120087*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120087*0 + 3*93*FLEN/8, x4, x1, x2)

inst_40030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x340ffffffffffff; valaddr_reg:x3; val_offset:120090*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120090*0 + 3*94*FLEN/8, x4, x1, x2)

inst_40031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x341ffffffffffff; valaddr_reg:x3; val_offset:120093*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120093*0 + 3*95*FLEN/8, x4, x1, x2)

inst_40032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x343ffffffffffff; valaddr_reg:x3; val_offset:120096*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120096*0 + 3*96*FLEN/8, x4, x1, x2)

inst_40033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x347ffffffffffff; valaddr_reg:x3; val_offset:120099*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120099*0 + 3*97*FLEN/8, x4, x1, x2)

inst_40034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x348000000000000; valaddr_reg:x3; val_offset:120102*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120102*0 + 3*98*FLEN/8, x4, x1, x2)

inst_40035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34c000000000000; valaddr_reg:x3; val_offset:120105*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120105*0 + 3*99*FLEN/8, x4, x1, x2)

inst_40036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34e000000000000; valaddr_reg:x3; val_offset:120108*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120108*0 + 3*100*FLEN/8, x4, x1, x2)

inst_40037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34f000000000000; valaddr_reg:x3; val_offset:120111*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120111*0 + 3*101*FLEN/8, x4, x1, x2)

inst_40038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34f800000000000; valaddr_reg:x3; val_offset:120114*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120114*0 + 3*102*FLEN/8, x4, x1, x2)

inst_40039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fc00000000000; valaddr_reg:x3; val_offset:120117*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120117*0 + 3*103*FLEN/8, x4, x1, x2)

inst_40040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fe00000000000; valaddr_reg:x3; val_offset:120120*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120120*0 + 3*104*FLEN/8, x4, x1, x2)

inst_40041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ff00000000000; valaddr_reg:x3; val_offset:120123*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120123*0 + 3*105*FLEN/8, x4, x1, x2)

inst_40042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ff80000000000; valaddr_reg:x3; val_offset:120126*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120126*0 + 3*106*FLEN/8, x4, x1, x2)

inst_40043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffc0000000000; valaddr_reg:x3; val_offset:120129*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120129*0 + 3*107*FLEN/8, x4, x1, x2)

inst_40044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffe0000000000; valaddr_reg:x3; val_offset:120132*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120132*0 + 3*108*FLEN/8, x4, x1, x2)

inst_40045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fff0000000000; valaddr_reg:x3; val_offset:120135*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120135*0 + 3*109*FLEN/8, x4, x1, x2)

inst_40046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fff8000000000; valaddr_reg:x3; val_offset:120138*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120138*0 + 3*110*FLEN/8, x4, x1, x2)

inst_40047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffc000000000; valaddr_reg:x3; val_offset:120141*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120141*0 + 3*111*FLEN/8, x4, x1, x2)

inst_40048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffe000000000; valaddr_reg:x3; val_offset:120144*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120144*0 + 3*112*FLEN/8, x4, x1, x2)

inst_40049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffff000000000; valaddr_reg:x3; val_offset:120147*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120147*0 + 3*113*FLEN/8, x4, x1, x2)

inst_40050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffff800000000; valaddr_reg:x3; val_offset:120150*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120150*0 + 3*114*FLEN/8, x4, x1, x2)

inst_40051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffc00000000; valaddr_reg:x3; val_offset:120153*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120153*0 + 3*115*FLEN/8, x4, x1, x2)

inst_40052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffe00000000; valaddr_reg:x3; val_offset:120156*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120156*0 + 3*116*FLEN/8, x4, x1, x2)

inst_40053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffff00000000; valaddr_reg:x3; val_offset:120159*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120159*0 + 3*117*FLEN/8, x4, x1, x2)

inst_40054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffff80000000; valaddr_reg:x3; val_offset:120162*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120162*0 + 3*118*FLEN/8, x4, x1, x2)

inst_40055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffc0000000; valaddr_reg:x3; val_offset:120165*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120165*0 + 3*119*FLEN/8, x4, x1, x2)

inst_40056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffe0000000; valaddr_reg:x3; val_offset:120168*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120168*0 + 3*120*FLEN/8, x4, x1, x2)

inst_40057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffff0000000; valaddr_reg:x3; val_offset:120171*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120171*0 + 3*121*FLEN/8, x4, x1, x2)

inst_40058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffff8000000; valaddr_reg:x3; val_offset:120174*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120174*0 + 3*122*FLEN/8, x4, x1, x2)

inst_40059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffc000000; valaddr_reg:x3; val_offset:120177*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120177*0 + 3*123*FLEN/8, x4, x1, x2)

inst_40060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffe000000; valaddr_reg:x3; val_offset:120180*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120180*0 + 3*124*FLEN/8, x4, x1, x2)

inst_40061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffff000000; valaddr_reg:x3; val_offset:120183*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120183*0 + 3*125*FLEN/8, x4, x1, x2)

inst_40062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffff800000; valaddr_reg:x3; val_offset:120186*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120186*0 + 3*126*FLEN/8, x4, x1, x2)

inst_40063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffc00000; valaddr_reg:x3; val_offset:120189*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120189*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_40064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffe00000; valaddr_reg:x3; val_offset:120192*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120192*0 + 3*128*FLEN/8, x4, x1, x2)

inst_40065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffff00000; valaddr_reg:x3; val_offset:120195*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120195*0 + 3*129*FLEN/8, x4, x1, x2)

inst_40066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffff80000; valaddr_reg:x3; val_offset:120198*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120198*0 + 3*130*FLEN/8, x4, x1, x2)

inst_40067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffc0000; valaddr_reg:x3; val_offset:120201*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120201*0 + 3*131*FLEN/8, x4, x1, x2)

inst_40068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffe0000; valaddr_reg:x3; val_offset:120204*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120204*0 + 3*132*FLEN/8, x4, x1, x2)

inst_40069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffff0000; valaddr_reg:x3; val_offset:120207*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120207*0 + 3*133*FLEN/8, x4, x1, x2)

inst_40070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffff8000; valaddr_reg:x3; val_offset:120210*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120210*0 + 3*134*FLEN/8, x4, x1, x2)

inst_40071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffc000; valaddr_reg:x3; val_offset:120213*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120213*0 + 3*135*FLEN/8, x4, x1, x2)

inst_40072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffe000; valaddr_reg:x3; val_offset:120216*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120216*0 + 3*136*FLEN/8, x4, x1, x2)

inst_40073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffff000; valaddr_reg:x3; val_offset:120219*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120219*0 + 3*137*FLEN/8, x4, x1, x2)

inst_40074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffff800; valaddr_reg:x3; val_offset:120222*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120222*0 + 3*138*FLEN/8, x4, x1, x2)

inst_40075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffffc00; valaddr_reg:x3; val_offset:120225*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120225*0 + 3*139*FLEN/8, x4, x1, x2)

inst_40076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffffe00; valaddr_reg:x3; val_offset:120228*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120228*0 + 3*140*FLEN/8, x4, x1, x2)

inst_40077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffff00; valaddr_reg:x3; val_offset:120231*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120231*0 + 3*141*FLEN/8, x4, x1, x2)

inst_40078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffff80; valaddr_reg:x3; val_offset:120234*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120234*0 + 3*142*FLEN/8, x4, x1, x2)

inst_40079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffffc0; valaddr_reg:x3; val_offset:120237*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120237*0 + 3*143*FLEN/8, x4, x1, x2)

inst_40080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffffe0; valaddr_reg:x3; val_offset:120240*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120240*0 + 3*144*FLEN/8, x4, x1, x2)

inst_40081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffffff0; valaddr_reg:x3; val_offset:120243*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120243*0 + 3*145*FLEN/8, x4, x1, x2)

inst_40082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffffff8; valaddr_reg:x3; val_offset:120246*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120246*0 + 3*146*FLEN/8, x4, x1, x2)

inst_40083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffffffc; valaddr_reg:x3; val_offset:120249*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120249*0 + 3*147*FLEN/8, x4, x1, x2)

inst_40084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34ffffffffffffe; valaddr_reg:x3; val_offset:120252*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120252*0 + 3*148*FLEN/8, x4, x1, x2)

inst_40085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92cb4acb646cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992cb4acb646cf; op2val:0x0;
op3val:0x34fffffffffffff; valaddr_reg:x3; val_offset:120255*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120255*0 + 3*149*FLEN/8, x4, x1, x2)

inst_40086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:120258*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120258*0 + 3*150*FLEN/8, x4, x1, x2)

inst_40087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:120261*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120261*0 + 3*151*FLEN/8, x4, x1, x2)

inst_40088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:120264*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120264*0 + 3*152*FLEN/8, x4, x1, x2)

inst_40089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:120267*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120267*0 + 3*153*FLEN/8, x4, x1, x2)

inst_40090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:120270*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120270*0 + 3*154*FLEN/8, x4, x1, x2)

inst_40091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:120273*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120273*0 + 3*155*FLEN/8, x4, x1, x2)

inst_40092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:120276*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120276*0 + 3*156*FLEN/8, x4, x1, x2)

inst_40093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:120279*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120279*0 + 3*157*FLEN/8, x4, x1, x2)

inst_40094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:120282*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120282*0 + 3*158*FLEN/8, x4, x1, x2)

inst_40095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:120285*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120285*0 + 3*159*FLEN/8, x4, x1, x2)

inst_40096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:120288*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120288*0 + 3*160*FLEN/8, x4, x1, x2)

inst_40097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:120291*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120291*0 + 3*161*FLEN/8, x4, x1, x2)

inst_40098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:120294*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120294*0 + 3*162*FLEN/8, x4, x1, x2)

inst_40099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:120297*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120297*0 + 3*163*FLEN/8, x4, x1, x2)

inst_40100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:120300*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120300*0 + 3*164*FLEN/8, x4, x1, x2)

inst_40101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:120303*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120303*0 + 3*165*FLEN/8, x4, x1, x2)

inst_40102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:120306*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120306*0 + 3*166*FLEN/8, x4, x1, x2)

inst_40103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:120309*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120309*0 + 3*167*FLEN/8, x4, x1, x2)

inst_40104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:120312*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120312*0 + 3*168*FLEN/8, x4, x1, x2)

inst_40105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:120315*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120315*0 + 3*169*FLEN/8, x4, x1, x2)

inst_40106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:120318*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120318*0 + 3*170*FLEN/8, x4, x1, x2)

inst_40107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:120321*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120321*0 + 3*171*FLEN/8, x4, x1, x2)

inst_40108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000000000; valaddr_reg:x3; val_offset:120324*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120324*0 + 3*172*FLEN/8, x4, x1, x2)

inst_40109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000000001; valaddr_reg:x3; val_offset:120327*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120327*0 + 3*173*FLEN/8, x4, x1, x2)

inst_40110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000000003; valaddr_reg:x3; val_offset:120330*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120330*0 + 3*174*FLEN/8, x4, x1, x2)

inst_40111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000000007; valaddr_reg:x3; val_offset:120333*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120333*0 + 3*175*FLEN/8, x4, x1, x2)

inst_40112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000000000f; valaddr_reg:x3; val_offset:120336*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120336*0 + 3*176*FLEN/8, x4, x1, x2)

inst_40113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000000001f; valaddr_reg:x3; val_offset:120339*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120339*0 + 3*177*FLEN/8, x4, x1, x2)

inst_40114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000000003f; valaddr_reg:x3; val_offset:120342*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120342*0 + 3*178*FLEN/8, x4, x1, x2)

inst_40115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000000007f; valaddr_reg:x3; val_offset:120345*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120345*0 + 3*179*FLEN/8, x4, x1, x2)

inst_40116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000000000ff; valaddr_reg:x3; val_offset:120348*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120348*0 + 3*180*FLEN/8, x4, x1, x2)

inst_40117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000000001ff; valaddr_reg:x3; val_offset:120351*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120351*0 + 3*181*FLEN/8, x4, x1, x2)

inst_40118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000000003ff; valaddr_reg:x3; val_offset:120354*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120354*0 + 3*182*FLEN/8, x4, x1, x2)

inst_40119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000000007ff; valaddr_reg:x3; val_offset:120357*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120357*0 + 3*183*FLEN/8, x4, x1, x2)

inst_40120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000000fff; valaddr_reg:x3; val_offset:120360*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120360*0 + 3*184*FLEN/8, x4, x1, x2)

inst_40121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000001fff; valaddr_reg:x3; val_offset:120363*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120363*0 + 3*185*FLEN/8, x4, x1, x2)

inst_40122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000003fff; valaddr_reg:x3; val_offset:120366*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120366*0 + 3*186*FLEN/8, x4, x1, x2)

inst_40123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000007fff; valaddr_reg:x3; val_offset:120369*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120369*0 + 3*187*FLEN/8, x4, x1, x2)

inst_40124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000000ffff; valaddr_reg:x3; val_offset:120372*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120372*0 + 3*188*FLEN/8, x4, x1, x2)

inst_40125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000001ffff; valaddr_reg:x3; val_offset:120375*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120375*0 + 3*189*FLEN/8, x4, x1, x2)

inst_40126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000003ffff; valaddr_reg:x3; val_offset:120378*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120378*0 + 3*190*FLEN/8, x4, x1, x2)

inst_40127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000007ffff; valaddr_reg:x3; val_offset:120381*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120381*0 + 3*191*FLEN/8, x4, x1, x2)

inst_40128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000000fffff; valaddr_reg:x3; val_offset:120384*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120384*0 + 3*192*FLEN/8, x4, x1, x2)

inst_40129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000001fffff; valaddr_reg:x3; val_offset:120387*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120387*0 + 3*193*FLEN/8, x4, x1, x2)

inst_40130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000003fffff; valaddr_reg:x3; val_offset:120390*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120390*0 + 3*194*FLEN/8, x4, x1, x2)

inst_40131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000007fffff; valaddr_reg:x3; val_offset:120393*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120393*0 + 3*195*FLEN/8, x4, x1, x2)

inst_40132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000000ffffff; valaddr_reg:x3; val_offset:120396*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120396*0 + 3*196*FLEN/8, x4, x1, x2)

inst_40133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000001ffffff; valaddr_reg:x3; val_offset:120399*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120399*0 + 3*197*FLEN/8, x4, x1, x2)

inst_40134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:120402*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120402*0 + 3*198*FLEN/8, x4, x1, x2)

inst_40135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:120405*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120405*0 + 3*199*FLEN/8, x4, x1, x2)

inst_40136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:120408*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120408*0 + 3*200*FLEN/8, x4, x1, x2)

inst_40137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:120411*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120411*0 + 3*201*FLEN/8, x4, x1, x2)

inst_40138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:120414*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120414*0 + 3*202*FLEN/8, x4, x1, x2)

inst_40139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:120417*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120417*0 + 3*203*FLEN/8, x4, x1, x2)

inst_40140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:120420*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120420*0 + 3*204*FLEN/8, x4, x1, x2)

inst_40141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:120423*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120423*0 + 3*205*FLEN/8, x4, x1, x2)

inst_40142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:120426*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120426*0 + 3*206*FLEN/8, x4, x1, x2)

inst_40143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:120429*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120429*0 + 3*207*FLEN/8, x4, x1, x2)

inst_40144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:120432*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120432*0 + 3*208*FLEN/8, x4, x1, x2)

inst_40145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:120435*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120435*0 + 3*209*FLEN/8, x4, x1, x2)

inst_40146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:120438*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120438*0 + 3*210*FLEN/8, x4, x1, x2)

inst_40147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:120441*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120441*0 + 3*211*FLEN/8, x4, x1, x2)

inst_40148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:120444*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120444*0 + 3*212*FLEN/8, x4, x1, x2)

inst_40149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:120447*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120447*0 + 3*213*FLEN/8, x4, x1, x2)

inst_40150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:120450*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120450*0 + 3*214*FLEN/8, x4, x1, x2)

inst_40151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:120453*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120453*0 + 3*215*FLEN/8, x4, x1, x2)

inst_40152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:120456*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120456*0 + 3*216*FLEN/8, x4, x1, x2)

inst_40153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:120459*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120459*0 + 3*217*FLEN/8, x4, x1, x2)

inst_40154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:120462*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120462*0 + 3*218*FLEN/8, x4, x1, x2)

inst_40155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:120465*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120465*0 + 3*219*FLEN/8, x4, x1, x2)

inst_40156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:120468*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120468*0 + 3*220*FLEN/8, x4, x1, x2)

inst_40157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:120471*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120471*0 + 3*221*FLEN/8, x4, x1, x2)

inst_40158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:120474*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120474*0 + 3*222*FLEN/8, x4, x1, x2)

inst_40159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:120477*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120477*0 + 3*223*FLEN/8, x4, x1, x2)

inst_40160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:120480*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120480*0 + 3*224*FLEN/8, x4, x1, x2)

inst_40161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:120483*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120483*0 + 3*225*FLEN/8, x4, x1, x2)

inst_40162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:120486*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120486*0 + 3*226*FLEN/8, x4, x1, x2)

inst_40163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:120489*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120489*0 + 3*227*FLEN/8, x4, x1, x2)

inst_40164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:120492*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120492*0 + 3*228*FLEN/8, x4, x1, x2)

inst_40165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:120495*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120495*0 + 3*229*FLEN/8, x4, x1, x2)

inst_40166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:120498*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120498*0 + 3*230*FLEN/8, x4, x1, x2)

inst_40167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:120501*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120501*0 + 3*231*FLEN/8, x4, x1, x2)

inst_40168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:120504*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120504*0 + 3*232*FLEN/8, x4, x1, x2)

inst_40169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:120507*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120507*0 + 3*233*FLEN/8, x4, x1, x2)

inst_40170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:120510*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120510*0 + 3*234*FLEN/8, x4, x1, x2)

inst_40171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:120513*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120513*0 + 3*235*FLEN/8, x4, x1, x2)

inst_40172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:120516*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120516*0 + 3*236*FLEN/8, x4, x1, x2)

inst_40173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:120519*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120519*0 + 3*237*FLEN/8, x4, x1, x2)

inst_40174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:120522*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120522*0 + 3*238*FLEN/8, x4, x1, x2)

inst_40175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:120525*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120525*0 + 3*239*FLEN/8, x4, x1, x2)

inst_40176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:120528*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120528*0 + 3*240*FLEN/8, x4, x1, x2)

inst_40177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:120531*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120531*0 + 3*241*FLEN/8, x4, x1, x2)

inst_40178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:120534*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120534*0 + 3*242*FLEN/8, x4, x1, x2)

inst_40179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:120537*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120537*0 + 3*243*FLEN/8, x4, x1, x2)

inst_40180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:120540*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120540*0 + 3*244*FLEN/8, x4, x1, x2)

inst_40181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:120543*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120543*0 + 3*245*FLEN/8, x4, x1, x2)

inst_40182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:120546*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120546*0 + 3*246*FLEN/8, x4, x1, x2)

inst_40183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:120549*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120549*0 + 3*247*FLEN/8, x4, x1, x2)

inst_40184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:120552*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120552*0 + 3*248*FLEN/8, x4, x1, x2)

inst_40185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:120555*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120555*0 + 3*249*FLEN/8, x4, x1, x2)

inst_40186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:120558*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120558*0 + 3*250*FLEN/8, x4, x1, x2)

inst_40187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:120561*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120561*0 + 3*251*FLEN/8, x4, x1, x2)

inst_40188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:120564*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120564*0 + 3*252*FLEN/8, x4, x1, x2)

inst_40189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:120567*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120567*0 + 3*253*FLEN/8, x4, x1, x2)

inst_40190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:120570*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120570*0 + 3*254*FLEN/8, x4, x1, x2)

inst_40191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:120573*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120573*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_40192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:120576*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120576*0 + 3*256*FLEN/8, x4, x1, x2)

inst_40193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:120579*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120579*0 + 3*257*FLEN/8, x4, x1, x2)

inst_40194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:120582*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120582*0 + 3*258*FLEN/8, x4, x1, x2)

inst_40195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:120585*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120585*0 + 3*259*FLEN/8, x4, x1, x2)

inst_40196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:120588*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120588*0 + 3*260*FLEN/8, x4, x1, x2)

inst_40197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:120591*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120591*0 + 3*261*FLEN/8, x4, x1, x2)

inst_40198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:120594*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120594*0 + 3*262*FLEN/8, x4, x1, x2)

inst_40199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:120597*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120597*0 + 3*263*FLEN/8, x4, x1, x2)

inst_40200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffff800; valaddr_reg:x3; val_offset:120600*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120600*0 + 3*264*FLEN/8, x4, x1, x2)

inst_40201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffffc00; valaddr_reg:x3; val_offset:120603*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120603*0 + 3*265*FLEN/8, x4, x1, x2)

inst_40202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffffe00; valaddr_reg:x3; val_offset:120606*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120606*0 + 3*266*FLEN/8, x4, x1, x2)

inst_40203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffff00; valaddr_reg:x3; val_offset:120609*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120609*0 + 3*267*FLEN/8, x4, x1, x2)

inst_40204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffff80; valaddr_reg:x3; val_offset:120612*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120612*0 + 3*268*FLEN/8, x4, x1, x2)

inst_40205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffffc0; valaddr_reg:x3; val_offset:120615*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120615*0 + 3*269*FLEN/8, x4, x1, x2)

inst_40206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffffe0; valaddr_reg:x3; val_offset:120618*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120618*0 + 3*270*FLEN/8, x4, x1, x2)

inst_40207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffffff0; valaddr_reg:x3; val_offset:120621*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120621*0 + 3*271*FLEN/8, x4, x1, x2)

inst_40208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffffff8; valaddr_reg:x3; val_offset:120624*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120624*0 + 3*272*FLEN/8, x4, x1, x2)

inst_40209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffffffc; valaddr_reg:x3; val_offset:120627*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120627*0 + 3*273*FLEN/8, x4, x1, x2)

inst_40210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806ffffffffffffe; valaddr_reg:x3; val_offset:120630*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120630*0 + 3*274*FLEN/8, x4, x1, x2)

inst_40211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930bcbd2d6035; op2val:0x8000;
op3val:0x806fffffffffffff; valaddr_reg:x3; val_offset:120633*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120633*0 + 3*275*FLEN/8, x4, x1, x2)

inst_40212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:120636*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120636*0 + 3*276*FLEN/8, x4, x1, x2)

inst_40213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:120639*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120639*0 + 3*277*FLEN/8, x4, x1, x2)

inst_40214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:120642*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120642*0 + 3*278*FLEN/8, x4, x1, x2)

inst_40215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:120645*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120645*0 + 3*279*FLEN/8, x4, x1, x2)

inst_40216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:120648*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120648*0 + 3*280*FLEN/8, x4, x1, x2)

inst_40217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:120651*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120651*0 + 3*281*FLEN/8, x4, x1, x2)

inst_40218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:120654*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120654*0 + 3*282*FLEN/8, x4, x1, x2)

inst_40219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:120657*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120657*0 + 3*283*FLEN/8, x4, x1, x2)

inst_40220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:120660*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120660*0 + 3*284*FLEN/8, x4, x1, x2)

inst_40221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:120663*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120663*0 + 3*285*FLEN/8, x4, x1, x2)

inst_40222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:120666*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120666*0 + 3*286*FLEN/8, x4, x1, x2)

inst_40223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:120669*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120669*0 + 3*287*FLEN/8, x4, x1, x2)

inst_40224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:120672*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120672*0 + 3*288*FLEN/8, x4, x1, x2)

inst_40225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:120675*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120675*0 + 3*289*FLEN/8, x4, x1, x2)

inst_40226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:120678*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120678*0 + 3*290*FLEN/8, x4, x1, x2)

inst_40227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:120681*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120681*0 + 3*291*FLEN/8, x4, x1, x2)

inst_40228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:120684*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120684*0 + 3*292*FLEN/8, x4, x1, x2)

inst_40229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:120687*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120687*0 + 3*293*FLEN/8, x4, x1, x2)

inst_40230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:120690*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120690*0 + 3*294*FLEN/8, x4, x1, x2)

inst_40231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:120693*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120693*0 + 3*295*FLEN/8, x4, x1, x2)

inst_40232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:120696*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120696*0 + 3*296*FLEN/8, x4, x1, x2)

inst_40233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:120699*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120699*0 + 3*297*FLEN/8, x4, x1, x2)

inst_40234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000000000; valaddr_reg:x3; val_offset:120702*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120702*0 + 3*298*FLEN/8, x4, x1, x2)

inst_40235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000000001; valaddr_reg:x3; val_offset:120705*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120705*0 + 3*299*FLEN/8, x4, x1, x2)

inst_40236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000000003; valaddr_reg:x3; val_offset:120708*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120708*0 + 3*300*FLEN/8, x4, x1, x2)

inst_40237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000000007; valaddr_reg:x3; val_offset:120711*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120711*0 + 3*301*FLEN/8, x4, x1, x2)

inst_40238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000000000f; valaddr_reg:x3; val_offset:120714*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120714*0 + 3*302*FLEN/8, x4, x1, x2)

inst_40239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000000001f; valaddr_reg:x3; val_offset:120717*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120717*0 + 3*303*FLEN/8, x4, x1, x2)

inst_40240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000000003f; valaddr_reg:x3; val_offset:120720*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120720*0 + 3*304*FLEN/8, x4, x1, x2)

inst_40241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000000007f; valaddr_reg:x3; val_offset:120723*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120723*0 + 3*305*FLEN/8, x4, x1, x2)

inst_40242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000000000ff; valaddr_reg:x3; val_offset:120726*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120726*0 + 3*306*FLEN/8, x4, x1, x2)

inst_40243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000000001ff; valaddr_reg:x3; val_offset:120729*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120729*0 + 3*307*FLEN/8, x4, x1, x2)

inst_40244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000000003ff; valaddr_reg:x3; val_offset:120732*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120732*0 + 3*308*FLEN/8, x4, x1, x2)

inst_40245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000000007ff; valaddr_reg:x3; val_offset:120735*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120735*0 + 3*309*FLEN/8, x4, x1, x2)

inst_40246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000000fff; valaddr_reg:x3; val_offset:120738*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120738*0 + 3*310*FLEN/8, x4, x1, x2)

inst_40247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000001fff; valaddr_reg:x3; val_offset:120741*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120741*0 + 3*311*FLEN/8, x4, x1, x2)

inst_40248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000003fff; valaddr_reg:x3; val_offset:120744*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120744*0 + 3*312*FLEN/8, x4, x1, x2)

inst_40249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000007fff; valaddr_reg:x3; val_offset:120747*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120747*0 + 3*313*FLEN/8, x4, x1, x2)

inst_40250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000000ffff; valaddr_reg:x3; val_offset:120750*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120750*0 + 3*314*FLEN/8, x4, x1, x2)

inst_40251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000001ffff; valaddr_reg:x3; val_offset:120753*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120753*0 + 3*315*FLEN/8, x4, x1, x2)

inst_40252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000003ffff; valaddr_reg:x3; val_offset:120756*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120756*0 + 3*316*FLEN/8, x4, x1, x2)

inst_40253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000007ffff; valaddr_reg:x3; val_offset:120759*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120759*0 + 3*317*FLEN/8, x4, x1, x2)

inst_40254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000000fffff; valaddr_reg:x3; val_offset:120762*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120762*0 + 3*318*FLEN/8, x4, x1, x2)

inst_40255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000001fffff; valaddr_reg:x3; val_offset:120765*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120765*0 + 3*319*FLEN/8, x4, x1, x2)

inst_40256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000003fffff; valaddr_reg:x3; val_offset:120768*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120768*0 + 3*320*FLEN/8, x4, x1, x2)

inst_40257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000007fffff; valaddr_reg:x3; val_offset:120771*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120771*0 + 3*321*FLEN/8, x4, x1, x2)

inst_40258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000000ffffff; valaddr_reg:x3; val_offset:120774*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120774*0 + 3*322*FLEN/8, x4, x1, x2)

inst_40259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000001ffffff; valaddr_reg:x3; val_offset:120777*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120777*0 + 3*323*FLEN/8, x4, x1, x2)

inst_40260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000003ffffff; valaddr_reg:x3; val_offset:120780*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120780*0 + 3*324*FLEN/8, x4, x1, x2)

inst_40261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000007ffffff; valaddr_reg:x3; val_offset:120783*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120783*0 + 3*325*FLEN/8, x4, x1, x2)

inst_40262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000000fffffff; valaddr_reg:x3; val_offset:120786*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120786*0 + 3*326*FLEN/8, x4, x1, x2)

inst_40263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000001fffffff; valaddr_reg:x3; val_offset:120789*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120789*0 + 3*327*FLEN/8, x4, x1, x2)

inst_40264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000003fffffff; valaddr_reg:x3; val_offset:120792*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120792*0 + 3*328*FLEN/8, x4, x1, x2)

inst_40265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000007fffffff; valaddr_reg:x3; val_offset:120795*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120795*0 + 3*329*FLEN/8, x4, x1, x2)

inst_40266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500000ffffffff; valaddr_reg:x3; val_offset:120798*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120798*0 + 3*330*FLEN/8, x4, x1, x2)

inst_40267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500001ffffffff; valaddr_reg:x3; val_offset:120801*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120801*0 + 3*331*FLEN/8, x4, x1, x2)

inst_40268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500003ffffffff; valaddr_reg:x3; val_offset:120804*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120804*0 + 3*332*FLEN/8, x4, x1, x2)

inst_40269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500007ffffffff; valaddr_reg:x3; val_offset:120807*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120807*0 + 3*333*FLEN/8, x4, x1, x2)

inst_40270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150000fffffffff; valaddr_reg:x3; val_offset:120810*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120810*0 + 3*334*FLEN/8, x4, x1, x2)

inst_40271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150001fffffffff; valaddr_reg:x3; val_offset:120813*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120813*0 + 3*335*FLEN/8, x4, x1, x2)

inst_40272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150003fffffffff; valaddr_reg:x3; val_offset:120816*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120816*0 + 3*336*FLEN/8, x4, x1, x2)

inst_40273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150007fffffffff; valaddr_reg:x3; val_offset:120819*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120819*0 + 3*337*FLEN/8, x4, x1, x2)

inst_40274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15000ffffffffff; valaddr_reg:x3; val_offset:120822*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120822*0 + 3*338*FLEN/8, x4, x1, x2)

inst_40275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15001ffffffffff; valaddr_reg:x3; val_offset:120825*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120825*0 + 3*339*FLEN/8, x4, x1, x2)

inst_40276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15003ffffffffff; valaddr_reg:x3; val_offset:120828*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120828*0 + 3*340*FLEN/8, x4, x1, x2)

inst_40277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15007ffffffffff; valaddr_reg:x3; val_offset:120831*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120831*0 + 3*341*FLEN/8, x4, x1, x2)

inst_40278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1500fffffffffff; valaddr_reg:x3; val_offset:120834*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120834*0 + 3*342*FLEN/8, x4, x1, x2)

inst_40279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1501fffffffffff; valaddr_reg:x3; val_offset:120837*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120837*0 + 3*343*FLEN/8, x4, x1, x2)

inst_40280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1503fffffffffff; valaddr_reg:x3; val_offset:120840*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120840*0 + 3*344*FLEN/8, x4, x1, x2)

inst_40281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x1507fffffffffff; valaddr_reg:x3; val_offset:120843*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120843*0 + 3*345*FLEN/8, x4, x1, x2)

inst_40282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x150ffffffffffff; valaddr_reg:x3; val_offset:120846*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120846*0 + 3*346*FLEN/8, x4, x1, x2)

inst_40283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x151ffffffffffff; valaddr_reg:x3; val_offset:120849*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120849*0 + 3*347*FLEN/8, x4, x1, x2)

inst_40284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x153ffffffffffff; valaddr_reg:x3; val_offset:120852*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120852*0 + 3*348*FLEN/8, x4, x1, x2)

inst_40285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x157ffffffffffff; valaddr_reg:x3; val_offset:120855*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120855*0 + 3*349*FLEN/8, x4, x1, x2)

inst_40286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x158000000000000; valaddr_reg:x3; val_offset:120858*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120858*0 + 3*350*FLEN/8, x4, x1, x2)

inst_40287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15c000000000000; valaddr_reg:x3; val_offset:120861*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120861*0 + 3*351*FLEN/8, x4, x1, x2)

inst_40288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15e000000000000; valaddr_reg:x3; val_offset:120864*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120864*0 + 3*352*FLEN/8, x4, x1, x2)

inst_40289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15f000000000000; valaddr_reg:x3; val_offset:120867*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120867*0 + 3*353*FLEN/8, x4, x1, x2)

inst_40290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15f800000000000; valaddr_reg:x3; val_offset:120870*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120870*0 + 3*354*FLEN/8, x4, x1, x2)

inst_40291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fc00000000000; valaddr_reg:x3; val_offset:120873*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120873*0 + 3*355*FLEN/8, x4, x1, x2)

inst_40292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fe00000000000; valaddr_reg:x3; val_offset:120876*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120876*0 + 3*356*FLEN/8, x4, x1, x2)

inst_40293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ff00000000000; valaddr_reg:x3; val_offset:120879*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120879*0 + 3*357*FLEN/8, x4, x1, x2)

inst_40294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ff80000000000; valaddr_reg:x3; val_offset:120882*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120882*0 + 3*358*FLEN/8, x4, x1, x2)

inst_40295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffc0000000000; valaddr_reg:x3; val_offset:120885*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120885*0 + 3*359*FLEN/8, x4, x1, x2)

inst_40296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffe0000000000; valaddr_reg:x3; val_offset:120888*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120888*0 + 3*360*FLEN/8, x4, x1, x2)

inst_40297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fff0000000000; valaddr_reg:x3; val_offset:120891*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120891*0 + 3*361*FLEN/8, x4, x1, x2)

inst_40298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fff8000000000; valaddr_reg:x3; val_offset:120894*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120894*0 + 3*362*FLEN/8, x4, x1, x2)

inst_40299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffc000000000; valaddr_reg:x3; val_offset:120897*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120897*0 + 3*363*FLEN/8, x4, x1, x2)

inst_40300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffe000000000; valaddr_reg:x3; val_offset:120900*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120900*0 + 3*364*FLEN/8, x4, x1, x2)

inst_40301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffff000000000; valaddr_reg:x3; val_offset:120903*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120903*0 + 3*365*FLEN/8, x4, x1, x2)

inst_40302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:120906*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120906*0 + 3*366*FLEN/8, x4, x1, x2)

inst_40303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:120909*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120909*0 + 3*367*FLEN/8, x4, x1, x2)

inst_40304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:120912*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120912*0 + 3*368*FLEN/8, x4, x1, x2)

inst_40305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:120915*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120915*0 + 3*369*FLEN/8, x4, x1, x2)

inst_40306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:120918*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120918*0 + 3*370*FLEN/8, x4, x1, x2)

inst_40307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:120921*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120921*0 + 3*371*FLEN/8, x4, x1, x2)

inst_40308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:120924*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120924*0 + 3*372*FLEN/8, x4, x1, x2)

inst_40309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:120927*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120927*0 + 3*373*FLEN/8, x4, x1, x2)

inst_40310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:120930*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120930*0 + 3*374*FLEN/8, x4, x1, x2)

inst_40311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:120933*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120933*0 + 3*375*FLEN/8, x4, x1, x2)

inst_40312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:120936*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120936*0 + 3*376*FLEN/8, x4, x1, x2)

inst_40313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:120939*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120939*0 + 3*377*FLEN/8, x4, x1, x2)

inst_40314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:120942*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120942*0 + 3*378*FLEN/8, x4, x1, x2)

inst_40315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:120945*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120945*0 + 3*379*FLEN/8, x4, x1, x2)

inst_40316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:120948*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120948*0 + 3*380*FLEN/8, x4, x1, x2)

inst_40317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:120951*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120951*0 + 3*381*FLEN/8, x4, x1, x2)

inst_40318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:120954*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120954*0 + 3*382*FLEN/8, x4, x1, x2)

inst_40319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:120957*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120957*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_40320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:120960*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120960*0 + 3*384*FLEN/8, x4, x1, x2)

inst_40321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:120963*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120963*0 + 3*385*FLEN/8, x4, x1, x2)

inst_40322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:120966*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120966*0 + 3*386*FLEN/8, x4, x1, x2)

inst_40323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:120969*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120969*0 + 3*387*FLEN/8, x4, x1, x2)

inst_40324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:120972*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120972*0 + 3*388*FLEN/8, x4, x1, x2)

inst_40325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:120975*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120975*0 + 3*389*FLEN/8, x4, x1, x2)

inst_40326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:120978*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120978*0 + 3*390*FLEN/8, x4, x1, x2)

inst_40327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:120981*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120981*0 + 3*391*FLEN/8, x4, x1, x2)

inst_40328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:120984*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120984*0 + 3*392*FLEN/8, x4, x1, x2)

inst_40329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:120987*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120987*0 + 3*393*FLEN/8, x4, x1, x2)

inst_40330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:120990*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120990*0 + 3*394*FLEN/8, x4, x1, x2)

inst_40331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:120993*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120993*0 + 3*395*FLEN/8, x4, x1, x2)

inst_40332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:120996*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120996*0 + 3*396*FLEN/8, x4, x1, x2)

inst_40333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:120999*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120999*0 + 3*397*FLEN/8, x4, x1, x2)

inst_40334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:121002*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121002*0 + 3*398*FLEN/8, x4, x1, x2)

inst_40335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:121005*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121005*0 + 3*399*FLEN/8, x4, x1, x2)

inst_40336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:121008*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121008*0 + 3*400*FLEN/8, x4, x1, x2)

inst_40337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x930dc75bcbad7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9930dc75bcbad7; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:121011*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121011*0 + 3*401*FLEN/8, x4, x1, x2)

inst_40338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000000000; valaddr_reg:x3; val_offset:121014*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121014*0 + 3*402*FLEN/8, x4, x1, x2)

inst_40339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000000001; valaddr_reg:x3; val_offset:121017*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121017*0 + 3*403*FLEN/8, x4, x1, x2)

inst_40340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000000003; valaddr_reg:x3; val_offset:121020*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121020*0 + 3*404*FLEN/8, x4, x1, x2)

inst_40341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000000007; valaddr_reg:x3; val_offset:121023*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121023*0 + 3*405*FLEN/8, x4, x1, x2)

inst_40342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000000000f; valaddr_reg:x3; val_offset:121026*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121026*0 + 3*406*FLEN/8, x4, x1, x2)

inst_40343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000000001f; valaddr_reg:x3; val_offset:121029*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121029*0 + 3*407*FLEN/8, x4, x1, x2)

inst_40344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000000003f; valaddr_reg:x3; val_offset:121032*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121032*0 + 3*408*FLEN/8, x4, x1, x2)

inst_40345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000000007f; valaddr_reg:x3; val_offset:121035*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121035*0 + 3*409*FLEN/8, x4, x1, x2)

inst_40346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000000000ff; valaddr_reg:x3; val_offset:121038*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121038*0 + 3*410*FLEN/8, x4, x1, x2)

inst_40347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000000001ff; valaddr_reg:x3; val_offset:121041*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121041*0 + 3*411*FLEN/8, x4, x1, x2)

inst_40348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000000003ff; valaddr_reg:x3; val_offset:121044*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121044*0 + 3*412*FLEN/8, x4, x1, x2)

inst_40349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000000007ff; valaddr_reg:x3; val_offset:121047*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121047*0 + 3*413*FLEN/8, x4, x1, x2)

inst_40350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000000fff; valaddr_reg:x3; val_offset:121050*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121050*0 + 3*414*FLEN/8, x4, x1, x2)

inst_40351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000001fff; valaddr_reg:x3; val_offset:121053*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121053*0 + 3*415*FLEN/8, x4, x1, x2)

inst_40352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000003fff; valaddr_reg:x3; val_offset:121056*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121056*0 + 3*416*FLEN/8, x4, x1, x2)

inst_40353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000007fff; valaddr_reg:x3; val_offset:121059*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121059*0 + 3*417*FLEN/8, x4, x1, x2)

inst_40354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000000ffff; valaddr_reg:x3; val_offset:121062*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121062*0 + 3*418*FLEN/8, x4, x1, x2)

inst_40355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000001ffff; valaddr_reg:x3; val_offset:121065*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121065*0 + 3*419*FLEN/8, x4, x1, x2)

inst_40356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000003ffff; valaddr_reg:x3; val_offset:121068*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121068*0 + 3*420*FLEN/8, x4, x1, x2)

inst_40357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000007ffff; valaddr_reg:x3; val_offset:121071*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121071*0 + 3*421*FLEN/8, x4, x1, x2)

inst_40358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000000fffff; valaddr_reg:x3; val_offset:121074*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121074*0 + 3*422*FLEN/8, x4, x1, x2)

inst_40359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000001fffff; valaddr_reg:x3; val_offset:121077*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121077*0 + 3*423*FLEN/8, x4, x1, x2)

inst_40360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000003fffff; valaddr_reg:x3; val_offset:121080*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121080*0 + 3*424*FLEN/8, x4, x1, x2)

inst_40361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000007fffff; valaddr_reg:x3; val_offset:121083*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121083*0 + 3*425*FLEN/8, x4, x1, x2)

inst_40362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000000ffffff; valaddr_reg:x3; val_offset:121086*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121086*0 + 3*426*FLEN/8, x4, x1, x2)

inst_40363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000001ffffff; valaddr_reg:x3; val_offset:121089*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121089*0 + 3*427*FLEN/8, x4, x1, x2)

inst_40364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000003ffffff; valaddr_reg:x3; val_offset:121092*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121092*0 + 3*428*FLEN/8, x4, x1, x2)

inst_40365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000007ffffff; valaddr_reg:x3; val_offset:121095*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121095*0 + 3*429*FLEN/8, x4, x1, x2)

inst_40366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000000fffffff; valaddr_reg:x3; val_offset:121098*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121098*0 + 3*430*FLEN/8, x4, x1, x2)

inst_40367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000001fffffff; valaddr_reg:x3; val_offset:121101*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121101*0 + 3*431*FLEN/8, x4, x1, x2)

inst_40368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000003fffffff; valaddr_reg:x3; val_offset:121104*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121104*0 + 3*432*FLEN/8, x4, x1, x2)

inst_40369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000007fffffff; valaddr_reg:x3; val_offset:121107*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121107*0 + 3*433*FLEN/8, x4, x1, x2)

inst_40370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00000ffffffff; valaddr_reg:x3; val_offset:121110*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121110*0 + 3*434*FLEN/8, x4, x1, x2)

inst_40371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00001ffffffff; valaddr_reg:x3; val_offset:121113*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121113*0 + 3*435*FLEN/8, x4, x1, x2)

inst_40372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00003ffffffff; valaddr_reg:x3; val_offset:121116*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121116*0 + 3*436*FLEN/8, x4, x1, x2)

inst_40373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00007ffffffff; valaddr_reg:x3; val_offset:121119*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121119*0 + 3*437*FLEN/8, x4, x1, x2)

inst_40374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0000fffffffff; valaddr_reg:x3; val_offset:121122*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121122*0 + 3*438*FLEN/8, x4, x1, x2)

inst_40375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0001fffffffff; valaddr_reg:x3; val_offset:121125*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121125*0 + 3*439*FLEN/8, x4, x1, x2)

inst_40376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0003fffffffff; valaddr_reg:x3; val_offset:121128*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121128*0 + 3*440*FLEN/8, x4, x1, x2)

inst_40377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0007fffffffff; valaddr_reg:x3; val_offset:121131*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121131*0 + 3*441*FLEN/8, x4, x1, x2)

inst_40378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc000ffffffffff; valaddr_reg:x3; val_offset:121134*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121134*0 + 3*442*FLEN/8, x4, x1, x2)

inst_40379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc001ffffffffff; valaddr_reg:x3; val_offset:121137*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121137*0 + 3*443*FLEN/8, x4, x1, x2)

inst_40380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc003ffffffffff; valaddr_reg:x3; val_offset:121140*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121140*0 + 3*444*FLEN/8, x4, x1, x2)

inst_40381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc007ffffffffff; valaddr_reg:x3; val_offset:121143*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121143*0 + 3*445*FLEN/8, x4, x1, x2)

inst_40382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc00fffffffffff; valaddr_reg:x3; val_offset:121146*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121146*0 + 3*446*FLEN/8, x4, x1, x2)

inst_40383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc01fffffffffff; valaddr_reg:x3; val_offset:121149*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121149*0 + 3*447*FLEN/8, x4, x1, x2)

inst_40384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc03fffffffffff; valaddr_reg:x3; val_offset:121152*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121152*0 + 3*448*FLEN/8, x4, x1, x2)

inst_40385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc07fffffffffff; valaddr_reg:x3; val_offset:121155*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121155*0 + 3*449*FLEN/8, x4, x1, x2)

inst_40386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc0ffffffffffff; valaddr_reg:x3; val_offset:121158*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121158*0 + 3*450*FLEN/8, x4, x1, x2)

inst_40387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc1ffffffffffff; valaddr_reg:x3; val_offset:121161*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121161*0 + 3*451*FLEN/8, x4, x1, x2)

inst_40388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc3ffffffffffff; valaddr_reg:x3; val_offset:121164*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121164*0 + 3*452*FLEN/8, x4, x1, x2)

inst_40389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc7ffffffffffff; valaddr_reg:x3; val_offset:121167*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121167*0 + 3*453*FLEN/8, x4, x1, x2)

inst_40390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdc8000000000000; valaddr_reg:x3; val_offset:121170*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121170*0 + 3*454*FLEN/8, x4, x1, x2)

inst_40391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcc000000000000; valaddr_reg:x3; val_offset:121173*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121173*0 + 3*455*FLEN/8, x4, x1, x2)

inst_40392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdce000000000000; valaddr_reg:x3; val_offset:121176*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121176*0 + 3*456*FLEN/8, x4, x1, x2)

inst_40393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcf000000000000; valaddr_reg:x3; val_offset:121179*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121179*0 + 3*457*FLEN/8, x4, x1, x2)

inst_40394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcf800000000000; valaddr_reg:x3; val_offset:121182*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121182*0 + 3*458*FLEN/8, x4, x1, x2)

inst_40395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfc00000000000; valaddr_reg:x3; val_offset:121185*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121185*0 + 3*459*FLEN/8, x4, x1, x2)

inst_40396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfe00000000000; valaddr_reg:x3; val_offset:121188*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121188*0 + 3*460*FLEN/8, x4, x1, x2)

inst_40397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcff00000000000; valaddr_reg:x3; val_offset:121191*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121191*0 + 3*461*FLEN/8, x4, x1, x2)

inst_40398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcff80000000000; valaddr_reg:x3; val_offset:121194*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121194*0 + 3*462*FLEN/8, x4, x1, x2)

inst_40399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffc0000000000; valaddr_reg:x3; val_offset:121197*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121197*0 + 3*463*FLEN/8, x4, x1, x2)

inst_40400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffe0000000000; valaddr_reg:x3; val_offset:121200*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121200*0 + 3*464*FLEN/8, x4, x1, x2)

inst_40401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfff0000000000; valaddr_reg:x3; val_offset:121203*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121203*0 + 3*465*FLEN/8, x4, x1, x2)

inst_40402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfff8000000000; valaddr_reg:x3; val_offset:121206*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121206*0 + 3*466*FLEN/8, x4, x1, x2)

inst_40403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffc000000000; valaddr_reg:x3; val_offset:121209*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121209*0 + 3*467*FLEN/8, x4, x1, x2)

inst_40404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffe000000000; valaddr_reg:x3; val_offset:121212*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121212*0 + 3*468*FLEN/8, x4, x1, x2)

inst_40405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffff000000000; valaddr_reg:x3; val_offset:121215*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121215*0 + 3*469*FLEN/8, x4, x1, x2)

inst_40406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffff800000000; valaddr_reg:x3; val_offset:121218*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121218*0 + 3*470*FLEN/8, x4, x1, x2)

inst_40407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffc00000000; valaddr_reg:x3; val_offset:121221*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121221*0 + 3*471*FLEN/8, x4, x1, x2)

inst_40408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffe00000000; valaddr_reg:x3; val_offset:121224*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121224*0 + 3*472*FLEN/8, x4, x1, x2)

inst_40409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffff00000000; valaddr_reg:x3; val_offset:121227*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121227*0 + 3*473*FLEN/8, x4, x1, x2)

inst_40410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffff80000000; valaddr_reg:x3; val_offset:121230*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121230*0 + 3*474*FLEN/8, x4, x1, x2)

inst_40411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffc0000000; valaddr_reg:x3; val_offset:121233*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121233*0 + 3*475*FLEN/8, x4, x1, x2)

inst_40412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffe0000000; valaddr_reg:x3; val_offset:121236*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121236*0 + 3*476*FLEN/8, x4, x1, x2)

inst_40413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffff0000000; valaddr_reg:x3; val_offset:121239*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121239*0 + 3*477*FLEN/8, x4, x1, x2)

inst_40414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffff8000000; valaddr_reg:x3; val_offset:121242*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121242*0 + 3*478*FLEN/8, x4, x1, x2)

inst_40415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffc000000; valaddr_reg:x3; val_offset:121245*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121245*0 + 3*479*FLEN/8, x4, x1, x2)

inst_40416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffe000000; valaddr_reg:x3; val_offset:121248*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121248*0 + 3*480*FLEN/8, x4, x1, x2)

inst_40417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffff000000; valaddr_reg:x3; val_offset:121251*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121251*0 + 3*481*FLEN/8, x4, x1, x2)

inst_40418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffff800000; valaddr_reg:x3; val_offset:121254*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121254*0 + 3*482*FLEN/8, x4, x1, x2)

inst_40419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffc00000; valaddr_reg:x3; val_offset:121257*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121257*0 + 3*483*FLEN/8, x4, x1, x2)

inst_40420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffe00000; valaddr_reg:x3; val_offset:121260*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121260*0 + 3*484*FLEN/8, x4, x1, x2)

inst_40421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffff00000; valaddr_reg:x3; val_offset:121263*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121263*0 + 3*485*FLEN/8, x4, x1, x2)

inst_40422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffff80000; valaddr_reg:x3; val_offset:121266*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121266*0 + 3*486*FLEN/8, x4, x1, x2)

inst_40423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffc0000; valaddr_reg:x3; val_offset:121269*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121269*0 + 3*487*FLEN/8, x4, x1, x2)

inst_40424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffe0000; valaddr_reg:x3; val_offset:121272*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121272*0 + 3*488*FLEN/8, x4, x1, x2)

inst_40425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffff0000; valaddr_reg:x3; val_offset:121275*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121275*0 + 3*489*FLEN/8, x4, x1, x2)

inst_40426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffff8000; valaddr_reg:x3; val_offset:121278*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121278*0 + 3*490*FLEN/8, x4, x1, x2)

inst_40427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffc000; valaddr_reg:x3; val_offset:121281*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121281*0 + 3*491*FLEN/8, x4, x1, x2)

inst_40428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffe000; valaddr_reg:x3; val_offset:121284*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121284*0 + 3*492*FLEN/8, x4, x1, x2)

inst_40429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffff000; valaddr_reg:x3; val_offset:121287*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121287*0 + 3*493*FLEN/8, x4, x1, x2)

inst_40430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffff800; valaddr_reg:x3; val_offset:121290*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121290*0 + 3*494*FLEN/8, x4, x1, x2)

inst_40431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffffc00; valaddr_reg:x3; val_offset:121293*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121293*0 + 3*495*FLEN/8, x4, x1, x2)

inst_40432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffffe00; valaddr_reg:x3; val_offset:121296*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121296*0 + 3*496*FLEN/8, x4, x1, x2)

inst_40433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffff00; valaddr_reg:x3; val_offset:121299*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121299*0 + 3*497*FLEN/8, x4, x1, x2)

inst_40434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffff80; valaddr_reg:x3; val_offset:121302*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121302*0 + 3*498*FLEN/8, x4, x1, x2)

inst_40435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffffc0; valaddr_reg:x3; val_offset:121305*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121305*0 + 3*499*FLEN/8, x4, x1, x2)

inst_40436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffffe0; valaddr_reg:x3; val_offset:121308*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121308*0 + 3*500*FLEN/8, x4, x1, x2)

inst_40437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffffff0; valaddr_reg:x3; val_offset:121311*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121311*0 + 3*501*FLEN/8, x4, x1, x2)

inst_40438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffffff8; valaddr_reg:x3; val_offset:121314*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121314*0 + 3*502*FLEN/8, x4, x1, x2)

inst_40439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffffffc; valaddr_reg:x3; val_offset:121317*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121317*0 + 3*503*FLEN/8, x4, x1, x2)

inst_40440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcffffffffffffe; valaddr_reg:x3; val_offset:121320*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121320*0 + 3*504*FLEN/8, x4, x1, x2)

inst_40441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3dc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbdcfffffffffffff; valaddr_reg:x3; val_offset:121323*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121323*0 + 3*505*FLEN/8, x4, x1, x2)

inst_40442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:121326*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121326*0 + 3*506*FLEN/8, x4, x1, x2)

inst_40443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:121329*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121329*0 + 3*507*FLEN/8, x4, x1, x2)

inst_40444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:121332*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121332*0 + 3*508*FLEN/8, x4, x1, x2)

inst_40445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:121335*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121335*0 + 3*509*FLEN/8, x4, x1, x2)

inst_40446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:121338*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121338*0 + 3*510*FLEN/8, x4, x1, x2)

inst_40447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:121341*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121341*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_40448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:121344*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121344*0 + 3*512*FLEN/8, x4, x1, x2)

inst_40449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:121347*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121347*0 + 3*513*FLEN/8, x4, x1, x2)

inst_40450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:121350*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121350*0 + 3*514*FLEN/8, x4, x1, x2)

inst_40451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:121353*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121353*0 + 3*515*FLEN/8, x4, x1, x2)

inst_40452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:121356*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121356*0 + 3*516*FLEN/8, x4, x1, x2)

inst_40453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:121359*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121359*0 + 3*517*FLEN/8, x4, x1, x2)

inst_40454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:121362*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121362*0 + 3*518*FLEN/8, x4, x1, x2)

inst_40455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:121365*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121365*0 + 3*519*FLEN/8, x4, x1, x2)

inst_40456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:121368*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121368*0 + 3*520*FLEN/8, x4, x1, x2)

inst_40457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:121371*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121371*0 + 3*521*FLEN/8, x4, x1, x2)

inst_40458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:121374*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121374*0 + 3*522*FLEN/8, x4, x1, x2)

inst_40459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:121377*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121377*0 + 3*523*FLEN/8, x4, x1, x2)

inst_40460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:121380*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121380*0 + 3*524*FLEN/8, x4, x1, x2)

inst_40461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:121383*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121383*0 + 3*525*FLEN/8, x4, x1, x2)

inst_40462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:121386*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121386*0 + 3*526*FLEN/8, x4, x1, x2)

inst_40463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x95351e6b0b955 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x43780624494d4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f995351e6b0b955; op2val:0x9fd43780624494d4;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:121389*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121389*0 + 3*527*FLEN/8, x4, x1, x2)

inst_40464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:121392*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121392*0 + 3*528*FLEN/8, x4, x1, x2)

inst_40465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:121395*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121395*0 + 3*529*FLEN/8, x4, x1, x2)

inst_40466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:121398*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121398*0 + 3*530*FLEN/8, x4, x1, x2)

inst_40467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:121401*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121401*0 + 3*531*FLEN/8, x4, x1, x2)

inst_40468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:121404*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121404*0 + 3*532*FLEN/8, x4, x1, x2)

inst_40469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:121407*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121407*0 + 3*533*FLEN/8, x4, x1, x2)

inst_40470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:121410*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121410*0 + 3*534*FLEN/8, x4, x1, x2)

inst_40471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:121413*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121413*0 + 3*535*FLEN/8, x4, x1, x2)

inst_40472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:121416*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121416*0 + 3*536*FLEN/8, x4, x1, x2)

inst_40473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:121419*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121419*0 + 3*537*FLEN/8, x4, x1, x2)

inst_40474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:121422*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121422*0 + 3*538*FLEN/8, x4, x1, x2)

inst_40475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:121425*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121425*0 + 3*539*FLEN/8, x4, x1, x2)

inst_40476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:121428*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121428*0 + 3*540*FLEN/8, x4, x1, x2)

inst_40477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:121431*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121431*0 + 3*541*FLEN/8, x4, x1, x2)

inst_40478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:121434*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121434*0 + 3*542*FLEN/8, x4, x1, x2)

inst_40479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:121437*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121437*0 + 3*543*FLEN/8, x4, x1, x2)

inst_40480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:121440*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121440*0 + 3*544*FLEN/8, x4, x1, x2)

inst_40481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:121443*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121443*0 + 3*545*FLEN/8, x4, x1, x2)

inst_40482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:121446*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121446*0 + 3*546*FLEN/8, x4, x1, x2)

inst_40483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:121449*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121449*0 + 3*547*FLEN/8, x4, x1, x2)

inst_40484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:121452*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121452*0 + 3*548*FLEN/8, x4, x1, x2)

inst_40485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:121455*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121455*0 + 3*549*FLEN/8, x4, x1, x2)

inst_40486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:121458*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121458*0 + 3*550*FLEN/8, x4, x1, x2)

inst_40487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:121461*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121461*0 + 3*551*FLEN/8, x4, x1, x2)

inst_40488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:121464*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121464*0 + 3*552*FLEN/8, x4, x1, x2)

inst_40489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:121467*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121467*0 + 3*553*FLEN/8, x4, x1, x2)

inst_40490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:121470*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121470*0 + 3*554*FLEN/8, x4, x1, x2)

inst_40491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:121473*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121473*0 + 3*555*FLEN/8, x4, x1, x2)

inst_40492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:121476*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121476*0 + 3*556*FLEN/8, x4, x1, x2)

inst_40493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:121479*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121479*0 + 3*557*FLEN/8, x4, x1, x2)

inst_40494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:121482*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121482*0 + 3*558*FLEN/8, x4, x1, x2)

inst_40495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:121485*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121485*0 + 3*559*FLEN/8, x4, x1, x2)

inst_40496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:121488*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121488*0 + 3*560*FLEN/8, x4, x1, x2)

inst_40497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:121491*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121491*0 + 3*561*FLEN/8, x4, x1, x2)

inst_40498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:121494*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121494*0 + 3*562*FLEN/8, x4, x1, x2)

inst_40499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:121497*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121497*0 + 3*563*FLEN/8, x4, x1, x2)

inst_40500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:121500*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121500*0 + 3*564*FLEN/8, x4, x1, x2)

inst_40501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:121503*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121503*0 + 3*565*FLEN/8, x4, x1, x2)

inst_40502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:121506*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121506*0 + 3*566*FLEN/8, x4, x1, x2)

inst_40503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:121509*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121509*0 + 3*567*FLEN/8, x4, x1, x2)

inst_40504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:121512*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121512*0 + 3*568*FLEN/8, x4, x1, x2)

inst_40505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:121515*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121515*0 + 3*569*FLEN/8, x4, x1, x2)

inst_40506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:121518*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121518*0 + 3*570*FLEN/8, x4, x1, x2)

inst_40507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:121521*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121521*0 + 3*571*FLEN/8, x4, x1, x2)

inst_40508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:121524*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121524*0 + 3*572*FLEN/8, x4, x1, x2)

inst_40509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:121527*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121527*0 + 3*573*FLEN/8, x4, x1, x2)

inst_40510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:121530*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121530*0 + 3*574*FLEN/8, x4, x1, x2)

inst_40511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:121533*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121533*0 + 3*575*FLEN/8, x4, x1, x2)

inst_40512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:121536*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121536*0 + 3*576*FLEN/8, x4, x1, x2)

inst_40513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:121539*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121539*0 + 3*577*FLEN/8, x4, x1, x2)

inst_40514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:121542*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121542*0 + 3*578*FLEN/8, x4, x1, x2)

inst_40515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:121545*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121545*0 + 3*579*FLEN/8, x4, x1, x2)

inst_40516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:121548*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121548*0 + 3*580*FLEN/8, x4, x1, x2)

inst_40517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:121551*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121551*0 + 3*581*FLEN/8, x4, x1, x2)

inst_40518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:121554*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121554*0 + 3*582*FLEN/8, x4, x1, x2)

inst_40519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:121557*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121557*0 + 3*583*FLEN/8, x4, x1, x2)

inst_40520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:121560*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121560*0 + 3*584*FLEN/8, x4, x1, x2)

inst_40521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:121563*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121563*0 + 3*585*FLEN/8, x4, x1, x2)

inst_40522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:121566*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121566*0 + 3*586*FLEN/8, x4, x1, x2)

inst_40523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:121569*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121569*0 + 3*587*FLEN/8, x4, x1, x2)

inst_40524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:121572*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121572*0 + 3*588*FLEN/8, x4, x1, x2)

inst_40525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:121575*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121575*0 + 3*589*FLEN/8, x4, x1, x2)

inst_40526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:121578*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121578*0 + 3*590*FLEN/8, x4, x1, x2)

inst_40527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:121581*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121581*0 + 3*591*FLEN/8, x4, x1, x2)

inst_40528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:121584*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121584*0 + 3*592*FLEN/8, x4, x1, x2)

inst_40529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:121587*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121587*0 + 3*593*FLEN/8, x4, x1, x2)

inst_40530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:121590*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121590*0 + 3*594*FLEN/8, x4, x1, x2)

inst_40531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:121593*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121593*0 + 3*595*FLEN/8, x4, x1, x2)

inst_40532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:121596*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121596*0 + 3*596*FLEN/8, x4, x1, x2)

inst_40533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:121599*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121599*0 + 3*597*FLEN/8, x4, x1, x2)

inst_40534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:121602*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121602*0 + 3*598*FLEN/8, x4, x1, x2)

inst_40535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:121605*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121605*0 + 3*599*FLEN/8, x4, x1, x2)

inst_40536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:121608*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121608*0 + 3*600*FLEN/8, x4, x1, x2)

inst_40537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:121611*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121611*0 + 3*601*FLEN/8, x4, x1, x2)

inst_40538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:121614*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121614*0 + 3*602*FLEN/8, x4, x1, x2)

inst_40539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:121617*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121617*0 + 3*603*FLEN/8, x4, x1, x2)

inst_40540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:121620*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121620*0 + 3*604*FLEN/8, x4, x1, x2)

inst_40541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:121623*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121623*0 + 3*605*FLEN/8, x4, x1, x2)

inst_40542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:121626*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121626*0 + 3*606*FLEN/8, x4, x1, x2)

inst_40543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:121629*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121629*0 + 3*607*FLEN/8, x4, x1, x2)

inst_40544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:121632*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121632*0 + 3*608*FLEN/8, x4, x1, x2)

inst_40545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:121635*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121635*0 + 3*609*FLEN/8, x4, x1, x2)

inst_40546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:121638*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121638*0 + 3*610*FLEN/8, x4, x1, x2)

inst_40547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:121641*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121641*0 + 3*611*FLEN/8, x4, x1, x2)

inst_40548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:121644*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121644*0 + 3*612*FLEN/8, x4, x1, x2)

inst_40549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:121647*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121647*0 + 3*613*FLEN/8, x4, x1, x2)

inst_40550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:121650*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121650*0 + 3*614*FLEN/8, x4, x1, x2)

inst_40551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:121653*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121653*0 + 3*615*FLEN/8, x4, x1, x2)

inst_40552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:121656*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121656*0 + 3*616*FLEN/8, x4, x1, x2)

inst_40553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:121659*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121659*0 + 3*617*FLEN/8, x4, x1, x2)

inst_40554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:121662*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121662*0 + 3*618*FLEN/8, x4, x1, x2)

inst_40555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:121665*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121665*0 + 3*619*FLEN/8, x4, x1, x2)

inst_40556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:121668*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121668*0 + 3*620*FLEN/8, x4, x1, x2)

inst_40557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:121671*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121671*0 + 3*621*FLEN/8, x4, x1, x2)

inst_40558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:121674*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121674*0 + 3*622*FLEN/8, x4, x1, x2)

inst_40559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:121677*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121677*0 + 3*623*FLEN/8, x4, x1, x2)

inst_40560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:121680*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121680*0 + 3*624*FLEN/8, x4, x1, x2)

inst_40561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:121683*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121683*0 + 3*625*FLEN/8, x4, x1, x2)

inst_40562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:121686*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121686*0 + 3*626*FLEN/8, x4, x1, x2)

inst_40563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:121689*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121689*0 + 3*627*FLEN/8, x4, x1, x2)

inst_40564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:121692*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121692*0 + 3*628*FLEN/8, x4, x1, x2)

inst_40565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:121695*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121695*0 + 3*629*FLEN/8, x4, x1, x2)

inst_40566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:121698*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121698*0 + 3*630*FLEN/8, x4, x1, x2)

inst_40567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:121701*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121701*0 + 3*631*FLEN/8, x4, x1, x2)

inst_40568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:121704*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121704*0 + 3*632*FLEN/8, x4, x1, x2)

inst_40569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:121707*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121707*0 + 3*633*FLEN/8, x4, x1, x2)

inst_40570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:121710*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121710*0 + 3*634*FLEN/8, x4, x1, x2)

inst_40571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:121713*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121713*0 + 3*635*FLEN/8, x4, x1, x2)

inst_40572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:121716*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121716*0 + 3*636*FLEN/8, x4, x1, x2)

inst_40573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:121719*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121719*0 + 3*637*FLEN/8, x4, x1, x2)

inst_40574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:121722*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121722*0 + 3*638*FLEN/8, x4, x1, x2)

inst_40575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:121725*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121725*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_40576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:121728*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121728*0 + 3*640*FLEN/8, x4, x1, x2)

inst_40577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:121731*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121731*0 + 3*641*FLEN/8, x4, x1, x2)

inst_40578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:121734*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121734*0 + 3*642*FLEN/8, x4, x1, x2)

inst_40579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:121737*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121737*0 + 3*643*FLEN/8, x4, x1, x2)

inst_40580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:121740*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121740*0 + 3*644*FLEN/8, x4, x1, x2)

inst_40581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:121743*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121743*0 + 3*645*FLEN/8, x4, x1, x2)

inst_40582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:121746*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121746*0 + 3*646*FLEN/8, x4, x1, x2)

inst_40583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:121749*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121749*0 + 3*647*FLEN/8, x4, x1, x2)

inst_40584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:121752*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121752*0 + 3*648*FLEN/8, x4, x1, x2)

inst_40585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:121755*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121755*0 + 3*649*FLEN/8, x4, x1, x2)

inst_40586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:121758*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121758*0 + 3*650*FLEN/8, x4, x1, x2)

inst_40587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:121761*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121761*0 + 3*651*FLEN/8, x4, x1, x2)

inst_40588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:121764*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121764*0 + 3*652*FLEN/8, x4, x1, x2)

inst_40589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96893a2922a83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996893a2922a83; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:121767*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121767*0 + 3*653*FLEN/8, x4, x1, x2)

inst_40590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:121770*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121770*0 + 3*654*FLEN/8, x4, x1, x2)

inst_40591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:121773*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121773*0 + 3*655*FLEN/8, x4, x1, x2)

inst_40592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:121776*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121776*0 + 3*656*FLEN/8, x4, x1, x2)

inst_40593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:121779*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121779*0 + 3*657*FLEN/8, x4, x1, x2)

inst_40594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:121782*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121782*0 + 3*658*FLEN/8, x4, x1, x2)

inst_40595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:121785*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121785*0 + 3*659*FLEN/8, x4, x1, x2)

inst_40596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:121788*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121788*0 + 3*660*FLEN/8, x4, x1, x2)

inst_40597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:121791*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121791*0 + 3*661*FLEN/8, x4, x1, x2)

inst_40598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:121794*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121794*0 + 3*662*FLEN/8, x4, x1, x2)

inst_40599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:121797*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121797*0 + 3*663*FLEN/8, x4, x1, x2)

inst_40600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:121800*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121800*0 + 3*664*FLEN/8, x4, x1, x2)

inst_40601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:121803*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121803*0 + 3*665*FLEN/8, x4, x1, x2)

inst_40602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:121806*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121806*0 + 3*666*FLEN/8, x4, x1, x2)

inst_40603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:121809*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121809*0 + 3*667*FLEN/8, x4, x1, x2)

inst_40604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:121812*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121812*0 + 3*668*FLEN/8, x4, x1, x2)

inst_40605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:121815*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121815*0 + 3*669*FLEN/8, x4, x1, x2)

inst_40606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:121818*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121818*0 + 3*670*FLEN/8, x4, x1, x2)

inst_40607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:121821*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121821*0 + 3*671*FLEN/8, x4, x1, x2)

inst_40608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:121824*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121824*0 + 3*672*FLEN/8, x4, x1, x2)

inst_40609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:121827*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121827*0 + 3*673*FLEN/8, x4, x1, x2)

inst_40610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:121830*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121830*0 + 3*674*FLEN/8, x4, x1, x2)

inst_40611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:121833*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121833*0 + 3*675*FLEN/8, x4, x1, x2)

inst_40612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000000000; valaddr_reg:x3; val_offset:121836*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121836*0 + 3*676*FLEN/8, x4, x1, x2)

inst_40613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000000001; valaddr_reg:x3; val_offset:121839*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121839*0 + 3*677*FLEN/8, x4, x1, x2)

inst_40614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000000003; valaddr_reg:x3; val_offset:121842*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121842*0 + 3*678*FLEN/8, x4, x1, x2)

inst_40615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000000007; valaddr_reg:x3; val_offset:121845*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121845*0 + 3*679*FLEN/8, x4, x1, x2)

inst_40616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000000000f; valaddr_reg:x3; val_offset:121848*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121848*0 + 3*680*FLEN/8, x4, x1, x2)

inst_40617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000000001f; valaddr_reg:x3; val_offset:121851*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121851*0 + 3*681*FLEN/8, x4, x1, x2)

inst_40618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000000003f; valaddr_reg:x3; val_offset:121854*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121854*0 + 3*682*FLEN/8, x4, x1, x2)

inst_40619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000000007f; valaddr_reg:x3; val_offset:121857*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121857*0 + 3*683*FLEN/8, x4, x1, x2)

inst_40620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000000000ff; valaddr_reg:x3; val_offset:121860*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121860*0 + 3*684*FLEN/8, x4, x1, x2)

inst_40621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000000001ff; valaddr_reg:x3; val_offset:121863*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121863*0 + 3*685*FLEN/8, x4, x1, x2)

inst_40622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000000003ff; valaddr_reg:x3; val_offset:121866*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121866*0 + 3*686*FLEN/8, x4, x1, x2)

inst_40623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000000007ff; valaddr_reg:x3; val_offset:121869*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121869*0 + 3*687*FLEN/8, x4, x1, x2)

inst_40624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000000fff; valaddr_reg:x3; val_offset:121872*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121872*0 + 3*688*FLEN/8, x4, x1, x2)

inst_40625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000001fff; valaddr_reg:x3; val_offset:121875*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121875*0 + 3*689*FLEN/8, x4, x1, x2)

inst_40626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000003fff; valaddr_reg:x3; val_offset:121878*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121878*0 + 3*690*FLEN/8, x4, x1, x2)

inst_40627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000007fff; valaddr_reg:x3; val_offset:121881*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121881*0 + 3*691*FLEN/8, x4, x1, x2)

inst_40628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000000ffff; valaddr_reg:x3; val_offset:121884*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121884*0 + 3*692*FLEN/8, x4, x1, x2)

inst_40629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000001ffff; valaddr_reg:x3; val_offset:121887*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121887*0 + 3*693*FLEN/8, x4, x1, x2)

inst_40630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000003ffff; valaddr_reg:x3; val_offset:121890*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121890*0 + 3*694*FLEN/8, x4, x1, x2)

inst_40631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000007ffff; valaddr_reg:x3; val_offset:121893*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121893*0 + 3*695*FLEN/8, x4, x1, x2)

inst_40632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000000fffff; valaddr_reg:x3; val_offset:121896*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121896*0 + 3*696*FLEN/8, x4, x1, x2)

inst_40633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000001fffff; valaddr_reg:x3; val_offset:121899*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121899*0 + 3*697*FLEN/8, x4, x1, x2)

inst_40634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000003fffff; valaddr_reg:x3; val_offset:121902*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121902*0 + 3*698*FLEN/8, x4, x1, x2)

inst_40635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000007fffff; valaddr_reg:x3; val_offset:121905*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121905*0 + 3*699*FLEN/8, x4, x1, x2)

inst_40636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000000ffffff; valaddr_reg:x3; val_offset:121908*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121908*0 + 3*700*FLEN/8, x4, x1, x2)

inst_40637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000001ffffff; valaddr_reg:x3; val_offset:121911*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121911*0 + 3*701*FLEN/8, x4, x1, x2)

inst_40638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000003ffffff; valaddr_reg:x3; val_offset:121914*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121914*0 + 3*702*FLEN/8, x4, x1, x2)

inst_40639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000007ffffff; valaddr_reg:x3; val_offset:121917*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121917*0 + 3*703*FLEN/8, x4, x1, x2)

inst_40640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000000fffffff; valaddr_reg:x3; val_offset:121920*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121920*0 + 3*704*FLEN/8, x4, x1, x2)

inst_40641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000001fffffff; valaddr_reg:x3; val_offset:121923*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121923*0 + 3*705*FLEN/8, x4, x1, x2)

inst_40642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000003fffffff; valaddr_reg:x3; val_offset:121926*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121926*0 + 3*706*FLEN/8, x4, x1, x2)

inst_40643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000007fffffff; valaddr_reg:x3; val_offset:121929*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121929*0 + 3*707*FLEN/8, x4, x1, x2)

inst_40644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00000ffffffff; valaddr_reg:x3; val_offset:121932*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121932*0 + 3*708*FLEN/8, x4, x1, x2)

inst_40645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00001ffffffff; valaddr_reg:x3; val_offset:121935*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121935*0 + 3*709*FLEN/8, x4, x1, x2)

inst_40646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00003ffffffff; valaddr_reg:x3; val_offset:121938*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121938*0 + 3*710*FLEN/8, x4, x1, x2)

inst_40647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00007ffffffff; valaddr_reg:x3; val_offset:121941*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121941*0 + 3*711*FLEN/8, x4, x1, x2)

inst_40648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0000fffffffff; valaddr_reg:x3; val_offset:121944*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121944*0 + 3*712*FLEN/8, x4, x1, x2)

inst_40649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0001fffffffff; valaddr_reg:x3; val_offset:121947*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121947*0 + 3*713*FLEN/8, x4, x1, x2)

inst_40650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0003fffffffff; valaddr_reg:x3; val_offset:121950*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121950*0 + 3*714*FLEN/8, x4, x1, x2)

inst_40651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0007fffffffff; valaddr_reg:x3; val_offset:121953*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121953*0 + 3*715*FLEN/8, x4, x1, x2)

inst_40652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c000ffffffffff; valaddr_reg:x3; val_offset:121956*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121956*0 + 3*716*FLEN/8, x4, x1, x2)

inst_40653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c001ffffffffff; valaddr_reg:x3; val_offset:121959*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121959*0 + 3*717*FLEN/8, x4, x1, x2)

inst_40654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c003ffffffffff; valaddr_reg:x3; val_offset:121962*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121962*0 + 3*718*FLEN/8, x4, x1, x2)

inst_40655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c007ffffffffff; valaddr_reg:x3; val_offset:121965*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121965*0 + 3*719*FLEN/8, x4, x1, x2)

inst_40656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c00fffffffffff; valaddr_reg:x3; val_offset:121968*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121968*0 + 3*720*FLEN/8, x4, x1, x2)

inst_40657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c01fffffffffff; valaddr_reg:x3; val_offset:121971*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121971*0 + 3*721*FLEN/8, x4, x1, x2)

inst_40658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c03fffffffffff; valaddr_reg:x3; val_offset:121974*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121974*0 + 3*722*FLEN/8, x4, x1, x2)

inst_40659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c07fffffffffff; valaddr_reg:x3; val_offset:121977*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121977*0 + 3*723*FLEN/8, x4, x1, x2)

inst_40660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c0ffffffffffff; valaddr_reg:x3; val_offset:121980*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121980*0 + 3*724*FLEN/8, x4, x1, x2)

inst_40661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c1ffffffffffff; valaddr_reg:x3; val_offset:121983*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121983*0 + 3*725*FLEN/8, x4, x1, x2)

inst_40662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c3ffffffffffff; valaddr_reg:x3; val_offset:121986*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121986*0 + 3*726*FLEN/8, x4, x1, x2)

inst_40663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c7ffffffffffff; valaddr_reg:x3; val_offset:121989*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121989*0 + 3*727*FLEN/8, x4, x1, x2)

inst_40664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2c8000000000000; valaddr_reg:x3; val_offset:121992*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121992*0 + 3*728*FLEN/8, x4, x1, x2)

inst_40665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cc000000000000; valaddr_reg:x3; val_offset:121995*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121995*0 + 3*729*FLEN/8, x4, x1, x2)

inst_40666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2ce000000000000; valaddr_reg:x3; val_offset:121998*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 121998*0 + 3*730*FLEN/8, x4, x1, x2)

inst_40667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cf000000000000; valaddr_reg:x3; val_offset:122001*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122001*0 + 3*731*FLEN/8, x4, x1, x2)

inst_40668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cf800000000000; valaddr_reg:x3; val_offset:122004*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122004*0 + 3*732*FLEN/8, x4, x1, x2)

inst_40669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfc00000000000; valaddr_reg:x3; val_offset:122007*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122007*0 + 3*733*FLEN/8, x4, x1, x2)

inst_40670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfe00000000000; valaddr_reg:x3; val_offset:122010*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122010*0 + 3*734*FLEN/8, x4, x1, x2)

inst_40671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cff00000000000; valaddr_reg:x3; val_offset:122013*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122013*0 + 3*735*FLEN/8, x4, x1, x2)

inst_40672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cff80000000000; valaddr_reg:x3; val_offset:122016*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122016*0 + 3*736*FLEN/8, x4, x1, x2)

inst_40673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffc0000000000; valaddr_reg:x3; val_offset:122019*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122019*0 + 3*737*FLEN/8, x4, x1, x2)

inst_40674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffe0000000000; valaddr_reg:x3; val_offset:122022*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122022*0 + 3*738*FLEN/8, x4, x1, x2)

inst_40675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfff0000000000; valaddr_reg:x3; val_offset:122025*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122025*0 + 3*739*FLEN/8, x4, x1, x2)

inst_40676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfff8000000000; valaddr_reg:x3; val_offset:122028*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122028*0 + 3*740*FLEN/8, x4, x1, x2)

inst_40677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffc000000000; valaddr_reg:x3; val_offset:122031*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122031*0 + 3*741*FLEN/8, x4, x1, x2)

inst_40678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffe000000000; valaddr_reg:x3; val_offset:122034*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122034*0 + 3*742*FLEN/8, x4, x1, x2)

inst_40679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffff000000000; valaddr_reg:x3; val_offset:122037*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122037*0 + 3*743*FLEN/8, x4, x1, x2)

inst_40680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffff800000000; valaddr_reg:x3; val_offset:122040*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122040*0 + 3*744*FLEN/8, x4, x1, x2)

inst_40681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffc00000000; valaddr_reg:x3; val_offset:122043*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122043*0 + 3*745*FLEN/8, x4, x1, x2)

inst_40682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffe00000000; valaddr_reg:x3; val_offset:122046*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122046*0 + 3*746*FLEN/8, x4, x1, x2)

inst_40683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffff00000000; valaddr_reg:x3; val_offset:122049*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122049*0 + 3*747*FLEN/8, x4, x1, x2)

inst_40684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffff80000000; valaddr_reg:x3; val_offset:122052*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122052*0 + 3*748*FLEN/8, x4, x1, x2)

inst_40685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffc0000000; valaddr_reg:x3; val_offset:122055*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122055*0 + 3*749*FLEN/8, x4, x1, x2)

inst_40686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffe0000000; valaddr_reg:x3; val_offset:122058*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122058*0 + 3*750*FLEN/8, x4, x1, x2)

inst_40687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffff0000000; valaddr_reg:x3; val_offset:122061*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122061*0 + 3*751*FLEN/8, x4, x1, x2)

inst_40688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffff8000000; valaddr_reg:x3; val_offset:122064*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122064*0 + 3*752*FLEN/8, x4, x1, x2)

inst_40689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffc000000; valaddr_reg:x3; val_offset:122067*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122067*0 + 3*753*FLEN/8, x4, x1, x2)

inst_40690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffe000000; valaddr_reg:x3; val_offset:122070*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122070*0 + 3*754*FLEN/8, x4, x1, x2)

inst_40691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffff000000; valaddr_reg:x3; val_offset:122073*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122073*0 + 3*755*FLEN/8, x4, x1, x2)

inst_40692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffff800000; valaddr_reg:x3; val_offset:122076*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122076*0 + 3*756*FLEN/8, x4, x1, x2)

inst_40693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffffc00000; valaddr_reg:x3; val_offset:122079*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122079*0 + 3*757*FLEN/8, x4, x1, x2)

inst_40694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffffe00000; valaddr_reg:x3; val_offset:122082*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122082*0 + 3*758*FLEN/8, x4, x1, x2)

inst_40695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffff00000; valaddr_reg:x3; val_offset:122085*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122085*0 + 3*759*FLEN/8, x4, x1, x2)

inst_40696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffff80000; valaddr_reg:x3; val_offset:122088*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122088*0 + 3*760*FLEN/8, x4, x1, x2)

inst_40697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffffc0000; valaddr_reg:x3; val_offset:122091*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122091*0 + 3*761*FLEN/8, x4, x1, x2)

inst_40698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffffe0000; valaddr_reg:x3; val_offset:122094*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122094*0 + 3*762*FLEN/8, x4, x1, x2)

inst_40699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffffff0000; valaddr_reg:x3; val_offset:122097*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122097*0 + 3*763*FLEN/8, x4, x1, x2)

inst_40700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffffff8000; valaddr_reg:x3; val_offset:122100*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122100*0 + 3*764*FLEN/8, x4, x1, x2)

inst_40701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffffffc000; valaddr_reg:x3; val_offset:122103*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122103*0 + 3*765*FLEN/8, x4, x1, x2)

inst_40702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cfffffffffe000; valaddr_reg:x3; val_offset:122106*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122106*0 + 3*766*FLEN/8, x4, x1, x2)

inst_40703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x96c6139516aa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f996c6139516aa7; op2val:0x0;
op3val:0x2cffffffffff000; valaddr_reg:x3; val_offset:122109*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122109*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291791466496,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291795660800,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291797757952,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291798806528,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799330816,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799592960,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799724032,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799789568,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799822336,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799838720,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799846912,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799851008,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799853056,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799854080,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799854592,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799854848,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799854976,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855040,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855072,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855088,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855096,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855100,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855102,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13393705291799855103,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265792,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265793,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265795,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265799,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265807,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265823,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265855,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265919,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266047,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266303,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266815,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623267839,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623269887,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623273983,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623282175,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623298559,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623331327,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623396863,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623527935,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623790079,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180624314367,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180625362943,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180627460095,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180631654399,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180640043007,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180656820223,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180690374655,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180757483519,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180891701247,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181160136703,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181697007615,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187182770749439,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187184918233087,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187189213200383,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187197803134975,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187214983004159,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187249342742527,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187318062219263,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187455501172735,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187730379079679,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234188280134893567,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234189379646521343,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234191578669776895,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234195976716287999,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234204772809310207,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234222364995354623,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234257549367443455,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234327918111621119,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234468655599976447,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234750130576687103,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(235313080530108415,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951039,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951040,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(237564880343793664,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238127830297214976,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238409305273925632,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238550042762280960,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238620411506458624,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238655595878547456,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238673188064591872,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238681984157614080,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238686382204125184,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238688581227380736,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238689680739008512,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690230494822400,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690505372729344,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690642811682816,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690711531159552,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690745890897920,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690763070767104,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690771660701696,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690775955668992,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690778103152640,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779176894464,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779713765376,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779982200832,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780116418560,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780183527424,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780217081856,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780233859072,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780242247680,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780246441984,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780248539136,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780249587712,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250112000,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250374144,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250505216,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250570752,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250603520,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250619904,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250628096,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250632192,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250634240,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635264,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635776,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636032,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636160,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636224,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636256,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636272,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636280,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636284,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636286,64,FLEN)
NAN_BOXED(6888586259543246543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636287,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998784,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998785,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998787,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998791,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998799,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998815,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998847,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998911,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999039,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999295,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999807,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619000831,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619002879,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619006975,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619015167,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619031551,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619064319,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619129855,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619260927,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619523071,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634620047359,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634621095935,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634623193087,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634627387391,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634635775999,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634652553215,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246367232,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368256,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368768,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369024,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369152,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369216,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369248,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369264,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369272,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369276,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369278,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369279,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780416,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780417,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780419,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780423,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780431,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780447,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780479,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780543,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780671,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780927,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174781439,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174782463,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174784511,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174788607,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174796799,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174813183,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174845951,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174911487,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175042559,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175304703,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175828991,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592176877567,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592178974719,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592183169023,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592191557631,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592208334847,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592241889279,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592308998143,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592443215871,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592711651327,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575593248522239,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575594322264063,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575596469747711,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575600764715007,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575609354649599,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575626534518783,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575660894257151,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575729613733887,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575867052687359,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576141930594303,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576691686408191,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94577791198035967,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94579990221291519,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94584388267802623,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94593184360824831,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94610776546869247,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94645960918958079,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94716329663135743,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94857067151491071,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95138542128201727,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95701492081623039,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465663,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465664,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(97953291895308288,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98516241848729600,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98797716825440256,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98938454313795584,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99008823057973248,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99044007430062080,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99061599616106496,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99070395709128704,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99074793755639808,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99076992778895360,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078092290523136,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078642046337024,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078916924243968,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079054363197440,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079123082674176,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6888590828466125527,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825856,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825857,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825859,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825863,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825871,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825887,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825919,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696825983,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696826111,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696826367,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696826879,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696827903,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696829951,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696834047,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696842239,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696858623,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696891391,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468696956927,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468697087999,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468697350143,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468697874431,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468698923007,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468701020159,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468705214463,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468713603071,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468730380287,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468763934719,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468831043583,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928468965261311,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928469233696767,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928469770567679,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928470844309503,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928472991793151,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928477286760447,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928485876695039,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928503056564223,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928537416302591,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928606135779327,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672928743574732799,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672929018452639743,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672929568208453631,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672930667720081407,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672932866743336959,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672937264789848063,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672946060882870271,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672963653068914687,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13672998837441003519,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13673069206185181183,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13673209943673536511,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13673491418650247167,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13674054368603668479,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13675180268510511103,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13675180268510511104,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13676306168417353728,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13676869118370775040,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677150593347485696,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677291330835841024,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677361699580018688,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677396883952107520,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677414476138151936,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677423272231174144,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677427670277685248,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677429869300940800,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677430968812568576,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677431518568382464,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677431793446289408,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677431930885242880,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677431999604719616,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432033964457984,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432051144327168,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432059734261760,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432064029229056,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432066176712704,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432067250454528,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432067787325440,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068055760896,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068189978624,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068257087488,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068290641920,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068307419136,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068315807744,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068320002048,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068322099200,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068323147776,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068323672064,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068323934208,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324065280,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324130816,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324163584,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324179968,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324188160,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324192256,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324194304,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324195328,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324195840,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196096,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196224,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196288,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196320,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196336,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196344,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196348,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196350,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13677432068324196351,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(11516891171637204180,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6888652088336853635,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301824,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301825,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301827,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301831,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301839,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301855,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301887,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301951,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302079,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302335,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302847,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604303871,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604305919,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604310015,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604318207,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604334591,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604367359,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604432895,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604563967,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604826111,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383605350399,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383606398975,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383608496127,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383612690431,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383621079039,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383637856255,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383671410687,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383738519551,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383872737279,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384141172735,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384678043647,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158385751785471,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158387899269119,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158392194236415,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158400784171007,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158417964040191,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158452323778559,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158521043255295,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158658482208767,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158933360115711,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198159483115929599,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198160582627557375,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198162781650812927,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198167179697324031,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198175975790346239,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198193567976390655,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198228752348479487,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198299121092657151,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198439858581012479,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198721333557723135,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(199284283511144447,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987071,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987072,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(201536083324829696,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202099033278251008,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202380508254961664,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202521245743316992,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202591614487494656,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202626798859583488,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202644391045627904,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202653187138650112,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202657585185161216,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202659784208416768,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202660883720044544,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661433475858432,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661708353765376,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661845792718848,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661914512195584,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661948871933952,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661966051803136,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661974641737728,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661978936705024,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661981084188672,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982157930496,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982694801408,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982963236864,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983097454592,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983164563456,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983198117888,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983214895104,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983223283712,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983227478016,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983229575168,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983230623744,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231148032,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231410176,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231541248,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231606784,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231639552,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231655936,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231664128,64,FLEN)
NAN_BOXED(6888656269869148839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231668224,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
