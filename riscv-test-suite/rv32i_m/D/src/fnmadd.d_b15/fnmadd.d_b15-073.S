
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_55296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:165888*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165888*0 + 3*0*FLEN/8, x4, x1, x2)

inst_55297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:165891*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165891*0 + 3*1*FLEN/8, x4, x1, x2)

inst_55298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:165894*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165894*0 + 3*2*FLEN/8, x4, x1, x2)

inst_55299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:165897*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165897*0 + 3*3*FLEN/8, x4, x1, x2)

inst_55300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:165900*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165900*0 + 3*4*FLEN/8, x4, x1, x2)

inst_55301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:165903*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165903*0 + 3*5*FLEN/8, x4, x1, x2)

inst_55302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:165906*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165906*0 + 3*6*FLEN/8, x4, x1, x2)

inst_55303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:165909*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165909*0 + 3*7*FLEN/8, x4, x1, x2)

inst_55304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:165912*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165912*0 + 3*8*FLEN/8, x4, x1, x2)

inst_55305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:165915*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165915*0 + 3*9*FLEN/8, x4, x1, x2)

inst_55306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:165918*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165918*0 + 3*10*FLEN/8, x4, x1, x2)

inst_55307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:165921*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165921*0 + 3*11*FLEN/8, x4, x1, x2)

inst_55308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:165924*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165924*0 + 3*12*FLEN/8, x4, x1, x2)

inst_55309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:165927*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165927*0 + 3*13*FLEN/8, x4, x1, x2)

inst_55310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:165930*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165930*0 + 3*14*FLEN/8, x4, x1, x2)

inst_55311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:165933*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165933*0 + 3*15*FLEN/8, x4, x1, x2)

inst_55312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:165936*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165936*0 + 3*16*FLEN/8, x4, x1, x2)

inst_55313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:165939*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165939*0 + 3*17*FLEN/8, x4, x1, x2)

inst_55314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:165942*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165942*0 + 3*18*FLEN/8, x4, x1, x2)

inst_55315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:165945*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165945*0 + 3*19*FLEN/8, x4, x1, x2)

inst_55316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:165948*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165948*0 + 3*20*FLEN/8, x4, x1, x2)

inst_55317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:165951*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165951*0 + 3*21*FLEN/8, x4, x1, x2)

inst_55318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000000000; valaddr_reg:x3; val_offset:165954*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165954*0 + 3*22*FLEN/8, x4, x1, x2)

inst_55319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000000001; valaddr_reg:x3; val_offset:165957*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165957*0 + 3*23*FLEN/8, x4, x1, x2)

inst_55320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000000003; valaddr_reg:x3; val_offset:165960*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165960*0 + 3*24*FLEN/8, x4, x1, x2)

inst_55321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000000007; valaddr_reg:x3; val_offset:165963*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165963*0 + 3*25*FLEN/8, x4, x1, x2)

inst_55322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000000000f; valaddr_reg:x3; val_offset:165966*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165966*0 + 3*26*FLEN/8, x4, x1, x2)

inst_55323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000000001f; valaddr_reg:x3; val_offset:165969*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165969*0 + 3*27*FLEN/8, x4, x1, x2)

inst_55324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000000003f; valaddr_reg:x3; val_offset:165972*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165972*0 + 3*28*FLEN/8, x4, x1, x2)

inst_55325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000000007f; valaddr_reg:x3; val_offset:165975*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165975*0 + 3*29*FLEN/8, x4, x1, x2)

inst_55326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000000000ff; valaddr_reg:x3; val_offset:165978*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165978*0 + 3*30*FLEN/8, x4, x1, x2)

inst_55327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000000001ff; valaddr_reg:x3; val_offset:165981*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165981*0 + 3*31*FLEN/8, x4, x1, x2)

inst_55328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000000003ff; valaddr_reg:x3; val_offset:165984*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165984*0 + 3*32*FLEN/8, x4, x1, x2)

inst_55329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000000007ff; valaddr_reg:x3; val_offset:165987*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165987*0 + 3*33*FLEN/8, x4, x1, x2)

inst_55330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000000fff; valaddr_reg:x3; val_offset:165990*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165990*0 + 3*34*FLEN/8, x4, x1, x2)

inst_55331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000001fff; valaddr_reg:x3; val_offset:165993*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165993*0 + 3*35*FLEN/8, x4, x1, x2)

inst_55332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000003fff; valaddr_reg:x3; val_offset:165996*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165996*0 + 3*36*FLEN/8, x4, x1, x2)

inst_55333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000007fff; valaddr_reg:x3; val_offset:165999*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165999*0 + 3*37*FLEN/8, x4, x1, x2)

inst_55334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000000ffff; valaddr_reg:x3; val_offset:166002*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166002*0 + 3*38*FLEN/8, x4, x1, x2)

inst_55335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000001ffff; valaddr_reg:x3; val_offset:166005*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166005*0 + 3*39*FLEN/8, x4, x1, x2)

inst_55336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000003ffff; valaddr_reg:x3; val_offset:166008*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166008*0 + 3*40*FLEN/8, x4, x1, x2)

inst_55337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000007ffff; valaddr_reg:x3; val_offset:166011*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166011*0 + 3*41*FLEN/8, x4, x1, x2)

inst_55338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000000fffff; valaddr_reg:x3; val_offset:166014*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166014*0 + 3*42*FLEN/8, x4, x1, x2)

inst_55339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000001fffff; valaddr_reg:x3; val_offset:166017*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166017*0 + 3*43*FLEN/8, x4, x1, x2)

inst_55340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000003fffff; valaddr_reg:x3; val_offset:166020*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166020*0 + 3*44*FLEN/8, x4, x1, x2)

inst_55341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000007fffff; valaddr_reg:x3; val_offset:166023*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166023*0 + 3*45*FLEN/8, x4, x1, x2)

inst_55342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000000ffffff; valaddr_reg:x3; val_offset:166026*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166026*0 + 3*46*FLEN/8, x4, x1, x2)

inst_55343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000001ffffff; valaddr_reg:x3; val_offset:166029*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166029*0 + 3*47*FLEN/8, x4, x1, x2)

inst_55344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000003ffffff; valaddr_reg:x3; val_offset:166032*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166032*0 + 3*48*FLEN/8, x4, x1, x2)

inst_55345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000007ffffff; valaddr_reg:x3; val_offset:166035*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166035*0 + 3*49*FLEN/8, x4, x1, x2)

inst_55346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000000fffffff; valaddr_reg:x3; val_offset:166038*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166038*0 + 3*50*FLEN/8, x4, x1, x2)

inst_55347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000001fffffff; valaddr_reg:x3; val_offset:166041*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166041*0 + 3*51*FLEN/8, x4, x1, x2)

inst_55348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000003fffffff; valaddr_reg:x3; val_offset:166044*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166044*0 + 3*52*FLEN/8, x4, x1, x2)

inst_55349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000007fffffff; valaddr_reg:x3; val_offset:166047*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166047*0 + 3*53*FLEN/8, x4, x1, x2)

inst_55350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300000ffffffff; valaddr_reg:x3; val_offset:166050*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166050*0 + 3*54*FLEN/8, x4, x1, x2)

inst_55351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300001ffffffff; valaddr_reg:x3; val_offset:166053*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166053*0 + 3*55*FLEN/8, x4, x1, x2)

inst_55352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300003ffffffff; valaddr_reg:x3; val_offset:166056*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166056*0 + 3*56*FLEN/8, x4, x1, x2)

inst_55353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300007ffffffff; valaddr_reg:x3; val_offset:166059*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166059*0 + 3*57*FLEN/8, x4, x1, x2)

inst_55354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330000fffffffff; valaddr_reg:x3; val_offset:166062*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166062*0 + 3*58*FLEN/8, x4, x1, x2)

inst_55355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330001fffffffff; valaddr_reg:x3; val_offset:166065*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166065*0 + 3*59*FLEN/8, x4, x1, x2)

inst_55356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330003fffffffff; valaddr_reg:x3; val_offset:166068*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166068*0 + 3*60*FLEN/8, x4, x1, x2)

inst_55357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330007fffffffff; valaddr_reg:x3; val_offset:166071*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166071*0 + 3*61*FLEN/8, x4, x1, x2)

inst_55358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33000ffffffffff; valaddr_reg:x3; val_offset:166074*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166074*0 + 3*62*FLEN/8, x4, x1, x2)

inst_55359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33001ffffffffff; valaddr_reg:x3; val_offset:166077*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166077*0 + 3*63*FLEN/8, x4, x1, x2)

inst_55360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33003ffffffffff; valaddr_reg:x3; val_offset:166080*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166080*0 + 3*64*FLEN/8, x4, x1, x2)

inst_55361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33007ffffffffff; valaddr_reg:x3; val_offset:166083*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166083*0 + 3*65*FLEN/8, x4, x1, x2)

inst_55362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3300fffffffffff; valaddr_reg:x3; val_offset:166086*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166086*0 + 3*66*FLEN/8, x4, x1, x2)

inst_55363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3301fffffffffff; valaddr_reg:x3; val_offset:166089*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166089*0 + 3*67*FLEN/8, x4, x1, x2)

inst_55364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3303fffffffffff; valaddr_reg:x3; val_offset:166092*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166092*0 + 3*68*FLEN/8, x4, x1, x2)

inst_55365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x3307fffffffffff; valaddr_reg:x3; val_offset:166095*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166095*0 + 3*69*FLEN/8, x4, x1, x2)

inst_55366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x330ffffffffffff; valaddr_reg:x3; val_offset:166098*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166098*0 + 3*70*FLEN/8, x4, x1, x2)

inst_55367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x331ffffffffffff; valaddr_reg:x3; val_offset:166101*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166101*0 + 3*71*FLEN/8, x4, x1, x2)

inst_55368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x333ffffffffffff; valaddr_reg:x3; val_offset:166104*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166104*0 + 3*72*FLEN/8, x4, x1, x2)

inst_55369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x337ffffffffffff; valaddr_reg:x3; val_offset:166107*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166107*0 + 3*73*FLEN/8, x4, x1, x2)

inst_55370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x338000000000000; valaddr_reg:x3; val_offset:166110*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166110*0 + 3*74*FLEN/8, x4, x1, x2)

inst_55371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33c000000000000; valaddr_reg:x3; val_offset:166113*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166113*0 + 3*75*FLEN/8, x4, x1, x2)

inst_55372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33e000000000000; valaddr_reg:x3; val_offset:166116*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166116*0 + 3*76*FLEN/8, x4, x1, x2)

inst_55373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33f000000000000; valaddr_reg:x3; val_offset:166119*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166119*0 + 3*77*FLEN/8, x4, x1, x2)

inst_55374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33f800000000000; valaddr_reg:x3; val_offset:166122*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166122*0 + 3*78*FLEN/8, x4, x1, x2)

inst_55375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fc00000000000; valaddr_reg:x3; val_offset:166125*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166125*0 + 3*79*FLEN/8, x4, x1, x2)

inst_55376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fe00000000000; valaddr_reg:x3; val_offset:166128*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166128*0 + 3*80*FLEN/8, x4, x1, x2)

inst_55377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ff00000000000; valaddr_reg:x3; val_offset:166131*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166131*0 + 3*81*FLEN/8, x4, x1, x2)

inst_55378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ff80000000000; valaddr_reg:x3; val_offset:166134*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166134*0 + 3*82*FLEN/8, x4, x1, x2)

inst_55379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffc0000000000; valaddr_reg:x3; val_offset:166137*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166137*0 + 3*83*FLEN/8, x4, x1, x2)

inst_55380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffe0000000000; valaddr_reg:x3; val_offset:166140*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166140*0 + 3*84*FLEN/8, x4, x1, x2)

inst_55381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fff0000000000; valaddr_reg:x3; val_offset:166143*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166143*0 + 3*85*FLEN/8, x4, x1, x2)

inst_55382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fff8000000000; valaddr_reg:x3; val_offset:166146*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166146*0 + 3*86*FLEN/8, x4, x1, x2)

inst_55383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffc000000000; valaddr_reg:x3; val_offset:166149*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166149*0 + 3*87*FLEN/8, x4, x1, x2)

inst_55384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffe000000000; valaddr_reg:x3; val_offset:166152*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166152*0 + 3*88*FLEN/8, x4, x1, x2)

inst_55385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffff000000000; valaddr_reg:x3; val_offset:166155*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166155*0 + 3*89*FLEN/8, x4, x1, x2)

inst_55386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffff800000000; valaddr_reg:x3; val_offset:166158*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166158*0 + 3*90*FLEN/8, x4, x1, x2)

inst_55387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffc00000000; valaddr_reg:x3; val_offset:166161*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166161*0 + 3*91*FLEN/8, x4, x1, x2)

inst_55388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffe00000000; valaddr_reg:x3; val_offset:166164*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166164*0 + 3*92*FLEN/8, x4, x1, x2)

inst_55389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffff00000000; valaddr_reg:x3; val_offset:166167*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166167*0 + 3*93*FLEN/8, x4, x1, x2)

inst_55390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffff80000000; valaddr_reg:x3; val_offset:166170*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166170*0 + 3*94*FLEN/8, x4, x1, x2)

inst_55391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffc0000000; valaddr_reg:x3; val_offset:166173*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166173*0 + 3*95*FLEN/8, x4, x1, x2)

inst_55392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffe0000000; valaddr_reg:x3; val_offset:166176*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166176*0 + 3*96*FLEN/8, x4, x1, x2)

inst_55393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffff0000000; valaddr_reg:x3; val_offset:166179*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166179*0 + 3*97*FLEN/8, x4, x1, x2)

inst_55394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffff8000000; valaddr_reg:x3; val_offset:166182*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166182*0 + 3*98*FLEN/8, x4, x1, x2)

inst_55395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffc000000; valaddr_reg:x3; val_offset:166185*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166185*0 + 3*99*FLEN/8, x4, x1, x2)

inst_55396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffe000000; valaddr_reg:x3; val_offset:166188*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166188*0 + 3*100*FLEN/8, x4, x1, x2)

inst_55397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffff000000; valaddr_reg:x3; val_offset:166191*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166191*0 + 3*101*FLEN/8, x4, x1, x2)

inst_55398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffff800000; valaddr_reg:x3; val_offset:166194*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166194*0 + 3*102*FLEN/8, x4, x1, x2)

inst_55399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffc00000; valaddr_reg:x3; val_offset:166197*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166197*0 + 3*103*FLEN/8, x4, x1, x2)

inst_55400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffe00000; valaddr_reg:x3; val_offset:166200*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166200*0 + 3*104*FLEN/8, x4, x1, x2)

inst_55401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffff00000; valaddr_reg:x3; val_offset:166203*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166203*0 + 3*105*FLEN/8, x4, x1, x2)

inst_55402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffff80000; valaddr_reg:x3; val_offset:166206*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166206*0 + 3*106*FLEN/8, x4, x1, x2)

inst_55403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffc0000; valaddr_reg:x3; val_offset:166209*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166209*0 + 3*107*FLEN/8, x4, x1, x2)

inst_55404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffe0000; valaddr_reg:x3; val_offset:166212*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166212*0 + 3*108*FLEN/8, x4, x1, x2)

inst_55405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffff0000; valaddr_reg:x3; val_offset:166215*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166215*0 + 3*109*FLEN/8, x4, x1, x2)

inst_55406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffff8000; valaddr_reg:x3; val_offset:166218*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166218*0 + 3*110*FLEN/8, x4, x1, x2)

inst_55407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffc000; valaddr_reg:x3; val_offset:166221*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166221*0 + 3*111*FLEN/8, x4, x1, x2)

inst_55408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffe000; valaddr_reg:x3; val_offset:166224*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166224*0 + 3*112*FLEN/8, x4, x1, x2)

inst_55409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffff000; valaddr_reg:x3; val_offset:166227*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166227*0 + 3*113*FLEN/8, x4, x1, x2)

inst_55410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffff800; valaddr_reg:x3; val_offset:166230*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166230*0 + 3*114*FLEN/8, x4, x1, x2)

inst_55411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffffc00; valaddr_reg:x3; val_offset:166233*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166233*0 + 3*115*FLEN/8, x4, x1, x2)

inst_55412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffffe00; valaddr_reg:x3; val_offset:166236*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166236*0 + 3*116*FLEN/8, x4, x1, x2)

inst_55413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffff00; valaddr_reg:x3; val_offset:166239*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166239*0 + 3*117*FLEN/8, x4, x1, x2)

inst_55414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffff80; valaddr_reg:x3; val_offset:166242*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166242*0 + 3*118*FLEN/8, x4, x1, x2)

inst_55415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffffc0; valaddr_reg:x3; val_offset:166245*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166245*0 + 3*119*FLEN/8, x4, x1, x2)

inst_55416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffffe0; valaddr_reg:x3; val_offset:166248*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166248*0 + 3*120*FLEN/8, x4, x1, x2)

inst_55417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffffff0; valaddr_reg:x3; val_offset:166251*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166251*0 + 3*121*FLEN/8, x4, x1, x2)

inst_55418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffffff8; valaddr_reg:x3; val_offset:166254*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166254*0 + 3*122*FLEN/8, x4, x1, x2)

inst_55419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffffffc; valaddr_reg:x3; val_offset:166257*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166257*0 + 3*123*FLEN/8, x4, x1, x2)

inst_55420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33ffffffffffffe; valaddr_reg:x3; val_offset:166260*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166260*0 + 3*124*FLEN/8, x4, x1, x2)

inst_55421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x116f98da2057e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa116f98da2057e; op2val:0x0;
op3val:0x33fffffffffffff; valaddr_reg:x3; val_offset:166263*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166263*0 + 3*125*FLEN/8, x4, x1, x2)

inst_55422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000000000; valaddr_reg:x3; val_offset:166266*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166266*0 + 3*126*FLEN/8, x4, x1, x2)

inst_55423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000000001; valaddr_reg:x3; val_offset:166269*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166269*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_55424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000000003; valaddr_reg:x3; val_offset:166272*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166272*0 + 3*128*FLEN/8, x4, x1, x2)

inst_55425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000000007; valaddr_reg:x3; val_offset:166275*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166275*0 + 3*129*FLEN/8, x4, x1, x2)

inst_55426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000000000f; valaddr_reg:x3; val_offset:166278*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166278*0 + 3*130*FLEN/8, x4, x1, x2)

inst_55427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000000001f; valaddr_reg:x3; val_offset:166281*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166281*0 + 3*131*FLEN/8, x4, x1, x2)

inst_55428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000000003f; valaddr_reg:x3; val_offset:166284*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166284*0 + 3*132*FLEN/8, x4, x1, x2)

inst_55429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000000007f; valaddr_reg:x3; val_offset:166287*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166287*0 + 3*133*FLEN/8, x4, x1, x2)

inst_55430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000000000ff; valaddr_reg:x3; val_offset:166290*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166290*0 + 3*134*FLEN/8, x4, x1, x2)

inst_55431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000000001ff; valaddr_reg:x3; val_offset:166293*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166293*0 + 3*135*FLEN/8, x4, x1, x2)

inst_55432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000000003ff; valaddr_reg:x3; val_offset:166296*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166296*0 + 3*136*FLEN/8, x4, x1, x2)

inst_55433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000000007ff; valaddr_reg:x3; val_offset:166299*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166299*0 + 3*137*FLEN/8, x4, x1, x2)

inst_55434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000000fff; valaddr_reg:x3; val_offset:166302*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166302*0 + 3*138*FLEN/8, x4, x1, x2)

inst_55435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000001fff; valaddr_reg:x3; val_offset:166305*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166305*0 + 3*139*FLEN/8, x4, x1, x2)

inst_55436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000003fff; valaddr_reg:x3; val_offset:166308*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166308*0 + 3*140*FLEN/8, x4, x1, x2)

inst_55437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000007fff; valaddr_reg:x3; val_offset:166311*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166311*0 + 3*141*FLEN/8, x4, x1, x2)

inst_55438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000000ffff; valaddr_reg:x3; val_offset:166314*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166314*0 + 3*142*FLEN/8, x4, x1, x2)

inst_55439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000001ffff; valaddr_reg:x3; val_offset:166317*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166317*0 + 3*143*FLEN/8, x4, x1, x2)

inst_55440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000003ffff; valaddr_reg:x3; val_offset:166320*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166320*0 + 3*144*FLEN/8, x4, x1, x2)

inst_55441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000007ffff; valaddr_reg:x3; val_offset:166323*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166323*0 + 3*145*FLEN/8, x4, x1, x2)

inst_55442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000000fffff; valaddr_reg:x3; val_offset:166326*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166326*0 + 3*146*FLEN/8, x4, x1, x2)

inst_55443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000001fffff; valaddr_reg:x3; val_offset:166329*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166329*0 + 3*147*FLEN/8, x4, x1, x2)

inst_55444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000003fffff; valaddr_reg:x3; val_offset:166332*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166332*0 + 3*148*FLEN/8, x4, x1, x2)

inst_55445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000007fffff; valaddr_reg:x3; val_offset:166335*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166335*0 + 3*149*FLEN/8, x4, x1, x2)

inst_55446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000000ffffff; valaddr_reg:x3; val_offset:166338*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166338*0 + 3*150*FLEN/8, x4, x1, x2)

inst_55447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000001ffffff; valaddr_reg:x3; val_offset:166341*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166341*0 + 3*151*FLEN/8, x4, x1, x2)

inst_55448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000003ffffff; valaddr_reg:x3; val_offset:166344*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166344*0 + 3*152*FLEN/8, x4, x1, x2)

inst_55449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000007ffffff; valaddr_reg:x3; val_offset:166347*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166347*0 + 3*153*FLEN/8, x4, x1, x2)

inst_55450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000000fffffff; valaddr_reg:x3; val_offset:166350*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166350*0 + 3*154*FLEN/8, x4, x1, x2)

inst_55451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000001fffffff; valaddr_reg:x3; val_offset:166353*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166353*0 + 3*155*FLEN/8, x4, x1, x2)

inst_55452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000003fffffff; valaddr_reg:x3; val_offset:166356*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166356*0 + 3*156*FLEN/8, x4, x1, x2)

inst_55453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000007fffffff; valaddr_reg:x3; val_offset:166359*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166359*0 + 3*157*FLEN/8, x4, x1, x2)

inst_55454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000000ffffffff; valaddr_reg:x3; val_offset:166362*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166362*0 + 3*158*FLEN/8, x4, x1, x2)

inst_55455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000001ffffffff; valaddr_reg:x3; val_offset:166365*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166365*0 + 3*159*FLEN/8, x4, x1, x2)

inst_55456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000003ffffffff; valaddr_reg:x3; val_offset:166368*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166368*0 + 3*160*FLEN/8, x4, x1, x2)

inst_55457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000007ffffffff; valaddr_reg:x3; val_offset:166371*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166371*0 + 3*161*FLEN/8, x4, x1, x2)

inst_55458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00000fffffffff; valaddr_reg:x3; val_offset:166374*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166374*0 + 3*162*FLEN/8, x4, x1, x2)

inst_55459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00001fffffffff; valaddr_reg:x3; val_offset:166377*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166377*0 + 3*163*FLEN/8, x4, x1, x2)

inst_55460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00003fffffffff; valaddr_reg:x3; val_offset:166380*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166380*0 + 3*164*FLEN/8, x4, x1, x2)

inst_55461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00007fffffffff; valaddr_reg:x3; val_offset:166383*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166383*0 + 3*165*FLEN/8, x4, x1, x2)

inst_55462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0000ffffffffff; valaddr_reg:x3; val_offset:166386*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166386*0 + 3*166*FLEN/8, x4, x1, x2)

inst_55463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0001ffffffffff; valaddr_reg:x3; val_offset:166389*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166389*0 + 3*167*FLEN/8, x4, x1, x2)

inst_55464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0003ffffffffff; valaddr_reg:x3; val_offset:166392*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166392*0 + 3*168*FLEN/8, x4, x1, x2)

inst_55465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0007ffffffffff; valaddr_reg:x3; val_offset:166395*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166395*0 + 3*169*FLEN/8, x4, x1, x2)

inst_55466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f000fffffffffff; valaddr_reg:x3; val_offset:166398*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166398*0 + 3*170*FLEN/8, x4, x1, x2)

inst_55467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f001fffffffffff; valaddr_reg:x3; val_offset:166401*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166401*0 + 3*171*FLEN/8, x4, x1, x2)

inst_55468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f003fffffffffff; valaddr_reg:x3; val_offset:166404*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166404*0 + 3*172*FLEN/8, x4, x1, x2)

inst_55469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f007fffffffffff; valaddr_reg:x3; val_offset:166407*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166407*0 + 3*173*FLEN/8, x4, x1, x2)

inst_55470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f00ffffffffffff; valaddr_reg:x3; val_offset:166410*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166410*0 + 3*174*FLEN/8, x4, x1, x2)

inst_55471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f01ffffffffffff; valaddr_reg:x3; val_offset:166413*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166413*0 + 3*175*FLEN/8, x4, x1, x2)

inst_55472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f03ffffffffffff; valaddr_reg:x3; val_offset:166416*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166416*0 + 3*176*FLEN/8, x4, x1, x2)

inst_55473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f07ffffffffffff; valaddr_reg:x3; val_offset:166419*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166419*0 + 3*177*FLEN/8, x4, x1, x2)

inst_55474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f08000000000000; valaddr_reg:x3; val_offset:166422*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166422*0 + 3*178*FLEN/8, x4, x1, x2)

inst_55475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0c000000000000; valaddr_reg:x3; val_offset:166425*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166425*0 + 3*179*FLEN/8, x4, x1, x2)

inst_55476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0e000000000000; valaddr_reg:x3; val_offset:166428*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166428*0 + 3*180*FLEN/8, x4, x1, x2)

inst_55477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0f000000000000; valaddr_reg:x3; val_offset:166431*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166431*0 + 3*181*FLEN/8, x4, x1, x2)

inst_55478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0f800000000000; valaddr_reg:x3; val_offset:166434*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166434*0 + 3*182*FLEN/8, x4, x1, x2)

inst_55479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fc00000000000; valaddr_reg:x3; val_offset:166437*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166437*0 + 3*183*FLEN/8, x4, x1, x2)

inst_55480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fe00000000000; valaddr_reg:x3; val_offset:166440*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166440*0 + 3*184*FLEN/8, x4, x1, x2)

inst_55481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ff00000000000; valaddr_reg:x3; val_offset:166443*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166443*0 + 3*185*FLEN/8, x4, x1, x2)

inst_55482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ff80000000000; valaddr_reg:x3; val_offset:166446*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166446*0 + 3*186*FLEN/8, x4, x1, x2)

inst_55483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffc0000000000; valaddr_reg:x3; val_offset:166449*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166449*0 + 3*187*FLEN/8, x4, x1, x2)

inst_55484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffe0000000000; valaddr_reg:x3; val_offset:166452*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166452*0 + 3*188*FLEN/8, x4, x1, x2)

inst_55485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fff0000000000; valaddr_reg:x3; val_offset:166455*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166455*0 + 3*189*FLEN/8, x4, x1, x2)

inst_55486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fff8000000000; valaddr_reg:x3; val_offset:166458*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166458*0 + 3*190*FLEN/8, x4, x1, x2)

inst_55487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffc000000000; valaddr_reg:x3; val_offset:166461*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166461*0 + 3*191*FLEN/8, x4, x1, x2)

inst_55488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffe000000000; valaddr_reg:x3; val_offset:166464*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166464*0 + 3*192*FLEN/8, x4, x1, x2)

inst_55489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffff000000000; valaddr_reg:x3; val_offset:166467*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166467*0 + 3*193*FLEN/8, x4, x1, x2)

inst_55490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffff800000000; valaddr_reg:x3; val_offset:166470*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166470*0 + 3*194*FLEN/8, x4, x1, x2)

inst_55491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffc00000000; valaddr_reg:x3; val_offset:166473*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166473*0 + 3*195*FLEN/8, x4, x1, x2)

inst_55492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffe00000000; valaddr_reg:x3; val_offset:166476*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166476*0 + 3*196*FLEN/8, x4, x1, x2)

inst_55493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffff00000000; valaddr_reg:x3; val_offset:166479*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166479*0 + 3*197*FLEN/8, x4, x1, x2)

inst_55494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffff80000000; valaddr_reg:x3; val_offset:166482*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166482*0 + 3*198*FLEN/8, x4, x1, x2)

inst_55495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffc0000000; valaddr_reg:x3; val_offset:166485*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166485*0 + 3*199*FLEN/8, x4, x1, x2)

inst_55496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffe0000000; valaddr_reg:x3; val_offset:166488*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166488*0 + 3*200*FLEN/8, x4, x1, x2)

inst_55497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffff0000000; valaddr_reg:x3; val_offset:166491*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166491*0 + 3*201*FLEN/8, x4, x1, x2)

inst_55498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffff8000000; valaddr_reg:x3; val_offset:166494*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166494*0 + 3*202*FLEN/8, x4, x1, x2)

inst_55499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffc000000; valaddr_reg:x3; val_offset:166497*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166497*0 + 3*203*FLEN/8, x4, x1, x2)

inst_55500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffe000000; valaddr_reg:x3; val_offset:166500*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166500*0 + 3*204*FLEN/8, x4, x1, x2)

inst_55501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffff000000; valaddr_reg:x3; val_offset:166503*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166503*0 + 3*205*FLEN/8, x4, x1, x2)

inst_55502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffff800000; valaddr_reg:x3; val_offset:166506*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166506*0 + 3*206*FLEN/8, x4, x1, x2)

inst_55503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffc00000; valaddr_reg:x3; val_offset:166509*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166509*0 + 3*207*FLEN/8, x4, x1, x2)

inst_55504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffe00000; valaddr_reg:x3; val_offset:166512*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166512*0 + 3*208*FLEN/8, x4, x1, x2)

inst_55505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffff00000; valaddr_reg:x3; val_offset:166515*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166515*0 + 3*209*FLEN/8, x4, x1, x2)

inst_55506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffff80000; valaddr_reg:x3; val_offset:166518*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166518*0 + 3*210*FLEN/8, x4, x1, x2)

inst_55507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffc0000; valaddr_reg:x3; val_offset:166521*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166521*0 + 3*211*FLEN/8, x4, x1, x2)

inst_55508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffe0000; valaddr_reg:x3; val_offset:166524*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166524*0 + 3*212*FLEN/8, x4, x1, x2)

inst_55509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffff0000; valaddr_reg:x3; val_offset:166527*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166527*0 + 3*213*FLEN/8, x4, x1, x2)

inst_55510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffff8000; valaddr_reg:x3; val_offset:166530*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166530*0 + 3*214*FLEN/8, x4, x1, x2)

inst_55511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffc000; valaddr_reg:x3; val_offset:166533*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166533*0 + 3*215*FLEN/8, x4, x1, x2)

inst_55512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffe000; valaddr_reg:x3; val_offset:166536*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166536*0 + 3*216*FLEN/8, x4, x1, x2)

inst_55513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffff000; valaddr_reg:x3; val_offset:166539*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166539*0 + 3*217*FLEN/8, x4, x1, x2)

inst_55514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffff800; valaddr_reg:x3; val_offset:166542*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166542*0 + 3*218*FLEN/8, x4, x1, x2)

inst_55515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffffc00; valaddr_reg:x3; val_offset:166545*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166545*0 + 3*219*FLEN/8, x4, x1, x2)

inst_55516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffffe00; valaddr_reg:x3; val_offset:166548*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166548*0 + 3*220*FLEN/8, x4, x1, x2)

inst_55517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffff00; valaddr_reg:x3; val_offset:166551*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166551*0 + 3*221*FLEN/8, x4, x1, x2)

inst_55518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffff80; valaddr_reg:x3; val_offset:166554*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166554*0 + 3*222*FLEN/8, x4, x1, x2)

inst_55519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffffc0; valaddr_reg:x3; val_offset:166557*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166557*0 + 3*223*FLEN/8, x4, x1, x2)

inst_55520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffffe0; valaddr_reg:x3; val_offset:166560*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166560*0 + 3*224*FLEN/8, x4, x1, x2)

inst_55521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffffff0; valaddr_reg:x3; val_offset:166563*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166563*0 + 3*225*FLEN/8, x4, x1, x2)

inst_55522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffffff8; valaddr_reg:x3; val_offset:166566*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166566*0 + 3*226*FLEN/8, x4, x1, x2)

inst_55523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffffffc; valaddr_reg:x3; val_offset:166569*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166569*0 + 3*227*FLEN/8, x4, x1, x2)

inst_55524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0ffffffffffffe; valaddr_reg:x3; val_offset:166572*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166572*0 + 3*228*FLEN/8, x4, x1, x2)

inst_55525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3f0fffffffffffff; valaddr_reg:x3; val_offset:166575*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166575*0 + 3*229*FLEN/8, x4, x1, x2)

inst_55526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:166578*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166578*0 + 3*230*FLEN/8, x4, x1, x2)

inst_55527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:166581*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166581*0 + 3*231*FLEN/8, x4, x1, x2)

inst_55528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:166584*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166584*0 + 3*232*FLEN/8, x4, x1, x2)

inst_55529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:166587*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166587*0 + 3*233*FLEN/8, x4, x1, x2)

inst_55530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:166590*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166590*0 + 3*234*FLEN/8, x4, x1, x2)

inst_55531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:166593*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166593*0 + 3*235*FLEN/8, x4, x1, x2)

inst_55532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:166596*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166596*0 + 3*236*FLEN/8, x4, x1, x2)

inst_55533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:166599*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166599*0 + 3*237*FLEN/8, x4, x1, x2)

inst_55534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:166602*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166602*0 + 3*238*FLEN/8, x4, x1, x2)

inst_55535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:166605*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166605*0 + 3*239*FLEN/8, x4, x1, x2)

inst_55536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:166608*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166608*0 + 3*240*FLEN/8, x4, x1, x2)

inst_55537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:166611*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166611*0 + 3*241*FLEN/8, x4, x1, x2)

inst_55538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:166614*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166614*0 + 3*242*FLEN/8, x4, x1, x2)

inst_55539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:166617*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166617*0 + 3*243*FLEN/8, x4, x1, x2)

inst_55540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:166620*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166620*0 + 3*244*FLEN/8, x4, x1, x2)

inst_55541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:166623*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166623*0 + 3*245*FLEN/8, x4, x1, x2)

inst_55542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:166626*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166626*0 + 3*246*FLEN/8, x4, x1, x2)

inst_55543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:166629*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166629*0 + 3*247*FLEN/8, x4, x1, x2)

inst_55544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:166632*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166632*0 + 3*248*FLEN/8, x4, x1, x2)

inst_55545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:166635*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166635*0 + 3*249*FLEN/8, x4, x1, x2)

inst_55546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:166638*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166638*0 + 3*250*FLEN/8, x4, x1, x2)

inst_55547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x118f01fb344d0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf23046fccb77 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa118f01fb344d0; op2val:0x203df23046fccb77;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:166641*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166641*0 + 3*251*FLEN/8, x4, x1, x2)

inst_55548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000000000; valaddr_reg:x3; val_offset:166644*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166644*0 + 3*252*FLEN/8, x4, x1, x2)

inst_55549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000000001; valaddr_reg:x3; val_offset:166647*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166647*0 + 3*253*FLEN/8, x4, x1, x2)

inst_55550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000000003; valaddr_reg:x3; val_offset:166650*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166650*0 + 3*254*FLEN/8, x4, x1, x2)

inst_55551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000000007; valaddr_reg:x3; val_offset:166653*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166653*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_55552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000000000f; valaddr_reg:x3; val_offset:166656*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166656*0 + 3*256*FLEN/8, x4, x1, x2)

inst_55553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000000001f; valaddr_reg:x3; val_offset:166659*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166659*0 + 3*257*FLEN/8, x4, x1, x2)

inst_55554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000000003f; valaddr_reg:x3; val_offset:166662*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166662*0 + 3*258*FLEN/8, x4, x1, x2)

inst_55555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000000007f; valaddr_reg:x3; val_offset:166665*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166665*0 + 3*259*FLEN/8, x4, x1, x2)

inst_55556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000000000ff; valaddr_reg:x3; val_offset:166668*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166668*0 + 3*260*FLEN/8, x4, x1, x2)

inst_55557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000000001ff; valaddr_reg:x3; val_offset:166671*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166671*0 + 3*261*FLEN/8, x4, x1, x2)

inst_55558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000000003ff; valaddr_reg:x3; val_offset:166674*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166674*0 + 3*262*FLEN/8, x4, x1, x2)

inst_55559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000000007ff; valaddr_reg:x3; val_offset:166677*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166677*0 + 3*263*FLEN/8, x4, x1, x2)

inst_55560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000000fff; valaddr_reg:x3; val_offset:166680*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166680*0 + 3*264*FLEN/8, x4, x1, x2)

inst_55561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000001fff; valaddr_reg:x3; val_offset:166683*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166683*0 + 3*265*FLEN/8, x4, x1, x2)

inst_55562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000003fff; valaddr_reg:x3; val_offset:166686*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166686*0 + 3*266*FLEN/8, x4, x1, x2)

inst_55563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000007fff; valaddr_reg:x3; val_offset:166689*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166689*0 + 3*267*FLEN/8, x4, x1, x2)

inst_55564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000000ffff; valaddr_reg:x3; val_offset:166692*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166692*0 + 3*268*FLEN/8, x4, x1, x2)

inst_55565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000001ffff; valaddr_reg:x3; val_offset:166695*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166695*0 + 3*269*FLEN/8, x4, x1, x2)

inst_55566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000003ffff; valaddr_reg:x3; val_offset:166698*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166698*0 + 3*270*FLEN/8, x4, x1, x2)

inst_55567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000007ffff; valaddr_reg:x3; val_offset:166701*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166701*0 + 3*271*FLEN/8, x4, x1, x2)

inst_55568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000000fffff; valaddr_reg:x3; val_offset:166704*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166704*0 + 3*272*FLEN/8, x4, x1, x2)

inst_55569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000001fffff; valaddr_reg:x3; val_offset:166707*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166707*0 + 3*273*FLEN/8, x4, x1, x2)

inst_55570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000003fffff; valaddr_reg:x3; val_offset:166710*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166710*0 + 3*274*FLEN/8, x4, x1, x2)

inst_55571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000007fffff; valaddr_reg:x3; val_offset:166713*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166713*0 + 3*275*FLEN/8, x4, x1, x2)

inst_55572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000000ffffff; valaddr_reg:x3; val_offset:166716*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166716*0 + 3*276*FLEN/8, x4, x1, x2)

inst_55573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000001ffffff; valaddr_reg:x3; val_offset:166719*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166719*0 + 3*277*FLEN/8, x4, x1, x2)

inst_55574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000003ffffff; valaddr_reg:x3; val_offset:166722*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166722*0 + 3*278*FLEN/8, x4, x1, x2)

inst_55575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000007ffffff; valaddr_reg:x3; val_offset:166725*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166725*0 + 3*279*FLEN/8, x4, x1, x2)

inst_55576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000000fffffff; valaddr_reg:x3; val_offset:166728*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166728*0 + 3*280*FLEN/8, x4, x1, x2)

inst_55577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000001fffffff; valaddr_reg:x3; val_offset:166731*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166731*0 + 3*281*FLEN/8, x4, x1, x2)

inst_55578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000003fffffff; valaddr_reg:x3; val_offset:166734*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166734*0 + 3*282*FLEN/8, x4, x1, x2)

inst_55579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000007fffffff; valaddr_reg:x3; val_offset:166737*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166737*0 + 3*283*FLEN/8, x4, x1, x2)

inst_55580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00000ffffffff; valaddr_reg:x3; val_offset:166740*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166740*0 + 3*284*FLEN/8, x4, x1, x2)

inst_55581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00001ffffffff; valaddr_reg:x3; val_offset:166743*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166743*0 + 3*285*FLEN/8, x4, x1, x2)

inst_55582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00003ffffffff; valaddr_reg:x3; val_offset:166746*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166746*0 + 3*286*FLEN/8, x4, x1, x2)

inst_55583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00007ffffffff; valaddr_reg:x3; val_offset:166749*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166749*0 + 3*287*FLEN/8, x4, x1, x2)

inst_55584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0000fffffffff; valaddr_reg:x3; val_offset:166752*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166752*0 + 3*288*FLEN/8, x4, x1, x2)

inst_55585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0001fffffffff; valaddr_reg:x3; val_offset:166755*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166755*0 + 3*289*FLEN/8, x4, x1, x2)

inst_55586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0003fffffffff; valaddr_reg:x3; val_offset:166758*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166758*0 + 3*290*FLEN/8, x4, x1, x2)

inst_55587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0007fffffffff; valaddr_reg:x3; val_offset:166761*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166761*0 + 3*291*FLEN/8, x4, x1, x2)

inst_55588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc000ffffffffff; valaddr_reg:x3; val_offset:166764*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166764*0 + 3*292*FLEN/8, x4, x1, x2)

inst_55589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc001ffffffffff; valaddr_reg:x3; val_offset:166767*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166767*0 + 3*293*FLEN/8, x4, x1, x2)

inst_55590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc003ffffffffff; valaddr_reg:x3; val_offset:166770*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166770*0 + 3*294*FLEN/8, x4, x1, x2)

inst_55591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc007ffffffffff; valaddr_reg:x3; val_offset:166773*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166773*0 + 3*295*FLEN/8, x4, x1, x2)

inst_55592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc00fffffffffff; valaddr_reg:x3; val_offset:166776*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166776*0 + 3*296*FLEN/8, x4, x1, x2)

inst_55593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc01fffffffffff; valaddr_reg:x3; val_offset:166779*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166779*0 + 3*297*FLEN/8, x4, x1, x2)

inst_55594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc03fffffffffff; valaddr_reg:x3; val_offset:166782*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166782*0 + 3*298*FLEN/8, x4, x1, x2)

inst_55595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc07fffffffffff; valaddr_reg:x3; val_offset:166785*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166785*0 + 3*299*FLEN/8, x4, x1, x2)

inst_55596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc0ffffffffffff; valaddr_reg:x3; val_offset:166788*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166788*0 + 3*300*FLEN/8, x4, x1, x2)

inst_55597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc1ffffffffffff; valaddr_reg:x3; val_offset:166791*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166791*0 + 3*301*FLEN/8, x4, x1, x2)

inst_55598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc3ffffffffffff; valaddr_reg:x3; val_offset:166794*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166794*0 + 3*302*FLEN/8, x4, x1, x2)

inst_55599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc7ffffffffffff; valaddr_reg:x3; val_offset:166797*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166797*0 + 3*303*FLEN/8, x4, x1, x2)

inst_55600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cc8000000000000; valaddr_reg:x3; val_offset:166800*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166800*0 + 3*304*FLEN/8, x4, x1, x2)

inst_55601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccc000000000000; valaddr_reg:x3; val_offset:166803*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166803*0 + 3*305*FLEN/8, x4, x1, x2)

inst_55602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3cce000000000000; valaddr_reg:x3; val_offset:166806*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166806*0 + 3*306*FLEN/8, x4, x1, x2)

inst_55603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccf000000000000; valaddr_reg:x3; val_offset:166809*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166809*0 + 3*307*FLEN/8, x4, x1, x2)

inst_55604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccf800000000000; valaddr_reg:x3; val_offset:166812*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166812*0 + 3*308*FLEN/8, x4, x1, x2)

inst_55605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfc00000000000; valaddr_reg:x3; val_offset:166815*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166815*0 + 3*309*FLEN/8, x4, x1, x2)

inst_55606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfe00000000000; valaddr_reg:x3; val_offset:166818*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166818*0 + 3*310*FLEN/8, x4, x1, x2)

inst_55607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccff00000000000; valaddr_reg:x3; val_offset:166821*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166821*0 + 3*311*FLEN/8, x4, x1, x2)

inst_55608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccff80000000000; valaddr_reg:x3; val_offset:166824*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166824*0 + 3*312*FLEN/8, x4, x1, x2)

inst_55609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffc0000000000; valaddr_reg:x3; val_offset:166827*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166827*0 + 3*313*FLEN/8, x4, x1, x2)

inst_55610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffe0000000000; valaddr_reg:x3; val_offset:166830*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166830*0 + 3*314*FLEN/8, x4, x1, x2)

inst_55611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfff0000000000; valaddr_reg:x3; val_offset:166833*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166833*0 + 3*315*FLEN/8, x4, x1, x2)

inst_55612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfff8000000000; valaddr_reg:x3; val_offset:166836*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166836*0 + 3*316*FLEN/8, x4, x1, x2)

inst_55613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffc000000000; valaddr_reg:x3; val_offset:166839*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166839*0 + 3*317*FLEN/8, x4, x1, x2)

inst_55614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffe000000000; valaddr_reg:x3; val_offset:166842*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166842*0 + 3*318*FLEN/8, x4, x1, x2)

inst_55615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffff000000000; valaddr_reg:x3; val_offset:166845*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166845*0 + 3*319*FLEN/8, x4, x1, x2)

inst_55616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffff800000000; valaddr_reg:x3; val_offset:166848*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166848*0 + 3*320*FLEN/8, x4, x1, x2)

inst_55617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffc00000000; valaddr_reg:x3; val_offset:166851*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166851*0 + 3*321*FLEN/8, x4, x1, x2)

inst_55618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffe00000000; valaddr_reg:x3; val_offset:166854*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166854*0 + 3*322*FLEN/8, x4, x1, x2)

inst_55619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffff00000000; valaddr_reg:x3; val_offset:166857*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166857*0 + 3*323*FLEN/8, x4, x1, x2)

inst_55620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffff80000000; valaddr_reg:x3; val_offset:166860*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166860*0 + 3*324*FLEN/8, x4, x1, x2)

inst_55621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffc0000000; valaddr_reg:x3; val_offset:166863*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166863*0 + 3*325*FLEN/8, x4, x1, x2)

inst_55622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffe0000000; valaddr_reg:x3; val_offset:166866*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166866*0 + 3*326*FLEN/8, x4, x1, x2)

inst_55623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffff0000000; valaddr_reg:x3; val_offset:166869*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166869*0 + 3*327*FLEN/8, x4, x1, x2)

inst_55624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffff8000000; valaddr_reg:x3; val_offset:166872*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166872*0 + 3*328*FLEN/8, x4, x1, x2)

inst_55625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffc000000; valaddr_reg:x3; val_offset:166875*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166875*0 + 3*329*FLEN/8, x4, x1, x2)

inst_55626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffe000000; valaddr_reg:x3; val_offset:166878*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166878*0 + 3*330*FLEN/8, x4, x1, x2)

inst_55627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffff000000; valaddr_reg:x3; val_offset:166881*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166881*0 + 3*331*FLEN/8, x4, x1, x2)

inst_55628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffff800000; valaddr_reg:x3; val_offset:166884*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166884*0 + 3*332*FLEN/8, x4, x1, x2)

inst_55629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffc00000; valaddr_reg:x3; val_offset:166887*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166887*0 + 3*333*FLEN/8, x4, x1, x2)

inst_55630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffe00000; valaddr_reg:x3; val_offset:166890*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166890*0 + 3*334*FLEN/8, x4, x1, x2)

inst_55631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffff00000; valaddr_reg:x3; val_offset:166893*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166893*0 + 3*335*FLEN/8, x4, x1, x2)

inst_55632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffff80000; valaddr_reg:x3; val_offset:166896*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166896*0 + 3*336*FLEN/8, x4, x1, x2)

inst_55633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffc0000; valaddr_reg:x3; val_offset:166899*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166899*0 + 3*337*FLEN/8, x4, x1, x2)

inst_55634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffe0000; valaddr_reg:x3; val_offset:166902*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166902*0 + 3*338*FLEN/8, x4, x1, x2)

inst_55635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffff0000; valaddr_reg:x3; val_offset:166905*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166905*0 + 3*339*FLEN/8, x4, x1, x2)

inst_55636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffff8000; valaddr_reg:x3; val_offset:166908*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166908*0 + 3*340*FLEN/8, x4, x1, x2)

inst_55637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffc000; valaddr_reg:x3; val_offset:166911*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166911*0 + 3*341*FLEN/8, x4, x1, x2)

inst_55638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffe000; valaddr_reg:x3; val_offset:166914*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166914*0 + 3*342*FLEN/8, x4, x1, x2)

inst_55639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffff000; valaddr_reg:x3; val_offset:166917*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166917*0 + 3*343*FLEN/8, x4, x1, x2)

inst_55640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffff800; valaddr_reg:x3; val_offset:166920*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166920*0 + 3*344*FLEN/8, x4, x1, x2)

inst_55641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffffc00; valaddr_reg:x3; val_offset:166923*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166923*0 + 3*345*FLEN/8, x4, x1, x2)

inst_55642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffffe00; valaddr_reg:x3; val_offset:166926*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166926*0 + 3*346*FLEN/8, x4, x1, x2)

inst_55643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffff00; valaddr_reg:x3; val_offset:166929*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166929*0 + 3*347*FLEN/8, x4, x1, x2)

inst_55644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffff80; valaddr_reg:x3; val_offset:166932*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166932*0 + 3*348*FLEN/8, x4, x1, x2)

inst_55645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffffc0; valaddr_reg:x3; val_offset:166935*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166935*0 + 3*349*FLEN/8, x4, x1, x2)

inst_55646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffffe0; valaddr_reg:x3; val_offset:166938*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166938*0 + 3*350*FLEN/8, x4, x1, x2)

inst_55647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffffff0; valaddr_reg:x3; val_offset:166941*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166941*0 + 3*351*FLEN/8, x4, x1, x2)

inst_55648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffffff8; valaddr_reg:x3; val_offset:166944*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166944*0 + 3*352*FLEN/8, x4, x1, x2)

inst_55649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffffffc; valaddr_reg:x3; val_offset:166947*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166947*0 + 3*353*FLEN/8, x4, x1, x2)

inst_55650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccffffffffffffe; valaddr_reg:x3; val_offset:166950*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166950*0 + 3*354*FLEN/8, x4, x1, x2)

inst_55651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ccfffffffffffff; valaddr_reg:x3; val_offset:166953*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166953*0 + 3*355*FLEN/8, x4, x1, x2)

inst_55652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:166956*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166956*0 + 3*356*FLEN/8, x4, x1, x2)

inst_55653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:166959*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166959*0 + 3*357*FLEN/8, x4, x1, x2)

inst_55654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:166962*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166962*0 + 3*358*FLEN/8, x4, x1, x2)

inst_55655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:166965*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166965*0 + 3*359*FLEN/8, x4, x1, x2)

inst_55656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:166968*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166968*0 + 3*360*FLEN/8, x4, x1, x2)

inst_55657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:166971*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166971*0 + 3*361*FLEN/8, x4, x1, x2)

inst_55658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:166974*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166974*0 + 3*362*FLEN/8, x4, x1, x2)

inst_55659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:166977*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166977*0 + 3*363*FLEN/8, x4, x1, x2)

inst_55660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:166980*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166980*0 + 3*364*FLEN/8, x4, x1, x2)

inst_55661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:166983*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166983*0 + 3*365*FLEN/8, x4, x1, x2)

inst_55662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:166986*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166986*0 + 3*366*FLEN/8, x4, x1, x2)

inst_55663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:166989*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166989*0 + 3*367*FLEN/8, x4, x1, x2)

inst_55664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:166992*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166992*0 + 3*368*FLEN/8, x4, x1, x2)

inst_55665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:166995*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166995*0 + 3*369*FLEN/8, x4, x1, x2)

inst_55666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:166998*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166998*0 + 3*370*FLEN/8, x4, x1, x2)

inst_55667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:167001*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167001*0 + 3*371*FLEN/8, x4, x1, x2)

inst_55668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:167004*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167004*0 + 3*372*FLEN/8, x4, x1, x2)

inst_55669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:167007*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167007*0 + 3*373*FLEN/8, x4, x1, x2)

inst_55670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:167010*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167010*0 + 3*374*FLEN/8, x4, x1, x2)

inst_55671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:167013*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167013*0 + 3*375*FLEN/8, x4, x1, x2)

inst_55672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:167016*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167016*0 + 3*376*FLEN/8, x4, x1, x2)

inst_55673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1193b51f0206d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdf1ac948a04d2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1193b51f0206d; op2val:0x203df1ac948a04d2;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:167019*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167019*0 + 3*377*FLEN/8, x4, x1, x2)

inst_55674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:167022*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167022*0 + 3*378*FLEN/8, x4, x1, x2)

inst_55675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:167025*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167025*0 + 3*379*FLEN/8, x4, x1, x2)

inst_55676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:167028*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167028*0 + 3*380*FLEN/8, x4, x1, x2)

inst_55677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:167031*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167031*0 + 3*381*FLEN/8, x4, x1, x2)

inst_55678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:167034*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167034*0 + 3*382*FLEN/8, x4, x1, x2)

inst_55679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:167037*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167037*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_55680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:167040*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167040*0 + 3*384*FLEN/8, x4, x1, x2)

inst_55681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:167043*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167043*0 + 3*385*FLEN/8, x4, x1, x2)

inst_55682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:167046*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167046*0 + 3*386*FLEN/8, x4, x1, x2)

inst_55683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:167049*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167049*0 + 3*387*FLEN/8, x4, x1, x2)

inst_55684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:167052*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167052*0 + 3*388*FLEN/8, x4, x1, x2)

inst_55685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:167055*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167055*0 + 3*389*FLEN/8, x4, x1, x2)

inst_55686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:167058*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167058*0 + 3*390*FLEN/8, x4, x1, x2)

inst_55687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:167061*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167061*0 + 3*391*FLEN/8, x4, x1, x2)

inst_55688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:167064*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167064*0 + 3*392*FLEN/8, x4, x1, x2)

inst_55689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:167067*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167067*0 + 3*393*FLEN/8, x4, x1, x2)

inst_55690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:167070*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167070*0 + 3*394*FLEN/8, x4, x1, x2)

inst_55691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:167073*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167073*0 + 3*395*FLEN/8, x4, x1, x2)

inst_55692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:167076*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167076*0 + 3*396*FLEN/8, x4, x1, x2)

inst_55693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:167079*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167079*0 + 3*397*FLEN/8, x4, x1, x2)

inst_55694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:167082*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167082*0 + 3*398*FLEN/8, x4, x1, x2)

inst_55695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:167085*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167085*0 + 3*399*FLEN/8, x4, x1, x2)

inst_55696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000000000; valaddr_reg:x3; val_offset:167088*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167088*0 + 3*400*FLEN/8, x4, x1, x2)

inst_55697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000000001; valaddr_reg:x3; val_offset:167091*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167091*0 + 3*401*FLEN/8, x4, x1, x2)

inst_55698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000000003; valaddr_reg:x3; val_offset:167094*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167094*0 + 3*402*FLEN/8, x4, x1, x2)

inst_55699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000000007; valaddr_reg:x3; val_offset:167097*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167097*0 + 3*403*FLEN/8, x4, x1, x2)

inst_55700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000000000f; valaddr_reg:x3; val_offset:167100*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167100*0 + 3*404*FLEN/8, x4, x1, x2)

inst_55701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000000001f; valaddr_reg:x3; val_offset:167103*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167103*0 + 3*405*FLEN/8, x4, x1, x2)

inst_55702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000000003f; valaddr_reg:x3; val_offset:167106*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167106*0 + 3*406*FLEN/8, x4, x1, x2)

inst_55703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000000007f; valaddr_reg:x3; val_offset:167109*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167109*0 + 3*407*FLEN/8, x4, x1, x2)

inst_55704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000000000ff; valaddr_reg:x3; val_offset:167112*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167112*0 + 3*408*FLEN/8, x4, x1, x2)

inst_55705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000000001ff; valaddr_reg:x3; val_offset:167115*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167115*0 + 3*409*FLEN/8, x4, x1, x2)

inst_55706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000000003ff; valaddr_reg:x3; val_offset:167118*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167118*0 + 3*410*FLEN/8, x4, x1, x2)

inst_55707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000000007ff; valaddr_reg:x3; val_offset:167121*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167121*0 + 3*411*FLEN/8, x4, x1, x2)

inst_55708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000000fff; valaddr_reg:x3; val_offset:167124*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167124*0 + 3*412*FLEN/8, x4, x1, x2)

inst_55709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000001fff; valaddr_reg:x3; val_offset:167127*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167127*0 + 3*413*FLEN/8, x4, x1, x2)

inst_55710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000003fff; valaddr_reg:x3; val_offset:167130*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167130*0 + 3*414*FLEN/8, x4, x1, x2)

inst_55711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000007fff; valaddr_reg:x3; val_offset:167133*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167133*0 + 3*415*FLEN/8, x4, x1, x2)

inst_55712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000000ffff; valaddr_reg:x3; val_offset:167136*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167136*0 + 3*416*FLEN/8, x4, x1, x2)

inst_55713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000001ffff; valaddr_reg:x3; val_offset:167139*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167139*0 + 3*417*FLEN/8, x4, x1, x2)

inst_55714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000003ffff; valaddr_reg:x3; val_offset:167142*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167142*0 + 3*418*FLEN/8, x4, x1, x2)

inst_55715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000007ffff; valaddr_reg:x3; val_offset:167145*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167145*0 + 3*419*FLEN/8, x4, x1, x2)

inst_55716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000000fffff; valaddr_reg:x3; val_offset:167148*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167148*0 + 3*420*FLEN/8, x4, x1, x2)

inst_55717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000001fffff; valaddr_reg:x3; val_offset:167151*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167151*0 + 3*421*FLEN/8, x4, x1, x2)

inst_55718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000003fffff; valaddr_reg:x3; val_offset:167154*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167154*0 + 3*422*FLEN/8, x4, x1, x2)

inst_55719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000007fffff; valaddr_reg:x3; val_offset:167157*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167157*0 + 3*423*FLEN/8, x4, x1, x2)

inst_55720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000000ffffff; valaddr_reg:x3; val_offset:167160*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167160*0 + 3*424*FLEN/8, x4, x1, x2)

inst_55721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000001ffffff; valaddr_reg:x3; val_offset:167163*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167163*0 + 3*425*FLEN/8, x4, x1, x2)

inst_55722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000003ffffff; valaddr_reg:x3; val_offset:167166*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167166*0 + 3*426*FLEN/8, x4, x1, x2)

inst_55723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000007ffffff; valaddr_reg:x3; val_offset:167169*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167169*0 + 3*427*FLEN/8, x4, x1, x2)

inst_55724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000000fffffff; valaddr_reg:x3; val_offset:167172*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167172*0 + 3*428*FLEN/8, x4, x1, x2)

inst_55725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000001fffffff; valaddr_reg:x3; val_offset:167175*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167175*0 + 3*429*FLEN/8, x4, x1, x2)

inst_55726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000003fffffff; valaddr_reg:x3; val_offset:167178*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167178*0 + 3*430*FLEN/8, x4, x1, x2)

inst_55727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000007fffffff; valaddr_reg:x3; val_offset:167181*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167181*0 + 3*431*FLEN/8, x4, x1, x2)

inst_55728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400000ffffffff; valaddr_reg:x3; val_offset:167184*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167184*0 + 3*432*FLEN/8, x4, x1, x2)

inst_55729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400001ffffffff; valaddr_reg:x3; val_offset:167187*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167187*0 + 3*433*FLEN/8, x4, x1, x2)

inst_55730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400003ffffffff; valaddr_reg:x3; val_offset:167190*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167190*0 + 3*434*FLEN/8, x4, x1, x2)

inst_55731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400007ffffffff; valaddr_reg:x3; val_offset:167193*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167193*0 + 3*435*FLEN/8, x4, x1, x2)

inst_55732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140000fffffffff; valaddr_reg:x3; val_offset:167196*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167196*0 + 3*436*FLEN/8, x4, x1, x2)

inst_55733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140001fffffffff; valaddr_reg:x3; val_offset:167199*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167199*0 + 3*437*FLEN/8, x4, x1, x2)

inst_55734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140003fffffffff; valaddr_reg:x3; val_offset:167202*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167202*0 + 3*438*FLEN/8, x4, x1, x2)

inst_55735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140007fffffffff; valaddr_reg:x3; val_offset:167205*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167205*0 + 3*439*FLEN/8, x4, x1, x2)

inst_55736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814000ffffffffff; valaddr_reg:x3; val_offset:167208*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167208*0 + 3*440*FLEN/8, x4, x1, x2)

inst_55737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814001ffffffffff; valaddr_reg:x3; val_offset:167211*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167211*0 + 3*441*FLEN/8, x4, x1, x2)

inst_55738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814003ffffffffff; valaddr_reg:x3; val_offset:167214*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167214*0 + 3*442*FLEN/8, x4, x1, x2)

inst_55739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814007ffffffffff; valaddr_reg:x3; val_offset:167217*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167217*0 + 3*443*FLEN/8, x4, x1, x2)

inst_55740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81400fffffffffff; valaddr_reg:x3; val_offset:167220*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167220*0 + 3*444*FLEN/8, x4, x1, x2)

inst_55741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81401fffffffffff; valaddr_reg:x3; val_offset:167223*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167223*0 + 3*445*FLEN/8, x4, x1, x2)

inst_55742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81403fffffffffff; valaddr_reg:x3; val_offset:167226*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167226*0 + 3*446*FLEN/8, x4, x1, x2)

inst_55743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x81407fffffffffff; valaddr_reg:x3; val_offset:167229*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167229*0 + 3*447*FLEN/8, x4, x1, x2)

inst_55744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8140ffffffffffff; valaddr_reg:x3; val_offset:167232*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167232*0 + 3*448*FLEN/8, x4, x1, x2)

inst_55745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8141ffffffffffff; valaddr_reg:x3; val_offset:167235*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167235*0 + 3*449*FLEN/8, x4, x1, x2)

inst_55746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8143ffffffffffff; valaddr_reg:x3; val_offset:167238*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167238*0 + 3*450*FLEN/8, x4, x1, x2)

inst_55747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8147ffffffffffff; valaddr_reg:x3; val_offset:167241*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167241*0 + 3*451*FLEN/8, x4, x1, x2)

inst_55748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x8148000000000000; valaddr_reg:x3; val_offset:167244*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167244*0 + 3*452*FLEN/8, x4, x1, x2)

inst_55749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814c000000000000; valaddr_reg:x3; val_offset:167247*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167247*0 + 3*453*FLEN/8, x4, x1, x2)

inst_55750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814e000000000000; valaddr_reg:x3; val_offset:167250*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167250*0 + 3*454*FLEN/8, x4, x1, x2)

inst_55751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814f000000000000; valaddr_reg:x3; val_offset:167253*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167253*0 + 3*455*FLEN/8, x4, x1, x2)

inst_55752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814f800000000000; valaddr_reg:x3; val_offset:167256*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167256*0 + 3*456*FLEN/8, x4, x1, x2)

inst_55753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fc00000000000; valaddr_reg:x3; val_offset:167259*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167259*0 + 3*457*FLEN/8, x4, x1, x2)

inst_55754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fe00000000000; valaddr_reg:x3; val_offset:167262*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167262*0 + 3*458*FLEN/8, x4, x1, x2)

inst_55755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ff00000000000; valaddr_reg:x3; val_offset:167265*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167265*0 + 3*459*FLEN/8, x4, x1, x2)

inst_55756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ff80000000000; valaddr_reg:x3; val_offset:167268*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167268*0 + 3*460*FLEN/8, x4, x1, x2)

inst_55757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffc0000000000; valaddr_reg:x3; val_offset:167271*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167271*0 + 3*461*FLEN/8, x4, x1, x2)

inst_55758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffe0000000000; valaddr_reg:x3; val_offset:167274*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167274*0 + 3*462*FLEN/8, x4, x1, x2)

inst_55759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fff0000000000; valaddr_reg:x3; val_offset:167277*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167277*0 + 3*463*FLEN/8, x4, x1, x2)

inst_55760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fff8000000000; valaddr_reg:x3; val_offset:167280*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167280*0 + 3*464*FLEN/8, x4, x1, x2)

inst_55761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffc000000000; valaddr_reg:x3; val_offset:167283*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167283*0 + 3*465*FLEN/8, x4, x1, x2)

inst_55762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffe000000000; valaddr_reg:x3; val_offset:167286*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167286*0 + 3*466*FLEN/8, x4, x1, x2)

inst_55763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffff000000000; valaddr_reg:x3; val_offset:167289*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167289*0 + 3*467*FLEN/8, x4, x1, x2)

inst_55764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffff800000000; valaddr_reg:x3; val_offset:167292*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167292*0 + 3*468*FLEN/8, x4, x1, x2)

inst_55765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffc00000000; valaddr_reg:x3; val_offset:167295*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167295*0 + 3*469*FLEN/8, x4, x1, x2)

inst_55766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffe00000000; valaddr_reg:x3; val_offset:167298*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167298*0 + 3*470*FLEN/8, x4, x1, x2)

inst_55767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffff00000000; valaddr_reg:x3; val_offset:167301*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167301*0 + 3*471*FLEN/8, x4, x1, x2)

inst_55768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffff80000000; valaddr_reg:x3; val_offset:167304*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167304*0 + 3*472*FLEN/8, x4, x1, x2)

inst_55769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffc0000000; valaddr_reg:x3; val_offset:167307*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167307*0 + 3*473*FLEN/8, x4, x1, x2)

inst_55770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffe0000000; valaddr_reg:x3; val_offset:167310*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167310*0 + 3*474*FLEN/8, x4, x1, x2)

inst_55771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffff0000000; valaddr_reg:x3; val_offset:167313*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167313*0 + 3*475*FLEN/8, x4, x1, x2)

inst_55772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffff8000000; valaddr_reg:x3; val_offset:167316*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167316*0 + 3*476*FLEN/8, x4, x1, x2)

inst_55773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffc000000; valaddr_reg:x3; val_offset:167319*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167319*0 + 3*477*FLEN/8, x4, x1, x2)

inst_55774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffe000000; valaddr_reg:x3; val_offset:167322*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167322*0 + 3*478*FLEN/8, x4, x1, x2)

inst_55775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffff000000; valaddr_reg:x3; val_offset:167325*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167325*0 + 3*479*FLEN/8, x4, x1, x2)

inst_55776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffff800000; valaddr_reg:x3; val_offset:167328*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167328*0 + 3*480*FLEN/8, x4, x1, x2)

inst_55777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffc00000; valaddr_reg:x3; val_offset:167331*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167331*0 + 3*481*FLEN/8, x4, x1, x2)

inst_55778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffe00000; valaddr_reg:x3; val_offset:167334*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167334*0 + 3*482*FLEN/8, x4, x1, x2)

inst_55779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffff00000; valaddr_reg:x3; val_offset:167337*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167337*0 + 3*483*FLEN/8, x4, x1, x2)

inst_55780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffff80000; valaddr_reg:x3; val_offset:167340*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167340*0 + 3*484*FLEN/8, x4, x1, x2)

inst_55781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffc0000; valaddr_reg:x3; val_offset:167343*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167343*0 + 3*485*FLEN/8, x4, x1, x2)

inst_55782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffe0000; valaddr_reg:x3; val_offset:167346*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167346*0 + 3*486*FLEN/8, x4, x1, x2)

inst_55783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffff0000; valaddr_reg:x3; val_offset:167349*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167349*0 + 3*487*FLEN/8, x4, x1, x2)

inst_55784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffff8000; valaddr_reg:x3; val_offset:167352*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167352*0 + 3*488*FLEN/8, x4, x1, x2)

inst_55785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffc000; valaddr_reg:x3; val_offset:167355*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167355*0 + 3*489*FLEN/8, x4, x1, x2)

inst_55786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffe000; valaddr_reg:x3; val_offset:167358*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167358*0 + 3*490*FLEN/8, x4, x1, x2)

inst_55787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffff000; valaddr_reg:x3; val_offset:167361*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167361*0 + 3*491*FLEN/8, x4, x1, x2)

inst_55788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffff800; valaddr_reg:x3; val_offset:167364*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167364*0 + 3*492*FLEN/8, x4, x1, x2)

inst_55789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffffc00; valaddr_reg:x3; val_offset:167367*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167367*0 + 3*493*FLEN/8, x4, x1, x2)

inst_55790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffffe00; valaddr_reg:x3; val_offset:167370*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167370*0 + 3*494*FLEN/8, x4, x1, x2)

inst_55791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffff00; valaddr_reg:x3; val_offset:167373*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167373*0 + 3*495*FLEN/8, x4, x1, x2)

inst_55792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffff80; valaddr_reg:x3; val_offset:167376*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167376*0 + 3*496*FLEN/8, x4, x1, x2)

inst_55793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffffc0; valaddr_reg:x3; val_offset:167379*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167379*0 + 3*497*FLEN/8, x4, x1, x2)

inst_55794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffffe0; valaddr_reg:x3; val_offset:167382*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167382*0 + 3*498*FLEN/8, x4, x1, x2)

inst_55795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffffff0; valaddr_reg:x3; val_offset:167385*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167385*0 + 3*499*FLEN/8, x4, x1, x2)

inst_55796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffffff8; valaddr_reg:x3; val_offset:167388*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167388*0 + 3*500*FLEN/8, x4, x1, x2)

inst_55797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffffffc; valaddr_reg:x3; val_offset:167391*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167391*0 + 3*501*FLEN/8, x4, x1, x2)

inst_55798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814ffffffffffffe; valaddr_reg:x3; val_offset:167394*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167394*0 + 3*502*FLEN/8, x4, x1, x2)

inst_55799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x123ca781efeaa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa123ca781efeaa; op2val:0x8000;
op3val:0x814fffffffffffff; valaddr_reg:x3; val_offset:167397*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167397*0 + 3*503*FLEN/8, x4, x1, x2)

inst_55800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:167400*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167400*0 + 3*504*FLEN/8, x4, x1, x2)

inst_55801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:167403*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167403*0 + 3*505*FLEN/8, x4, x1, x2)

inst_55802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:167406*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167406*0 + 3*506*FLEN/8, x4, x1, x2)

inst_55803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:167409*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167409*0 + 3*507*FLEN/8, x4, x1, x2)

inst_55804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:167412*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167412*0 + 3*508*FLEN/8, x4, x1, x2)

inst_55805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:167415*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167415*0 + 3*509*FLEN/8, x4, x1, x2)

inst_55806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:167418*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167418*0 + 3*510*FLEN/8, x4, x1, x2)

inst_55807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:167421*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167421*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_55808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:167424*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167424*0 + 3*512*FLEN/8, x4, x1, x2)

inst_55809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:167427*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167427*0 + 3*513*FLEN/8, x4, x1, x2)

inst_55810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:167430*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167430*0 + 3*514*FLEN/8, x4, x1, x2)

inst_55811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:167433*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167433*0 + 3*515*FLEN/8, x4, x1, x2)

inst_55812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:167436*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167436*0 + 3*516*FLEN/8, x4, x1, x2)

inst_55813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:167439*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167439*0 + 3*517*FLEN/8, x4, x1, x2)

inst_55814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:167442*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167442*0 + 3*518*FLEN/8, x4, x1, x2)

inst_55815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:167445*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167445*0 + 3*519*FLEN/8, x4, x1, x2)

inst_55816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:167448*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167448*0 + 3*520*FLEN/8, x4, x1, x2)

inst_55817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:167451*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167451*0 + 3*521*FLEN/8, x4, x1, x2)

inst_55818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:167454*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167454*0 + 3*522*FLEN/8, x4, x1, x2)

inst_55819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:167457*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167457*0 + 3*523*FLEN/8, x4, x1, x2)

inst_55820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:167460*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167460*0 + 3*524*FLEN/8, x4, x1, x2)

inst_55821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:167463*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167463*0 + 3*525*FLEN/8, x4, x1, x2)

inst_55822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:167466*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167466*0 + 3*526*FLEN/8, x4, x1, x2)

inst_55823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:167469*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167469*0 + 3*527*FLEN/8, x4, x1, x2)

inst_55824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:167472*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167472*0 + 3*528*FLEN/8, x4, x1, x2)

inst_55825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:167475*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167475*0 + 3*529*FLEN/8, x4, x1, x2)

inst_55826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:167478*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167478*0 + 3*530*FLEN/8, x4, x1, x2)

inst_55827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:167481*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167481*0 + 3*531*FLEN/8, x4, x1, x2)

inst_55828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:167484*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167484*0 + 3*532*FLEN/8, x4, x1, x2)

inst_55829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:167487*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167487*0 + 3*533*FLEN/8, x4, x1, x2)

inst_55830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:167490*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167490*0 + 3*534*FLEN/8, x4, x1, x2)

inst_55831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:167493*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167493*0 + 3*535*FLEN/8, x4, x1, x2)

inst_55832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:167496*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167496*0 + 3*536*FLEN/8, x4, x1, x2)

inst_55833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:167499*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167499*0 + 3*537*FLEN/8, x4, x1, x2)

inst_55834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:167502*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167502*0 + 3*538*FLEN/8, x4, x1, x2)

inst_55835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:167505*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167505*0 + 3*539*FLEN/8, x4, x1, x2)

inst_55836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:167508*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167508*0 + 3*540*FLEN/8, x4, x1, x2)

inst_55837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:167511*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167511*0 + 3*541*FLEN/8, x4, x1, x2)

inst_55838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:167514*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167514*0 + 3*542*FLEN/8, x4, x1, x2)

inst_55839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:167517*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167517*0 + 3*543*FLEN/8, x4, x1, x2)

inst_55840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:167520*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167520*0 + 3*544*FLEN/8, x4, x1, x2)

inst_55841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:167523*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167523*0 + 3*545*FLEN/8, x4, x1, x2)

inst_55842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:167526*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167526*0 + 3*546*FLEN/8, x4, x1, x2)

inst_55843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:167529*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167529*0 + 3*547*FLEN/8, x4, x1, x2)

inst_55844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:167532*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167532*0 + 3*548*FLEN/8, x4, x1, x2)

inst_55845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:167535*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167535*0 + 3*549*FLEN/8, x4, x1, x2)

inst_55846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:167538*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167538*0 + 3*550*FLEN/8, x4, x1, x2)

inst_55847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:167541*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167541*0 + 3*551*FLEN/8, x4, x1, x2)

inst_55848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:167544*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167544*0 + 3*552*FLEN/8, x4, x1, x2)

inst_55849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:167547*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167547*0 + 3*553*FLEN/8, x4, x1, x2)

inst_55850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:167550*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167550*0 + 3*554*FLEN/8, x4, x1, x2)

inst_55851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:167553*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167553*0 + 3*555*FLEN/8, x4, x1, x2)

inst_55852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:167556*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167556*0 + 3*556*FLEN/8, x4, x1, x2)

inst_55853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:167559*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167559*0 + 3*557*FLEN/8, x4, x1, x2)

inst_55854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:167562*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167562*0 + 3*558*FLEN/8, x4, x1, x2)

inst_55855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:167565*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167565*0 + 3*559*FLEN/8, x4, x1, x2)

inst_55856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:167568*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167568*0 + 3*560*FLEN/8, x4, x1, x2)

inst_55857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:167571*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167571*0 + 3*561*FLEN/8, x4, x1, x2)

inst_55858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:167574*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167574*0 + 3*562*FLEN/8, x4, x1, x2)

inst_55859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:167577*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167577*0 + 3*563*FLEN/8, x4, x1, x2)

inst_55860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:167580*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167580*0 + 3*564*FLEN/8, x4, x1, x2)

inst_55861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:167583*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167583*0 + 3*565*FLEN/8, x4, x1, x2)

inst_55862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:167586*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167586*0 + 3*566*FLEN/8, x4, x1, x2)

inst_55863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:167589*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167589*0 + 3*567*FLEN/8, x4, x1, x2)

inst_55864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:167592*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167592*0 + 3*568*FLEN/8, x4, x1, x2)

inst_55865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:167595*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167595*0 + 3*569*FLEN/8, x4, x1, x2)

inst_55866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:167598*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167598*0 + 3*570*FLEN/8, x4, x1, x2)

inst_55867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:167601*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167601*0 + 3*571*FLEN/8, x4, x1, x2)

inst_55868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:167604*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167604*0 + 3*572*FLEN/8, x4, x1, x2)

inst_55869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:167607*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167607*0 + 3*573*FLEN/8, x4, x1, x2)

inst_55870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:167610*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167610*0 + 3*574*FLEN/8, x4, x1, x2)

inst_55871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:167613*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167613*0 + 3*575*FLEN/8, x4, x1, x2)

inst_55872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:167616*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167616*0 + 3*576*FLEN/8, x4, x1, x2)

inst_55873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:167619*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167619*0 + 3*577*FLEN/8, x4, x1, x2)

inst_55874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:167622*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167622*0 + 3*578*FLEN/8, x4, x1, x2)

inst_55875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:167625*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167625*0 + 3*579*FLEN/8, x4, x1, x2)

inst_55876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:167628*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167628*0 + 3*580*FLEN/8, x4, x1, x2)

inst_55877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:167631*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167631*0 + 3*581*FLEN/8, x4, x1, x2)

inst_55878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:167634*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167634*0 + 3*582*FLEN/8, x4, x1, x2)

inst_55879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:167637*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167637*0 + 3*583*FLEN/8, x4, x1, x2)

inst_55880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:167640*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167640*0 + 3*584*FLEN/8, x4, x1, x2)

inst_55881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:167643*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167643*0 + 3*585*FLEN/8, x4, x1, x2)

inst_55882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:167646*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167646*0 + 3*586*FLEN/8, x4, x1, x2)

inst_55883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:167649*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167649*0 + 3*587*FLEN/8, x4, x1, x2)

inst_55884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:167652*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167652*0 + 3*588*FLEN/8, x4, x1, x2)

inst_55885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:167655*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167655*0 + 3*589*FLEN/8, x4, x1, x2)

inst_55886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:167658*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167658*0 + 3*590*FLEN/8, x4, x1, x2)

inst_55887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:167661*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167661*0 + 3*591*FLEN/8, x4, x1, x2)

inst_55888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:167664*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167664*0 + 3*592*FLEN/8, x4, x1, x2)

inst_55889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:167667*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167667*0 + 3*593*FLEN/8, x4, x1, x2)

inst_55890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:167670*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167670*0 + 3*594*FLEN/8, x4, x1, x2)

inst_55891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:167673*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167673*0 + 3*595*FLEN/8, x4, x1, x2)

inst_55892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:167676*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167676*0 + 3*596*FLEN/8, x4, x1, x2)

inst_55893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:167679*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167679*0 + 3*597*FLEN/8, x4, x1, x2)

inst_55894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:167682*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167682*0 + 3*598*FLEN/8, x4, x1, x2)

inst_55895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:167685*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167685*0 + 3*599*FLEN/8, x4, x1, x2)

inst_55896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:167688*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167688*0 + 3*600*FLEN/8, x4, x1, x2)

inst_55897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:167691*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167691*0 + 3*601*FLEN/8, x4, x1, x2)

inst_55898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:167694*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167694*0 + 3*602*FLEN/8, x4, x1, x2)

inst_55899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:167697*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167697*0 + 3*603*FLEN/8, x4, x1, x2)

inst_55900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:167700*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167700*0 + 3*604*FLEN/8, x4, x1, x2)

inst_55901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:167703*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167703*0 + 3*605*FLEN/8, x4, x1, x2)

inst_55902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:167706*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167706*0 + 3*606*FLEN/8, x4, x1, x2)

inst_55903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:167709*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167709*0 + 3*607*FLEN/8, x4, x1, x2)

inst_55904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:167712*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167712*0 + 3*608*FLEN/8, x4, x1, x2)

inst_55905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:167715*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167715*0 + 3*609*FLEN/8, x4, x1, x2)

inst_55906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:167718*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167718*0 + 3*610*FLEN/8, x4, x1, x2)

inst_55907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:167721*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167721*0 + 3*611*FLEN/8, x4, x1, x2)

inst_55908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:167724*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167724*0 + 3*612*FLEN/8, x4, x1, x2)

inst_55909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:167727*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167727*0 + 3*613*FLEN/8, x4, x1, x2)

inst_55910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:167730*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167730*0 + 3*614*FLEN/8, x4, x1, x2)

inst_55911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:167733*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167733*0 + 3*615*FLEN/8, x4, x1, x2)

inst_55912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:167736*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167736*0 + 3*616*FLEN/8, x4, x1, x2)

inst_55913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:167739*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167739*0 + 3*617*FLEN/8, x4, x1, x2)

inst_55914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:167742*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167742*0 + 3*618*FLEN/8, x4, x1, x2)

inst_55915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:167745*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167745*0 + 3*619*FLEN/8, x4, x1, x2)

inst_55916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:167748*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167748*0 + 3*620*FLEN/8, x4, x1, x2)

inst_55917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:167751*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167751*0 + 3*621*FLEN/8, x4, x1, x2)

inst_55918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:167754*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167754*0 + 3*622*FLEN/8, x4, x1, x2)

inst_55919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:167757*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167757*0 + 3*623*FLEN/8, x4, x1, x2)

inst_55920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:167760*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167760*0 + 3*624*FLEN/8, x4, x1, x2)

inst_55921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:167763*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167763*0 + 3*625*FLEN/8, x4, x1, x2)

inst_55922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:167766*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167766*0 + 3*626*FLEN/8, x4, x1, x2)

inst_55923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:167769*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167769*0 + 3*627*FLEN/8, x4, x1, x2)

inst_55924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:167772*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167772*0 + 3*628*FLEN/8, x4, x1, x2)

inst_55925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12a3a89b24c73 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12a3a89b24c73; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:167775*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167775*0 + 3*629*FLEN/8, x4, x1, x2)

inst_55926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:167778*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167778*0 + 3*630*FLEN/8, x4, x1, x2)

inst_55927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:167781*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167781*0 + 3*631*FLEN/8, x4, x1, x2)

inst_55928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:167784*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167784*0 + 3*632*FLEN/8, x4, x1, x2)

inst_55929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:167787*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167787*0 + 3*633*FLEN/8, x4, x1, x2)

inst_55930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:167790*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167790*0 + 3*634*FLEN/8, x4, x1, x2)

inst_55931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:167793*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167793*0 + 3*635*FLEN/8, x4, x1, x2)

inst_55932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:167796*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167796*0 + 3*636*FLEN/8, x4, x1, x2)

inst_55933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:167799*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167799*0 + 3*637*FLEN/8, x4, x1, x2)

inst_55934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:167802*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167802*0 + 3*638*FLEN/8, x4, x1, x2)

inst_55935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:167805*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167805*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_55936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:167808*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167808*0 + 3*640*FLEN/8, x4, x1, x2)

inst_55937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:167811*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167811*0 + 3*641*FLEN/8, x4, x1, x2)

inst_55938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:167814*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167814*0 + 3*642*FLEN/8, x4, x1, x2)

inst_55939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:167817*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167817*0 + 3*643*FLEN/8, x4, x1, x2)

inst_55940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:167820*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167820*0 + 3*644*FLEN/8, x4, x1, x2)

inst_55941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:167823*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167823*0 + 3*645*FLEN/8, x4, x1, x2)

inst_55942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:167826*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167826*0 + 3*646*FLEN/8, x4, x1, x2)

inst_55943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:167829*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167829*0 + 3*647*FLEN/8, x4, x1, x2)

inst_55944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:167832*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167832*0 + 3*648*FLEN/8, x4, x1, x2)

inst_55945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:167835*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167835*0 + 3*649*FLEN/8, x4, x1, x2)

inst_55946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:167838*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167838*0 + 3*650*FLEN/8, x4, x1, x2)

inst_55947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:167841*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167841*0 + 3*651*FLEN/8, x4, x1, x2)

inst_55948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000000000; valaddr_reg:x3; val_offset:167844*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167844*0 + 3*652*FLEN/8, x4, x1, x2)

inst_55949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000000001; valaddr_reg:x3; val_offset:167847*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167847*0 + 3*653*FLEN/8, x4, x1, x2)

inst_55950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000000003; valaddr_reg:x3; val_offset:167850*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167850*0 + 3*654*FLEN/8, x4, x1, x2)

inst_55951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000000007; valaddr_reg:x3; val_offset:167853*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167853*0 + 3*655*FLEN/8, x4, x1, x2)

inst_55952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000000000f; valaddr_reg:x3; val_offset:167856*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167856*0 + 3*656*FLEN/8, x4, x1, x2)

inst_55953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000000001f; valaddr_reg:x3; val_offset:167859*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167859*0 + 3*657*FLEN/8, x4, x1, x2)

inst_55954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000000003f; valaddr_reg:x3; val_offset:167862*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167862*0 + 3*658*FLEN/8, x4, x1, x2)

inst_55955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000000007f; valaddr_reg:x3; val_offset:167865*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167865*0 + 3*659*FLEN/8, x4, x1, x2)

inst_55956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000000000ff; valaddr_reg:x3; val_offset:167868*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167868*0 + 3*660*FLEN/8, x4, x1, x2)

inst_55957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000000001ff; valaddr_reg:x3; val_offset:167871*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167871*0 + 3*661*FLEN/8, x4, x1, x2)

inst_55958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000000003ff; valaddr_reg:x3; val_offset:167874*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167874*0 + 3*662*FLEN/8, x4, x1, x2)

inst_55959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000000007ff; valaddr_reg:x3; val_offset:167877*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167877*0 + 3*663*FLEN/8, x4, x1, x2)

inst_55960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000000fff; valaddr_reg:x3; val_offset:167880*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167880*0 + 3*664*FLEN/8, x4, x1, x2)

inst_55961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000001fff; valaddr_reg:x3; val_offset:167883*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167883*0 + 3*665*FLEN/8, x4, x1, x2)

inst_55962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000003fff; valaddr_reg:x3; val_offset:167886*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167886*0 + 3*666*FLEN/8, x4, x1, x2)

inst_55963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000007fff; valaddr_reg:x3; val_offset:167889*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167889*0 + 3*667*FLEN/8, x4, x1, x2)

inst_55964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000000ffff; valaddr_reg:x3; val_offset:167892*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167892*0 + 3*668*FLEN/8, x4, x1, x2)

inst_55965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000001ffff; valaddr_reg:x3; val_offset:167895*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167895*0 + 3*669*FLEN/8, x4, x1, x2)

inst_55966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000003ffff; valaddr_reg:x3; val_offset:167898*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167898*0 + 3*670*FLEN/8, x4, x1, x2)

inst_55967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000007ffff; valaddr_reg:x3; val_offset:167901*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167901*0 + 3*671*FLEN/8, x4, x1, x2)

inst_55968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000000fffff; valaddr_reg:x3; val_offset:167904*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167904*0 + 3*672*FLEN/8, x4, x1, x2)

inst_55969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000001fffff; valaddr_reg:x3; val_offset:167907*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167907*0 + 3*673*FLEN/8, x4, x1, x2)

inst_55970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000003fffff; valaddr_reg:x3; val_offset:167910*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167910*0 + 3*674*FLEN/8, x4, x1, x2)

inst_55971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000007fffff; valaddr_reg:x3; val_offset:167913*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167913*0 + 3*675*FLEN/8, x4, x1, x2)

inst_55972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000000ffffff; valaddr_reg:x3; val_offset:167916*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167916*0 + 3*676*FLEN/8, x4, x1, x2)

inst_55973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000001ffffff; valaddr_reg:x3; val_offset:167919*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167919*0 + 3*677*FLEN/8, x4, x1, x2)

inst_55974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000003ffffff; valaddr_reg:x3; val_offset:167922*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167922*0 + 3*678*FLEN/8, x4, x1, x2)

inst_55975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000007ffffff; valaddr_reg:x3; val_offset:167925*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167925*0 + 3*679*FLEN/8, x4, x1, x2)

inst_55976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000000fffffff; valaddr_reg:x3; val_offset:167928*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167928*0 + 3*680*FLEN/8, x4, x1, x2)

inst_55977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000001fffffff; valaddr_reg:x3; val_offset:167931*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167931*0 + 3*681*FLEN/8, x4, x1, x2)

inst_55978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000003fffffff; valaddr_reg:x3; val_offset:167934*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167934*0 + 3*682*FLEN/8, x4, x1, x2)

inst_55979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000007fffffff; valaddr_reg:x3; val_offset:167937*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167937*0 + 3*683*FLEN/8, x4, x1, x2)

inst_55980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500000ffffffff; valaddr_reg:x3; val_offset:167940*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167940*0 + 3*684*FLEN/8, x4, x1, x2)

inst_55981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500001ffffffff; valaddr_reg:x3; val_offset:167943*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167943*0 + 3*685*FLEN/8, x4, x1, x2)

inst_55982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500003ffffffff; valaddr_reg:x3; val_offset:167946*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167946*0 + 3*686*FLEN/8, x4, x1, x2)

inst_55983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500007ffffffff; valaddr_reg:x3; val_offset:167949*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167949*0 + 3*687*FLEN/8, x4, x1, x2)

inst_55984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50000fffffffff; valaddr_reg:x3; val_offset:167952*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167952*0 + 3*688*FLEN/8, x4, x1, x2)

inst_55985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50001fffffffff; valaddr_reg:x3; val_offset:167955*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167955*0 + 3*689*FLEN/8, x4, x1, x2)

inst_55986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50003fffffffff; valaddr_reg:x3; val_offset:167958*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167958*0 + 3*690*FLEN/8, x4, x1, x2)

inst_55987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50007fffffffff; valaddr_reg:x3; val_offset:167961*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167961*0 + 3*691*FLEN/8, x4, x1, x2)

inst_55988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5000ffffffffff; valaddr_reg:x3; val_offset:167964*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167964*0 + 3*692*FLEN/8, x4, x1, x2)

inst_55989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5001ffffffffff; valaddr_reg:x3; val_offset:167967*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167967*0 + 3*693*FLEN/8, x4, x1, x2)

inst_55990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5003ffffffffff; valaddr_reg:x3; val_offset:167970*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167970*0 + 3*694*FLEN/8, x4, x1, x2)

inst_55991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5007ffffffffff; valaddr_reg:x3; val_offset:167973*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167973*0 + 3*695*FLEN/8, x4, x1, x2)

inst_55992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x500fffffffffff; valaddr_reg:x3; val_offset:167976*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167976*0 + 3*696*FLEN/8, x4, x1, x2)

inst_55993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x501fffffffffff; valaddr_reg:x3; val_offset:167979*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167979*0 + 3*697*FLEN/8, x4, x1, x2)

inst_55994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x503fffffffffff; valaddr_reg:x3; val_offset:167982*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167982*0 + 3*698*FLEN/8, x4, x1, x2)

inst_55995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x507fffffffffff; valaddr_reg:x3; val_offset:167985*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167985*0 + 3*699*FLEN/8, x4, x1, x2)

inst_55996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x50ffffffffffff; valaddr_reg:x3; val_offset:167988*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167988*0 + 3*700*FLEN/8, x4, x1, x2)

inst_55997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x51ffffffffffff; valaddr_reg:x3; val_offset:167991*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167991*0 + 3*701*FLEN/8, x4, x1, x2)

inst_55998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x53ffffffffffff; valaddr_reg:x3; val_offset:167994*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167994*0 + 3*702*FLEN/8, x4, x1, x2)

inst_55999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x57ffffffffffff; valaddr_reg:x3; val_offset:167997*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167997*0 + 3*703*FLEN/8, x4, x1, x2)

inst_56000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x58000000000000; valaddr_reg:x3; val_offset:168000*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168000*0 + 3*704*FLEN/8, x4, x1, x2)

inst_56001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5c000000000000; valaddr_reg:x3; val_offset:168003*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168003*0 + 3*705*FLEN/8, x4, x1, x2)

inst_56002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5e000000000000; valaddr_reg:x3; val_offset:168006*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168006*0 + 3*706*FLEN/8, x4, x1, x2)

inst_56003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5f000000000000; valaddr_reg:x3; val_offset:168009*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168009*0 + 3*707*FLEN/8, x4, x1, x2)

inst_56004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5f800000000000; valaddr_reg:x3; val_offset:168012*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168012*0 + 3*708*FLEN/8, x4, x1, x2)

inst_56005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fc00000000000; valaddr_reg:x3; val_offset:168015*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168015*0 + 3*709*FLEN/8, x4, x1, x2)

inst_56006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fe00000000000; valaddr_reg:x3; val_offset:168018*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168018*0 + 3*710*FLEN/8, x4, x1, x2)

inst_56007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ff00000000000; valaddr_reg:x3; val_offset:168021*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168021*0 + 3*711*FLEN/8, x4, x1, x2)

inst_56008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ff80000000000; valaddr_reg:x3; val_offset:168024*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168024*0 + 3*712*FLEN/8, x4, x1, x2)

inst_56009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffc0000000000; valaddr_reg:x3; val_offset:168027*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168027*0 + 3*713*FLEN/8, x4, x1, x2)

inst_56010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffe0000000000; valaddr_reg:x3; val_offset:168030*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168030*0 + 3*714*FLEN/8, x4, x1, x2)

inst_56011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fff0000000000; valaddr_reg:x3; val_offset:168033*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168033*0 + 3*715*FLEN/8, x4, x1, x2)

inst_56012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fff8000000000; valaddr_reg:x3; val_offset:168036*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168036*0 + 3*716*FLEN/8, x4, x1, x2)

inst_56013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffc000000000; valaddr_reg:x3; val_offset:168039*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168039*0 + 3*717*FLEN/8, x4, x1, x2)

inst_56014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffe000000000; valaddr_reg:x3; val_offset:168042*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168042*0 + 3*718*FLEN/8, x4, x1, x2)

inst_56015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffff000000000; valaddr_reg:x3; val_offset:168045*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168045*0 + 3*719*FLEN/8, x4, x1, x2)

inst_56016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffff800000000; valaddr_reg:x3; val_offset:168048*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168048*0 + 3*720*FLEN/8, x4, x1, x2)

inst_56017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffc00000000; valaddr_reg:x3; val_offset:168051*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168051*0 + 3*721*FLEN/8, x4, x1, x2)

inst_56018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffe00000000; valaddr_reg:x3; val_offset:168054*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168054*0 + 3*722*FLEN/8, x4, x1, x2)

inst_56019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffff00000000; valaddr_reg:x3; val_offset:168057*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168057*0 + 3*723*FLEN/8, x4, x1, x2)

inst_56020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffff80000000; valaddr_reg:x3; val_offset:168060*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168060*0 + 3*724*FLEN/8, x4, x1, x2)

inst_56021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffc0000000; valaddr_reg:x3; val_offset:168063*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168063*0 + 3*725*FLEN/8, x4, x1, x2)

inst_56022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffe0000000; valaddr_reg:x3; val_offset:168066*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168066*0 + 3*726*FLEN/8, x4, x1, x2)

inst_56023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffff0000000; valaddr_reg:x3; val_offset:168069*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168069*0 + 3*727*FLEN/8, x4, x1, x2)

inst_56024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffff8000000; valaddr_reg:x3; val_offset:168072*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168072*0 + 3*728*FLEN/8, x4, x1, x2)

inst_56025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffc000000; valaddr_reg:x3; val_offset:168075*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168075*0 + 3*729*FLEN/8, x4, x1, x2)

inst_56026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffe000000; valaddr_reg:x3; val_offset:168078*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168078*0 + 3*730*FLEN/8, x4, x1, x2)

inst_56027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffff000000; valaddr_reg:x3; val_offset:168081*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168081*0 + 3*731*FLEN/8, x4, x1, x2)

inst_56028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffff800000; valaddr_reg:x3; val_offset:168084*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168084*0 + 3*732*FLEN/8, x4, x1, x2)

inst_56029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffc00000; valaddr_reg:x3; val_offset:168087*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168087*0 + 3*733*FLEN/8, x4, x1, x2)

inst_56030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffe00000; valaddr_reg:x3; val_offset:168090*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168090*0 + 3*734*FLEN/8, x4, x1, x2)

inst_56031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffff00000; valaddr_reg:x3; val_offset:168093*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168093*0 + 3*735*FLEN/8, x4, x1, x2)

inst_56032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffff80000; valaddr_reg:x3; val_offset:168096*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168096*0 + 3*736*FLEN/8, x4, x1, x2)

inst_56033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffc0000; valaddr_reg:x3; val_offset:168099*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168099*0 + 3*737*FLEN/8, x4, x1, x2)

inst_56034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffe0000; valaddr_reg:x3; val_offset:168102*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168102*0 + 3*738*FLEN/8, x4, x1, x2)

inst_56035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffff0000; valaddr_reg:x3; val_offset:168105*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168105*0 + 3*739*FLEN/8, x4, x1, x2)

inst_56036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffff8000; valaddr_reg:x3; val_offset:168108*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168108*0 + 3*740*FLEN/8, x4, x1, x2)

inst_56037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffc000; valaddr_reg:x3; val_offset:168111*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168111*0 + 3*741*FLEN/8, x4, x1, x2)

inst_56038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffe000; valaddr_reg:x3; val_offset:168114*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168114*0 + 3*742*FLEN/8, x4, x1, x2)

inst_56039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffff000; valaddr_reg:x3; val_offset:168117*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168117*0 + 3*743*FLEN/8, x4, x1, x2)

inst_56040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffff800; valaddr_reg:x3; val_offset:168120*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168120*0 + 3*744*FLEN/8, x4, x1, x2)

inst_56041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffffc00; valaddr_reg:x3; val_offset:168123*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168123*0 + 3*745*FLEN/8, x4, x1, x2)

inst_56042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffffe00; valaddr_reg:x3; val_offset:168126*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168126*0 + 3*746*FLEN/8, x4, x1, x2)

inst_56043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffff00; valaddr_reg:x3; val_offset:168129*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168129*0 + 3*747*FLEN/8, x4, x1, x2)

inst_56044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffff80; valaddr_reg:x3; val_offset:168132*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168132*0 + 3*748*FLEN/8, x4, x1, x2)

inst_56045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffffc0; valaddr_reg:x3; val_offset:168135*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168135*0 + 3*749*FLEN/8, x4, x1, x2)

inst_56046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffffe0; valaddr_reg:x3; val_offset:168138*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168138*0 + 3*750*FLEN/8, x4, x1, x2)

inst_56047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffffff0; valaddr_reg:x3; val_offset:168141*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168141*0 + 3*751*FLEN/8, x4, x1, x2)

inst_56048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffffff8; valaddr_reg:x3; val_offset:168144*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168144*0 + 3*752*FLEN/8, x4, x1, x2)

inst_56049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffffffc; valaddr_reg:x3; val_offset:168147*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168147*0 + 3*753*FLEN/8, x4, x1, x2)

inst_56050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5ffffffffffffe; valaddr_reg:x3; val_offset:168150*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168150*0 + 3*754*FLEN/8, x4, x1, x2)

inst_56051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12ef1f43e4feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12ef1f43e4feb; op2val:0x0;
op3val:0x5fffffffffffff; valaddr_reg:x3; val_offset:168153*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168153*0 + 3*755*FLEN/8, x4, x1, x2)

inst_56052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:168156*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168156*0 + 3*756*FLEN/8, x4, x1, x2)

inst_56053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:168159*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168159*0 + 3*757*FLEN/8, x4, x1, x2)

inst_56054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:168162*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168162*0 + 3*758*FLEN/8, x4, x1, x2)

inst_56055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:168165*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168165*0 + 3*759*FLEN/8, x4, x1, x2)

inst_56056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:168168*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168168*0 + 3*760*FLEN/8, x4, x1, x2)

inst_56057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:168171*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168171*0 + 3*761*FLEN/8, x4, x1, x2)

inst_56058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:168174*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168174*0 + 3*762*FLEN/8, x4, x1, x2)

inst_56059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:168177*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168177*0 + 3*763*FLEN/8, x4, x1, x2)

inst_56060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:168180*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168180*0 + 3*764*FLEN/8, x4, x1, x2)

inst_56061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:168183*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168183*0 + 3*765*FLEN/8, x4, x1, x2)

inst_56062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:168186*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168186*0 + 3*766*FLEN/8, x4, x1, x2)

inst_56063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13811c0cc2735 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13811c0cc2735; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:168189*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168189*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895296,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895297,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895299,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895303,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895311,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895327,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895359,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895423,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895551,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895807,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995896319,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995897343,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995899391,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995903487,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995911679,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995928063,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995960831,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996026367,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996157439,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996419583,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996943871,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580997992447,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581000089599,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581004283903,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581012672511,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581029449727,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581063004159,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581130113023,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581264330751,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581532766207,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683582069637119,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683583143378943,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683585290862591,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683589585829887,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683598175764479,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683615355633663,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683649715372031,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683718434848767,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683855873802239,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684130751709183,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684680507523071,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229685780019150847,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229687979042406399,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229692377088917503,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229701173181939711,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229718765367984127,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229753949740072959,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229824318484250623,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229965055972605951,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230246530949316607,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230809480902737919,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580543,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580544,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233061280716423168,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233624230669844480,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233905705646555136,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234046443134910464,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234116811879088128,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234151996251176960,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234169588437221376,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234178384530243584,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234182782576754688,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234184981600010240,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186081111638016,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186630867451904,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186905745358848,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187043184312320,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187111903789056,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187146263527424,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187163443396608,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187172033331200,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187176328298496,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187178475782144,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187179549523968,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180086394880,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180354830336,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180489048064,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180556156928,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180589711360,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180606488576,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180614877184,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180619071488,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180621168640,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622217216,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622741504,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623003648,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623134720,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623200256,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623233024,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623249408,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623257600,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623261696,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623263744,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623264768,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265280,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265536,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265664,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265728,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265760,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265776,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265784,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265788,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265790,64,FLEN)
NAN_BOXED(6890814165932443006,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265791,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389459968,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389459969,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389459971,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389459975,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389459983,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389459999,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389460031,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389460095,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389460223,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389460479,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389460991,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389462015,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389464063,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389468159,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389476351,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389492735,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389525503,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389591039,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389722111,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424389984255,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424390508543,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424391557119,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424393654271,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424397848575,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424406237183,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424423014399,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424456568831,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424523677695,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424657895423,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628424926330879,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628425463201791,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628426536943615,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628428684427263,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628432979394559,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628441569329151,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628458749198335,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628493108936703,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628561828413439,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628699267366911,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539628974145273855,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539629523901087743,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539630623412715519,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539632822435971071,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539637220482482175,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539646016575504383,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539663608761548799,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539698793133637631,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539769161877815295,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4539909899366170623,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4540191374342881279,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4540754324296302591,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4541880224203145215,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4541880224203145216,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4543006124109987840,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4543569074063409152,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4543850549040119808,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4543991286528475136,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544061655272652800,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544096839644741632,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544114431830786048,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544123227923808256,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544127625970319360,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544129824993574912,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544130924505202688,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544131474261016576,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544131749138923520,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544131886577876992,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544131955297353728,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544131989657092096,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132006836961280,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132015426895872,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132019721863168,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132021869346816,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132022943088640,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132023479959552,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132023748395008,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132023882612736,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132023949721600,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132023983276032,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024000053248,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024008441856,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024012636160,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024014733312,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024015781888,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016306176,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016568320,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016699392,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016764928,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016797696,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016814080,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016822272,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016826368,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016828416,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016829440,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016829952,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830208,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830336,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830400,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830432,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830448,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830456,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830460,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830462,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4544132024016830463,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890816324456629456,64,FLEN)
NAN_BOXED(2323279271956368247,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122112,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122113,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122115,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122119,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122127,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122143,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122175,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122239,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122367,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804122623,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804123135,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804124159,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804126207,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804130303,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804138495,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804154879,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804187647,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804253183,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804384255,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837804646399,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837805170687,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837806219263,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837808316415,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837812510719,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837820899327,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837837676543,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837871230975,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498837938339839,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498838072557567,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498838340993023,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498838877863935,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498839951605759,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498842099089407,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498846394056703,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498854983991295,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498872163860479,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498906523598847,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377498975243075583,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377499112682029055,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377499387559935999,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377499937315749887,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377501036827377663,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377503235850633215,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377507633897144319,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377516429990166527,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377534022176210943,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377569206548299775,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377639575292477439,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4377780312780832767,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4378061787757543423,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4378624737710964735,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4379750637617807359,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4379750637617807360,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4380876537524649984,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381439487478071296,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381720962454781952,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381861699943137280,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381932068687314944,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381967253059403776,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381984845245448192,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381993641338470400,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4381998039384981504,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382000238408237056,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382001337919864832,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382001887675678720,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002162553585664,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002299992539136,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002368712015872,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002403071754240,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002420251623424,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002428841558016,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002433136525312,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002435284008960,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002436357750784,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002436894621696,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437163057152,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437297274880,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437364383744,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437397938176,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437414715392,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437423104000,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437427298304,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437429395456,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437430444032,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437430968320,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431230464,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431361536,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431427072,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431459840,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431476224,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431484416,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431488512,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431490560,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431491584,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492096,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492352,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492480,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492544,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492576,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492592,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492600,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492604,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492606,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4382002437431492607,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890816647422025837,64,FLEN)
NAN_BOXED(2323278706321786066,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185728,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185729,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185731,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185735,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185743,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185759,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185791,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185855,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185983,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186239,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186751,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402187775,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402189823,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402193919,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402202111,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402218495,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402251263,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402316799,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402447871,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402710015,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029403234303,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029404282879,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029406380031,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029410574335,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029418962943,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029435740159,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029469294591,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029536403455,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029670621183,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029939056639,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444030475927551,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444031549669375,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444033697153023,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444037992120319,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444046582054911,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444063761924095,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444098121662463,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444166841139199,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444304280092671,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444579157999615,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313445128913813503,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313446228425441279,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313448427448696831,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313452825495207935,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313461621588230143,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313479213774274559,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313514398146363391,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313584766890541055,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313725504378896383,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314006979355607039,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314569929309028351,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870975,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870976,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9316821729122713600,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317384679076134912,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317666154052845568,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317806891541200896,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317877260285378560,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317912444657467392,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317930036843511808,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317938832936534016,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317943230983045120,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317945430006300672,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317946529517928448,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947079273742336,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947354151649280,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947491590602752,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947560310079488,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947594669817856,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947611849687040,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947620439621632,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947624734588928,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947626882072576,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947627955814400,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628492685312,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628761120768,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628895338496,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628962447360,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628996001792,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629012779008,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629021167616,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629025361920,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629027459072,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629028507648,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029031936,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029294080,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029425152,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029490688,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029523456,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029539840,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029548032,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029552128,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029554176,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555200,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555712,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555968,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556096,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556160,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556192,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556208,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556216,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556220,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556222,64,FLEN)
NAN_BOXED(6890828257359232682,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556223,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6890835335760202867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852480,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852481,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852483,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852487,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852495,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852511,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852543,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852607,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852735,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852991,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136853503,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136854527,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136856575,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136860671,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136868863,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136885247,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136918015,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136983551,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137114623,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137376767,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137901055,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998138949631,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998141046783,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998145241087,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998153629695,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998170406911,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998203961343,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998271070207,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998405287935,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998673723391,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517999210594303,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518000284336127,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518002431819775,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518006726787071,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518015316721663,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518032496590847,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518066856329215,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518135575805951,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518273014759423,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518547892666367,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22519097648480255,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22520197160108031,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22522396183363583,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22526794229874687,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22535590322896895,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22553182508941311,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22588366881030143,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22658735625207807,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22799473113563135,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23080948090273791,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23643898043695103,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537727,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537728,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(25895697857380352,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26458647810801664,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26740122787512320,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26880860275867648,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26951229020045312,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26986413392134144,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27004005578178560,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27012801671200768,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27017199717711872,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27019398740967424,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27020498252595200,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021048008409088,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021322886316032,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021460325269504,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021529044746240,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021563404484608,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021580584353792,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021589174288384,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021593469255680,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021595616739328,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021596690481152,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597227352064,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597495787520,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597630005248,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597697114112,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597730668544,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597747445760,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597755834368,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597760028672,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597762125824,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763174400,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763698688,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763960832,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764091904,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764157440,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764190208,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764206592,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764214784,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764218880,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764220928,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764221952,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222464,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222720,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222848,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222912,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222944,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222960,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222968,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222972,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222974,64,FLEN)
NAN_BOXED(6890840521573289963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222975,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890850553753773877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
