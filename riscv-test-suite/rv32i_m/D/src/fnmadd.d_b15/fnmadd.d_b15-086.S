
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_65280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:195840*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195840*0 + 3*0*FLEN/8, x4, x1, x2)

inst_65281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:195843*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195843*0 + 3*1*FLEN/8, x4, x1, x2)

inst_65282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:195846*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195846*0 + 3*2*FLEN/8, x4, x1, x2)

inst_65283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:195849*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195849*0 + 3*3*FLEN/8, x4, x1, x2)

inst_65284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:195852*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195852*0 + 3*4*FLEN/8, x4, x1, x2)

inst_65285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:195855*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195855*0 + 3*5*FLEN/8, x4, x1, x2)

inst_65286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:195858*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195858*0 + 3*6*FLEN/8, x4, x1, x2)

inst_65287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:195861*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195861*0 + 3*7*FLEN/8, x4, x1, x2)

inst_65288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:195864*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195864*0 + 3*8*FLEN/8, x4, x1, x2)

inst_65289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:195867*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195867*0 + 3*9*FLEN/8, x4, x1, x2)

inst_65290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:195870*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195870*0 + 3*10*FLEN/8, x4, x1, x2)

inst_65291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:195873*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195873*0 + 3*11*FLEN/8, x4, x1, x2)

inst_65292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:195876*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195876*0 + 3*12*FLEN/8, x4, x1, x2)

inst_65293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:195879*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195879*0 + 3*13*FLEN/8, x4, x1, x2)

inst_65294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:195882*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195882*0 + 3*14*FLEN/8, x4, x1, x2)

inst_65295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:195885*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195885*0 + 3*15*FLEN/8, x4, x1, x2)

inst_65296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:195888*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195888*0 + 3*16*FLEN/8, x4, x1, x2)

inst_65297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:195891*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195891*0 + 3*17*FLEN/8, x4, x1, x2)

inst_65298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:195894*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195894*0 + 3*18*FLEN/8, x4, x1, x2)

inst_65299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:195897*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195897*0 + 3*19*FLEN/8, x4, x1, x2)

inst_65300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:195900*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195900*0 + 3*20*FLEN/8, x4, x1, x2)

inst_65301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:195903*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195903*0 + 3*21*FLEN/8, x4, x1, x2)

inst_65302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:195906*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195906*0 + 3*22*FLEN/8, x4, x1, x2)

inst_65303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:195909*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195909*0 + 3*23*FLEN/8, x4, x1, x2)

inst_65304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:195912*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195912*0 + 3*24*FLEN/8, x4, x1, x2)

inst_65305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:195915*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195915*0 + 3*25*FLEN/8, x4, x1, x2)

inst_65306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:195918*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195918*0 + 3*26*FLEN/8, x4, x1, x2)

inst_65307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:195921*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195921*0 + 3*27*FLEN/8, x4, x1, x2)

inst_65308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:195924*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195924*0 + 3*28*FLEN/8, x4, x1, x2)

inst_65309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:195927*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195927*0 + 3*29*FLEN/8, x4, x1, x2)

inst_65310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:195930*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195930*0 + 3*30*FLEN/8, x4, x1, x2)

inst_65311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:195933*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195933*0 + 3*31*FLEN/8, x4, x1, x2)

inst_65312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:195936*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195936*0 + 3*32*FLEN/8, x4, x1, x2)

inst_65313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:195939*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195939*0 + 3*33*FLEN/8, x4, x1, x2)

inst_65314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:195942*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195942*0 + 3*34*FLEN/8, x4, x1, x2)

inst_65315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:195945*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195945*0 + 3*35*FLEN/8, x4, x1, x2)

inst_65316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:195948*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195948*0 + 3*36*FLEN/8, x4, x1, x2)

inst_65317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:195951*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195951*0 + 3*37*FLEN/8, x4, x1, x2)

inst_65318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:195954*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195954*0 + 3*38*FLEN/8, x4, x1, x2)

inst_65319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:195957*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195957*0 + 3*39*FLEN/8, x4, x1, x2)

inst_65320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:195960*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195960*0 + 3*40*FLEN/8, x4, x1, x2)

inst_65321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:195963*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195963*0 + 3*41*FLEN/8, x4, x1, x2)

inst_65322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:195966*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195966*0 + 3*42*FLEN/8, x4, x1, x2)

inst_65323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:195969*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195969*0 + 3*43*FLEN/8, x4, x1, x2)

inst_65324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:195972*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195972*0 + 3*44*FLEN/8, x4, x1, x2)

inst_65325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:195975*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195975*0 + 3*45*FLEN/8, x4, x1, x2)

inst_65326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:195978*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195978*0 + 3*46*FLEN/8, x4, x1, x2)

inst_65327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:195981*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195981*0 + 3*47*FLEN/8, x4, x1, x2)

inst_65328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:195984*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195984*0 + 3*48*FLEN/8, x4, x1, x2)

inst_65329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:195987*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195987*0 + 3*49*FLEN/8, x4, x1, x2)

inst_65330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:195990*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195990*0 + 3*50*FLEN/8, x4, x1, x2)

inst_65331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:195993*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195993*0 + 3*51*FLEN/8, x4, x1, x2)

inst_65332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:195996*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195996*0 + 3*52*FLEN/8, x4, x1, x2)

inst_65333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:195999*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195999*0 + 3*53*FLEN/8, x4, x1, x2)

inst_65334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:196002*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196002*0 + 3*54*FLEN/8, x4, x1, x2)

inst_65335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:196005*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196005*0 + 3*55*FLEN/8, x4, x1, x2)

inst_65336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:196008*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196008*0 + 3*56*FLEN/8, x4, x1, x2)

inst_65337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:196011*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196011*0 + 3*57*FLEN/8, x4, x1, x2)

inst_65338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:196014*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196014*0 + 3*58*FLEN/8, x4, x1, x2)

inst_65339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:196017*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196017*0 + 3*59*FLEN/8, x4, x1, x2)

inst_65340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:196020*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196020*0 + 3*60*FLEN/8, x4, x1, x2)

inst_65341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:196023*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196023*0 + 3*61*FLEN/8, x4, x1, x2)

inst_65342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:196026*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196026*0 + 3*62*FLEN/8, x4, x1, x2)

inst_65343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:196029*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196029*0 + 3*63*FLEN/8, x4, x1, x2)

inst_65344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:196032*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196032*0 + 3*64*FLEN/8, x4, x1, x2)

inst_65345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:196035*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196035*0 + 3*65*FLEN/8, x4, x1, x2)

inst_65346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:196038*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196038*0 + 3*66*FLEN/8, x4, x1, x2)

inst_65347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:196041*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196041*0 + 3*67*FLEN/8, x4, x1, x2)

inst_65348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:196044*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196044*0 + 3*68*FLEN/8, x4, x1, x2)

inst_65349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:196047*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196047*0 + 3*69*FLEN/8, x4, x1, x2)

inst_65350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:196050*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196050*0 + 3*70*FLEN/8, x4, x1, x2)

inst_65351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:196053*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196053*0 + 3*71*FLEN/8, x4, x1, x2)

inst_65352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:196056*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196056*0 + 3*72*FLEN/8, x4, x1, x2)

inst_65353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:196059*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196059*0 + 3*73*FLEN/8, x4, x1, x2)

inst_65354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:196062*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196062*0 + 3*74*FLEN/8, x4, x1, x2)

inst_65355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:196065*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196065*0 + 3*75*FLEN/8, x4, x1, x2)

inst_65356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:196068*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196068*0 + 3*76*FLEN/8, x4, x1, x2)

inst_65357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:196071*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196071*0 + 3*77*FLEN/8, x4, x1, x2)

inst_65358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:196074*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196074*0 + 3*78*FLEN/8, x4, x1, x2)

inst_65359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:196077*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196077*0 + 3*79*FLEN/8, x4, x1, x2)

inst_65360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:196080*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196080*0 + 3*80*FLEN/8, x4, x1, x2)

inst_65361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:196083*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196083*0 + 3*81*FLEN/8, x4, x1, x2)

inst_65362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:196086*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196086*0 + 3*82*FLEN/8, x4, x1, x2)

inst_65363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:196089*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196089*0 + 3*83*FLEN/8, x4, x1, x2)

inst_65364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:196092*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196092*0 + 3*84*FLEN/8, x4, x1, x2)

inst_65365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:196095*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196095*0 + 3*85*FLEN/8, x4, x1, x2)

inst_65366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:196098*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196098*0 + 3*86*FLEN/8, x4, x1, x2)

inst_65367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:196101*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196101*0 + 3*87*FLEN/8, x4, x1, x2)

inst_65368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:196104*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196104*0 + 3*88*FLEN/8, x4, x1, x2)

inst_65369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:196107*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196107*0 + 3*89*FLEN/8, x4, x1, x2)

inst_65370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:196110*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196110*0 + 3*90*FLEN/8, x4, x1, x2)

inst_65371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:196113*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196113*0 + 3*91*FLEN/8, x4, x1, x2)

inst_65372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:196116*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196116*0 + 3*92*FLEN/8, x4, x1, x2)

inst_65373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:196119*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196119*0 + 3*93*FLEN/8, x4, x1, x2)

inst_65374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:196122*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196122*0 + 3*94*FLEN/8, x4, x1, x2)

inst_65375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:196125*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196125*0 + 3*95*FLEN/8, x4, x1, x2)

inst_65376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:196128*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196128*0 + 3*96*FLEN/8, x4, x1, x2)

inst_65377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:196131*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196131*0 + 3*97*FLEN/8, x4, x1, x2)

inst_65378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:196134*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196134*0 + 3*98*FLEN/8, x4, x1, x2)

inst_65379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:196137*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196137*0 + 3*99*FLEN/8, x4, x1, x2)

inst_65380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:196140*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196140*0 + 3*100*FLEN/8, x4, x1, x2)

inst_65381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:196143*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196143*0 + 3*101*FLEN/8, x4, x1, x2)

inst_65382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:196146*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196146*0 + 3*102*FLEN/8, x4, x1, x2)

inst_65383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:196149*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196149*0 + 3*103*FLEN/8, x4, x1, x2)

inst_65384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:196152*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196152*0 + 3*104*FLEN/8, x4, x1, x2)

inst_65385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:196155*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196155*0 + 3*105*FLEN/8, x4, x1, x2)

inst_65386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000000000; valaddr_reg:x3; val_offset:196158*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196158*0 + 3*106*FLEN/8, x4, x1, x2)

inst_65387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000000001; valaddr_reg:x3; val_offset:196161*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196161*0 + 3*107*FLEN/8, x4, x1, x2)

inst_65388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000000003; valaddr_reg:x3; val_offset:196164*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196164*0 + 3*108*FLEN/8, x4, x1, x2)

inst_65389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000000007; valaddr_reg:x3; val_offset:196167*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196167*0 + 3*109*FLEN/8, x4, x1, x2)

inst_65390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000000000f; valaddr_reg:x3; val_offset:196170*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196170*0 + 3*110*FLEN/8, x4, x1, x2)

inst_65391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000000001f; valaddr_reg:x3; val_offset:196173*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196173*0 + 3*111*FLEN/8, x4, x1, x2)

inst_65392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000000003f; valaddr_reg:x3; val_offset:196176*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196176*0 + 3*112*FLEN/8, x4, x1, x2)

inst_65393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000000007f; valaddr_reg:x3; val_offset:196179*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196179*0 + 3*113*FLEN/8, x4, x1, x2)

inst_65394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000000000ff; valaddr_reg:x3; val_offset:196182*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196182*0 + 3*114*FLEN/8, x4, x1, x2)

inst_65395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000000001ff; valaddr_reg:x3; val_offset:196185*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196185*0 + 3*115*FLEN/8, x4, x1, x2)

inst_65396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000000003ff; valaddr_reg:x3; val_offset:196188*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196188*0 + 3*116*FLEN/8, x4, x1, x2)

inst_65397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000000007ff; valaddr_reg:x3; val_offset:196191*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196191*0 + 3*117*FLEN/8, x4, x1, x2)

inst_65398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000000fff; valaddr_reg:x3; val_offset:196194*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196194*0 + 3*118*FLEN/8, x4, x1, x2)

inst_65399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000001fff; valaddr_reg:x3; val_offset:196197*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196197*0 + 3*119*FLEN/8, x4, x1, x2)

inst_65400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000003fff; valaddr_reg:x3; val_offset:196200*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196200*0 + 3*120*FLEN/8, x4, x1, x2)

inst_65401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000007fff; valaddr_reg:x3; val_offset:196203*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196203*0 + 3*121*FLEN/8, x4, x1, x2)

inst_65402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000000ffff; valaddr_reg:x3; val_offset:196206*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196206*0 + 3*122*FLEN/8, x4, x1, x2)

inst_65403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000001ffff; valaddr_reg:x3; val_offset:196209*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196209*0 + 3*123*FLEN/8, x4, x1, x2)

inst_65404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000003ffff; valaddr_reg:x3; val_offset:196212*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196212*0 + 3*124*FLEN/8, x4, x1, x2)

inst_65405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000007ffff; valaddr_reg:x3; val_offset:196215*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196215*0 + 3*125*FLEN/8, x4, x1, x2)

inst_65406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000000fffff; valaddr_reg:x3; val_offset:196218*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196218*0 + 3*126*FLEN/8, x4, x1, x2)

inst_65407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000001fffff; valaddr_reg:x3; val_offset:196221*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196221*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_65408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000003fffff; valaddr_reg:x3; val_offset:196224*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196224*0 + 3*128*FLEN/8, x4, x1, x2)

inst_65409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000007fffff; valaddr_reg:x3; val_offset:196227*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196227*0 + 3*129*FLEN/8, x4, x1, x2)

inst_65410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000000ffffff; valaddr_reg:x3; val_offset:196230*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196230*0 + 3*130*FLEN/8, x4, x1, x2)

inst_65411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000001ffffff; valaddr_reg:x3; val_offset:196233*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196233*0 + 3*131*FLEN/8, x4, x1, x2)

inst_65412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000003ffffff; valaddr_reg:x3; val_offset:196236*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196236*0 + 3*132*FLEN/8, x4, x1, x2)

inst_65413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000007ffffff; valaddr_reg:x3; val_offset:196239*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196239*0 + 3*133*FLEN/8, x4, x1, x2)

inst_65414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000000fffffff; valaddr_reg:x3; val_offset:196242*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196242*0 + 3*134*FLEN/8, x4, x1, x2)

inst_65415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000001fffffff; valaddr_reg:x3; val_offset:196245*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196245*0 + 3*135*FLEN/8, x4, x1, x2)

inst_65416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000003fffffff; valaddr_reg:x3; val_offset:196248*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196248*0 + 3*136*FLEN/8, x4, x1, x2)

inst_65417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000007fffffff; valaddr_reg:x3; val_offset:196251*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196251*0 + 3*137*FLEN/8, x4, x1, x2)

inst_65418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00000ffffffff; valaddr_reg:x3; val_offset:196254*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196254*0 + 3*138*FLEN/8, x4, x1, x2)

inst_65419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00001ffffffff; valaddr_reg:x3; val_offset:196257*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196257*0 + 3*139*FLEN/8, x4, x1, x2)

inst_65420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00003ffffffff; valaddr_reg:x3; val_offset:196260*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196260*0 + 3*140*FLEN/8, x4, x1, x2)

inst_65421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00007ffffffff; valaddr_reg:x3; val_offset:196263*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196263*0 + 3*141*FLEN/8, x4, x1, x2)

inst_65422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0000fffffffff; valaddr_reg:x3; val_offset:196266*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196266*0 + 3*142*FLEN/8, x4, x1, x2)

inst_65423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0001fffffffff; valaddr_reg:x3; val_offset:196269*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196269*0 + 3*143*FLEN/8, x4, x1, x2)

inst_65424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0003fffffffff; valaddr_reg:x3; val_offset:196272*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196272*0 + 3*144*FLEN/8, x4, x1, x2)

inst_65425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0007fffffffff; valaddr_reg:x3; val_offset:196275*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196275*0 + 3*145*FLEN/8, x4, x1, x2)

inst_65426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f000ffffffffff; valaddr_reg:x3; val_offset:196278*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196278*0 + 3*146*FLEN/8, x4, x1, x2)

inst_65427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f001ffffffffff; valaddr_reg:x3; val_offset:196281*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196281*0 + 3*147*FLEN/8, x4, x1, x2)

inst_65428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f003ffffffffff; valaddr_reg:x3; val_offset:196284*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196284*0 + 3*148*FLEN/8, x4, x1, x2)

inst_65429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f007ffffffffff; valaddr_reg:x3; val_offset:196287*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196287*0 + 3*149*FLEN/8, x4, x1, x2)

inst_65430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f00fffffffffff; valaddr_reg:x3; val_offset:196290*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196290*0 + 3*150*FLEN/8, x4, x1, x2)

inst_65431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f01fffffffffff; valaddr_reg:x3; val_offset:196293*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196293*0 + 3*151*FLEN/8, x4, x1, x2)

inst_65432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f03fffffffffff; valaddr_reg:x3; val_offset:196296*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196296*0 + 3*152*FLEN/8, x4, x1, x2)

inst_65433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f07fffffffffff; valaddr_reg:x3; val_offset:196299*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196299*0 + 3*153*FLEN/8, x4, x1, x2)

inst_65434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f0ffffffffffff; valaddr_reg:x3; val_offset:196302*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196302*0 + 3*154*FLEN/8, x4, x1, x2)

inst_65435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f1ffffffffffff; valaddr_reg:x3; val_offset:196305*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196305*0 + 3*155*FLEN/8, x4, x1, x2)

inst_65436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f3ffffffffffff; valaddr_reg:x3; val_offset:196308*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196308*0 + 3*156*FLEN/8, x4, x1, x2)

inst_65437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f7ffffffffffff; valaddr_reg:x3; val_offset:196311*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196311*0 + 3*157*FLEN/8, x4, x1, x2)

inst_65438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2f8000000000000; valaddr_reg:x3; val_offset:196314*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196314*0 + 3*158*FLEN/8, x4, x1, x2)

inst_65439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fc000000000000; valaddr_reg:x3; val_offset:196317*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196317*0 + 3*159*FLEN/8, x4, x1, x2)

inst_65440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fe000000000000; valaddr_reg:x3; val_offset:196320*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196320*0 + 3*160*FLEN/8, x4, x1, x2)

inst_65441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ff000000000000; valaddr_reg:x3; val_offset:196323*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196323*0 + 3*161*FLEN/8, x4, x1, x2)

inst_65442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ff800000000000; valaddr_reg:x3; val_offset:196326*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196326*0 + 3*162*FLEN/8, x4, x1, x2)

inst_65443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffc00000000000; valaddr_reg:x3; val_offset:196329*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196329*0 + 3*163*FLEN/8, x4, x1, x2)

inst_65444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffe00000000000; valaddr_reg:x3; val_offset:196332*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196332*0 + 3*164*FLEN/8, x4, x1, x2)

inst_65445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fff00000000000; valaddr_reg:x3; val_offset:196335*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196335*0 + 3*165*FLEN/8, x4, x1, x2)

inst_65446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fff80000000000; valaddr_reg:x3; val_offset:196338*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196338*0 + 3*166*FLEN/8, x4, x1, x2)

inst_65447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffc0000000000; valaddr_reg:x3; val_offset:196341*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196341*0 + 3*167*FLEN/8, x4, x1, x2)

inst_65448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffe0000000000; valaddr_reg:x3; val_offset:196344*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196344*0 + 3*168*FLEN/8, x4, x1, x2)

inst_65449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffff0000000000; valaddr_reg:x3; val_offset:196347*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196347*0 + 3*169*FLEN/8, x4, x1, x2)

inst_65450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffff8000000000; valaddr_reg:x3; val_offset:196350*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196350*0 + 3*170*FLEN/8, x4, x1, x2)

inst_65451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffc000000000; valaddr_reg:x3; val_offset:196353*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196353*0 + 3*171*FLEN/8, x4, x1, x2)

inst_65452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffe000000000; valaddr_reg:x3; val_offset:196356*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196356*0 + 3*172*FLEN/8, x4, x1, x2)

inst_65453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffff000000000; valaddr_reg:x3; val_offset:196359*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196359*0 + 3*173*FLEN/8, x4, x1, x2)

inst_65454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffff800000000; valaddr_reg:x3; val_offset:196362*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196362*0 + 3*174*FLEN/8, x4, x1, x2)

inst_65455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffc00000000; valaddr_reg:x3; val_offset:196365*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196365*0 + 3*175*FLEN/8, x4, x1, x2)

inst_65456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffe00000000; valaddr_reg:x3; val_offset:196368*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196368*0 + 3*176*FLEN/8, x4, x1, x2)

inst_65457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffff00000000; valaddr_reg:x3; val_offset:196371*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196371*0 + 3*177*FLEN/8, x4, x1, x2)

inst_65458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffff80000000; valaddr_reg:x3; val_offset:196374*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196374*0 + 3*178*FLEN/8, x4, x1, x2)

inst_65459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffc0000000; valaddr_reg:x3; val_offset:196377*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196377*0 + 3*179*FLEN/8, x4, x1, x2)

inst_65460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffe0000000; valaddr_reg:x3; val_offset:196380*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196380*0 + 3*180*FLEN/8, x4, x1, x2)

inst_65461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffff0000000; valaddr_reg:x3; val_offset:196383*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196383*0 + 3*181*FLEN/8, x4, x1, x2)

inst_65462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffff8000000; valaddr_reg:x3; val_offset:196386*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196386*0 + 3*182*FLEN/8, x4, x1, x2)

inst_65463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffc000000; valaddr_reg:x3; val_offset:196389*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196389*0 + 3*183*FLEN/8, x4, x1, x2)

inst_65464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffe000000; valaddr_reg:x3; val_offset:196392*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196392*0 + 3*184*FLEN/8, x4, x1, x2)

inst_65465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffff000000; valaddr_reg:x3; val_offset:196395*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196395*0 + 3*185*FLEN/8, x4, x1, x2)

inst_65466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffff800000; valaddr_reg:x3; val_offset:196398*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196398*0 + 3*186*FLEN/8, x4, x1, x2)

inst_65467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffc00000; valaddr_reg:x3; val_offset:196401*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196401*0 + 3*187*FLEN/8, x4, x1, x2)

inst_65468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffe00000; valaddr_reg:x3; val_offset:196404*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196404*0 + 3*188*FLEN/8, x4, x1, x2)

inst_65469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffff00000; valaddr_reg:x3; val_offset:196407*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196407*0 + 3*189*FLEN/8, x4, x1, x2)

inst_65470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffff80000; valaddr_reg:x3; val_offset:196410*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196410*0 + 3*190*FLEN/8, x4, x1, x2)

inst_65471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffc0000; valaddr_reg:x3; val_offset:196413*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196413*0 + 3*191*FLEN/8, x4, x1, x2)

inst_65472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffe0000; valaddr_reg:x3; val_offset:196416*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196416*0 + 3*192*FLEN/8, x4, x1, x2)

inst_65473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffff0000; valaddr_reg:x3; val_offset:196419*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196419*0 + 3*193*FLEN/8, x4, x1, x2)

inst_65474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffff8000; valaddr_reg:x3; val_offset:196422*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196422*0 + 3*194*FLEN/8, x4, x1, x2)

inst_65475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffc000; valaddr_reg:x3; val_offset:196425*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196425*0 + 3*195*FLEN/8, x4, x1, x2)

inst_65476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffe000; valaddr_reg:x3; val_offset:196428*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196428*0 + 3*196*FLEN/8, x4, x1, x2)

inst_65477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffff000; valaddr_reg:x3; val_offset:196431*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196431*0 + 3*197*FLEN/8, x4, x1, x2)

inst_65478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffff800; valaddr_reg:x3; val_offset:196434*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196434*0 + 3*198*FLEN/8, x4, x1, x2)

inst_65479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffffc00; valaddr_reg:x3; val_offset:196437*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196437*0 + 3*199*FLEN/8, x4, x1, x2)

inst_65480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffffe00; valaddr_reg:x3; val_offset:196440*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196440*0 + 3*200*FLEN/8, x4, x1, x2)

inst_65481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffff00; valaddr_reg:x3; val_offset:196443*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196443*0 + 3*201*FLEN/8, x4, x1, x2)

inst_65482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffff80; valaddr_reg:x3; val_offset:196446*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196446*0 + 3*202*FLEN/8, x4, x1, x2)

inst_65483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffffc0; valaddr_reg:x3; val_offset:196449*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196449*0 + 3*203*FLEN/8, x4, x1, x2)

inst_65484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffffe0; valaddr_reg:x3; val_offset:196452*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196452*0 + 3*204*FLEN/8, x4, x1, x2)

inst_65485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffffff0; valaddr_reg:x3; val_offset:196455*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196455*0 + 3*205*FLEN/8, x4, x1, x2)

inst_65486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffffff8; valaddr_reg:x3; val_offset:196458*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196458*0 + 3*206*FLEN/8, x4, x1, x2)

inst_65487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffffffc; valaddr_reg:x3; val_offset:196461*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196461*0 + 3*207*FLEN/8, x4, x1, x2)

inst_65488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2fffffffffffffe; valaddr_reg:x3; val_offset:196464*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196464*0 + 3*208*FLEN/8, x4, x1, x2)

inst_65489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eab8bfa2b2ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eab8bfa2b2ae; op2val:0x0;
op3val:0x2ffffffffffffff; valaddr_reg:x3; val_offset:196467*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196467*0 + 3*209*FLEN/8, x4, x1, x2)

inst_65490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000000000; valaddr_reg:x3; val_offset:196470*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196470*0 + 3*210*FLEN/8, x4, x1, x2)

inst_65491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000000001; valaddr_reg:x3; val_offset:196473*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196473*0 + 3*211*FLEN/8, x4, x1, x2)

inst_65492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000000003; valaddr_reg:x3; val_offset:196476*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196476*0 + 3*212*FLEN/8, x4, x1, x2)

inst_65493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000000007; valaddr_reg:x3; val_offset:196479*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196479*0 + 3*213*FLEN/8, x4, x1, x2)

inst_65494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000000000f; valaddr_reg:x3; val_offset:196482*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196482*0 + 3*214*FLEN/8, x4, x1, x2)

inst_65495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000000001f; valaddr_reg:x3; val_offset:196485*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196485*0 + 3*215*FLEN/8, x4, x1, x2)

inst_65496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000000003f; valaddr_reg:x3; val_offset:196488*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196488*0 + 3*216*FLEN/8, x4, x1, x2)

inst_65497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000000007f; valaddr_reg:x3; val_offset:196491*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196491*0 + 3*217*FLEN/8, x4, x1, x2)

inst_65498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000000000ff; valaddr_reg:x3; val_offset:196494*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196494*0 + 3*218*FLEN/8, x4, x1, x2)

inst_65499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000000001ff; valaddr_reg:x3; val_offset:196497*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196497*0 + 3*219*FLEN/8, x4, x1, x2)

inst_65500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000000003ff; valaddr_reg:x3; val_offset:196500*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196500*0 + 3*220*FLEN/8, x4, x1, x2)

inst_65501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000000007ff; valaddr_reg:x3; val_offset:196503*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196503*0 + 3*221*FLEN/8, x4, x1, x2)

inst_65502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000000fff; valaddr_reg:x3; val_offset:196506*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196506*0 + 3*222*FLEN/8, x4, x1, x2)

inst_65503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000001fff; valaddr_reg:x3; val_offset:196509*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196509*0 + 3*223*FLEN/8, x4, x1, x2)

inst_65504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000003fff; valaddr_reg:x3; val_offset:196512*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196512*0 + 3*224*FLEN/8, x4, x1, x2)

inst_65505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000007fff; valaddr_reg:x3; val_offset:196515*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196515*0 + 3*225*FLEN/8, x4, x1, x2)

inst_65506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000000ffff; valaddr_reg:x3; val_offset:196518*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196518*0 + 3*226*FLEN/8, x4, x1, x2)

inst_65507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000001ffff; valaddr_reg:x3; val_offset:196521*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196521*0 + 3*227*FLEN/8, x4, x1, x2)

inst_65508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000003ffff; valaddr_reg:x3; val_offset:196524*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196524*0 + 3*228*FLEN/8, x4, x1, x2)

inst_65509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000007ffff; valaddr_reg:x3; val_offset:196527*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196527*0 + 3*229*FLEN/8, x4, x1, x2)

inst_65510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000000fffff; valaddr_reg:x3; val_offset:196530*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196530*0 + 3*230*FLEN/8, x4, x1, x2)

inst_65511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000001fffff; valaddr_reg:x3; val_offset:196533*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196533*0 + 3*231*FLEN/8, x4, x1, x2)

inst_65512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000003fffff; valaddr_reg:x3; val_offset:196536*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196536*0 + 3*232*FLEN/8, x4, x1, x2)

inst_65513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000007fffff; valaddr_reg:x3; val_offset:196539*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196539*0 + 3*233*FLEN/8, x4, x1, x2)

inst_65514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000000ffffff; valaddr_reg:x3; val_offset:196542*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196542*0 + 3*234*FLEN/8, x4, x1, x2)

inst_65515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000001ffffff; valaddr_reg:x3; val_offset:196545*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196545*0 + 3*235*FLEN/8, x4, x1, x2)

inst_65516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000003ffffff; valaddr_reg:x3; val_offset:196548*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196548*0 + 3*236*FLEN/8, x4, x1, x2)

inst_65517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000007ffffff; valaddr_reg:x3; val_offset:196551*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196551*0 + 3*237*FLEN/8, x4, x1, x2)

inst_65518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000000fffffff; valaddr_reg:x3; val_offset:196554*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196554*0 + 3*238*FLEN/8, x4, x1, x2)

inst_65519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000001fffffff; valaddr_reg:x3; val_offset:196557*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196557*0 + 3*239*FLEN/8, x4, x1, x2)

inst_65520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000003fffffff; valaddr_reg:x3; val_offset:196560*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196560*0 + 3*240*FLEN/8, x4, x1, x2)

inst_65521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000007fffffff; valaddr_reg:x3; val_offset:196563*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196563*0 + 3*241*FLEN/8, x4, x1, x2)

inst_65522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100000ffffffff; valaddr_reg:x3; val_offset:196566*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196566*0 + 3*242*FLEN/8, x4, x1, x2)

inst_65523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100001ffffffff; valaddr_reg:x3; val_offset:196569*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196569*0 + 3*243*FLEN/8, x4, x1, x2)

inst_65524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100003ffffffff; valaddr_reg:x3; val_offset:196572*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196572*0 + 3*244*FLEN/8, x4, x1, x2)

inst_65525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100007ffffffff; valaddr_reg:x3; val_offset:196575*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196575*0 + 3*245*FLEN/8, x4, x1, x2)

inst_65526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10000fffffffff; valaddr_reg:x3; val_offset:196578*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196578*0 + 3*246*FLEN/8, x4, x1, x2)

inst_65527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10001fffffffff; valaddr_reg:x3; val_offset:196581*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196581*0 + 3*247*FLEN/8, x4, x1, x2)

inst_65528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10003fffffffff; valaddr_reg:x3; val_offset:196584*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196584*0 + 3*248*FLEN/8, x4, x1, x2)

inst_65529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10007fffffffff; valaddr_reg:x3; val_offset:196587*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196587*0 + 3*249*FLEN/8, x4, x1, x2)

inst_65530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1000ffffffffff; valaddr_reg:x3; val_offset:196590*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196590*0 + 3*250*FLEN/8, x4, x1, x2)

inst_65531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1001ffffffffff; valaddr_reg:x3; val_offset:196593*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196593*0 + 3*251*FLEN/8, x4, x1, x2)

inst_65532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1003ffffffffff; valaddr_reg:x3; val_offset:196596*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196596*0 + 3*252*FLEN/8, x4, x1, x2)

inst_65533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1007ffffffffff; valaddr_reg:x3; val_offset:196599*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196599*0 + 3*253*FLEN/8, x4, x1, x2)

inst_65534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b100fffffffffff; valaddr_reg:x3; val_offset:196602*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196602*0 + 3*254*FLEN/8, x4, x1, x2)

inst_65535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b101fffffffffff; valaddr_reg:x3; val_offset:196605*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196605*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_65536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b103fffffffffff; valaddr_reg:x3; val_offset:196608*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196608*0 + 3*256*FLEN/8, x4, x1, x2)

inst_65537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b107fffffffffff; valaddr_reg:x3; val_offset:196611*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196611*0 + 3*257*FLEN/8, x4, x1, x2)

inst_65538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b10ffffffffffff; valaddr_reg:x3; val_offset:196614*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196614*0 + 3*258*FLEN/8, x4, x1, x2)

inst_65539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b11ffffffffffff; valaddr_reg:x3; val_offset:196617*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196617*0 + 3*259*FLEN/8, x4, x1, x2)

inst_65540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b13ffffffffffff; valaddr_reg:x3; val_offset:196620*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196620*0 + 3*260*FLEN/8, x4, x1, x2)

inst_65541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b17ffffffffffff; valaddr_reg:x3; val_offset:196623*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196623*0 + 3*261*FLEN/8, x4, x1, x2)

inst_65542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b18000000000000; valaddr_reg:x3; val_offset:196626*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196626*0 + 3*262*FLEN/8, x4, x1, x2)

inst_65543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1c000000000000; valaddr_reg:x3; val_offset:196629*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196629*0 + 3*263*FLEN/8, x4, x1, x2)

inst_65544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1e000000000000; valaddr_reg:x3; val_offset:196632*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196632*0 + 3*264*FLEN/8, x4, x1, x2)

inst_65545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1f000000000000; valaddr_reg:x3; val_offset:196635*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196635*0 + 3*265*FLEN/8, x4, x1, x2)

inst_65546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1f800000000000; valaddr_reg:x3; val_offset:196638*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196638*0 + 3*266*FLEN/8, x4, x1, x2)

inst_65547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fc00000000000; valaddr_reg:x3; val_offset:196641*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196641*0 + 3*267*FLEN/8, x4, x1, x2)

inst_65548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fe00000000000; valaddr_reg:x3; val_offset:196644*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196644*0 + 3*268*FLEN/8, x4, x1, x2)

inst_65549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ff00000000000; valaddr_reg:x3; val_offset:196647*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196647*0 + 3*269*FLEN/8, x4, x1, x2)

inst_65550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ff80000000000; valaddr_reg:x3; val_offset:196650*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196650*0 + 3*270*FLEN/8, x4, x1, x2)

inst_65551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffc0000000000; valaddr_reg:x3; val_offset:196653*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196653*0 + 3*271*FLEN/8, x4, x1, x2)

inst_65552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffe0000000000; valaddr_reg:x3; val_offset:196656*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196656*0 + 3*272*FLEN/8, x4, x1, x2)

inst_65553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fff0000000000; valaddr_reg:x3; val_offset:196659*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196659*0 + 3*273*FLEN/8, x4, x1, x2)

inst_65554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fff8000000000; valaddr_reg:x3; val_offset:196662*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196662*0 + 3*274*FLEN/8, x4, x1, x2)

inst_65555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffc000000000; valaddr_reg:x3; val_offset:196665*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196665*0 + 3*275*FLEN/8, x4, x1, x2)

inst_65556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffe000000000; valaddr_reg:x3; val_offset:196668*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196668*0 + 3*276*FLEN/8, x4, x1, x2)

inst_65557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffff000000000; valaddr_reg:x3; val_offset:196671*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196671*0 + 3*277*FLEN/8, x4, x1, x2)

inst_65558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffff800000000; valaddr_reg:x3; val_offset:196674*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196674*0 + 3*278*FLEN/8, x4, x1, x2)

inst_65559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffc00000000; valaddr_reg:x3; val_offset:196677*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196677*0 + 3*279*FLEN/8, x4, x1, x2)

inst_65560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffe00000000; valaddr_reg:x3; val_offset:196680*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196680*0 + 3*280*FLEN/8, x4, x1, x2)

inst_65561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffff00000000; valaddr_reg:x3; val_offset:196683*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196683*0 + 3*281*FLEN/8, x4, x1, x2)

inst_65562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffff80000000; valaddr_reg:x3; val_offset:196686*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196686*0 + 3*282*FLEN/8, x4, x1, x2)

inst_65563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffc0000000; valaddr_reg:x3; val_offset:196689*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196689*0 + 3*283*FLEN/8, x4, x1, x2)

inst_65564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffe0000000; valaddr_reg:x3; val_offset:196692*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196692*0 + 3*284*FLEN/8, x4, x1, x2)

inst_65565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffff0000000; valaddr_reg:x3; val_offset:196695*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196695*0 + 3*285*FLEN/8, x4, x1, x2)

inst_65566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffff8000000; valaddr_reg:x3; val_offset:196698*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196698*0 + 3*286*FLEN/8, x4, x1, x2)

inst_65567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffc000000; valaddr_reg:x3; val_offset:196701*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196701*0 + 3*287*FLEN/8, x4, x1, x2)

inst_65568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffe000000; valaddr_reg:x3; val_offset:196704*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196704*0 + 3*288*FLEN/8, x4, x1, x2)

inst_65569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffff000000; valaddr_reg:x3; val_offset:196707*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196707*0 + 3*289*FLEN/8, x4, x1, x2)

inst_65570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffff800000; valaddr_reg:x3; val_offset:196710*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196710*0 + 3*290*FLEN/8, x4, x1, x2)

inst_65571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffc00000; valaddr_reg:x3; val_offset:196713*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196713*0 + 3*291*FLEN/8, x4, x1, x2)

inst_65572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffe00000; valaddr_reg:x3; val_offset:196716*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196716*0 + 3*292*FLEN/8, x4, x1, x2)

inst_65573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffff00000; valaddr_reg:x3; val_offset:196719*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196719*0 + 3*293*FLEN/8, x4, x1, x2)

inst_65574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffff80000; valaddr_reg:x3; val_offset:196722*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196722*0 + 3*294*FLEN/8, x4, x1, x2)

inst_65575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffc0000; valaddr_reg:x3; val_offset:196725*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196725*0 + 3*295*FLEN/8, x4, x1, x2)

inst_65576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffe0000; valaddr_reg:x3; val_offset:196728*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196728*0 + 3*296*FLEN/8, x4, x1, x2)

inst_65577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffff0000; valaddr_reg:x3; val_offset:196731*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196731*0 + 3*297*FLEN/8, x4, x1, x2)

inst_65578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffff8000; valaddr_reg:x3; val_offset:196734*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196734*0 + 3*298*FLEN/8, x4, x1, x2)

inst_65579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffc000; valaddr_reg:x3; val_offset:196737*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196737*0 + 3*299*FLEN/8, x4, x1, x2)

inst_65580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffe000; valaddr_reg:x3; val_offset:196740*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196740*0 + 3*300*FLEN/8, x4, x1, x2)

inst_65581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffff000; valaddr_reg:x3; val_offset:196743*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196743*0 + 3*301*FLEN/8, x4, x1, x2)

inst_65582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffff800; valaddr_reg:x3; val_offset:196746*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196746*0 + 3*302*FLEN/8, x4, x1, x2)

inst_65583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffffc00; valaddr_reg:x3; val_offset:196749*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196749*0 + 3*303*FLEN/8, x4, x1, x2)

inst_65584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffffe00; valaddr_reg:x3; val_offset:196752*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196752*0 + 3*304*FLEN/8, x4, x1, x2)

inst_65585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffff00; valaddr_reg:x3; val_offset:196755*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196755*0 + 3*305*FLEN/8, x4, x1, x2)

inst_65586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffff80; valaddr_reg:x3; val_offset:196758*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196758*0 + 3*306*FLEN/8, x4, x1, x2)

inst_65587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffffc0; valaddr_reg:x3; val_offset:196761*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196761*0 + 3*307*FLEN/8, x4, x1, x2)

inst_65588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffffe0; valaddr_reg:x3; val_offset:196764*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196764*0 + 3*308*FLEN/8, x4, x1, x2)

inst_65589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffffff0; valaddr_reg:x3; val_offset:196767*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196767*0 + 3*309*FLEN/8, x4, x1, x2)

inst_65590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffffff8; valaddr_reg:x3; val_offset:196770*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196770*0 + 3*310*FLEN/8, x4, x1, x2)

inst_65591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffffffc; valaddr_reg:x3; val_offset:196773*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196773*0 + 3*311*FLEN/8, x4, x1, x2)

inst_65592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1ffffffffffffe; valaddr_reg:x3; val_offset:196776*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196776*0 + 3*312*FLEN/8, x4, x1, x2)

inst_65593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3b1fffffffffffff; valaddr_reg:x3; val_offset:196779*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196779*0 + 3*313*FLEN/8, x4, x1, x2)

inst_65594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:196782*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196782*0 + 3*314*FLEN/8, x4, x1, x2)

inst_65595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:196785*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196785*0 + 3*315*FLEN/8, x4, x1, x2)

inst_65596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:196788*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196788*0 + 3*316*FLEN/8, x4, x1, x2)

inst_65597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:196791*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196791*0 + 3*317*FLEN/8, x4, x1, x2)

inst_65598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:196794*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196794*0 + 3*318*FLEN/8, x4, x1, x2)

inst_65599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:196797*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196797*0 + 3*319*FLEN/8, x4, x1, x2)

inst_65600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:196800*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196800*0 + 3*320*FLEN/8, x4, x1, x2)

inst_65601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:196803*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196803*0 + 3*321*FLEN/8, x4, x1, x2)

inst_65602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:196806*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196806*0 + 3*322*FLEN/8, x4, x1, x2)

inst_65603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:196809*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196809*0 + 3*323*FLEN/8, x4, x1, x2)

inst_65604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:196812*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196812*0 + 3*324*FLEN/8, x4, x1, x2)

inst_65605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:196815*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196815*0 + 3*325*FLEN/8, x4, x1, x2)

inst_65606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:196818*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196818*0 + 3*326*FLEN/8, x4, x1, x2)

inst_65607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:196821*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196821*0 + 3*327*FLEN/8, x4, x1, x2)

inst_65608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:196824*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196824*0 + 3*328*FLEN/8, x4, x1, x2)

inst_65609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:196827*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196827*0 + 3*329*FLEN/8, x4, x1, x2)

inst_65610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:196830*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196830*0 + 3*330*FLEN/8, x4, x1, x2)

inst_65611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:196833*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196833*0 + 3*331*FLEN/8, x4, x1, x2)

inst_65612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:196836*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196836*0 + 3*332*FLEN/8, x4, x1, x2)

inst_65613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:196839*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196839*0 + 3*333*FLEN/8, x4, x1, x2)

inst_65614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:196842*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196842*0 + 3*334*FLEN/8, x4, x1, x2)

inst_65615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef4fb6091632 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9af0803451337 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef4fb6091632; op2val:0x2039af0803451337;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:196845*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196845*0 + 3*335*FLEN/8, x4, x1, x2)

inst_65616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:196848*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196848*0 + 3*336*FLEN/8, x4, x1, x2)

inst_65617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:196851*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196851*0 + 3*337*FLEN/8, x4, x1, x2)

inst_65618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:196854*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196854*0 + 3*338*FLEN/8, x4, x1, x2)

inst_65619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:196857*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196857*0 + 3*339*FLEN/8, x4, x1, x2)

inst_65620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:196860*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196860*0 + 3*340*FLEN/8, x4, x1, x2)

inst_65621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:196863*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196863*0 + 3*341*FLEN/8, x4, x1, x2)

inst_65622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:196866*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196866*0 + 3*342*FLEN/8, x4, x1, x2)

inst_65623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:196869*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196869*0 + 3*343*FLEN/8, x4, x1, x2)

inst_65624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:196872*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196872*0 + 3*344*FLEN/8, x4, x1, x2)

inst_65625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:196875*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196875*0 + 3*345*FLEN/8, x4, x1, x2)

inst_65626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:196878*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196878*0 + 3*346*FLEN/8, x4, x1, x2)

inst_65627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:196881*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196881*0 + 3*347*FLEN/8, x4, x1, x2)

inst_65628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:196884*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196884*0 + 3*348*FLEN/8, x4, x1, x2)

inst_65629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:196887*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196887*0 + 3*349*FLEN/8, x4, x1, x2)

inst_65630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:196890*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196890*0 + 3*350*FLEN/8, x4, x1, x2)

inst_65631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:196893*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196893*0 + 3*351*FLEN/8, x4, x1, x2)

inst_65632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:196896*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196896*0 + 3*352*FLEN/8, x4, x1, x2)

inst_65633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:196899*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196899*0 + 3*353*FLEN/8, x4, x1, x2)

inst_65634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:196902*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196902*0 + 3*354*FLEN/8, x4, x1, x2)

inst_65635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:196905*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196905*0 + 3*355*FLEN/8, x4, x1, x2)

inst_65636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:196908*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196908*0 + 3*356*FLEN/8, x4, x1, x2)

inst_65637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:196911*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196911*0 + 3*357*FLEN/8, x4, x1, x2)

inst_65638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000000000; valaddr_reg:x3; val_offset:196914*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196914*0 + 3*358*FLEN/8, x4, x1, x2)

inst_65639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000000001; valaddr_reg:x3; val_offset:196917*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196917*0 + 3*359*FLEN/8, x4, x1, x2)

inst_65640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000000003; valaddr_reg:x3; val_offset:196920*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196920*0 + 3*360*FLEN/8, x4, x1, x2)

inst_65641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000000007; valaddr_reg:x3; val_offset:196923*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196923*0 + 3*361*FLEN/8, x4, x1, x2)

inst_65642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000000000f; valaddr_reg:x3; val_offset:196926*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196926*0 + 3*362*FLEN/8, x4, x1, x2)

inst_65643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000000001f; valaddr_reg:x3; val_offset:196929*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196929*0 + 3*363*FLEN/8, x4, x1, x2)

inst_65644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000000003f; valaddr_reg:x3; val_offset:196932*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196932*0 + 3*364*FLEN/8, x4, x1, x2)

inst_65645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000000007f; valaddr_reg:x3; val_offset:196935*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196935*0 + 3*365*FLEN/8, x4, x1, x2)

inst_65646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000000000ff; valaddr_reg:x3; val_offset:196938*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196938*0 + 3*366*FLEN/8, x4, x1, x2)

inst_65647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000000001ff; valaddr_reg:x3; val_offset:196941*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196941*0 + 3*367*FLEN/8, x4, x1, x2)

inst_65648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000000003ff; valaddr_reg:x3; val_offset:196944*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196944*0 + 3*368*FLEN/8, x4, x1, x2)

inst_65649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000000007ff; valaddr_reg:x3; val_offset:196947*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196947*0 + 3*369*FLEN/8, x4, x1, x2)

inst_65650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000000fff; valaddr_reg:x3; val_offset:196950*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196950*0 + 3*370*FLEN/8, x4, x1, x2)

inst_65651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000001fff; valaddr_reg:x3; val_offset:196953*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196953*0 + 3*371*FLEN/8, x4, x1, x2)

inst_65652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000003fff; valaddr_reg:x3; val_offset:196956*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196956*0 + 3*372*FLEN/8, x4, x1, x2)

inst_65653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000007fff; valaddr_reg:x3; val_offset:196959*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196959*0 + 3*373*FLEN/8, x4, x1, x2)

inst_65654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000000ffff; valaddr_reg:x3; val_offset:196962*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196962*0 + 3*374*FLEN/8, x4, x1, x2)

inst_65655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000001ffff; valaddr_reg:x3; val_offset:196965*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196965*0 + 3*375*FLEN/8, x4, x1, x2)

inst_65656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000003ffff; valaddr_reg:x3; val_offset:196968*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196968*0 + 3*376*FLEN/8, x4, x1, x2)

inst_65657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000007ffff; valaddr_reg:x3; val_offset:196971*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196971*0 + 3*377*FLEN/8, x4, x1, x2)

inst_65658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000000fffff; valaddr_reg:x3; val_offset:196974*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196974*0 + 3*378*FLEN/8, x4, x1, x2)

inst_65659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000001fffff; valaddr_reg:x3; val_offset:196977*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196977*0 + 3*379*FLEN/8, x4, x1, x2)

inst_65660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000003fffff; valaddr_reg:x3; val_offset:196980*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196980*0 + 3*380*FLEN/8, x4, x1, x2)

inst_65661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000007fffff; valaddr_reg:x3; val_offset:196983*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196983*0 + 3*381*FLEN/8, x4, x1, x2)

inst_65662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000000ffffff; valaddr_reg:x3; val_offset:196986*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196986*0 + 3*382*FLEN/8, x4, x1, x2)

inst_65663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000001ffffff; valaddr_reg:x3; val_offset:196989*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196989*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_65664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000003ffffff; valaddr_reg:x3; val_offset:196992*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196992*0 + 3*384*FLEN/8, x4, x1, x2)

inst_65665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000007ffffff; valaddr_reg:x3; val_offset:196995*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196995*0 + 3*385*FLEN/8, x4, x1, x2)

inst_65666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000000fffffff; valaddr_reg:x3; val_offset:196998*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196998*0 + 3*386*FLEN/8, x4, x1, x2)

inst_65667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000001fffffff; valaddr_reg:x3; val_offset:197001*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197001*0 + 3*387*FLEN/8, x4, x1, x2)

inst_65668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000003fffffff; valaddr_reg:x3; val_offset:197004*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197004*0 + 3*388*FLEN/8, x4, x1, x2)

inst_65669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000007fffffff; valaddr_reg:x3; val_offset:197007*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197007*0 + 3*389*FLEN/8, x4, x1, x2)

inst_65670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700000ffffffff; valaddr_reg:x3; val_offset:197010*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197010*0 + 3*390*FLEN/8, x4, x1, x2)

inst_65671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700001ffffffff; valaddr_reg:x3; val_offset:197013*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197013*0 + 3*391*FLEN/8, x4, x1, x2)

inst_65672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700003ffffffff; valaddr_reg:x3; val_offset:197016*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197016*0 + 3*392*FLEN/8, x4, x1, x2)

inst_65673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700007ffffffff; valaddr_reg:x3; val_offset:197019*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197019*0 + 3*393*FLEN/8, x4, x1, x2)

inst_65674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270000fffffffff; valaddr_reg:x3; val_offset:197022*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197022*0 + 3*394*FLEN/8, x4, x1, x2)

inst_65675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270001fffffffff; valaddr_reg:x3; val_offset:197025*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197025*0 + 3*395*FLEN/8, x4, x1, x2)

inst_65676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270003fffffffff; valaddr_reg:x3; val_offset:197028*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197028*0 + 3*396*FLEN/8, x4, x1, x2)

inst_65677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270007fffffffff; valaddr_reg:x3; val_offset:197031*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197031*0 + 3*397*FLEN/8, x4, x1, x2)

inst_65678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827000ffffffffff; valaddr_reg:x3; val_offset:197034*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197034*0 + 3*398*FLEN/8, x4, x1, x2)

inst_65679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827001ffffffffff; valaddr_reg:x3; val_offset:197037*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197037*0 + 3*399*FLEN/8, x4, x1, x2)

inst_65680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827003ffffffffff; valaddr_reg:x3; val_offset:197040*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197040*0 + 3*400*FLEN/8, x4, x1, x2)

inst_65681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827007ffffffffff; valaddr_reg:x3; val_offset:197043*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197043*0 + 3*401*FLEN/8, x4, x1, x2)

inst_65682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82700fffffffffff; valaddr_reg:x3; val_offset:197046*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197046*0 + 3*402*FLEN/8, x4, x1, x2)

inst_65683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82701fffffffffff; valaddr_reg:x3; val_offset:197049*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197049*0 + 3*403*FLEN/8, x4, x1, x2)

inst_65684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82703fffffffffff; valaddr_reg:x3; val_offset:197052*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197052*0 + 3*404*FLEN/8, x4, x1, x2)

inst_65685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x82707fffffffffff; valaddr_reg:x3; val_offset:197055*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197055*0 + 3*405*FLEN/8, x4, x1, x2)

inst_65686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8270ffffffffffff; valaddr_reg:x3; val_offset:197058*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197058*0 + 3*406*FLEN/8, x4, x1, x2)

inst_65687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8271ffffffffffff; valaddr_reg:x3; val_offset:197061*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197061*0 + 3*407*FLEN/8, x4, x1, x2)

inst_65688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8273ffffffffffff; valaddr_reg:x3; val_offset:197064*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197064*0 + 3*408*FLEN/8, x4, x1, x2)

inst_65689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8277ffffffffffff; valaddr_reg:x3; val_offset:197067*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197067*0 + 3*409*FLEN/8, x4, x1, x2)

inst_65690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x8278000000000000; valaddr_reg:x3; val_offset:197070*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197070*0 + 3*410*FLEN/8, x4, x1, x2)

inst_65691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827c000000000000; valaddr_reg:x3; val_offset:197073*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197073*0 + 3*411*FLEN/8, x4, x1, x2)

inst_65692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827e000000000000; valaddr_reg:x3; val_offset:197076*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197076*0 + 3*412*FLEN/8, x4, x1, x2)

inst_65693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827f000000000000; valaddr_reg:x3; val_offset:197079*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197079*0 + 3*413*FLEN/8, x4, x1, x2)

inst_65694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827f800000000000; valaddr_reg:x3; val_offset:197082*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197082*0 + 3*414*FLEN/8, x4, x1, x2)

inst_65695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fc00000000000; valaddr_reg:x3; val_offset:197085*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197085*0 + 3*415*FLEN/8, x4, x1, x2)

inst_65696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fe00000000000; valaddr_reg:x3; val_offset:197088*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197088*0 + 3*416*FLEN/8, x4, x1, x2)

inst_65697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ff00000000000; valaddr_reg:x3; val_offset:197091*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197091*0 + 3*417*FLEN/8, x4, x1, x2)

inst_65698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ff80000000000; valaddr_reg:x3; val_offset:197094*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197094*0 + 3*418*FLEN/8, x4, x1, x2)

inst_65699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffc0000000000; valaddr_reg:x3; val_offset:197097*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197097*0 + 3*419*FLEN/8, x4, x1, x2)

inst_65700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffe0000000000; valaddr_reg:x3; val_offset:197100*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197100*0 + 3*420*FLEN/8, x4, x1, x2)

inst_65701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fff0000000000; valaddr_reg:x3; val_offset:197103*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197103*0 + 3*421*FLEN/8, x4, x1, x2)

inst_65702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fff8000000000; valaddr_reg:x3; val_offset:197106*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197106*0 + 3*422*FLEN/8, x4, x1, x2)

inst_65703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffc000000000; valaddr_reg:x3; val_offset:197109*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197109*0 + 3*423*FLEN/8, x4, x1, x2)

inst_65704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffe000000000; valaddr_reg:x3; val_offset:197112*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197112*0 + 3*424*FLEN/8, x4, x1, x2)

inst_65705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffff000000000; valaddr_reg:x3; val_offset:197115*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197115*0 + 3*425*FLEN/8, x4, x1, x2)

inst_65706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffff800000000; valaddr_reg:x3; val_offset:197118*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197118*0 + 3*426*FLEN/8, x4, x1, x2)

inst_65707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffc00000000; valaddr_reg:x3; val_offset:197121*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197121*0 + 3*427*FLEN/8, x4, x1, x2)

inst_65708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffe00000000; valaddr_reg:x3; val_offset:197124*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197124*0 + 3*428*FLEN/8, x4, x1, x2)

inst_65709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffff00000000; valaddr_reg:x3; val_offset:197127*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197127*0 + 3*429*FLEN/8, x4, x1, x2)

inst_65710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffff80000000; valaddr_reg:x3; val_offset:197130*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197130*0 + 3*430*FLEN/8, x4, x1, x2)

inst_65711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffc0000000; valaddr_reg:x3; val_offset:197133*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197133*0 + 3*431*FLEN/8, x4, x1, x2)

inst_65712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffe0000000; valaddr_reg:x3; val_offset:197136*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197136*0 + 3*432*FLEN/8, x4, x1, x2)

inst_65713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffff0000000; valaddr_reg:x3; val_offset:197139*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197139*0 + 3*433*FLEN/8, x4, x1, x2)

inst_65714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffff8000000; valaddr_reg:x3; val_offset:197142*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197142*0 + 3*434*FLEN/8, x4, x1, x2)

inst_65715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffc000000; valaddr_reg:x3; val_offset:197145*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197145*0 + 3*435*FLEN/8, x4, x1, x2)

inst_65716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffe000000; valaddr_reg:x3; val_offset:197148*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197148*0 + 3*436*FLEN/8, x4, x1, x2)

inst_65717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffff000000; valaddr_reg:x3; val_offset:197151*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197151*0 + 3*437*FLEN/8, x4, x1, x2)

inst_65718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffff800000; valaddr_reg:x3; val_offset:197154*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197154*0 + 3*438*FLEN/8, x4, x1, x2)

inst_65719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffc00000; valaddr_reg:x3; val_offset:197157*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197157*0 + 3*439*FLEN/8, x4, x1, x2)

inst_65720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffe00000; valaddr_reg:x3; val_offset:197160*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197160*0 + 3*440*FLEN/8, x4, x1, x2)

inst_65721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffff00000; valaddr_reg:x3; val_offset:197163*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197163*0 + 3*441*FLEN/8, x4, x1, x2)

inst_65722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffff80000; valaddr_reg:x3; val_offset:197166*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197166*0 + 3*442*FLEN/8, x4, x1, x2)

inst_65723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffc0000; valaddr_reg:x3; val_offset:197169*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197169*0 + 3*443*FLEN/8, x4, x1, x2)

inst_65724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffe0000; valaddr_reg:x3; val_offset:197172*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197172*0 + 3*444*FLEN/8, x4, x1, x2)

inst_65725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffff0000; valaddr_reg:x3; val_offset:197175*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197175*0 + 3*445*FLEN/8, x4, x1, x2)

inst_65726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffff8000; valaddr_reg:x3; val_offset:197178*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197178*0 + 3*446*FLEN/8, x4, x1, x2)

inst_65727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffc000; valaddr_reg:x3; val_offset:197181*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197181*0 + 3*447*FLEN/8, x4, x1, x2)

inst_65728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffe000; valaddr_reg:x3; val_offset:197184*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197184*0 + 3*448*FLEN/8, x4, x1, x2)

inst_65729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffff000; valaddr_reg:x3; val_offset:197187*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197187*0 + 3*449*FLEN/8, x4, x1, x2)

inst_65730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffff800; valaddr_reg:x3; val_offset:197190*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197190*0 + 3*450*FLEN/8, x4, x1, x2)

inst_65731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffffc00; valaddr_reg:x3; val_offset:197193*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197193*0 + 3*451*FLEN/8, x4, x1, x2)

inst_65732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffffe00; valaddr_reg:x3; val_offset:197196*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197196*0 + 3*452*FLEN/8, x4, x1, x2)

inst_65733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffff00; valaddr_reg:x3; val_offset:197199*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197199*0 + 3*453*FLEN/8, x4, x1, x2)

inst_65734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffff80; valaddr_reg:x3; val_offset:197202*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197202*0 + 3*454*FLEN/8, x4, x1, x2)

inst_65735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffffc0; valaddr_reg:x3; val_offset:197205*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197205*0 + 3*455*FLEN/8, x4, x1, x2)

inst_65736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffffe0; valaddr_reg:x3; val_offset:197208*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197208*0 + 3*456*FLEN/8, x4, x1, x2)

inst_65737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffffff0; valaddr_reg:x3; val_offset:197211*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197211*0 + 3*457*FLEN/8, x4, x1, x2)

inst_65738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffffff8; valaddr_reg:x3; val_offset:197214*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197214*0 + 3*458*FLEN/8, x4, x1, x2)

inst_65739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffffffc; valaddr_reg:x3; val_offset:197217*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197217*0 + 3*459*FLEN/8, x4, x1, x2)

inst_65740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827ffffffffffffe; valaddr_reg:x3; val_offset:197220*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197220*0 + 3*460*FLEN/8, x4, x1, x2)

inst_65741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f3a0272551ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f3a0272551ac; op2val:0x8000;
op3val:0x827fffffffffffff; valaddr_reg:x3; val_offset:197223*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197223*0 + 3*461*FLEN/8, x4, x1, x2)

inst_65742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:197226*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197226*0 + 3*462*FLEN/8, x4, x1, x2)

inst_65743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:197229*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197229*0 + 3*463*FLEN/8, x4, x1, x2)

inst_65744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:197232*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197232*0 + 3*464*FLEN/8, x4, x1, x2)

inst_65745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:197235*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197235*0 + 3*465*FLEN/8, x4, x1, x2)

inst_65746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:197238*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197238*0 + 3*466*FLEN/8, x4, x1, x2)

inst_65747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:197241*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197241*0 + 3*467*FLEN/8, x4, x1, x2)

inst_65748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:197244*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197244*0 + 3*468*FLEN/8, x4, x1, x2)

inst_65749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:197247*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197247*0 + 3*469*FLEN/8, x4, x1, x2)

inst_65750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:197250*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197250*0 + 3*470*FLEN/8, x4, x1, x2)

inst_65751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:197253*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197253*0 + 3*471*FLEN/8, x4, x1, x2)

inst_65752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:197256*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197256*0 + 3*472*FLEN/8, x4, x1, x2)

inst_65753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:197259*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197259*0 + 3*473*FLEN/8, x4, x1, x2)

inst_65754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:197262*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197262*0 + 3*474*FLEN/8, x4, x1, x2)

inst_65755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:197265*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197265*0 + 3*475*FLEN/8, x4, x1, x2)

inst_65756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:197268*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197268*0 + 3*476*FLEN/8, x4, x1, x2)

inst_65757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:197271*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197271*0 + 3*477*FLEN/8, x4, x1, x2)

inst_65758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:197274*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197274*0 + 3*478*FLEN/8, x4, x1, x2)

inst_65759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:197277*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197277*0 + 3*479*FLEN/8, x4, x1, x2)

inst_65760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:197280*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197280*0 + 3*480*FLEN/8, x4, x1, x2)

inst_65761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:197283*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197283*0 + 3*481*FLEN/8, x4, x1, x2)

inst_65762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:197286*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197286*0 + 3*482*FLEN/8, x4, x1, x2)

inst_65763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:197289*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197289*0 + 3*483*FLEN/8, x4, x1, x2)

inst_65764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000000000; valaddr_reg:x3; val_offset:197292*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197292*0 + 3*484*FLEN/8, x4, x1, x2)

inst_65765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000000001; valaddr_reg:x3; val_offset:197295*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197295*0 + 3*485*FLEN/8, x4, x1, x2)

inst_65766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000000003; valaddr_reg:x3; val_offset:197298*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197298*0 + 3*486*FLEN/8, x4, x1, x2)

inst_65767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000000007; valaddr_reg:x3; val_offset:197301*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197301*0 + 3*487*FLEN/8, x4, x1, x2)

inst_65768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000000000f; valaddr_reg:x3; val_offset:197304*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197304*0 + 3*488*FLEN/8, x4, x1, x2)

inst_65769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000000001f; valaddr_reg:x3; val_offset:197307*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197307*0 + 3*489*FLEN/8, x4, x1, x2)

inst_65770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000000003f; valaddr_reg:x3; val_offset:197310*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197310*0 + 3*490*FLEN/8, x4, x1, x2)

inst_65771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000000007f; valaddr_reg:x3; val_offset:197313*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197313*0 + 3*491*FLEN/8, x4, x1, x2)

inst_65772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000000000ff; valaddr_reg:x3; val_offset:197316*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197316*0 + 3*492*FLEN/8, x4, x1, x2)

inst_65773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000000001ff; valaddr_reg:x3; val_offset:197319*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197319*0 + 3*493*FLEN/8, x4, x1, x2)

inst_65774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000000003ff; valaddr_reg:x3; val_offset:197322*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197322*0 + 3*494*FLEN/8, x4, x1, x2)

inst_65775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000000007ff; valaddr_reg:x3; val_offset:197325*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197325*0 + 3*495*FLEN/8, x4, x1, x2)

inst_65776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000000fff; valaddr_reg:x3; val_offset:197328*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197328*0 + 3*496*FLEN/8, x4, x1, x2)

inst_65777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000001fff; valaddr_reg:x3; val_offset:197331*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197331*0 + 3*497*FLEN/8, x4, x1, x2)

inst_65778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000003fff; valaddr_reg:x3; val_offset:197334*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197334*0 + 3*498*FLEN/8, x4, x1, x2)

inst_65779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000007fff; valaddr_reg:x3; val_offset:197337*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197337*0 + 3*499*FLEN/8, x4, x1, x2)

inst_65780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000000ffff; valaddr_reg:x3; val_offset:197340*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197340*0 + 3*500*FLEN/8, x4, x1, x2)

inst_65781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000001ffff; valaddr_reg:x3; val_offset:197343*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197343*0 + 3*501*FLEN/8, x4, x1, x2)

inst_65782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000003ffff; valaddr_reg:x3; val_offset:197346*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197346*0 + 3*502*FLEN/8, x4, x1, x2)

inst_65783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000007ffff; valaddr_reg:x3; val_offset:197349*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197349*0 + 3*503*FLEN/8, x4, x1, x2)

inst_65784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000000fffff; valaddr_reg:x3; val_offset:197352*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197352*0 + 3*504*FLEN/8, x4, x1, x2)

inst_65785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000001fffff; valaddr_reg:x3; val_offset:197355*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197355*0 + 3*505*FLEN/8, x4, x1, x2)

inst_65786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000003fffff; valaddr_reg:x3; val_offset:197358*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197358*0 + 3*506*FLEN/8, x4, x1, x2)

inst_65787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000007fffff; valaddr_reg:x3; val_offset:197361*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197361*0 + 3*507*FLEN/8, x4, x1, x2)

inst_65788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000000ffffff; valaddr_reg:x3; val_offset:197364*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197364*0 + 3*508*FLEN/8, x4, x1, x2)

inst_65789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000001ffffff; valaddr_reg:x3; val_offset:197367*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197367*0 + 3*509*FLEN/8, x4, x1, x2)

inst_65790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000003ffffff; valaddr_reg:x3; val_offset:197370*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197370*0 + 3*510*FLEN/8, x4, x1, x2)

inst_65791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000007ffffff; valaddr_reg:x3; val_offset:197373*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197373*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_65792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000000fffffff; valaddr_reg:x3; val_offset:197376*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197376*0 + 3*512*FLEN/8, x4, x1, x2)

inst_65793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000001fffffff; valaddr_reg:x3; val_offset:197379*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197379*0 + 3*513*FLEN/8, x4, x1, x2)

inst_65794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000003fffffff; valaddr_reg:x3; val_offset:197382*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197382*0 + 3*514*FLEN/8, x4, x1, x2)

inst_65795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000007fffffff; valaddr_reg:x3; val_offset:197385*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197385*0 + 3*515*FLEN/8, x4, x1, x2)

inst_65796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00000ffffffff; valaddr_reg:x3; val_offset:197388*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197388*0 + 3*516*FLEN/8, x4, x1, x2)

inst_65797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00001ffffffff; valaddr_reg:x3; val_offset:197391*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197391*0 + 3*517*FLEN/8, x4, x1, x2)

inst_65798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00003ffffffff; valaddr_reg:x3; val_offset:197394*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197394*0 + 3*518*FLEN/8, x4, x1, x2)

inst_65799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00007ffffffff; valaddr_reg:x3; val_offset:197397*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197397*0 + 3*519*FLEN/8, x4, x1, x2)

inst_65800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0000fffffffff; valaddr_reg:x3; val_offset:197400*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197400*0 + 3*520*FLEN/8, x4, x1, x2)

inst_65801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0001fffffffff; valaddr_reg:x3; val_offset:197403*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197403*0 + 3*521*FLEN/8, x4, x1, x2)

inst_65802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0003fffffffff; valaddr_reg:x3; val_offset:197406*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197406*0 + 3*522*FLEN/8, x4, x1, x2)

inst_65803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0007fffffffff; valaddr_reg:x3; val_offset:197409*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197409*0 + 3*523*FLEN/8, x4, x1, x2)

inst_65804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b000ffffffffff; valaddr_reg:x3; val_offset:197412*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197412*0 + 3*524*FLEN/8, x4, x1, x2)

inst_65805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b001ffffffffff; valaddr_reg:x3; val_offset:197415*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197415*0 + 3*525*FLEN/8, x4, x1, x2)

inst_65806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b003ffffffffff; valaddr_reg:x3; val_offset:197418*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197418*0 + 3*526*FLEN/8, x4, x1, x2)

inst_65807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b007ffffffffff; valaddr_reg:x3; val_offset:197421*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197421*0 + 3*527*FLEN/8, x4, x1, x2)

inst_65808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b00fffffffffff; valaddr_reg:x3; val_offset:197424*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197424*0 + 3*528*FLEN/8, x4, x1, x2)

inst_65809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b01fffffffffff; valaddr_reg:x3; val_offset:197427*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197427*0 + 3*529*FLEN/8, x4, x1, x2)

inst_65810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b03fffffffffff; valaddr_reg:x3; val_offset:197430*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197430*0 + 3*530*FLEN/8, x4, x1, x2)

inst_65811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b07fffffffffff; valaddr_reg:x3; val_offset:197433*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197433*0 + 3*531*FLEN/8, x4, x1, x2)

inst_65812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b0ffffffffffff; valaddr_reg:x3; val_offset:197436*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197436*0 + 3*532*FLEN/8, x4, x1, x2)

inst_65813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b1ffffffffffff; valaddr_reg:x3; val_offset:197439*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197439*0 + 3*533*FLEN/8, x4, x1, x2)

inst_65814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b3ffffffffffff; valaddr_reg:x3; val_offset:197442*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197442*0 + 3*534*FLEN/8, x4, x1, x2)

inst_65815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b7ffffffffffff; valaddr_reg:x3; val_offset:197445*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197445*0 + 3*535*FLEN/8, x4, x1, x2)

inst_65816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83b8000000000000; valaddr_reg:x3; val_offset:197448*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197448*0 + 3*536*FLEN/8, x4, x1, x2)

inst_65817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bc000000000000; valaddr_reg:x3; val_offset:197451*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197451*0 + 3*537*FLEN/8, x4, x1, x2)

inst_65818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83be000000000000; valaddr_reg:x3; val_offset:197454*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197454*0 + 3*538*FLEN/8, x4, x1, x2)

inst_65819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bf000000000000; valaddr_reg:x3; val_offset:197457*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197457*0 + 3*539*FLEN/8, x4, x1, x2)

inst_65820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bf800000000000; valaddr_reg:x3; val_offset:197460*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197460*0 + 3*540*FLEN/8, x4, x1, x2)

inst_65821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfc00000000000; valaddr_reg:x3; val_offset:197463*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197463*0 + 3*541*FLEN/8, x4, x1, x2)

inst_65822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfe00000000000; valaddr_reg:x3; val_offset:197466*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197466*0 + 3*542*FLEN/8, x4, x1, x2)

inst_65823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bff00000000000; valaddr_reg:x3; val_offset:197469*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197469*0 + 3*543*FLEN/8, x4, x1, x2)

inst_65824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bff80000000000; valaddr_reg:x3; val_offset:197472*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197472*0 + 3*544*FLEN/8, x4, x1, x2)

inst_65825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffc0000000000; valaddr_reg:x3; val_offset:197475*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197475*0 + 3*545*FLEN/8, x4, x1, x2)

inst_65826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffe0000000000; valaddr_reg:x3; val_offset:197478*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197478*0 + 3*546*FLEN/8, x4, x1, x2)

inst_65827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfff0000000000; valaddr_reg:x3; val_offset:197481*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197481*0 + 3*547*FLEN/8, x4, x1, x2)

inst_65828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfff8000000000; valaddr_reg:x3; val_offset:197484*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197484*0 + 3*548*FLEN/8, x4, x1, x2)

inst_65829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffc000000000; valaddr_reg:x3; val_offset:197487*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197487*0 + 3*549*FLEN/8, x4, x1, x2)

inst_65830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffe000000000; valaddr_reg:x3; val_offset:197490*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197490*0 + 3*550*FLEN/8, x4, x1, x2)

inst_65831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffff000000000; valaddr_reg:x3; val_offset:197493*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197493*0 + 3*551*FLEN/8, x4, x1, x2)

inst_65832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffff800000000; valaddr_reg:x3; val_offset:197496*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197496*0 + 3*552*FLEN/8, x4, x1, x2)

inst_65833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffc00000000; valaddr_reg:x3; val_offset:197499*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197499*0 + 3*553*FLEN/8, x4, x1, x2)

inst_65834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffe00000000; valaddr_reg:x3; val_offset:197502*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197502*0 + 3*554*FLEN/8, x4, x1, x2)

inst_65835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffff00000000; valaddr_reg:x3; val_offset:197505*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197505*0 + 3*555*FLEN/8, x4, x1, x2)

inst_65836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffff80000000; valaddr_reg:x3; val_offset:197508*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197508*0 + 3*556*FLEN/8, x4, x1, x2)

inst_65837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffc0000000; valaddr_reg:x3; val_offset:197511*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197511*0 + 3*557*FLEN/8, x4, x1, x2)

inst_65838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffe0000000; valaddr_reg:x3; val_offset:197514*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197514*0 + 3*558*FLEN/8, x4, x1, x2)

inst_65839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffff0000000; valaddr_reg:x3; val_offset:197517*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197517*0 + 3*559*FLEN/8, x4, x1, x2)

inst_65840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffff8000000; valaddr_reg:x3; val_offset:197520*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197520*0 + 3*560*FLEN/8, x4, x1, x2)

inst_65841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffc000000; valaddr_reg:x3; val_offset:197523*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197523*0 + 3*561*FLEN/8, x4, x1, x2)

inst_65842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffe000000; valaddr_reg:x3; val_offset:197526*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197526*0 + 3*562*FLEN/8, x4, x1, x2)

inst_65843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffff000000; valaddr_reg:x3; val_offset:197529*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197529*0 + 3*563*FLEN/8, x4, x1, x2)

inst_65844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffff800000; valaddr_reg:x3; val_offset:197532*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197532*0 + 3*564*FLEN/8, x4, x1, x2)

inst_65845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffc00000; valaddr_reg:x3; val_offset:197535*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197535*0 + 3*565*FLEN/8, x4, x1, x2)

inst_65846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffe00000; valaddr_reg:x3; val_offset:197538*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197538*0 + 3*566*FLEN/8, x4, x1, x2)

inst_65847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffff00000; valaddr_reg:x3; val_offset:197541*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197541*0 + 3*567*FLEN/8, x4, x1, x2)

inst_65848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffff80000; valaddr_reg:x3; val_offset:197544*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197544*0 + 3*568*FLEN/8, x4, x1, x2)

inst_65849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffc0000; valaddr_reg:x3; val_offset:197547*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197547*0 + 3*569*FLEN/8, x4, x1, x2)

inst_65850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffe0000; valaddr_reg:x3; val_offset:197550*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197550*0 + 3*570*FLEN/8, x4, x1, x2)

inst_65851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffff0000; valaddr_reg:x3; val_offset:197553*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197553*0 + 3*571*FLEN/8, x4, x1, x2)

inst_65852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffff8000; valaddr_reg:x3; val_offset:197556*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197556*0 + 3*572*FLEN/8, x4, x1, x2)

inst_65853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffc000; valaddr_reg:x3; val_offset:197559*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197559*0 + 3*573*FLEN/8, x4, x1, x2)

inst_65854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffe000; valaddr_reg:x3; val_offset:197562*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197562*0 + 3*574*FLEN/8, x4, x1, x2)

inst_65855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffff000; valaddr_reg:x3; val_offset:197565*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197565*0 + 3*575*FLEN/8, x4, x1, x2)

inst_65856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffff800; valaddr_reg:x3; val_offset:197568*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197568*0 + 3*576*FLEN/8, x4, x1, x2)

inst_65857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffffc00; valaddr_reg:x3; val_offset:197571*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197571*0 + 3*577*FLEN/8, x4, x1, x2)

inst_65858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffffe00; valaddr_reg:x3; val_offset:197574*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197574*0 + 3*578*FLEN/8, x4, x1, x2)

inst_65859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffff00; valaddr_reg:x3; val_offset:197577*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197577*0 + 3*579*FLEN/8, x4, x1, x2)

inst_65860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffff80; valaddr_reg:x3; val_offset:197580*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197580*0 + 3*580*FLEN/8, x4, x1, x2)

inst_65861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffffc0; valaddr_reg:x3; val_offset:197583*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197583*0 + 3*581*FLEN/8, x4, x1, x2)

inst_65862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffffe0; valaddr_reg:x3; val_offset:197586*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197586*0 + 3*582*FLEN/8, x4, x1, x2)

inst_65863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffffff0; valaddr_reg:x3; val_offset:197589*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197589*0 + 3*583*FLEN/8, x4, x1, x2)

inst_65864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffffff8; valaddr_reg:x3; val_offset:197592*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197592*0 + 3*584*FLEN/8, x4, x1, x2)

inst_65865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffffffc; valaddr_reg:x3; val_offset:197595*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197595*0 + 3*585*FLEN/8, x4, x1, x2)

inst_65866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bffffffffffffe; valaddr_reg:x3; val_offset:197598*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197598*0 + 3*586*FLEN/8, x4, x1, x2)

inst_65867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x8000;
op3val:0x83bfffffffffffff; valaddr_reg:x3; val_offset:197601*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197601*0 + 3*587*FLEN/8, x4, x1, x2)

inst_65868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:197604*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197604*0 + 3*588*FLEN/8, x4, x1, x2)

inst_65869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:197607*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197607*0 + 3*589*FLEN/8, x4, x1, x2)

inst_65870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:197610*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197610*0 + 3*590*FLEN/8, x4, x1, x2)

inst_65871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:197613*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197613*0 + 3*591*FLEN/8, x4, x1, x2)

inst_65872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:197616*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197616*0 + 3*592*FLEN/8, x4, x1, x2)

inst_65873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:197619*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197619*0 + 3*593*FLEN/8, x4, x1, x2)

inst_65874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:197622*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197622*0 + 3*594*FLEN/8, x4, x1, x2)

inst_65875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:197625*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197625*0 + 3*595*FLEN/8, x4, x1, x2)

inst_65876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:197628*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197628*0 + 3*596*FLEN/8, x4, x1, x2)

inst_65877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:197631*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197631*0 + 3*597*FLEN/8, x4, x1, x2)

inst_65878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:197634*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197634*0 + 3*598*FLEN/8, x4, x1, x2)

inst_65879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:197637*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197637*0 + 3*599*FLEN/8, x4, x1, x2)

inst_65880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:197640*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197640*0 + 3*600*FLEN/8, x4, x1, x2)

inst_65881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:197643*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197643*0 + 3*601*FLEN/8, x4, x1, x2)

inst_65882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:197646*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197646*0 + 3*602*FLEN/8, x4, x1, x2)

inst_65883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:197649*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197649*0 + 3*603*FLEN/8, x4, x1, x2)

inst_65884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:197652*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197652*0 + 3*604*FLEN/8, x4, x1, x2)

inst_65885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:197655*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197655*0 + 3*605*FLEN/8, x4, x1, x2)

inst_65886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:197658*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197658*0 + 3*606*FLEN/8, x4, x1, x2)

inst_65887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:197661*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197661*0 + 3*607*FLEN/8, x4, x1, x2)

inst_65888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:197664*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197664*0 + 3*608*FLEN/8, x4, x1, x2)

inst_65889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:197667*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197667*0 + 3*609*FLEN/8, x4, x1, x2)

inst_65890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:197670*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197670*0 + 3*610*FLEN/8, x4, x1, x2)

inst_65891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:197673*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197673*0 + 3*611*FLEN/8, x4, x1, x2)

inst_65892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:197676*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197676*0 + 3*612*FLEN/8, x4, x1, x2)

inst_65893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:197679*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197679*0 + 3*613*FLEN/8, x4, x1, x2)

inst_65894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:197682*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197682*0 + 3*614*FLEN/8, x4, x1, x2)

inst_65895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:197685*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197685*0 + 3*615*FLEN/8, x4, x1, x2)

inst_65896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:197688*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197688*0 + 3*616*FLEN/8, x4, x1, x2)

inst_65897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:197691*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197691*0 + 3*617*FLEN/8, x4, x1, x2)

inst_65898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:197694*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197694*0 + 3*618*FLEN/8, x4, x1, x2)

inst_65899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:197697*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197697*0 + 3*619*FLEN/8, x4, x1, x2)

inst_65900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:197700*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197700*0 + 3*620*FLEN/8, x4, x1, x2)

inst_65901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:197703*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197703*0 + 3*621*FLEN/8, x4, x1, x2)

inst_65902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:197706*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197706*0 + 3*622*FLEN/8, x4, x1, x2)

inst_65903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:197709*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197709*0 + 3*623*FLEN/8, x4, x1, x2)

inst_65904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:197712*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197712*0 + 3*624*FLEN/8, x4, x1, x2)

inst_65905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:197715*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197715*0 + 3*625*FLEN/8, x4, x1, x2)

inst_65906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:197718*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197718*0 + 3*626*FLEN/8, x4, x1, x2)

inst_65907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:197721*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197721*0 + 3*627*FLEN/8, x4, x1, x2)

inst_65908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:197724*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197724*0 + 3*628*FLEN/8, x4, x1, x2)

inst_65909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:197727*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197727*0 + 3*629*FLEN/8, x4, x1, x2)

inst_65910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:197730*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197730*0 + 3*630*FLEN/8, x4, x1, x2)

inst_65911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:197733*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197733*0 + 3*631*FLEN/8, x4, x1, x2)

inst_65912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:197736*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197736*0 + 3*632*FLEN/8, x4, x1, x2)

inst_65913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:197739*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197739*0 + 3*633*FLEN/8, x4, x1, x2)

inst_65914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:197742*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197742*0 + 3*634*FLEN/8, x4, x1, x2)

inst_65915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:197745*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197745*0 + 3*635*FLEN/8, x4, x1, x2)

inst_65916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:197748*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197748*0 + 3*636*FLEN/8, x4, x1, x2)

inst_65917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:197751*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197751*0 + 3*637*FLEN/8, x4, x1, x2)

inst_65918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:197754*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197754*0 + 3*638*FLEN/8, x4, x1, x2)

inst_65919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:197757*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197757*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_65920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:197760*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197760*0 + 3*640*FLEN/8, x4, x1, x2)

inst_65921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:197763*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197763*0 + 3*641*FLEN/8, x4, x1, x2)

inst_65922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:197766*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197766*0 + 3*642*FLEN/8, x4, x1, x2)

inst_65923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:197769*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197769*0 + 3*643*FLEN/8, x4, x1, x2)

inst_65924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:197772*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197772*0 + 3*644*FLEN/8, x4, x1, x2)

inst_65925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:197775*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197775*0 + 3*645*FLEN/8, x4, x1, x2)

inst_65926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:197778*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197778*0 + 3*646*FLEN/8, x4, x1, x2)

inst_65927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:197781*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197781*0 + 3*647*FLEN/8, x4, x1, x2)

inst_65928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:197784*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197784*0 + 3*648*FLEN/8, x4, x1, x2)

inst_65929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:197787*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197787*0 + 3*649*FLEN/8, x4, x1, x2)

inst_65930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:197790*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197790*0 + 3*650*FLEN/8, x4, x1, x2)

inst_65931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:197793*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197793*0 + 3*651*FLEN/8, x4, x1, x2)

inst_65932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:197796*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197796*0 + 3*652*FLEN/8, x4, x1, x2)

inst_65933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:197799*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197799*0 + 3*653*FLEN/8, x4, x1, x2)

inst_65934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:197802*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197802*0 + 3*654*FLEN/8, x4, x1, x2)

inst_65935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:197805*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197805*0 + 3*655*FLEN/8, x4, x1, x2)

inst_65936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:197808*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197808*0 + 3*656*FLEN/8, x4, x1, x2)

inst_65937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:197811*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197811*0 + 3*657*FLEN/8, x4, x1, x2)

inst_65938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:197814*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197814*0 + 3*658*FLEN/8, x4, x1, x2)

inst_65939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:197817*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197817*0 + 3*659*FLEN/8, x4, x1, x2)

inst_65940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:197820*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197820*0 + 3*660*FLEN/8, x4, x1, x2)

inst_65941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:197823*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197823*0 + 3*661*FLEN/8, x4, x1, x2)

inst_65942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:197826*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197826*0 + 3*662*FLEN/8, x4, x1, x2)

inst_65943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:197829*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197829*0 + 3*663*FLEN/8, x4, x1, x2)

inst_65944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:197832*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197832*0 + 3*664*FLEN/8, x4, x1, x2)

inst_65945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:197835*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197835*0 + 3*665*FLEN/8, x4, x1, x2)

inst_65946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:197838*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197838*0 + 3*666*FLEN/8, x4, x1, x2)

inst_65947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:197841*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197841*0 + 3*667*FLEN/8, x4, x1, x2)

inst_65948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:197844*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197844*0 + 3*668*FLEN/8, x4, x1, x2)

inst_65949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:197847*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197847*0 + 3*669*FLEN/8, x4, x1, x2)

inst_65950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:197850*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197850*0 + 3*670*FLEN/8, x4, x1, x2)

inst_65951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:197853*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197853*0 + 3*671*FLEN/8, x4, x1, x2)

inst_65952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:197856*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197856*0 + 3*672*FLEN/8, x4, x1, x2)

inst_65953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:197859*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197859*0 + 3*673*FLEN/8, x4, x1, x2)

inst_65954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:197862*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197862*0 + 3*674*FLEN/8, x4, x1, x2)

inst_65955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:197865*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197865*0 + 3*675*FLEN/8, x4, x1, x2)

inst_65956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:197868*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197868*0 + 3*676*FLEN/8, x4, x1, x2)

inst_65957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:197871*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197871*0 + 3*677*FLEN/8, x4, x1, x2)

inst_65958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:197874*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197874*0 + 3*678*FLEN/8, x4, x1, x2)

inst_65959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:197877*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197877*0 + 3*679*FLEN/8, x4, x1, x2)

inst_65960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:197880*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197880*0 + 3*680*FLEN/8, x4, x1, x2)

inst_65961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:197883*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197883*0 + 3*681*FLEN/8, x4, x1, x2)

inst_65962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:197886*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197886*0 + 3*682*FLEN/8, x4, x1, x2)

inst_65963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:197889*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197889*0 + 3*683*FLEN/8, x4, x1, x2)

inst_65964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:197892*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197892*0 + 3*684*FLEN/8, x4, x1, x2)

inst_65965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:197895*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197895*0 + 3*685*FLEN/8, x4, x1, x2)

inst_65966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:197898*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197898*0 + 3*686*FLEN/8, x4, x1, x2)

inst_65967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:197901*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197901*0 + 3*687*FLEN/8, x4, x1, x2)

inst_65968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:197904*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197904*0 + 3*688*FLEN/8, x4, x1, x2)

inst_65969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:197907*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197907*0 + 3*689*FLEN/8, x4, x1, x2)

inst_65970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:197910*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197910*0 + 3*690*FLEN/8, x4, x1, x2)

inst_65971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:197913*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197913*0 + 3*691*FLEN/8, x4, x1, x2)

inst_65972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:197916*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197916*0 + 3*692*FLEN/8, x4, x1, x2)

inst_65973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:197919*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197919*0 + 3*693*FLEN/8, x4, x1, x2)

inst_65974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:197922*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197922*0 + 3*694*FLEN/8, x4, x1, x2)

inst_65975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:197925*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197925*0 + 3*695*FLEN/8, x4, x1, x2)

inst_65976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:197928*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197928*0 + 3*696*FLEN/8, x4, x1, x2)

inst_65977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:197931*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197931*0 + 3*697*FLEN/8, x4, x1, x2)

inst_65978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:197934*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197934*0 + 3*698*FLEN/8, x4, x1, x2)

inst_65979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:197937*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197937*0 + 3*699*FLEN/8, x4, x1, x2)

inst_65980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:197940*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197940*0 + 3*700*FLEN/8, x4, x1, x2)

inst_65981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4074322ede639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4074322ede639; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:197943*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197943*0 + 3*701*FLEN/8, x4, x1, x2)

inst_65982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:197946*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197946*0 + 3*702*FLEN/8, x4, x1, x2)

inst_65983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:197949*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197949*0 + 3*703*FLEN/8, x4, x1, x2)

inst_65984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:197952*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197952*0 + 3*704*FLEN/8, x4, x1, x2)

inst_65985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:197955*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197955*0 + 3*705*FLEN/8, x4, x1, x2)

inst_65986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:197958*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197958*0 + 3*706*FLEN/8, x4, x1, x2)

inst_65987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:197961*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197961*0 + 3*707*FLEN/8, x4, x1, x2)

inst_65988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:197964*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197964*0 + 3*708*FLEN/8, x4, x1, x2)

inst_65989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:197967*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197967*0 + 3*709*FLEN/8, x4, x1, x2)

inst_65990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:197970*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197970*0 + 3*710*FLEN/8, x4, x1, x2)

inst_65991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:197973*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197973*0 + 3*711*FLEN/8, x4, x1, x2)

inst_65992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:197976*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197976*0 + 3*712*FLEN/8, x4, x1, x2)

inst_65993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:197979*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197979*0 + 3*713*FLEN/8, x4, x1, x2)

inst_65994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:197982*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197982*0 + 3*714*FLEN/8, x4, x1, x2)

inst_65995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:197985*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197985*0 + 3*715*FLEN/8, x4, x1, x2)

inst_65996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:197988*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197988*0 + 3*716*FLEN/8, x4, x1, x2)

inst_65997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:197991*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197991*0 + 3*717*FLEN/8, x4, x1, x2)

inst_65998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:197994*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197994*0 + 3*718*FLEN/8, x4, x1, x2)

inst_65999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:197997*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197997*0 + 3*719*FLEN/8, x4, x1, x2)

inst_66000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:198000*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198000*0 + 3*720*FLEN/8, x4, x1, x2)

inst_66001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:198003*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198003*0 + 3*721*FLEN/8, x4, x1, x2)

inst_66002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:198006*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198006*0 + 3*722*FLEN/8, x4, x1, x2)

inst_66003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:198009*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198009*0 + 3*723*FLEN/8, x4, x1, x2)

inst_66004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000000000; valaddr_reg:x3; val_offset:198012*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198012*0 + 3*724*FLEN/8, x4, x1, x2)

inst_66005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000000001; valaddr_reg:x3; val_offset:198015*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198015*0 + 3*725*FLEN/8, x4, x1, x2)

inst_66006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000000003; valaddr_reg:x3; val_offset:198018*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198018*0 + 3*726*FLEN/8, x4, x1, x2)

inst_66007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000000007; valaddr_reg:x3; val_offset:198021*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198021*0 + 3*727*FLEN/8, x4, x1, x2)

inst_66008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000000000f; valaddr_reg:x3; val_offset:198024*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198024*0 + 3*728*FLEN/8, x4, x1, x2)

inst_66009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000000001f; valaddr_reg:x3; val_offset:198027*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198027*0 + 3*729*FLEN/8, x4, x1, x2)

inst_66010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000000003f; valaddr_reg:x3; val_offset:198030*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198030*0 + 3*730*FLEN/8, x4, x1, x2)

inst_66011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000000007f; valaddr_reg:x3; val_offset:198033*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198033*0 + 3*731*FLEN/8, x4, x1, x2)

inst_66012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000000000ff; valaddr_reg:x3; val_offset:198036*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198036*0 + 3*732*FLEN/8, x4, x1, x2)

inst_66013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000000001ff; valaddr_reg:x3; val_offset:198039*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198039*0 + 3*733*FLEN/8, x4, x1, x2)

inst_66014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000000003ff; valaddr_reg:x3; val_offset:198042*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198042*0 + 3*734*FLEN/8, x4, x1, x2)

inst_66015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000000007ff; valaddr_reg:x3; val_offset:198045*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198045*0 + 3*735*FLEN/8, x4, x1, x2)

inst_66016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000000fff; valaddr_reg:x3; val_offset:198048*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198048*0 + 3*736*FLEN/8, x4, x1, x2)

inst_66017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000001fff; valaddr_reg:x3; val_offset:198051*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198051*0 + 3*737*FLEN/8, x4, x1, x2)

inst_66018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000003fff; valaddr_reg:x3; val_offset:198054*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198054*0 + 3*738*FLEN/8, x4, x1, x2)

inst_66019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000007fff; valaddr_reg:x3; val_offset:198057*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198057*0 + 3*739*FLEN/8, x4, x1, x2)

inst_66020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000000ffff; valaddr_reg:x3; val_offset:198060*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198060*0 + 3*740*FLEN/8, x4, x1, x2)

inst_66021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000001ffff; valaddr_reg:x3; val_offset:198063*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198063*0 + 3*741*FLEN/8, x4, x1, x2)

inst_66022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000003ffff; valaddr_reg:x3; val_offset:198066*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198066*0 + 3*742*FLEN/8, x4, x1, x2)

inst_66023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000007ffff; valaddr_reg:x3; val_offset:198069*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198069*0 + 3*743*FLEN/8, x4, x1, x2)

inst_66024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000000fffff; valaddr_reg:x3; val_offset:198072*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198072*0 + 3*744*FLEN/8, x4, x1, x2)

inst_66025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000001fffff; valaddr_reg:x3; val_offset:198075*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198075*0 + 3*745*FLEN/8, x4, x1, x2)

inst_66026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000003fffff; valaddr_reg:x3; val_offset:198078*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198078*0 + 3*746*FLEN/8, x4, x1, x2)

inst_66027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000007fffff; valaddr_reg:x3; val_offset:198081*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198081*0 + 3*747*FLEN/8, x4, x1, x2)

inst_66028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000000ffffff; valaddr_reg:x3; val_offset:198084*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198084*0 + 3*748*FLEN/8, x4, x1, x2)

inst_66029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000001ffffff; valaddr_reg:x3; val_offset:198087*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198087*0 + 3*749*FLEN/8, x4, x1, x2)

inst_66030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000003ffffff; valaddr_reg:x3; val_offset:198090*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198090*0 + 3*750*FLEN/8, x4, x1, x2)

inst_66031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000007ffffff; valaddr_reg:x3; val_offset:198093*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198093*0 + 3*751*FLEN/8, x4, x1, x2)

inst_66032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000000fffffff; valaddr_reg:x3; val_offset:198096*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198096*0 + 3*752*FLEN/8, x4, x1, x2)

inst_66033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000001fffffff; valaddr_reg:x3; val_offset:198099*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198099*0 + 3*753*FLEN/8, x4, x1, x2)

inst_66034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000003fffffff; valaddr_reg:x3; val_offset:198102*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198102*0 + 3*754*FLEN/8, x4, x1, x2)

inst_66035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000007fffffff; valaddr_reg:x3; val_offset:198105*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198105*0 + 3*755*FLEN/8, x4, x1, x2)

inst_66036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500000ffffffff; valaddr_reg:x3; val_offset:198108*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198108*0 + 3*756*FLEN/8, x4, x1, x2)

inst_66037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500001ffffffff; valaddr_reg:x3; val_offset:198111*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198111*0 + 3*757*FLEN/8, x4, x1, x2)

inst_66038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500003ffffffff; valaddr_reg:x3; val_offset:198114*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198114*0 + 3*758*FLEN/8, x4, x1, x2)

inst_66039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500007ffffffff; valaddr_reg:x3; val_offset:198117*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198117*0 + 3*759*FLEN/8, x4, x1, x2)

inst_66040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250000fffffffff; valaddr_reg:x3; val_offset:198120*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198120*0 + 3*760*FLEN/8, x4, x1, x2)

inst_66041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250001fffffffff; valaddr_reg:x3; val_offset:198123*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198123*0 + 3*761*FLEN/8, x4, x1, x2)

inst_66042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250003fffffffff; valaddr_reg:x3; val_offset:198126*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198126*0 + 3*762*FLEN/8, x4, x1, x2)

inst_66043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250007fffffffff; valaddr_reg:x3; val_offset:198129*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198129*0 + 3*763*FLEN/8, x4, x1, x2)

inst_66044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25000ffffffffff; valaddr_reg:x3; val_offset:198132*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198132*0 + 3*764*FLEN/8, x4, x1, x2)

inst_66045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25001ffffffffff; valaddr_reg:x3; val_offset:198135*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198135*0 + 3*765*FLEN/8, x4, x1, x2)

inst_66046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25003ffffffffff; valaddr_reg:x3; val_offset:198138*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198138*0 + 3*766*FLEN/8, x4, x1, x2)

inst_66047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25007ffffffffff; valaddr_reg:x3; val_offset:198141*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198141*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413312,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413313,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413315,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413319,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413327,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413343,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413375,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413439,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413567,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413823,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486414335,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486415359,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486417407,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486421503,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486429695,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486446079,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486478847,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486544383,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486675455,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486937599,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182487461887,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182488510463,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182490607615,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182494801919,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182503190527,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182519967743,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182553522175,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182620631039,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182754848767,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183023284223,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183560155135,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669184633896959,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669186781380607,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669191076347903,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669199666282495,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669216846151679,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669251205890047,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669319925366783,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669457364320255,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669732242227199,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211670281998041087,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211671381509668863,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211673580532924415,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211677978579435519,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211686774672457727,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211704366858502143,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211739551230590975,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211809919974768639,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211950657463123967,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212232132439834623,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212795082393255935,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098559,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098560,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215046882206941184,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215609832160362496,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215891307137073152,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216032044625428480,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216102413369606144,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216137597741694976,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216155189927739392,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216163986020761600,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216168384067272704,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216170583090528256,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216171682602156032,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172232357969920,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172507235876864,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172644674830336,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172713394307072,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172747754045440,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172764933914624,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172773523849216,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172777818816512,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172779966300160,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781040041984,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781576912896,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781845348352,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781979566080,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782046674944,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782080229376,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782097006592,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782105395200,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782109589504,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782111686656,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782112735232,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113259520,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113521664,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113652736,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113718272,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113751040,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113767424,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113775616,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113779712,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113781760,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113782784,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783296,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783552,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783680,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783744,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783776,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783792,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783800,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783804,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783806,64,FLEN)
NAN_BOXED(6891609934016983726,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783807,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118720,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118721,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118723,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118727,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118735,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118751,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118783,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118847,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865118975,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865119231,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865119743,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865120767,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865122815,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865126911,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865135103,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865151487,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865184255,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865249791,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865380863,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647865643007,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647866167295,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647867215871,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647869313023,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647873507327,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647881895935,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647898673151,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647932227583,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901647999336447,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901648133554175,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901648401989631,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901648938860543,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901650012602367,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901652160086015,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901656455053311,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901665044987903,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901682224857087,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901716584595455,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901785304072191,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255901922743025663,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255902197620932607,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255902747376746495,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255903846888374271,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255906045911629823,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255910443958140927,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255919240051163135,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255936832237207551,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4255972016609296383,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4256042385353474047,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4256183122841829375,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4256464597818540031,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4257027547771961343,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4258153447678803967,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4258153447678803968,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4259279347585646592,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4259842297539067904,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260123772515778560,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260264510004133888,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260334878748311552,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260370063120400384,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260387655306444800,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260396451399467008,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260400849445978112,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260403048469233664,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260404147980861440,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260404697736675328,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260404972614582272,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405110053535744,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405178773012480,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405213132750848,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405230312620032,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405238902554624,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405243197521920,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405245345005568,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405246418747392,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405246955618304,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247224053760,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247358271488,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247425380352,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247458934784,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247475712000,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247484100608,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247488294912,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247490392064,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247491440640,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247491964928,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492227072,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492358144,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492423680,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492456448,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492472832,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492481024,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492485120,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492487168,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492488192,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492488704,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492488960,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489088,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489152,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489184,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489200,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489208,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489212,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489214,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4260405247492489215,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891614980442494514,64,FLEN)
NAN_BOXED(2322079531835659063,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225152,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225153,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225155,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225159,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225167,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225183,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225215,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225279,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225407,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225663,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322226175,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322227199,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322229247,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322233343,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322241535,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322257919,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322290687,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322356223,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322487295,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322749439,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422323273727,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422324322303,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422326419455,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422330613759,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422339002367,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422355779583,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422389334015,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422456442879,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422590660607,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422859096063,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012423395966975,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012424469708799,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012426617192447,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012430912159743,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012439502094335,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012456681963519,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012491041701887,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012559761178623,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012697200132095,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012972078039039,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399013521833852927,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399014621345480703,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399016820368736255,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399021218415247359,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399030014508269567,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399047606694313983,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399082791066402815,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399153159810580479,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399293897298935807,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399575372275646463,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9400138322229067775,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9401264222135910399,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9401264222135910400,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9402390122042753024,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9402953071996174336,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403234546972884992,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403375284461240320,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403445653205417984,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403480837577506816,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403498429763551232,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403507225856573440,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403511623903084544,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403513822926340096,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403514922437967872,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515472193781760,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515747071688704,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515884510642176,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515953230118912,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515987589857280,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516004769726464,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516013359661056,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516017654628352,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516019802112000,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516020875853824,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021412724736,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021681160192,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021815377920,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021882486784,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021916041216,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021932818432,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021941207040,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021945401344,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021947498496,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021948547072,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949071360,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949333504,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949464576,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949530112,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949562880,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949579264,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949587456,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949591552,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949593600,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949594624,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595136,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595392,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595520,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595584,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595616,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595632,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595640,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595644,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595646,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595647,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635072,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635073,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635075,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635079,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635087,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635103,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635135,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635199,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635327,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635583,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869636095,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869637119,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869639167,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869643263,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869651455,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869667839,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869700607,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869766143,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869897215,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414870159359,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414870683647,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414871732223,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414873829375,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414878023679,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414886412287,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414903189503,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414936743935,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415003852799,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415138070527,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415406505983,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415943376895,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084417017118719,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084419164602367,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084423459569663,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084432049504255,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084449229373439,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084483589111807,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084552308588543,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084689747542015,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084964625448959,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489085514381262847,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489086613892890623,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489088812916146175,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489093210962657279,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489102007055679487,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489119599241723903,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489154783613812735,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489225152357990399,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489365889846345727,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489647364823056383,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9490210314776477695,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9491336214683320319,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9491336214683320320,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9492462114590162944,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493025064543584256,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493306539520294912,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493447277008650240,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493517645752827904,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493552830124916736,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493570422310961152,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493579218403983360,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493583616450494464,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493585815473750016,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493586914985377792,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587464741191680,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587739619098624,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587877058052096,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587945777528832,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587980137267200,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587997317136384,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588005907070976,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588010202038272,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588012349521920,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588013423263744,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588013960134656,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014228570112,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014362787840,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014429896704,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014463451136,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014480228352,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014488616960,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014492811264,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014494908416,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014495956992,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496481280,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496743424,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496874496,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496940032,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496972800,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496989184,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496997376,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497001472,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497003520,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497004544,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005056,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005312,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005440,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005504,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005536,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005552,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005560,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005564,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005566,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005567,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891641314713921081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708352,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708353,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708355,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708359,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708367,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708383,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708415,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708479,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708607,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708863,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212709375,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212710399,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212712447,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212716543,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212724735,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212741119,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212773887,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212839423,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212970495,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213232639,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213756927,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186214805503,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186216902655,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186221096959,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186229485567,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186246262783,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186279817215,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186346926079,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186481143807,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186749579263,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633187286450175,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633188360191999,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633190507675647,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633194802642943,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633203392577535,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633220572446719,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633254932185087,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633323651661823,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633461090615295,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633735968522239,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166634285724336127,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166635385235963903,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166637584259219455,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166641982305730559,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
