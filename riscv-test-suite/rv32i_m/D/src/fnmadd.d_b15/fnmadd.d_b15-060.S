
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_45312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1a3ffffffffffff; valaddr_reg:x3; val_offset:135936*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135936*0 + 3*0*FLEN/8, x4, x1, x2)

inst_45313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1a7ffffffffffff; valaddr_reg:x3; val_offset:135939*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135939*0 + 3*1*FLEN/8, x4, x1, x2)

inst_45314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1a8000000000000; valaddr_reg:x3; val_offset:135942*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135942*0 + 3*2*FLEN/8, x4, x1, x2)

inst_45315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1ac000000000000; valaddr_reg:x3; val_offset:135945*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135945*0 + 3*3*FLEN/8, x4, x1, x2)

inst_45316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1ae000000000000; valaddr_reg:x3; val_offset:135948*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135948*0 + 3*4*FLEN/8, x4, x1, x2)

inst_45317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1af000000000000; valaddr_reg:x3; val_offset:135951*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135951*0 + 3*5*FLEN/8, x4, x1, x2)

inst_45318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1af800000000000; valaddr_reg:x3; val_offset:135954*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135954*0 + 3*6*FLEN/8, x4, x1, x2)

inst_45319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afc00000000000; valaddr_reg:x3; val_offset:135957*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135957*0 + 3*7*FLEN/8, x4, x1, x2)

inst_45320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afe00000000000; valaddr_reg:x3; val_offset:135960*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135960*0 + 3*8*FLEN/8, x4, x1, x2)

inst_45321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1aff00000000000; valaddr_reg:x3; val_offset:135963*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135963*0 + 3*9*FLEN/8, x4, x1, x2)

inst_45322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1aff80000000000; valaddr_reg:x3; val_offset:135966*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135966*0 + 3*10*FLEN/8, x4, x1, x2)

inst_45323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affc0000000000; valaddr_reg:x3; val_offset:135969*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135969*0 + 3*11*FLEN/8, x4, x1, x2)

inst_45324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affe0000000000; valaddr_reg:x3; val_offset:135972*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135972*0 + 3*12*FLEN/8, x4, x1, x2)

inst_45325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afff0000000000; valaddr_reg:x3; val_offset:135975*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135975*0 + 3*13*FLEN/8, x4, x1, x2)

inst_45326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afff8000000000; valaddr_reg:x3; val_offset:135978*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135978*0 + 3*14*FLEN/8, x4, x1, x2)

inst_45327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffc000000000; valaddr_reg:x3; val_offset:135981*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135981*0 + 3*15*FLEN/8, x4, x1, x2)

inst_45328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffe000000000; valaddr_reg:x3; val_offset:135984*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135984*0 + 3*16*FLEN/8, x4, x1, x2)

inst_45329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affff000000000; valaddr_reg:x3; val_offset:135987*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135987*0 + 3*17*FLEN/8, x4, x1, x2)

inst_45330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affff800000000; valaddr_reg:x3; val_offset:135990*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135990*0 + 3*18*FLEN/8, x4, x1, x2)

inst_45331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffc00000000; valaddr_reg:x3; val_offset:135993*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135993*0 + 3*19*FLEN/8, x4, x1, x2)

inst_45332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffe00000000; valaddr_reg:x3; val_offset:135996*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135996*0 + 3*20*FLEN/8, x4, x1, x2)

inst_45333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffff00000000; valaddr_reg:x3; val_offset:135999*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135999*0 + 3*21*FLEN/8, x4, x1, x2)

inst_45334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffff80000000; valaddr_reg:x3; val_offset:136002*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136002*0 + 3*22*FLEN/8, x4, x1, x2)

inst_45335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffc0000000; valaddr_reg:x3; val_offset:136005*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136005*0 + 3*23*FLEN/8, x4, x1, x2)

inst_45336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffe0000000; valaddr_reg:x3; val_offset:136008*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136008*0 + 3*24*FLEN/8, x4, x1, x2)

inst_45337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffff0000000; valaddr_reg:x3; val_offset:136011*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136011*0 + 3*25*FLEN/8, x4, x1, x2)

inst_45338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffff8000000; valaddr_reg:x3; val_offset:136014*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136014*0 + 3*26*FLEN/8, x4, x1, x2)

inst_45339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffc000000; valaddr_reg:x3; val_offset:136017*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136017*0 + 3*27*FLEN/8, x4, x1, x2)

inst_45340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffe000000; valaddr_reg:x3; val_offset:136020*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136020*0 + 3*28*FLEN/8, x4, x1, x2)

inst_45341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffff000000; valaddr_reg:x3; val_offset:136023*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136023*0 + 3*29*FLEN/8, x4, x1, x2)

inst_45342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffff800000; valaddr_reg:x3; val_offset:136026*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136026*0 + 3*30*FLEN/8, x4, x1, x2)

inst_45343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffc00000; valaddr_reg:x3; val_offset:136029*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136029*0 + 3*31*FLEN/8, x4, x1, x2)

inst_45344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffe00000; valaddr_reg:x3; val_offset:136032*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136032*0 + 3*32*FLEN/8, x4, x1, x2)

inst_45345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffff00000; valaddr_reg:x3; val_offset:136035*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136035*0 + 3*33*FLEN/8, x4, x1, x2)

inst_45346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffff80000; valaddr_reg:x3; val_offset:136038*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136038*0 + 3*34*FLEN/8, x4, x1, x2)

inst_45347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffc0000; valaddr_reg:x3; val_offset:136041*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136041*0 + 3*35*FLEN/8, x4, x1, x2)

inst_45348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffe0000; valaddr_reg:x3; val_offset:136044*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136044*0 + 3*36*FLEN/8, x4, x1, x2)

inst_45349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffff0000; valaddr_reg:x3; val_offset:136047*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136047*0 + 3*37*FLEN/8, x4, x1, x2)

inst_45350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffff8000; valaddr_reg:x3; val_offset:136050*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136050*0 + 3*38*FLEN/8, x4, x1, x2)

inst_45351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffc000; valaddr_reg:x3; val_offset:136053*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136053*0 + 3*39*FLEN/8, x4, x1, x2)

inst_45352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffe000; valaddr_reg:x3; val_offset:136056*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136056*0 + 3*40*FLEN/8, x4, x1, x2)

inst_45353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffff000; valaddr_reg:x3; val_offset:136059*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136059*0 + 3*41*FLEN/8, x4, x1, x2)

inst_45354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffff800; valaddr_reg:x3; val_offset:136062*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136062*0 + 3*42*FLEN/8, x4, x1, x2)

inst_45355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffffc00; valaddr_reg:x3; val_offset:136065*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136065*0 + 3*43*FLEN/8, x4, x1, x2)

inst_45356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffffe00; valaddr_reg:x3; val_offset:136068*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136068*0 + 3*44*FLEN/8, x4, x1, x2)

inst_45357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffff00; valaddr_reg:x3; val_offset:136071*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136071*0 + 3*45*FLEN/8, x4, x1, x2)

inst_45358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffff80; valaddr_reg:x3; val_offset:136074*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136074*0 + 3*46*FLEN/8, x4, x1, x2)

inst_45359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffffc0; valaddr_reg:x3; val_offset:136077*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136077*0 + 3*47*FLEN/8, x4, x1, x2)

inst_45360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffffe0; valaddr_reg:x3; val_offset:136080*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136080*0 + 3*48*FLEN/8, x4, x1, x2)

inst_45361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffffff0; valaddr_reg:x3; val_offset:136083*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136083*0 + 3*49*FLEN/8, x4, x1, x2)

inst_45362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffffff8; valaddr_reg:x3; val_offset:136086*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136086*0 + 3*50*FLEN/8, x4, x1, x2)

inst_45363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffffffc; valaddr_reg:x3; val_offset:136089*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136089*0 + 3*51*FLEN/8, x4, x1, x2)

inst_45364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1affffffffffffe; valaddr_reg:x3; val_offset:136092*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136092*0 + 3*52*FLEN/8, x4, x1, x2)

inst_45365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc51a668286e2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c51a668286e2b; op2val:0x0;
op3val:0x1afffffffffffff; valaddr_reg:x3; val_offset:136095*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136095*0 + 3*53*FLEN/8, x4, x1, x2)

inst_45366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:136098*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136098*0 + 3*54*FLEN/8, x4, x1, x2)

inst_45367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:136101*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136101*0 + 3*55*FLEN/8, x4, x1, x2)

inst_45368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:136104*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136104*0 + 3*56*FLEN/8, x4, x1, x2)

inst_45369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:136107*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136107*0 + 3*57*FLEN/8, x4, x1, x2)

inst_45370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:136110*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136110*0 + 3*58*FLEN/8, x4, x1, x2)

inst_45371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:136113*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136113*0 + 3*59*FLEN/8, x4, x1, x2)

inst_45372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:136116*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136116*0 + 3*60*FLEN/8, x4, x1, x2)

inst_45373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:136119*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136119*0 + 3*61*FLEN/8, x4, x1, x2)

inst_45374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:136122*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136122*0 + 3*62*FLEN/8, x4, x1, x2)

inst_45375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:136125*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136125*0 + 3*63*FLEN/8, x4, x1, x2)

inst_45376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:136128*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136128*0 + 3*64*FLEN/8, x4, x1, x2)

inst_45377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:136131*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136131*0 + 3*65*FLEN/8, x4, x1, x2)

inst_45378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:136134*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136134*0 + 3*66*FLEN/8, x4, x1, x2)

inst_45379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:136137*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136137*0 + 3*67*FLEN/8, x4, x1, x2)

inst_45380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:136140*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136140*0 + 3*68*FLEN/8, x4, x1, x2)

inst_45381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:136143*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136143*0 + 3*69*FLEN/8, x4, x1, x2)

inst_45382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:136146*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136146*0 + 3*70*FLEN/8, x4, x1, x2)

inst_45383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:136149*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136149*0 + 3*71*FLEN/8, x4, x1, x2)

inst_45384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:136152*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136152*0 + 3*72*FLEN/8, x4, x1, x2)

inst_45385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:136155*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136155*0 + 3*73*FLEN/8, x4, x1, x2)

inst_45386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:136158*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136158*0 + 3*74*FLEN/8, x4, x1, x2)

inst_45387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:136161*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136161*0 + 3*75*FLEN/8, x4, x1, x2)

inst_45388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000000000; valaddr_reg:x3; val_offset:136164*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136164*0 + 3*76*FLEN/8, x4, x1, x2)

inst_45389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000000001; valaddr_reg:x3; val_offset:136167*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136167*0 + 3*77*FLEN/8, x4, x1, x2)

inst_45390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000000003; valaddr_reg:x3; val_offset:136170*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136170*0 + 3*78*FLEN/8, x4, x1, x2)

inst_45391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000000007; valaddr_reg:x3; val_offset:136173*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136173*0 + 3*79*FLEN/8, x4, x1, x2)

inst_45392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000000000f; valaddr_reg:x3; val_offset:136176*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136176*0 + 3*80*FLEN/8, x4, x1, x2)

inst_45393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000000001f; valaddr_reg:x3; val_offset:136179*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136179*0 + 3*81*FLEN/8, x4, x1, x2)

inst_45394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000000003f; valaddr_reg:x3; val_offset:136182*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136182*0 + 3*82*FLEN/8, x4, x1, x2)

inst_45395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000000007f; valaddr_reg:x3; val_offset:136185*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136185*0 + 3*83*FLEN/8, x4, x1, x2)

inst_45396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000000000ff; valaddr_reg:x3; val_offset:136188*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136188*0 + 3*84*FLEN/8, x4, x1, x2)

inst_45397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000000001ff; valaddr_reg:x3; val_offset:136191*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136191*0 + 3*85*FLEN/8, x4, x1, x2)

inst_45398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000000003ff; valaddr_reg:x3; val_offset:136194*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136194*0 + 3*86*FLEN/8, x4, x1, x2)

inst_45399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000000007ff; valaddr_reg:x3; val_offset:136197*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136197*0 + 3*87*FLEN/8, x4, x1, x2)

inst_45400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000000fff; valaddr_reg:x3; val_offset:136200*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136200*0 + 3*88*FLEN/8, x4, x1, x2)

inst_45401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000001fff; valaddr_reg:x3; val_offset:136203*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136203*0 + 3*89*FLEN/8, x4, x1, x2)

inst_45402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000003fff; valaddr_reg:x3; val_offset:136206*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136206*0 + 3*90*FLEN/8, x4, x1, x2)

inst_45403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000007fff; valaddr_reg:x3; val_offset:136209*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136209*0 + 3*91*FLEN/8, x4, x1, x2)

inst_45404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000000ffff; valaddr_reg:x3; val_offset:136212*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136212*0 + 3*92*FLEN/8, x4, x1, x2)

inst_45405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000001ffff; valaddr_reg:x3; val_offset:136215*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136215*0 + 3*93*FLEN/8, x4, x1, x2)

inst_45406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000003ffff; valaddr_reg:x3; val_offset:136218*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136218*0 + 3*94*FLEN/8, x4, x1, x2)

inst_45407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000007ffff; valaddr_reg:x3; val_offset:136221*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136221*0 + 3*95*FLEN/8, x4, x1, x2)

inst_45408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000000fffff; valaddr_reg:x3; val_offset:136224*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136224*0 + 3*96*FLEN/8, x4, x1, x2)

inst_45409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000001fffff; valaddr_reg:x3; val_offset:136227*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136227*0 + 3*97*FLEN/8, x4, x1, x2)

inst_45410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000003fffff; valaddr_reg:x3; val_offset:136230*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136230*0 + 3*98*FLEN/8, x4, x1, x2)

inst_45411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000007fffff; valaddr_reg:x3; val_offset:136233*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136233*0 + 3*99*FLEN/8, x4, x1, x2)

inst_45412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000000ffffff; valaddr_reg:x3; val_offset:136236*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136236*0 + 3*100*FLEN/8, x4, x1, x2)

inst_45413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000001ffffff; valaddr_reg:x3; val_offset:136239*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136239*0 + 3*101*FLEN/8, x4, x1, x2)

inst_45414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000003ffffff; valaddr_reg:x3; val_offset:136242*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136242*0 + 3*102*FLEN/8, x4, x1, x2)

inst_45415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000007ffffff; valaddr_reg:x3; val_offset:136245*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136245*0 + 3*103*FLEN/8, x4, x1, x2)

inst_45416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000000fffffff; valaddr_reg:x3; val_offset:136248*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136248*0 + 3*104*FLEN/8, x4, x1, x2)

inst_45417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000001fffffff; valaddr_reg:x3; val_offset:136251*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136251*0 + 3*105*FLEN/8, x4, x1, x2)

inst_45418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000003fffffff; valaddr_reg:x3; val_offset:136254*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136254*0 + 3*106*FLEN/8, x4, x1, x2)

inst_45419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000007fffffff; valaddr_reg:x3; val_offset:136257*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136257*0 + 3*107*FLEN/8, x4, x1, x2)

inst_45420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300000ffffffff; valaddr_reg:x3; val_offset:136260*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136260*0 + 3*108*FLEN/8, x4, x1, x2)

inst_45421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300001ffffffff; valaddr_reg:x3; val_offset:136263*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136263*0 + 3*109*FLEN/8, x4, x1, x2)

inst_45422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300003ffffffff; valaddr_reg:x3; val_offset:136266*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136266*0 + 3*110*FLEN/8, x4, x1, x2)

inst_45423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300007ffffffff; valaddr_reg:x3; val_offset:136269*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136269*0 + 3*111*FLEN/8, x4, x1, x2)

inst_45424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030000fffffffff; valaddr_reg:x3; val_offset:136272*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136272*0 + 3*112*FLEN/8, x4, x1, x2)

inst_45425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030001fffffffff; valaddr_reg:x3; val_offset:136275*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136275*0 + 3*113*FLEN/8, x4, x1, x2)

inst_45426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030003fffffffff; valaddr_reg:x3; val_offset:136278*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136278*0 + 3*114*FLEN/8, x4, x1, x2)

inst_45427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030007fffffffff; valaddr_reg:x3; val_offset:136281*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136281*0 + 3*115*FLEN/8, x4, x1, x2)

inst_45428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803000ffffffffff; valaddr_reg:x3; val_offset:136284*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136284*0 + 3*116*FLEN/8, x4, x1, x2)

inst_45429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803001ffffffffff; valaddr_reg:x3; val_offset:136287*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136287*0 + 3*117*FLEN/8, x4, x1, x2)

inst_45430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803003ffffffffff; valaddr_reg:x3; val_offset:136290*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136290*0 + 3*118*FLEN/8, x4, x1, x2)

inst_45431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803007ffffffffff; valaddr_reg:x3; val_offset:136293*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136293*0 + 3*119*FLEN/8, x4, x1, x2)

inst_45432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80300fffffffffff; valaddr_reg:x3; val_offset:136296*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136296*0 + 3*120*FLEN/8, x4, x1, x2)

inst_45433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80301fffffffffff; valaddr_reg:x3; val_offset:136299*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136299*0 + 3*121*FLEN/8, x4, x1, x2)

inst_45434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80303fffffffffff; valaddr_reg:x3; val_offset:136302*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136302*0 + 3*122*FLEN/8, x4, x1, x2)

inst_45435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x80307fffffffffff; valaddr_reg:x3; val_offset:136305*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136305*0 + 3*123*FLEN/8, x4, x1, x2)

inst_45436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8030ffffffffffff; valaddr_reg:x3; val_offset:136308*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136308*0 + 3*124*FLEN/8, x4, x1, x2)

inst_45437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8031ffffffffffff; valaddr_reg:x3; val_offset:136311*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136311*0 + 3*125*FLEN/8, x4, x1, x2)

inst_45438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8033ffffffffffff; valaddr_reg:x3; val_offset:136314*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136314*0 + 3*126*FLEN/8, x4, x1, x2)

inst_45439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8037ffffffffffff; valaddr_reg:x3; val_offset:136317*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136317*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_45440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x8038000000000000; valaddr_reg:x3; val_offset:136320*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136320*0 + 3*128*FLEN/8, x4, x1, x2)

inst_45441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803c000000000000; valaddr_reg:x3; val_offset:136323*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136323*0 + 3*129*FLEN/8, x4, x1, x2)

inst_45442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803e000000000000; valaddr_reg:x3; val_offset:136326*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136326*0 + 3*130*FLEN/8, x4, x1, x2)

inst_45443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803f000000000000; valaddr_reg:x3; val_offset:136329*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136329*0 + 3*131*FLEN/8, x4, x1, x2)

inst_45444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803f800000000000; valaddr_reg:x3; val_offset:136332*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136332*0 + 3*132*FLEN/8, x4, x1, x2)

inst_45445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fc00000000000; valaddr_reg:x3; val_offset:136335*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136335*0 + 3*133*FLEN/8, x4, x1, x2)

inst_45446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fe00000000000; valaddr_reg:x3; val_offset:136338*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136338*0 + 3*134*FLEN/8, x4, x1, x2)

inst_45447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ff00000000000; valaddr_reg:x3; val_offset:136341*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136341*0 + 3*135*FLEN/8, x4, x1, x2)

inst_45448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ff80000000000; valaddr_reg:x3; val_offset:136344*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136344*0 + 3*136*FLEN/8, x4, x1, x2)

inst_45449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffc0000000000; valaddr_reg:x3; val_offset:136347*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136347*0 + 3*137*FLEN/8, x4, x1, x2)

inst_45450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffe0000000000; valaddr_reg:x3; val_offset:136350*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136350*0 + 3*138*FLEN/8, x4, x1, x2)

inst_45451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fff0000000000; valaddr_reg:x3; val_offset:136353*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136353*0 + 3*139*FLEN/8, x4, x1, x2)

inst_45452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fff8000000000; valaddr_reg:x3; val_offset:136356*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136356*0 + 3*140*FLEN/8, x4, x1, x2)

inst_45453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffc000000000; valaddr_reg:x3; val_offset:136359*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136359*0 + 3*141*FLEN/8, x4, x1, x2)

inst_45454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffe000000000; valaddr_reg:x3; val_offset:136362*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136362*0 + 3*142*FLEN/8, x4, x1, x2)

inst_45455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffff000000000; valaddr_reg:x3; val_offset:136365*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136365*0 + 3*143*FLEN/8, x4, x1, x2)

inst_45456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffff800000000; valaddr_reg:x3; val_offset:136368*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136368*0 + 3*144*FLEN/8, x4, x1, x2)

inst_45457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffc00000000; valaddr_reg:x3; val_offset:136371*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136371*0 + 3*145*FLEN/8, x4, x1, x2)

inst_45458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffe00000000; valaddr_reg:x3; val_offset:136374*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136374*0 + 3*146*FLEN/8, x4, x1, x2)

inst_45459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffff00000000; valaddr_reg:x3; val_offset:136377*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136377*0 + 3*147*FLEN/8, x4, x1, x2)

inst_45460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffff80000000; valaddr_reg:x3; val_offset:136380*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136380*0 + 3*148*FLEN/8, x4, x1, x2)

inst_45461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffc0000000; valaddr_reg:x3; val_offset:136383*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136383*0 + 3*149*FLEN/8, x4, x1, x2)

inst_45462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffe0000000; valaddr_reg:x3; val_offset:136386*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136386*0 + 3*150*FLEN/8, x4, x1, x2)

inst_45463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffff0000000; valaddr_reg:x3; val_offset:136389*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136389*0 + 3*151*FLEN/8, x4, x1, x2)

inst_45464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffff8000000; valaddr_reg:x3; val_offset:136392*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136392*0 + 3*152*FLEN/8, x4, x1, x2)

inst_45465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffc000000; valaddr_reg:x3; val_offset:136395*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136395*0 + 3*153*FLEN/8, x4, x1, x2)

inst_45466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffe000000; valaddr_reg:x3; val_offset:136398*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136398*0 + 3*154*FLEN/8, x4, x1, x2)

inst_45467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffff000000; valaddr_reg:x3; val_offset:136401*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136401*0 + 3*155*FLEN/8, x4, x1, x2)

inst_45468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffff800000; valaddr_reg:x3; val_offset:136404*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136404*0 + 3*156*FLEN/8, x4, x1, x2)

inst_45469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffc00000; valaddr_reg:x3; val_offset:136407*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136407*0 + 3*157*FLEN/8, x4, x1, x2)

inst_45470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffe00000; valaddr_reg:x3; val_offset:136410*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136410*0 + 3*158*FLEN/8, x4, x1, x2)

inst_45471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffff00000; valaddr_reg:x3; val_offset:136413*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136413*0 + 3*159*FLEN/8, x4, x1, x2)

inst_45472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffff80000; valaddr_reg:x3; val_offset:136416*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136416*0 + 3*160*FLEN/8, x4, x1, x2)

inst_45473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffc0000; valaddr_reg:x3; val_offset:136419*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136419*0 + 3*161*FLEN/8, x4, x1, x2)

inst_45474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffe0000; valaddr_reg:x3; val_offset:136422*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136422*0 + 3*162*FLEN/8, x4, x1, x2)

inst_45475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffff0000; valaddr_reg:x3; val_offset:136425*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136425*0 + 3*163*FLEN/8, x4, x1, x2)

inst_45476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffff8000; valaddr_reg:x3; val_offset:136428*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136428*0 + 3*164*FLEN/8, x4, x1, x2)

inst_45477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffc000; valaddr_reg:x3; val_offset:136431*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136431*0 + 3*165*FLEN/8, x4, x1, x2)

inst_45478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffe000; valaddr_reg:x3; val_offset:136434*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136434*0 + 3*166*FLEN/8, x4, x1, x2)

inst_45479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffff000; valaddr_reg:x3; val_offset:136437*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136437*0 + 3*167*FLEN/8, x4, x1, x2)

inst_45480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffff800; valaddr_reg:x3; val_offset:136440*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136440*0 + 3*168*FLEN/8, x4, x1, x2)

inst_45481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffffc00; valaddr_reg:x3; val_offset:136443*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136443*0 + 3*169*FLEN/8, x4, x1, x2)

inst_45482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffffe00; valaddr_reg:x3; val_offset:136446*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136446*0 + 3*170*FLEN/8, x4, x1, x2)

inst_45483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffff00; valaddr_reg:x3; val_offset:136449*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136449*0 + 3*171*FLEN/8, x4, x1, x2)

inst_45484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffff80; valaddr_reg:x3; val_offset:136452*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136452*0 + 3*172*FLEN/8, x4, x1, x2)

inst_45485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffffc0; valaddr_reg:x3; val_offset:136455*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136455*0 + 3*173*FLEN/8, x4, x1, x2)

inst_45486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffffe0; valaddr_reg:x3; val_offset:136458*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136458*0 + 3*174*FLEN/8, x4, x1, x2)

inst_45487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffffff0; valaddr_reg:x3; val_offset:136461*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136461*0 + 3*175*FLEN/8, x4, x1, x2)

inst_45488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffffff8; valaddr_reg:x3; val_offset:136464*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136464*0 + 3*176*FLEN/8, x4, x1, x2)

inst_45489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffffffc; valaddr_reg:x3; val_offset:136467*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136467*0 + 3*177*FLEN/8, x4, x1, x2)

inst_45490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803ffffffffffffe; valaddr_reg:x3; val_offset:136470*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136470*0 + 3*178*FLEN/8, x4, x1, x2)

inst_45491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc638eeca6c669 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c638eeca6c669; op2val:0x8000;
op3val:0x803fffffffffffff; valaddr_reg:x3; val_offset:136473*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136473*0 + 3*179*FLEN/8, x4, x1, x2)

inst_45492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000000000; valaddr_reg:x3; val_offset:136476*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136476*0 + 3*180*FLEN/8, x4, x1, x2)

inst_45493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000000001; valaddr_reg:x3; val_offset:136479*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136479*0 + 3*181*FLEN/8, x4, x1, x2)

inst_45494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000000003; valaddr_reg:x3; val_offset:136482*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136482*0 + 3*182*FLEN/8, x4, x1, x2)

inst_45495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000000007; valaddr_reg:x3; val_offset:136485*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136485*0 + 3*183*FLEN/8, x4, x1, x2)

inst_45496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000000000f; valaddr_reg:x3; val_offset:136488*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136488*0 + 3*184*FLEN/8, x4, x1, x2)

inst_45497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000000001f; valaddr_reg:x3; val_offset:136491*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136491*0 + 3*185*FLEN/8, x4, x1, x2)

inst_45498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000000003f; valaddr_reg:x3; val_offset:136494*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136494*0 + 3*186*FLEN/8, x4, x1, x2)

inst_45499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000000007f; valaddr_reg:x3; val_offset:136497*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136497*0 + 3*187*FLEN/8, x4, x1, x2)

inst_45500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000000000ff; valaddr_reg:x3; val_offset:136500*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136500*0 + 3*188*FLEN/8, x4, x1, x2)

inst_45501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000000001ff; valaddr_reg:x3; val_offset:136503*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136503*0 + 3*189*FLEN/8, x4, x1, x2)

inst_45502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000000003ff; valaddr_reg:x3; val_offset:136506*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136506*0 + 3*190*FLEN/8, x4, x1, x2)

inst_45503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000000007ff; valaddr_reg:x3; val_offset:136509*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136509*0 + 3*191*FLEN/8, x4, x1, x2)

inst_45504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000000fff; valaddr_reg:x3; val_offset:136512*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136512*0 + 3*192*FLEN/8, x4, x1, x2)

inst_45505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000001fff; valaddr_reg:x3; val_offset:136515*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136515*0 + 3*193*FLEN/8, x4, x1, x2)

inst_45506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000003fff; valaddr_reg:x3; val_offset:136518*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136518*0 + 3*194*FLEN/8, x4, x1, x2)

inst_45507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000007fff; valaddr_reg:x3; val_offset:136521*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136521*0 + 3*195*FLEN/8, x4, x1, x2)

inst_45508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000000ffff; valaddr_reg:x3; val_offset:136524*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136524*0 + 3*196*FLEN/8, x4, x1, x2)

inst_45509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000001ffff; valaddr_reg:x3; val_offset:136527*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136527*0 + 3*197*FLEN/8, x4, x1, x2)

inst_45510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000003ffff; valaddr_reg:x3; val_offset:136530*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136530*0 + 3*198*FLEN/8, x4, x1, x2)

inst_45511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000007ffff; valaddr_reg:x3; val_offset:136533*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136533*0 + 3*199*FLEN/8, x4, x1, x2)

inst_45512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000000fffff; valaddr_reg:x3; val_offset:136536*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136536*0 + 3*200*FLEN/8, x4, x1, x2)

inst_45513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000001fffff; valaddr_reg:x3; val_offset:136539*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136539*0 + 3*201*FLEN/8, x4, x1, x2)

inst_45514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000003fffff; valaddr_reg:x3; val_offset:136542*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136542*0 + 3*202*FLEN/8, x4, x1, x2)

inst_45515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000007fffff; valaddr_reg:x3; val_offset:136545*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136545*0 + 3*203*FLEN/8, x4, x1, x2)

inst_45516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000000ffffff; valaddr_reg:x3; val_offset:136548*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136548*0 + 3*204*FLEN/8, x4, x1, x2)

inst_45517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000001ffffff; valaddr_reg:x3; val_offset:136551*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136551*0 + 3*205*FLEN/8, x4, x1, x2)

inst_45518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000003ffffff; valaddr_reg:x3; val_offset:136554*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136554*0 + 3*206*FLEN/8, x4, x1, x2)

inst_45519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000007ffffff; valaddr_reg:x3; val_offset:136557*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136557*0 + 3*207*FLEN/8, x4, x1, x2)

inst_45520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000000fffffff; valaddr_reg:x3; val_offset:136560*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136560*0 + 3*208*FLEN/8, x4, x1, x2)

inst_45521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000001fffffff; valaddr_reg:x3; val_offset:136563*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136563*0 + 3*209*FLEN/8, x4, x1, x2)

inst_45522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000003fffffff; valaddr_reg:x3; val_offset:136566*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136566*0 + 3*210*FLEN/8, x4, x1, x2)

inst_45523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000007fffffff; valaddr_reg:x3; val_offset:136569*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136569*0 + 3*211*FLEN/8, x4, x1, x2)

inst_45524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00000ffffffff; valaddr_reg:x3; val_offset:136572*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136572*0 + 3*212*FLEN/8, x4, x1, x2)

inst_45525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00001ffffffff; valaddr_reg:x3; val_offset:136575*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136575*0 + 3*213*FLEN/8, x4, x1, x2)

inst_45526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00003ffffffff; valaddr_reg:x3; val_offset:136578*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136578*0 + 3*214*FLEN/8, x4, x1, x2)

inst_45527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00007ffffffff; valaddr_reg:x3; val_offset:136581*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136581*0 + 3*215*FLEN/8, x4, x1, x2)

inst_45528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0000fffffffff; valaddr_reg:x3; val_offset:136584*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136584*0 + 3*216*FLEN/8, x4, x1, x2)

inst_45529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0001fffffffff; valaddr_reg:x3; val_offset:136587*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136587*0 + 3*217*FLEN/8, x4, x1, x2)

inst_45530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0003fffffffff; valaddr_reg:x3; val_offset:136590*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136590*0 + 3*218*FLEN/8, x4, x1, x2)

inst_45531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0007fffffffff; valaddr_reg:x3; val_offset:136593*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136593*0 + 3*219*FLEN/8, x4, x1, x2)

inst_45532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f000ffffffffff; valaddr_reg:x3; val_offset:136596*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136596*0 + 3*220*FLEN/8, x4, x1, x2)

inst_45533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f001ffffffffff; valaddr_reg:x3; val_offset:136599*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136599*0 + 3*221*FLEN/8, x4, x1, x2)

inst_45534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f003ffffffffff; valaddr_reg:x3; val_offset:136602*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136602*0 + 3*222*FLEN/8, x4, x1, x2)

inst_45535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f007ffffffffff; valaddr_reg:x3; val_offset:136605*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136605*0 + 3*223*FLEN/8, x4, x1, x2)

inst_45536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f00fffffffffff; valaddr_reg:x3; val_offset:136608*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136608*0 + 3*224*FLEN/8, x4, x1, x2)

inst_45537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f01fffffffffff; valaddr_reg:x3; val_offset:136611*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136611*0 + 3*225*FLEN/8, x4, x1, x2)

inst_45538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f03fffffffffff; valaddr_reg:x3; val_offset:136614*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136614*0 + 3*226*FLEN/8, x4, x1, x2)

inst_45539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f07fffffffffff; valaddr_reg:x3; val_offset:136617*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136617*0 + 3*227*FLEN/8, x4, x1, x2)

inst_45540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f0ffffffffffff; valaddr_reg:x3; val_offset:136620*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136620*0 + 3*228*FLEN/8, x4, x1, x2)

inst_45541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f1ffffffffffff; valaddr_reg:x3; val_offset:136623*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136623*0 + 3*229*FLEN/8, x4, x1, x2)

inst_45542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f3ffffffffffff; valaddr_reg:x3; val_offset:136626*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136626*0 + 3*230*FLEN/8, x4, x1, x2)

inst_45543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f7ffffffffffff; valaddr_reg:x3; val_offset:136629*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136629*0 + 3*231*FLEN/8, x4, x1, x2)

inst_45544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38f8000000000000; valaddr_reg:x3; val_offset:136632*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136632*0 + 3*232*FLEN/8, x4, x1, x2)

inst_45545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fc000000000000; valaddr_reg:x3; val_offset:136635*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136635*0 + 3*233*FLEN/8, x4, x1, x2)

inst_45546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fe000000000000; valaddr_reg:x3; val_offset:136638*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136638*0 + 3*234*FLEN/8, x4, x1, x2)

inst_45547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ff000000000000; valaddr_reg:x3; val_offset:136641*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136641*0 + 3*235*FLEN/8, x4, x1, x2)

inst_45548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ff800000000000; valaddr_reg:x3; val_offset:136644*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136644*0 + 3*236*FLEN/8, x4, x1, x2)

inst_45549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffc00000000000; valaddr_reg:x3; val_offset:136647*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136647*0 + 3*237*FLEN/8, x4, x1, x2)

inst_45550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffe00000000000; valaddr_reg:x3; val_offset:136650*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136650*0 + 3*238*FLEN/8, x4, x1, x2)

inst_45551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fff00000000000; valaddr_reg:x3; val_offset:136653*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136653*0 + 3*239*FLEN/8, x4, x1, x2)

inst_45552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fff80000000000; valaddr_reg:x3; val_offset:136656*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136656*0 + 3*240*FLEN/8, x4, x1, x2)

inst_45553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffc0000000000; valaddr_reg:x3; val_offset:136659*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136659*0 + 3*241*FLEN/8, x4, x1, x2)

inst_45554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffe0000000000; valaddr_reg:x3; val_offset:136662*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136662*0 + 3*242*FLEN/8, x4, x1, x2)

inst_45555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffff0000000000; valaddr_reg:x3; val_offset:136665*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136665*0 + 3*243*FLEN/8, x4, x1, x2)

inst_45556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffff8000000000; valaddr_reg:x3; val_offset:136668*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136668*0 + 3*244*FLEN/8, x4, x1, x2)

inst_45557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffc000000000; valaddr_reg:x3; val_offset:136671*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136671*0 + 3*245*FLEN/8, x4, x1, x2)

inst_45558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffe000000000; valaddr_reg:x3; val_offset:136674*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136674*0 + 3*246*FLEN/8, x4, x1, x2)

inst_45559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffff000000000; valaddr_reg:x3; val_offset:136677*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136677*0 + 3*247*FLEN/8, x4, x1, x2)

inst_45560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffff800000000; valaddr_reg:x3; val_offset:136680*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136680*0 + 3*248*FLEN/8, x4, x1, x2)

inst_45561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffc00000000; valaddr_reg:x3; val_offset:136683*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136683*0 + 3*249*FLEN/8, x4, x1, x2)

inst_45562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffe00000000; valaddr_reg:x3; val_offset:136686*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136686*0 + 3*250*FLEN/8, x4, x1, x2)

inst_45563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffff00000000; valaddr_reg:x3; val_offset:136689*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136689*0 + 3*251*FLEN/8, x4, x1, x2)

inst_45564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffff80000000; valaddr_reg:x3; val_offset:136692*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136692*0 + 3*252*FLEN/8, x4, x1, x2)

inst_45565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffc0000000; valaddr_reg:x3; val_offset:136695*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136695*0 + 3*253*FLEN/8, x4, x1, x2)

inst_45566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffe0000000; valaddr_reg:x3; val_offset:136698*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136698*0 + 3*254*FLEN/8, x4, x1, x2)

inst_45567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffff0000000; valaddr_reg:x3; val_offset:136701*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136701*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_45568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffff8000000; valaddr_reg:x3; val_offset:136704*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136704*0 + 3*256*FLEN/8, x4, x1, x2)

inst_45569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffc000000; valaddr_reg:x3; val_offset:136707*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136707*0 + 3*257*FLEN/8, x4, x1, x2)

inst_45570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffe000000; valaddr_reg:x3; val_offset:136710*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136710*0 + 3*258*FLEN/8, x4, x1, x2)

inst_45571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffff000000; valaddr_reg:x3; val_offset:136713*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136713*0 + 3*259*FLEN/8, x4, x1, x2)

inst_45572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffff800000; valaddr_reg:x3; val_offset:136716*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136716*0 + 3*260*FLEN/8, x4, x1, x2)

inst_45573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffc00000; valaddr_reg:x3; val_offset:136719*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136719*0 + 3*261*FLEN/8, x4, x1, x2)

inst_45574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffe00000; valaddr_reg:x3; val_offset:136722*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136722*0 + 3*262*FLEN/8, x4, x1, x2)

inst_45575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffff00000; valaddr_reg:x3; val_offset:136725*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136725*0 + 3*263*FLEN/8, x4, x1, x2)

inst_45576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffff80000; valaddr_reg:x3; val_offset:136728*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136728*0 + 3*264*FLEN/8, x4, x1, x2)

inst_45577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffc0000; valaddr_reg:x3; val_offset:136731*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136731*0 + 3*265*FLEN/8, x4, x1, x2)

inst_45578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffe0000; valaddr_reg:x3; val_offset:136734*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136734*0 + 3*266*FLEN/8, x4, x1, x2)

inst_45579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffff0000; valaddr_reg:x3; val_offset:136737*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136737*0 + 3*267*FLEN/8, x4, x1, x2)

inst_45580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffff8000; valaddr_reg:x3; val_offset:136740*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136740*0 + 3*268*FLEN/8, x4, x1, x2)

inst_45581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffc000; valaddr_reg:x3; val_offset:136743*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136743*0 + 3*269*FLEN/8, x4, x1, x2)

inst_45582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffe000; valaddr_reg:x3; val_offset:136746*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136746*0 + 3*270*FLEN/8, x4, x1, x2)

inst_45583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffff000; valaddr_reg:x3; val_offset:136749*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136749*0 + 3*271*FLEN/8, x4, x1, x2)

inst_45584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffff800; valaddr_reg:x3; val_offset:136752*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136752*0 + 3*272*FLEN/8, x4, x1, x2)

inst_45585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffffc00; valaddr_reg:x3; val_offset:136755*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136755*0 + 3*273*FLEN/8, x4, x1, x2)

inst_45586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffffe00; valaddr_reg:x3; val_offset:136758*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136758*0 + 3*274*FLEN/8, x4, x1, x2)

inst_45587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffff00; valaddr_reg:x3; val_offset:136761*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136761*0 + 3*275*FLEN/8, x4, x1, x2)

inst_45588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffff80; valaddr_reg:x3; val_offset:136764*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136764*0 + 3*276*FLEN/8, x4, x1, x2)

inst_45589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffffc0; valaddr_reg:x3; val_offset:136767*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136767*0 + 3*277*FLEN/8, x4, x1, x2)

inst_45590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffffe0; valaddr_reg:x3; val_offset:136770*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136770*0 + 3*278*FLEN/8, x4, x1, x2)

inst_45591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffffff0; valaddr_reg:x3; val_offset:136773*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136773*0 + 3*279*FLEN/8, x4, x1, x2)

inst_45592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffffff8; valaddr_reg:x3; val_offset:136776*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136776*0 + 3*280*FLEN/8, x4, x1, x2)

inst_45593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffffffc; valaddr_reg:x3; val_offset:136779*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136779*0 + 3*281*FLEN/8, x4, x1, x2)

inst_45594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38fffffffffffffe; valaddr_reg:x3; val_offset:136782*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136782*0 + 3*282*FLEN/8, x4, x1, x2)

inst_45595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x38ffffffffffffff; valaddr_reg:x3; val_offset:136785*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136785*0 + 3*283*FLEN/8, x4, x1, x2)

inst_45596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:136788*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136788*0 + 3*284*FLEN/8, x4, x1, x2)

inst_45597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:136791*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136791*0 + 3*285*FLEN/8, x4, x1, x2)

inst_45598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:136794*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136794*0 + 3*286*FLEN/8, x4, x1, x2)

inst_45599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:136797*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136797*0 + 3*287*FLEN/8, x4, x1, x2)

inst_45600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:136800*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136800*0 + 3*288*FLEN/8, x4, x1, x2)

inst_45601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:136803*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136803*0 + 3*289*FLEN/8, x4, x1, x2)

inst_45602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:136806*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136806*0 + 3*290*FLEN/8, x4, x1, x2)

inst_45603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:136809*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136809*0 + 3*291*FLEN/8, x4, x1, x2)

inst_45604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:136812*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136812*0 + 3*292*FLEN/8, x4, x1, x2)

inst_45605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:136815*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136815*0 + 3*293*FLEN/8, x4, x1, x2)

inst_45606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:136818*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136818*0 + 3*294*FLEN/8, x4, x1, x2)

inst_45607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:136821*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136821*0 + 3*295*FLEN/8, x4, x1, x2)

inst_45608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:136824*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136824*0 + 3*296*FLEN/8, x4, x1, x2)

inst_45609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:136827*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136827*0 + 3*297*FLEN/8, x4, x1, x2)

inst_45610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:136830*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136830*0 + 3*298*FLEN/8, x4, x1, x2)

inst_45611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:136833*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136833*0 + 3*299*FLEN/8, x4, x1, x2)

inst_45612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:136836*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136836*0 + 3*300*FLEN/8, x4, x1, x2)

inst_45613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:136839*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136839*0 + 3*301*FLEN/8, x4, x1, x2)

inst_45614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:136842*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136842*0 + 3*302*FLEN/8, x4, x1, x2)

inst_45615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:136845*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136845*0 + 3*303*FLEN/8, x4, x1, x2)

inst_45616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:136848*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136848*0 + 3*304*FLEN/8, x4, x1, x2)

inst_45617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc85d53da30845 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1f357fb6b8444 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c85d53da30845; op2val:0x2041f357fb6b8444;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:136851*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136851*0 + 3*305*FLEN/8, x4, x1, x2)

inst_45618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:136854*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136854*0 + 3*306*FLEN/8, x4, x1, x2)

inst_45619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:136857*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136857*0 + 3*307*FLEN/8, x4, x1, x2)

inst_45620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:136860*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136860*0 + 3*308*FLEN/8, x4, x1, x2)

inst_45621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:136863*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136863*0 + 3*309*FLEN/8, x4, x1, x2)

inst_45622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:136866*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136866*0 + 3*310*FLEN/8, x4, x1, x2)

inst_45623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:136869*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136869*0 + 3*311*FLEN/8, x4, x1, x2)

inst_45624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:136872*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136872*0 + 3*312*FLEN/8, x4, x1, x2)

inst_45625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:136875*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136875*0 + 3*313*FLEN/8, x4, x1, x2)

inst_45626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:136878*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136878*0 + 3*314*FLEN/8, x4, x1, x2)

inst_45627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:136881*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136881*0 + 3*315*FLEN/8, x4, x1, x2)

inst_45628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:136884*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136884*0 + 3*316*FLEN/8, x4, x1, x2)

inst_45629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:136887*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136887*0 + 3*317*FLEN/8, x4, x1, x2)

inst_45630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:136890*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136890*0 + 3*318*FLEN/8, x4, x1, x2)

inst_45631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:136893*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136893*0 + 3*319*FLEN/8, x4, x1, x2)

inst_45632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:136896*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136896*0 + 3*320*FLEN/8, x4, x1, x2)

inst_45633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:136899*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136899*0 + 3*321*FLEN/8, x4, x1, x2)

inst_45634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:136902*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136902*0 + 3*322*FLEN/8, x4, x1, x2)

inst_45635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:136905*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136905*0 + 3*323*FLEN/8, x4, x1, x2)

inst_45636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:136908*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136908*0 + 3*324*FLEN/8, x4, x1, x2)

inst_45637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:136911*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136911*0 + 3*325*FLEN/8, x4, x1, x2)

inst_45638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:136914*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136914*0 + 3*326*FLEN/8, x4, x1, x2)

inst_45639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:136917*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136917*0 + 3*327*FLEN/8, x4, x1, x2)

inst_45640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:136920*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136920*0 + 3*328*FLEN/8, x4, x1, x2)

inst_45641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:136923*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136923*0 + 3*329*FLEN/8, x4, x1, x2)

inst_45642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:136926*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136926*0 + 3*330*FLEN/8, x4, x1, x2)

inst_45643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:136929*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136929*0 + 3*331*FLEN/8, x4, x1, x2)

inst_45644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:136932*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136932*0 + 3*332*FLEN/8, x4, x1, x2)

inst_45645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:136935*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136935*0 + 3*333*FLEN/8, x4, x1, x2)

inst_45646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:136938*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136938*0 + 3*334*FLEN/8, x4, x1, x2)

inst_45647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:136941*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136941*0 + 3*335*FLEN/8, x4, x1, x2)

inst_45648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:136944*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136944*0 + 3*336*FLEN/8, x4, x1, x2)

inst_45649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:136947*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136947*0 + 3*337*FLEN/8, x4, x1, x2)

inst_45650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:136950*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136950*0 + 3*338*FLEN/8, x4, x1, x2)

inst_45651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:136953*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136953*0 + 3*339*FLEN/8, x4, x1, x2)

inst_45652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:136956*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136956*0 + 3*340*FLEN/8, x4, x1, x2)

inst_45653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:136959*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136959*0 + 3*341*FLEN/8, x4, x1, x2)

inst_45654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:136962*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136962*0 + 3*342*FLEN/8, x4, x1, x2)

inst_45655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:136965*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136965*0 + 3*343*FLEN/8, x4, x1, x2)

inst_45656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:136968*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136968*0 + 3*344*FLEN/8, x4, x1, x2)

inst_45657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:136971*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136971*0 + 3*345*FLEN/8, x4, x1, x2)

inst_45658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:136974*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136974*0 + 3*346*FLEN/8, x4, x1, x2)

inst_45659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:136977*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136977*0 + 3*347*FLEN/8, x4, x1, x2)

inst_45660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:136980*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136980*0 + 3*348*FLEN/8, x4, x1, x2)

inst_45661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:136983*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136983*0 + 3*349*FLEN/8, x4, x1, x2)

inst_45662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:136986*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136986*0 + 3*350*FLEN/8, x4, x1, x2)

inst_45663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:136989*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136989*0 + 3*351*FLEN/8, x4, x1, x2)

inst_45664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:136992*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136992*0 + 3*352*FLEN/8, x4, x1, x2)

inst_45665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:136995*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136995*0 + 3*353*FLEN/8, x4, x1, x2)

inst_45666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:136998*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136998*0 + 3*354*FLEN/8, x4, x1, x2)

inst_45667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:137001*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137001*0 + 3*355*FLEN/8, x4, x1, x2)

inst_45668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:137004*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137004*0 + 3*356*FLEN/8, x4, x1, x2)

inst_45669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:137007*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137007*0 + 3*357*FLEN/8, x4, x1, x2)

inst_45670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:137010*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137010*0 + 3*358*FLEN/8, x4, x1, x2)

inst_45671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:137013*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137013*0 + 3*359*FLEN/8, x4, x1, x2)

inst_45672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:137016*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137016*0 + 3*360*FLEN/8, x4, x1, x2)

inst_45673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:137019*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137019*0 + 3*361*FLEN/8, x4, x1, x2)

inst_45674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:137022*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137022*0 + 3*362*FLEN/8, x4, x1, x2)

inst_45675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:137025*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137025*0 + 3*363*FLEN/8, x4, x1, x2)

inst_45676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:137028*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137028*0 + 3*364*FLEN/8, x4, x1, x2)

inst_45677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:137031*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137031*0 + 3*365*FLEN/8, x4, x1, x2)

inst_45678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:137034*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137034*0 + 3*366*FLEN/8, x4, x1, x2)

inst_45679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:137037*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137037*0 + 3*367*FLEN/8, x4, x1, x2)

inst_45680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:137040*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137040*0 + 3*368*FLEN/8, x4, x1, x2)

inst_45681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:137043*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137043*0 + 3*369*FLEN/8, x4, x1, x2)

inst_45682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:137046*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137046*0 + 3*370*FLEN/8, x4, x1, x2)

inst_45683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:137049*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137049*0 + 3*371*FLEN/8, x4, x1, x2)

inst_45684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:137052*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137052*0 + 3*372*FLEN/8, x4, x1, x2)

inst_45685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:137055*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137055*0 + 3*373*FLEN/8, x4, x1, x2)

inst_45686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:137058*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137058*0 + 3*374*FLEN/8, x4, x1, x2)

inst_45687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:137061*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137061*0 + 3*375*FLEN/8, x4, x1, x2)

inst_45688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:137064*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137064*0 + 3*376*FLEN/8, x4, x1, x2)

inst_45689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:137067*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137067*0 + 3*377*FLEN/8, x4, x1, x2)

inst_45690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:137070*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137070*0 + 3*378*FLEN/8, x4, x1, x2)

inst_45691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:137073*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137073*0 + 3*379*FLEN/8, x4, x1, x2)

inst_45692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:137076*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137076*0 + 3*380*FLEN/8, x4, x1, x2)

inst_45693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:137079*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137079*0 + 3*381*FLEN/8, x4, x1, x2)

inst_45694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:137082*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137082*0 + 3*382*FLEN/8, x4, x1, x2)

inst_45695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:137085*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137085*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_45696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:137088*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137088*0 + 3*384*FLEN/8, x4, x1, x2)

inst_45697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:137091*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137091*0 + 3*385*FLEN/8, x4, x1, x2)

inst_45698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:137094*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137094*0 + 3*386*FLEN/8, x4, x1, x2)

inst_45699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:137097*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137097*0 + 3*387*FLEN/8, x4, x1, x2)

inst_45700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:137100*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137100*0 + 3*388*FLEN/8, x4, x1, x2)

inst_45701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:137103*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137103*0 + 3*389*FLEN/8, x4, x1, x2)

inst_45702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:137106*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137106*0 + 3*390*FLEN/8, x4, x1, x2)

inst_45703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:137109*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137109*0 + 3*391*FLEN/8, x4, x1, x2)

inst_45704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:137112*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137112*0 + 3*392*FLEN/8, x4, x1, x2)

inst_45705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:137115*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137115*0 + 3*393*FLEN/8, x4, x1, x2)

inst_45706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:137118*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137118*0 + 3*394*FLEN/8, x4, x1, x2)

inst_45707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:137121*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137121*0 + 3*395*FLEN/8, x4, x1, x2)

inst_45708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:137124*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137124*0 + 3*396*FLEN/8, x4, x1, x2)

inst_45709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:137127*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137127*0 + 3*397*FLEN/8, x4, x1, x2)

inst_45710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:137130*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137130*0 + 3*398*FLEN/8, x4, x1, x2)

inst_45711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:137133*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137133*0 + 3*399*FLEN/8, x4, x1, x2)

inst_45712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:137136*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137136*0 + 3*400*FLEN/8, x4, x1, x2)

inst_45713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:137139*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137139*0 + 3*401*FLEN/8, x4, x1, x2)

inst_45714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:137142*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137142*0 + 3*402*FLEN/8, x4, x1, x2)

inst_45715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:137145*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137145*0 + 3*403*FLEN/8, x4, x1, x2)

inst_45716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:137148*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137148*0 + 3*404*FLEN/8, x4, x1, x2)

inst_45717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:137151*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137151*0 + 3*405*FLEN/8, x4, x1, x2)

inst_45718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:137154*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137154*0 + 3*406*FLEN/8, x4, x1, x2)

inst_45719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:137157*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137157*0 + 3*407*FLEN/8, x4, x1, x2)

inst_45720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:137160*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137160*0 + 3*408*FLEN/8, x4, x1, x2)

inst_45721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:137163*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137163*0 + 3*409*FLEN/8, x4, x1, x2)

inst_45722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:137166*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137166*0 + 3*410*FLEN/8, x4, x1, x2)

inst_45723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:137169*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137169*0 + 3*411*FLEN/8, x4, x1, x2)

inst_45724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:137172*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137172*0 + 3*412*FLEN/8, x4, x1, x2)

inst_45725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:137175*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137175*0 + 3*413*FLEN/8, x4, x1, x2)

inst_45726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:137178*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137178*0 + 3*414*FLEN/8, x4, x1, x2)

inst_45727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:137181*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137181*0 + 3*415*FLEN/8, x4, x1, x2)

inst_45728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:137184*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137184*0 + 3*416*FLEN/8, x4, x1, x2)

inst_45729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:137187*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137187*0 + 3*417*FLEN/8, x4, x1, x2)

inst_45730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:137190*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137190*0 + 3*418*FLEN/8, x4, x1, x2)

inst_45731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:137193*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137193*0 + 3*419*FLEN/8, x4, x1, x2)

inst_45732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:137196*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137196*0 + 3*420*FLEN/8, x4, x1, x2)

inst_45733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:137199*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137199*0 + 3*421*FLEN/8, x4, x1, x2)

inst_45734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:137202*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137202*0 + 3*422*FLEN/8, x4, x1, x2)

inst_45735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:137205*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137205*0 + 3*423*FLEN/8, x4, x1, x2)

inst_45736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:137208*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137208*0 + 3*424*FLEN/8, x4, x1, x2)

inst_45737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:137211*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137211*0 + 3*425*FLEN/8, x4, x1, x2)

inst_45738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:137214*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137214*0 + 3*426*FLEN/8, x4, x1, x2)

inst_45739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:137217*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137217*0 + 3*427*FLEN/8, x4, x1, x2)

inst_45740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:137220*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137220*0 + 3*428*FLEN/8, x4, x1, x2)

inst_45741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:137223*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137223*0 + 3*429*FLEN/8, x4, x1, x2)

inst_45742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:137226*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137226*0 + 3*430*FLEN/8, x4, x1, x2)

inst_45743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc8ca030326bcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c8ca030326bcf; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:137229*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137229*0 + 3*431*FLEN/8, x4, x1, x2)

inst_45744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:137232*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137232*0 + 3*432*FLEN/8, x4, x1, x2)

inst_45745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:137235*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137235*0 + 3*433*FLEN/8, x4, x1, x2)

inst_45746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:137238*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137238*0 + 3*434*FLEN/8, x4, x1, x2)

inst_45747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:137241*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137241*0 + 3*435*FLEN/8, x4, x1, x2)

inst_45748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:137244*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137244*0 + 3*436*FLEN/8, x4, x1, x2)

inst_45749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:137247*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137247*0 + 3*437*FLEN/8, x4, x1, x2)

inst_45750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:137250*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137250*0 + 3*438*FLEN/8, x4, x1, x2)

inst_45751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:137253*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137253*0 + 3*439*FLEN/8, x4, x1, x2)

inst_45752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:137256*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137256*0 + 3*440*FLEN/8, x4, x1, x2)

inst_45753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:137259*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137259*0 + 3*441*FLEN/8, x4, x1, x2)

inst_45754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:137262*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137262*0 + 3*442*FLEN/8, x4, x1, x2)

inst_45755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:137265*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137265*0 + 3*443*FLEN/8, x4, x1, x2)

inst_45756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:137268*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137268*0 + 3*444*FLEN/8, x4, x1, x2)

inst_45757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:137271*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137271*0 + 3*445*FLEN/8, x4, x1, x2)

inst_45758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:137274*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137274*0 + 3*446*FLEN/8, x4, x1, x2)

inst_45759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:137277*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137277*0 + 3*447*FLEN/8, x4, x1, x2)

inst_45760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:137280*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137280*0 + 3*448*FLEN/8, x4, x1, x2)

inst_45761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:137283*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137283*0 + 3*449*FLEN/8, x4, x1, x2)

inst_45762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:137286*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137286*0 + 3*450*FLEN/8, x4, x1, x2)

inst_45763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:137289*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137289*0 + 3*451*FLEN/8, x4, x1, x2)

inst_45764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:137292*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137292*0 + 3*452*FLEN/8, x4, x1, x2)

inst_45765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:137295*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137295*0 + 3*453*FLEN/8, x4, x1, x2)

inst_45766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000000000; valaddr_reg:x3; val_offset:137298*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137298*0 + 3*454*FLEN/8, x4, x1, x2)

inst_45767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000000001; valaddr_reg:x3; val_offset:137301*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137301*0 + 3*455*FLEN/8, x4, x1, x2)

inst_45768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000000003; valaddr_reg:x3; val_offset:137304*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137304*0 + 3*456*FLEN/8, x4, x1, x2)

inst_45769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000000007; valaddr_reg:x3; val_offset:137307*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137307*0 + 3*457*FLEN/8, x4, x1, x2)

inst_45770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000000000f; valaddr_reg:x3; val_offset:137310*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137310*0 + 3*458*FLEN/8, x4, x1, x2)

inst_45771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000000001f; valaddr_reg:x3; val_offset:137313*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137313*0 + 3*459*FLEN/8, x4, x1, x2)

inst_45772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000000003f; valaddr_reg:x3; val_offset:137316*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137316*0 + 3*460*FLEN/8, x4, x1, x2)

inst_45773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000000007f; valaddr_reg:x3; val_offset:137319*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137319*0 + 3*461*FLEN/8, x4, x1, x2)

inst_45774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000000000ff; valaddr_reg:x3; val_offset:137322*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137322*0 + 3*462*FLEN/8, x4, x1, x2)

inst_45775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000000001ff; valaddr_reg:x3; val_offset:137325*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137325*0 + 3*463*FLEN/8, x4, x1, x2)

inst_45776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000000003ff; valaddr_reg:x3; val_offset:137328*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137328*0 + 3*464*FLEN/8, x4, x1, x2)

inst_45777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000000007ff; valaddr_reg:x3; val_offset:137331*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137331*0 + 3*465*FLEN/8, x4, x1, x2)

inst_45778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000000fff; valaddr_reg:x3; val_offset:137334*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137334*0 + 3*466*FLEN/8, x4, x1, x2)

inst_45779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000001fff; valaddr_reg:x3; val_offset:137337*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137337*0 + 3*467*FLEN/8, x4, x1, x2)

inst_45780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000003fff; valaddr_reg:x3; val_offset:137340*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137340*0 + 3*468*FLEN/8, x4, x1, x2)

inst_45781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000007fff; valaddr_reg:x3; val_offset:137343*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137343*0 + 3*469*FLEN/8, x4, x1, x2)

inst_45782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000000ffff; valaddr_reg:x3; val_offset:137346*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137346*0 + 3*470*FLEN/8, x4, x1, x2)

inst_45783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000001ffff; valaddr_reg:x3; val_offset:137349*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137349*0 + 3*471*FLEN/8, x4, x1, x2)

inst_45784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000003ffff; valaddr_reg:x3; val_offset:137352*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137352*0 + 3*472*FLEN/8, x4, x1, x2)

inst_45785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000007ffff; valaddr_reg:x3; val_offset:137355*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137355*0 + 3*473*FLEN/8, x4, x1, x2)

inst_45786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000000fffff; valaddr_reg:x3; val_offset:137358*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137358*0 + 3*474*FLEN/8, x4, x1, x2)

inst_45787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000001fffff; valaddr_reg:x3; val_offset:137361*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137361*0 + 3*475*FLEN/8, x4, x1, x2)

inst_45788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000003fffff; valaddr_reg:x3; val_offset:137364*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137364*0 + 3*476*FLEN/8, x4, x1, x2)

inst_45789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000007fffff; valaddr_reg:x3; val_offset:137367*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137367*0 + 3*477*FLEN/8, x4, x1, x2)

inst_45790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000000ffffff; valaddr_reg:x3; val_offset:137370*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137370*0 + 3*478*FLEN/8, x4, x1, x2)

inst_45791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000001ffffff; valaddr_reg:x3; val_offset:137373*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137373*0 + 3*479*FLEN/8, x4, x1, x2)

inst_45792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000003ffffff; valaddr_reg:x3; val_offset:137376*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137376*0 + 3*480*FLEN/8, x4, x1, x2)

inst_45793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000007ffffff; valaddr_reg:x3; val_offset:137379*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137379*0 + 3*481*FLEN/8, x4, x1, x2)

inst_45794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000000fffffff; valaddr_reg:x3; val_offset:137382*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137382*0 + 3*482*FLEN/8, x4, x1, x2)

inst_45795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000001fffffff; valaddr_reg:x3; val_offset:137385*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137385*0 + 3*483*FLEN/8, x4, x1, x2)

inst_45796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000003fffffff; valaddr_reg:x3; val_offset:137388*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137388*0 + 3*484*FLEN/8, x4, x1, x2)

inst_45797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000007fffffff; valaddr_reg:x3; val_offset:137391*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137391*0 + 3*485*FLEN/8, x4, x1, x2)

inst_45798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100000ffffffff; valaddr_reg:x3; val_offset:137394*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137394*0 + 3*486*FLEN/8, x4, x1, x2)

inst_45799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100001ffffffff; valaddr_reg:x3; val_offset:137397*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137397*0 + 3*487*FLEN/8, x4, x1, x2)

inst_45800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100003ffffffff; valaddr_reg:x3; val_offset:137400*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137400*0 + 3*488*FLEN/8, x4, x1, x2)

inst_45801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100007ffffffff; valaddr_reg:x3; val_offset:137403*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137403*0 + 3*489*FLEN/8, x4, x1, x2)

inst_45802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110000fffffffff; valaddr_reg:x3; val_offset:137406*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137406*0 + 3*490*FLEN/8, x4, x1, x2)

inst_45803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110001fffffffff; valaddr_reg:x3; val_offset:137409*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137409*0 + 3*491*FLEN/8, x4, x1, x2)

inst_45804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110003fffffffff; valaddr_reg:x3; val_offset:137412*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137412*0 + 3*492*FLEN/8, x4, x1, x2)

inst_45805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110007fffffffff; valaddr_reg:x3; val_offset:137415*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137415*0 + 3*493*FLEN/8, x4, x1, x2)

inst_45806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11000ffffffffff; valaddr_reg:x3; val_offset:137418*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137418*0 + 3*494*FLEN/8, x4, x1, x2)

inst_45807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11001ffffffffff; valaddr_reg:x3; val_offset:137421*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137421*0 + 3*495*FLEN/8, x4, x1, x2)

inst_45808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11003ffffffffff; valaddr_reg:x3; val_offset:137424*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137424*0 + 3*496*FLEN/8, x4, x1, x2)

inst_45809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11007ffffffffff; valaddr_reg:x3; val_offset:137427*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137427*0 + 3*497*FLEN/8, x4, x1, x2)

inst_45810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1100fffffffffff; valaddr_reg:x3; val_offset:137430*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137430*0 + 3*498*FLEN/8, x4, x1, x2)

inst_45811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1101fffffffffff; valaddr_reg:x3; val_offset:137433*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137433*0 + 3*499*FLEN/8, x4, x1, x2)

inst_45812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1103fffffffffff; valaddr_reg:x3; val_offset:137436*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137436*0 + 3*500*FLEN/8, x4, x1, x2)

inst_45813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x1107fffffffffff; valaddr_reg:x3; val_offset:137439*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137439*0 + 3*501*FLEN/8, x4, x1, x2)

inst_45814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x110ffffffffffff; valaddr_reg:x3; val_offset:137442*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137442*0 + 3*502*FLEN/8, x4, x1, x2)

inst_45815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x111ffffffffffff; valaddr_reg:x3; val_offset:137445*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137445*0 + 3*503*FLEN/8, x4, x1, x2)

inst_45816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x113ffffffffffff; valaddr_reg:x3; val_offset:137448*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137448*0 + 3*504*FLEN/8, x4, x1, x2)

inst_45817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x117ffffffffffff; valaddr_reg:x3; val_offset:137451*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137451*0 + 3*505*FLEN/8, x4, x1, x2)

inst_45818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x118000000000000; valaddr_reg:x3; val_offset:137454*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137454*0 + 3*506*FLEN/8, x4, x1, x2)

inst_45819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11c000000000000; valaddr_reg:x3; val_offset:137457*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137457*0 + 3*507*FLEN/8, x4, x1, x2)

inst_45820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11e000000000000; valaddr_reg:x3; val_offset:137460*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137460*0 + 3*508*FLEN/8, x4, x1, x2)

inst_45821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11f000000000000; valaddr_reg:x3; val_offset:137463*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137463*0 + 3*509*FLEN/8, x4, x1, x2)

inst_45822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11f800000000000; valaddr_reg:x3; val_offset:137466*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137466*0 + 3*510*FLEN/8, x4, x1, x2)

inst_45823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fc00000000000; valaddr_reg:x3; val_offset:137469*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137469*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_45824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fe00000000000; valaddr_reg:x3; val_offset:137472*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137472*0 + 3*512*FLEN/8, x4, x1, x2)

inst_45825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ff00000000000; valaddr_reg:x3; val_offset:137475*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137475*0 + 3*513*FLEN/8, x4, x1, x2)

inst_45826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ff80000000000; valaddr_reg:x3; val_offset:137478*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137478*0 + 3*514*FLEN/8, x4, x1, x2)

inst_45827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffc0000000000; valaddr_reg:x3; val_offset:137481*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137481*0 + 3*515*FLEN/8, x4, x1, x2)

inst_45828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffe0000000000; valaddr_reg:x3; val_offset:137484*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137484*0 + 3*516*FLEN/8, x4, x1, x2)

inst_45829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fff0000000000; valaddr_reg:x3; val_offset:137487*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137487*0 + 3*517*FLEN/8, x4, x1, x2)

inst_45830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fff8000000000; valaddr_reg:x3; val_offset:137490*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137490*0 + 3*518*FLEN/8, x4, x1, x2)

inst_45831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffc000000000; valaddr_reg:x3; val_offset:137493*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137493*0 + 3*519*FLEN/8, x4, x1, x2)

inst_45832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffe000000000; valaddr_reg:x3; val_offset:137496*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137496*0 + 3*520*FLEN/8, x4, x1, x2)

inst_45833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffff000000000; valaddr_reg:x3; val_offset:137499*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137499*0 + 3*521*FLEN/8, x4, x1, x2)

inst_45834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffff800000000; valaddr_reg:x3; val_offset:137502*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137502*0 + 3*522*FLEN/8, x4, x1, x2)

inst_45835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffc00000000; valaddr_reg:x3; val_offset:137505*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137505*0 + 3*523*FLEN/8, x4, x1, x2)

inst_45836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffe00000000; valaddr_reg:x3; val_offset:137508*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137508*0 + 3*524*FLEN/8, x4, x1, x2)

inst_45837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffff00000000; valaddr_reg:x3; val_offset:137511*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137511*0 + 3*525*FLEN/8, x4, x1, x2)

inst_45838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffff80000000; valaddr_reg:x3; val_offset:137514*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137514*0 + 3*526*FLEN/8, x4, x1, x2)

inst_45839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffc0000000; valaddr_reg:x3; val_offset:137517*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137517*0 + 3*527*FLEN/8, x4, x1, x2)

inst_45840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffe0000000; valaddr_reg:x3; val_offset:137520*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137520*0 + 3*528*FLEN/8, x4, x1, x2)

inst_45841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffff0000000; valaddr_reg:x3; val_offset:137523*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137523*0 + 3*529*FLEN/8, x4, x1, x2)

inst_45842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffff8000000; valaddr_reg:x3; val_offset:137526*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137526*0 + 3*530*FLEN/8, x4, x1, x2)

inst_45843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffc000000; valaddr_reg:x3; val_offset:137529*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137529*0 + 3*531*FLEN/8, x4, x1, x2)

inst_45844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffe000000; valaddr_reg:x3; val_offset:137532*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137532*0 + 3*532*FLEN/8, x4, x1, x2)

inst_45845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffff000000; valaddr_reg:x3; val_offset:137535*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137535*0 + 3*533*FLEN/8, x4, x1, x2)

inst_45846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffff800000; valaddr_reg:x3; val_offset:137538*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137538*0 + 3*534*FLEN/8, x4, x1, x2)

inst_45847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffc00000; valaddr_reg:x3; val_offset:137541*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137541*0 + 3*535*FLEN/8, x4, x1, x2)

inst_45848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffe00000; valaddr_reg:x3; val_offset:137544*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137544*0 + 3*536*FLEN/8, x4, x1, x2)

inst_45849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffff00000; valaddr_reg:x3; val_offset:137547*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137547*0 + 3*537*FLEN/8, x4, x1, x2)

inst_45850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffff80000; valaddr_reg:x3; val_offset:137550*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137550*0 + 3*538*FLEN/8, x4, x1, x2)

inst_45851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffc0000; valaddr_reg:x3; val_offset:137553*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137553*0 + 3*539*FLEN/8, x4, x1, x2)

inst_45852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffe0000; valaddr_reg:x3; val_offset:137556*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137556*0 + 3*540*FLEN/8, x4, x1, x2)

inst_45853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffff0000; valaddr_reg:x3; val_offset:137559*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137559*0 + 3*541*FLEN/8, x4, x1, x2)

inst_45854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffff8000; valaddr_reg:x3; val_offset:137562*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137562*0 + 3*542*FLEN/8, x4, x1, x2)

inst_45855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffc000; valaddr_reg:x3; val_offset:137565*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137565*0 + 3*543*FLEN/8, x4, x1, x2)

inst_45856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffe000; valaddr_reg:x3; val_offset:137568*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137568*0 + 3*544*FLEN/8, x4, x1, x2)

inst_45857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffff000; valaddr_reg:x3; val_offset:137571*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137571*0 + 3*545*FLEN/8, x4, x1, x2)

inst_45858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffff800; valaddr_reg:x3; val_offset:137574*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137574*0 + 3*546*FLEN/8, x4, x1, x2)

inst_45859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffffc00; valaddr_reg:x3; val_offset:137577*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137577*0 + 3*547*FLEN/8, x4, x1, x2)

inst_45860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffffe00; valaddr_reg:x3; val_offset:137580*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137580*0 + 3*548*FLEN/8, x4, x1, x2)

inst_45861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffff00; valaddr_reg:x3; val_offset:137583*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137583*0 + 3*549*FLEN/8, x4, x1, x2)

inst_45862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffff80; valaddr_reg:x3; val_offset:137586*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137586*0 + 3*550*FLEN/8, x4, x1, x2)

inst_45863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffffc0; valaddr_reg:x3; val_offset:137589*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137589*0 + 3*551*FLEN/8, x4, x1, x2)

inst_45864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffffe0; valaddr_reg:x3; val_offset:137592*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137592*0 + 3*552*FLEN/8, x4, x1, x2)

inst_45865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffffff0; valaddr_reg:x3; val_offset:137595*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137595*0 + 3*553*FLEN/8, x4, x1, x2)

inst_45866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffffff8; valaddr_reg:x3; val_offset:137598*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137598*0 + 3*554*FLEN/8, x4, x1, x2)

inst_45867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffffffc; valaddr_reg:x3; val_offset:137601*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137601*0 + 3*555*FLEN/8, x4, x1, x2)

inst_45868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11ffffffffffffe; valaddr_reg:x3; val_offset:137604*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137604*0 + 3*556*FLEN/8, x4, x1, x2)

inst_45869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xca413431e1c09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ca413431e1c09; op2val:0x0;
op3val:0x11fffffffffffff; valaddr_reg:x3; val_offset:137607*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137607*0 + 3*557*FLEN/8, x4, x1, x2)

inst_45870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000000000; valaddr_reg:x3; val_offset:137610*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137610*0 + 3*558*FLEN/8, x4, x1, x2)

inst_45871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000000001; valaddr_reg:x3; val_offset:137613*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137613*0 + 3*559*FLEN/8, x4, x1, x2)

inst_45872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000000003; valaddr_reg:x3; val_offset:137616*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137616*0 + 3*560*FLEN/8, x4, x1, x2)

inst_45873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000000007; valaddr_reg:x3; val_offset:137619*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137619*0 + 3*561*FLEN/8, x4, x1, x2)

inst_45874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000000000f; valaddr_reg:x3; val_offset:137622*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137622*0 + 3*562*FLEN/8, x4, x1, x2)

inst_45875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000000001f; valaddr_reg:x3; val_offset:137625*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137625*0 + 3*563*FLEN/8, x4, x1, x2)

inst_45876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000000003f; valaddr_reg:x3; val_offset:137628*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137628*0 + 3*564*FLEN/8, x4, x1, x2)

inst_45877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000000007f; valaddr_reg:x3; val_offset:137631*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137631*0 + 3*565*FLEN/8, x4, x1, x2)

inst_45878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000000000ff; valaddr_reg:x3; val_offset:137634*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137634*0 + 3*566*FLEN/8, x4, x1, x2)

inst_45879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000000001ff; valaddr_reg:x3; val_offset:137637*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137637*0 + 3*567*FLEN/8, x4, x1, x2)

inst_45880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000000003ff; valaddr_reg:x3; val_offset:137640*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137640*0 + 3*568*FLEN/8, x4, x1, x2)

inst_45881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000000007ff; valaddr_reg:x3; val_offset:137643*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137643*0 + 3*569*FLEN/8, x4, x1, x2)

inst_45882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000000fff; valaddr_reg:x3; val_offset:137646*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137646*0 + 3*570*FLEN/8, x4, x1, x2)

inst_45883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000001fff; valaddr_reg:x3; val_offset:137649*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137649*0 + 3*571*FLEN/8, x4, x1, x2)

inst_45884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000003fff; valaddr_reg:x3; val_offset:137652*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137652*0 + 3*572*FLEN/8, x4, x1, x2)

inst_45885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000007fff; valaddr_reg:x3; val_offset:137655*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137655*0 + 3*573*FLEN/8, x4, x1, x2)

inst_45886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000000ffff; valaddr_reg:x3; val_offset:137658*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137658*0 + 3*574*FLEN/8, x4, x1, x2)

inst_45887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000001ffff; valaddr_reg:x3; val_offset:137661*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137661*0 + 3*575*FLEN/8, x4, x1, x2)

inst_45888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000003ffff; valaddr_reg:x3; val_offset:137664*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137664*0 + 3*576*FLEN/8, x4, x1, x2)

inst_45889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000007ffff; valaddr_reg:x3; val_offset:137667*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137667*0 + 3*577*FLEN/8, x4, x1, x2)

inst_45890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000000fffff; valaddr_reg:x3; val_offset:137670*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137670*0 + 3*578*FLEN/8, x4, x1, x2)

inst_45891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000001fffff; valaddr_reg:x3; val_offset:137673*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137673*0 + 3*579*FLEN/8, x4, x1, x2)

inst_45892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000003fffff; valaddr_reg:x3; val_offset:137676*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137676*0 + 3*580*FLEN/8, x4, x1, x2)

inst_45893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000007fffff; valaddr_reg:x3; val_offset:137679*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137679*0 + 3*581*FLEN/8, x4, x1, x2)

inst_45894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000000ffffff; valaddr_reg:x3; val_offset:137682*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137682*0 + 3*582*FLEN/8, x4, x1, x2)

inst_45895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000001ffffff; valaddr_reg:x3; val_offset:137685*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137685*0 + 3*583*FLEN/8, x4, x1, x2)

inst_45896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000003ffffff; valaddr_reg:x3; val_offset:137688*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137688*0 + 3*584*FLEN/8, x4, x1, x2)

inst_45897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000007ffffff; valaddr_reg:x3; val_offset:137691*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137691*0 + 3*585*FLEN/8, x4, x1, x2)

inst_45898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000000fffffff; valaddr_reg:x3; val_offset:137694*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137694*0 + 3*586*FLEN/8, x4, x1, x2)

inst_45899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000001fffffff; valaddr_reg:x3; val_offset:137697*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137697*0 + 3*587*FLEN/8, x4, x1, x2)

inst_45900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000003fffffff; valaddr_reg:x3; val_offset:137700*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137700*0 + 3*588*FLEN/8, x4, x1, x2)

inst_45901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000007fffffff; valaddr_reg:x3; val_offset:137703*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137703*0 + 3*589*FLEN/8, x4, x1, x2)

inst_45902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00000ffffffff; valaddr_reg:x3; val_offset:137706*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137706*0 + 3*590*FLEN/8, x4, x1, x2)

inst_45903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00001ffffffff; valaddr_reg:x3; val_offset:137709*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137709*0 + 3*591*FLEN/8, x4, x1, x2)

inst_45904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00003ffffffff; valaddr_reg:x3; val_offset:137712*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137712*0 + 3*592*FLEN/8, x4, x1, x2)

inst_45905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00007ffffffff; valaddr_reg:x3; val_offset:137715*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137715*0 + 3*593*FLEN/8, x4, x1, x2)

inst_45906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0000fffffffff; valaddr_reg:x3; val_offset:137718*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137718*0 + 3*594*FLEN/8, x4, x1, x2)

inst_45907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0001fffffffff; valaddr_reg:x3; val_offset:137721*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137721*0 + 3*595*FLEN/8, x4, x1, x2)

inst_45908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0003fffffffff; valaddr_reg:x3; val_offset:137724*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137724*0 + 3*596*FLEN/8, x4, x1, x2)

inst_45909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0007fffffffff; valaddr_reg:x3; val_offset:137727*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137727*0 + 3*597*FLEN/8, x4, x1, x2)

inst_45910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b000ffffffffff; valaddr_reg:x3; val_offset:137730*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137730*0 + 3*598*FLEN/8, x4, x1, x2)

inst_45911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b001ffffffffff; valaddr_reg:x3; val_offset:137733*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137733*0 + 3*599*FLEN/8, x4, x1, x2)

inst_45912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b003ffffffffff; valaddr_reg:x3; val_offset:137736*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137736*0 + 3*600*FLEN/8, x4, x1, x2)

inst_45913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b007ffffffffff; valaddr_reg:x3; val_offset:137739*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137739*0 + 3*601*FLEN/8, x4, x1, x2)

inst_45914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b00fffffffffff; valaddr_reg:x3; val_offset:137742*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137742*0 + 3*602*FLEN/8, x4, x1, x2)

inst_45915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b01fffffffffff; valaddr_reg:x3; val_offset:137745*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137745*0 + 3*603*FLEN/8, x4, x1, x2)

inst_45916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b03fffffffffff; valaddr_reg:x3; val_offset:137748*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137748*0 + 3*604*FLEN/8, x4, x1, x2)

inst_45917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b07fffffffffff; valaddr_reg:x3; val_offset:137751*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137751*0 + 3*605*FLEN/8, x4, x1, x2)

inst_45918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b0ffffffffffff; valaddr_reg:x3; val_offset:137754*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137754*0 + 3*606*FLEN/8, x4, x1, x2)

inst_45919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b1ffffffffffff; valaddr_reg:x3; val_offset:137757*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137757*0 + 3*607*FLEN/8, x4, x1, x2)

inst_45920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b3ffffffffffff; valaddr_reg:x3; val_offset:137760*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137760*0 + 3*608*FLEN/8, x4, x1, x2)

inst_45921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b7ffffffffffff; valaddr_reg:x3; val_offset:137763*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137763*0 + 3*609*FLEN/8, x4, x1, x2)

inst_45922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9b8000000000000; valaddr_reg:x3; val_offset:137766*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137766*0 + 3*610*FLEN/8, x4, x1, x2)

inst_45923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bc000000000000; valaddr_reg:x3; val_offset:137769*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137769*0 + 3*611*FLEN/8, x4, x1, x2)

inst_45924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9be000000000000; valaddr_reg:x3; val_offset:137772*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137772*0 + 3*612*FLEN/8, x4, x1, x2)

inst_45925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bf000000000000; valaddr_reg:x3; val_offset:137775*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137775*0 + 3*613*FLEN/8, x4, x1, x2)

inst_45926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bf800000000000; valaddr_reg:x3; val_offset:137778*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137778*0 + 3*614*FLEN/8, x4, x1, x2)

inst_45927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfc00000000000; valaddr_reg:x3; val_offset:137781*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137781*0 + 3*615*FLEN/8, x4, x1, x2)

inst_45928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfe00000000000; valaddr_reg:x3; val_offset:137784*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137784*0 + 3*616*FLEN/8, x4, x1, x2)

inst_45929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bff00000000000; valaddr_reg:x3; val_offset:137787*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137787*0 + 3*617*FLEN/8, x4, x1, x2)

inst_45930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bff80000000000; valaddr_reg:x3; val_offset:137790*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137790*0 + 3*618*FLEN/8, x4, x1, x2)

inst_45931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffc0000000000; valaddr_reg:x3; val_offset:137793*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137793*0 + 3*619*FLEN/8, x4, x1, x2)

inst_45932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffe0000000000; valaddr_reg:x3; val_offset:137796*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137796*0 + 3*620*FLEN/8, x4, x1, x2)

inst_45933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfff0000000000; valaddr_reg:x3; val_offset:137799*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137799*0 + 3*621*FLEN/8, x4, x1, x2)

inst_45934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfff8000000000; valaddr_reg:x3; val_offset:137802*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137802*0 + 3*622*FLEN/8, x4, x1, x2)

inst_45935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffc000000000; valaddr_reg:x3; val_offset:137805*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137805*0 + 3*623*FLEN/8, x4, x1, x2)

inst_45936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffe000000000; valaddr_reg:x3; val_offset:137808*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137808*0 + 3*624*FLEN/8, x4, x1, x2)

inst_45937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffff000000000; valaddr_reg:x3; val_offset:137811*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137811*0 + 3*625*FLEN/8, x4, x1, x2)

inst_45938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffff800000000; valaddr_reg:x3; val_offset:137814*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137814*0 + 3*626*FLEN/8, x4, x1, x2)

inst_45939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffc00000000; valaddr_reg:x3; val_offset:137817*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137817*0 + 3*627*FLEN/8, x4, x1, x2)

inst_45940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffe00000000; valaddr_reg:x3; val_offset:137820*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137820*0 + 3*628*FLEN/8, x4, x1, x2)

inst_45941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffff00000000; valaddr_reg:x3; val_offset:137823*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137823*0 + 3*629*FLEN/8, x4, x1, x2)

inst_45942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffff80000000; valaddr_reg:x3; val_offset:137826*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137826*0 + 3*630*FLEN/8, x4, x1, x2)

inst_45943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffc0000000; valaddr_reg:x3; val_offset:137829*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137829*0 + 3*631*FLEN/8, x4, x1, x2)

inst_45944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffe0000000; valaddr_reg:x3; val_offset:137832*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137832*0 + 3*632*FLEN/8, x4, x1, x2)

inst_45945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffff0000000; valaddr_reg:x3; val_offset:137835*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137835*0 + 3*633*FLEN/8, x4, x1, x2)

inst_45946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffff8000000; valaddr_reg:x3; val_offset:137838*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137838*0 + 3*634*FLEN/8, x4, x1, x2)

inst_45947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffc000000; valaddr_reg:x3; val_offset:137841*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137841*0 + 3*635*FLEN/8, x4, x1, x2)

inst_45948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffe000000; valaddr_reg:x3; val_offset:137844*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137844*0 + 3*636*FLEN/8, x4, x1, x2)

inst_45949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffff000000; valaddr_reg:x3; val_offset:137847*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137847*0 + 3*637*FLEN/8, x4, x1, x2)

inst_45950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffff800000; valaddr_reg:x3; val_offset:137850*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137850*0 + 3*638*FLEN/8, x4, x1, x2)

inst_45951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffc00000; valaddr_reg:x3; val_offset:137853*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137853*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_45952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffe00000; valaddr_reg:x3; val_offset:137856*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137856*0 + 3*640*FLEN/8, x4, x1, x2)

inst_45953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffff00000; valaddr_reg:x3; val_offset:137859*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137859*0 + 3*641*FLEN/8, x4, x1, x2)

inst_45954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffff80000; valaddr_reg:x3; val_offset:137862*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137862*0 + 3*642*FLEN/8, x4, x1, x2)

inst_45955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffc0000; valaddr_reg:x3; val_offset:137865*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137865*0 + 3*643*FLEN/8, x4, x1, x2)

inst_45956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffe0000; valaddr_reg:x3; val_offset:137868*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137868*0 + 3*644*FLEN/8, x4, x1, x2)

inst_45957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffff0000; valaddr_reg:x3; val_offset:137871*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137871*0 + 3*645*FLEN/8, x4, x1, x2)

inst_45958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffff8000; valaddr_reg:x3; val_offset:137874*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137874*0 + 3*646*FLEN/8, x4, x1, x2)

inst_45959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffc000; valaddr_reg:x3; val_offset:137877*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137877*0 + 3*647*FLEN/8, x4, x1, x2)

inst_45960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffe000; valaddr_reg:x3; val_offset:137880*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137880*0 + 3*648*FLEN/8, x4, x1, x2)

inst_45961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffff000; valaddr_reg:x3; val_offset:137883*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137883*0 + 3*649*FLEN/8, x4, x1, x2)

inst_45962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffff800; valaddr_reg:x3; val_offset:137886*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137886*0 + 3*650*FLEN/8, x4, x1, x2)

inst_45963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffffc00; valaddr_reg:x3; val_offset:137889*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137889*0 + 3*651*FLEN/8, x4, x1, x2)

inst_45964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffffe00; valaddr_reg:x3; val_offset:137892*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137892*0 + 3*652*FLEN/8, x4, x1, x2)

inst_45965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffff00; valaddr_reg:x3; val_offset:137895*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137895*0 + 3*653*FLEN/8, x4, x1, x2)

inst_45966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffff80; valaddr_reg:x3; val_offset:137898*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137898*0 + 3*654*FLEN/8, x4, x1, x2)

inst_45967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffffc0; valaddr_reg:x3; val_offset:137901*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137901*0 + 3*655*FLEN/8, x4, x1, x2)

inst_45968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffffe0; valaddr_reg:x3; val_offset:137904*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137904*0 + 3*656*FLEN/8, x4, x1, x2)

inst_45969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffffff0; valaddr_reg:x3; val_offset:137907*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137907*0 + 3*657*FLEN/8, x4, x1, x2)

inst_45970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffffff8; valaddr_reg:x3; val_offset:137910*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137910*0 + 3*658*FLEN/8, x4, x1, x2)

inst_45971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffffffc; valaddr_reg:x3; val_offset:137913*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137913*0 + 3*659*FLEN/8, x4, x1, x2)

inst_45972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bffffffffffffe; valaddr_reg:x3; val_offset:137916*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137916*0 + 3*660*FLEN/8, x4, x1, x2)

inst_45973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xb9bfffffffffffff; valaddr_reg:x3; val_offset:137919*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137919*0 + 3*661*FLEN/8, x4, x1, x2)

inst_45974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:137922*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137922*0 + 3*662*FLEN/8, x4, x1, x2)

inst_45975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:137925*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137925*0 + 3*663*FLEN/8, x4, x1, x2)

inst_45976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:137928*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137928*0 + 3*664*FLEN/8, x4, x1, x2)

inst_45977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:137931*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137931*0 + 3*665*FLEN/8, x4, x1, x2)

inst_45978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:137934*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137934*0 + 3*666*FLEN/8, x4, x1, x2)

inst_45979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:137937*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137937*0 + 3*667*FLEN/8, x4, x1, x2)

inst_45980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:137940*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137940*0 + 3*668*FLEN/8, x4, x1, x2)

inst_45981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:137943*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137943*0 + 3*669*FLEN/8, x4, x1, x2)

inst_45982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:137946*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137946*0 + 3*670*FLEN/8, x4, x1, x2)

inst_45983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:137949*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137949*0 + 3*671*FLEN/8, x4, x1, x2)

inst_45984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:137952*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137952*0 + 3*672*FLEN/8, x4, x1, x2)

inst_45985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:137955*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137955*0 + 3*673*FLEN/8, x4, x1, x2)

inst_45986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:137958*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137958*0 + 3*674*FLEN/8, x4, x1, x2)

inst_45987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:137961*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137961*0 + 3*675*FLEN/8, x4, x1, x2)

inst_45988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:137964*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137964*0 + 3*676*FLEN/8, x4, x1, x2)

inst_45989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:137967*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137967*0 + 3*677*FLEN/8, x4, x1, x2)

inst_45990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:137970*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137970*0 + 3*678*FLEN/8, x4, x1, x2)

inst_45991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:137973*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137973*0 + 3*679*FLEN/8, x4, x1, x2)

inst_45992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:137976*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137976*0 + 3*680*FLEN/8, x4, x1, x2)

inst_45993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:137979*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137979*0 + 3*681*FLEN/8, x4, x1, x2)

inst_45994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:137982*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137982*0 + 3*682*FLEN/8, x4, x1, x2)

inst_45995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcaa6e28b951ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1dc6d2445e3fb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9caa6e28b951ff; op2val:0x9fd1dc6d2445e3fb;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:137985*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137985*0 + 3*683*FLEN/8, x4, x1, x2)

inst_45996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:137988*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137988*0 + 3*684*FLEN/8, x4, x1, x2)

inst_45997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:137991*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137991*0 + 3*685*FLEN/8, x4, x1, x2)

inst_45998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:137994*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137994*0 + 3*686*FLEN/8, x4, x1, x2)

inst_45999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:137997*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137997*0 + 3*687*FLEN/8, x4, x1, x2)

inst_46000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:138000*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138000*0 + 3*688*FLEN/8, x4, x1, x2)

inst_46001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:138003*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138003*0 + 3*689*FLEN/8, x4, x1, x2)

inst_46002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:138006*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138006*0 + 3*690*FLEN/8, x4, x1, x2)

inst_46003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:138009*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138009*0 + 3*691*FLEN/8, x4, x1, x2)

inst_46004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:138012*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138012*0 + 3*692*FLEN/8, x4, x1, x2)

inst_46005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:138015*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138015*0 + 3*693*FLEN/8, x4, x1, x2)

inst_46006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:138018*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138018*0 + 3*694*FLEN/8, x4, x1, x2)

inst_46007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:138021*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138021*0 + 3*695*FLEN/8, x4, x1, x2)

inst_46008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:138024*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138024*0 + 3*696*FLEN/8, x4, x1, x2)

inst_46009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:138027*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138027*0 + 3*697*FLEN/8, x4, x1, x2)

inst_46010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:138030*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138030*0 + 3*698*FLEN/8, x4, x1, x2)

inst_46011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:138033*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138033*0 + 3*699*FLEN/8, x4, x1, x2)

inst_46012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:138036*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138036*0 + 3*700*FLEN/8, x4, x1, x2)

inst_46013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:138039*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138039*0 + 3*701*FLEN/8, x4, x1, x2)

inst_46014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:138042*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138042*0 + 3*702*FLEN/8, x4, x1, x2)

inst_46015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:138045*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138045*0 + 3*703*FLEN/8, x4, x1, x2)

inst_46016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:138048*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138048*0 + 3*704*FLEN/8, x4, x1, x2)

inst_46017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:138051*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138051*0 + 3*705*FLEN/8, x4, x1, x2)

inst_46018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000000000; valaddr_reg:x3; val_offset:138054*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138054*0 + 3*706*FLEN/8, x4, x1, x2)

inst_46019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000000001; valaddr_reg:x3; val_offset:138057*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138057*0 + 3*707*FLEN/8, x4, x1, x2)

inst_46020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000000003; valaddr_reg:x3; val_offset:138060*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138060*0 + 3*708*FLEN/8, x4, x1, x2)

inst_46021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000000007; valaddr_reg:x3; val_offset:138063*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138063*0 + 3*709*FLEN/8, x4, x1, x2)

inst_46022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000000000f; valaddr_reg:x3; val_offset:138066*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138066*0 + 3*710*FLEN/8, x4, x1, x2)

inst_46023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000000001f; valaddr_reg:x3; val_offset:138069*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138069*0 + 3*711*FLEN/8, x4, x1, x2)

inst_46024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000000003f; valaddr_reg:x3; val_offset:138072*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138072*0 + 3*712*FLEN/8, x4, x1, x2)

inst_46025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000000007f; valaddr_reg:x3; val_offset:138075*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138075*0 + 3*713*FLEN/8, x4, x1, x2)

inst_46026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000000000ff; valaddr_reg:x3; val_offset:138078*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138078*0 + 3*714*FLEN/8, x4, x1, x2)

inst_46027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000000001ff; valaddr_reg:x3; val_offset:138081*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138081*0 + 3*715*FLEN/8, x4, x1, x2)

inst_46028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000000003ff; valaddr_reg:x3; val_offset:138084*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138084*0 + 3*716*FLEN/8, x4, x1, x2)

inst_46029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000000007ff; valaddr_reg:x3; val_offset:138087*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138087*0 + 3*717*FLEN/8, x4, x1, x2)

inst_46030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000000fff; valaddr_reg:x3; val_offset:138090*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138090*0 + 3*718*FLEN/8, x4, x1, x2)

inst_46031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000001fff; valaddr_reg:x3; val_offset:138093*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138093*0 + 3*719*FLEN/8, x4, x1, x2)

inst_46032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000003fff; valaddr_reg:x3; val_offset:138096*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138096*0 + 3*720*FLEN/8, x4, x1, x2)

inst_46033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000007fff; valaddr_reg:x3; val_offset:138099*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138099*0 + 3*721*FLEN/8, x4, x1, x2)

inst_46034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000000ffff; valaddr_reg:x3; val_offset:138102*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138102*0 + 3*722*FLEN/8, x4, x1, x2)

inst_46035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000001ffff; valaddr_reg:x3; val_offset:138105*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138105*0 + 3*723*FLEN/8, x4, x1, x2)

inst_46036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000003ffff; valaddr_reg:x3; val_offset:138108*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138108*0 + 3*724*FLEN/8, x4, x1, x2)

inst_46037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000007ffff; valaddr_reg:x3; val_offset:138111*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138111*0 + 3*725*FLEN/8, x4, x1, x2)

inst_46038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000000fffff; valaddr_reg:x3; val_offset:138114*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138114*0 + 3*726*FLEN/8, x4, x1, x2)

inst_46039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000001fffff; valaddr_reg:x3; val_offset:138117*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138117*0 + 3*727*FLEN/8, x4, x1, x2)

inst_46040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000003fffff; valaddr_reg:x3; val_offset:138120*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138120*0 + 3*728*FLEN/8, x4, x1, x2)

inst_46041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000007fffff; valaddr_reg:x3; val_offset:138123*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138123*0 + 3*729*FLEN/8, x4, x1, x2)

inst_46042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000000ffffff; valaddr_reg:x3; val_offset:138126*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138126*0 + 3*730*FLEN/8, x4, x1, x2)

inst_46043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000001ffffff; valaddr_reg:x3; val_offset:138129*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138129*0 + 3*731*FLEN/8, x4, x1, x2)

inst_46044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000003ffffff; valaddr_reg:x3; val_offset:138132*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138132*0 + 3*732*FLEN/8, x4, x1, x2)

inst_46045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000007ffffff; valaddr_reg:x3; val_offset:138135*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138135*0 + 3*733*FLEN/8, x4, x1, x2)

inst_46046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000000fffffff; valaddr_reg:x3; val_offset:138138*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138138*0 + 3*734*FLEN/8, x4, x1, x2)

inst_46047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000001fffffff; valaddr_reg:x3; val_offset:138141*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138141*0 + 3*735*FLEN/8, x4, x1, x2)

inst_46048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000003fffffff; valaddr_reg:x3; val_offset:138144*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138144*0 + 3*736*FLEN/8, x4, x1, x2)

inst_46049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000007fffffff; valaddr_reg:x3; val_offset:138147*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138147*0 + 3*737*FLEN/8, x4, x1, x2)

inst_46050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00000ffffffff; valaddr_reg:x3; val_offset:138150*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138150*0 + 3*738*FLEN/8, x4, x1, x2)

inst_46051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00001ffffffff; valaddr_reg:x3; val_offset:138153*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138153*0 + 3*739*FLEN/8, x4, x1, x2)

inst_46052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00003ffffffff; valaddr_reg:x3; val_offset:138156*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138156*0 + 3*740*FLEN/8, x4, x1, x2)

inst_46053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00007ffffffff; valaddr_reg:x3; val_offset:138159*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138159*0 + 3*741*FLEN/8, x4, x1, x2)

inst_46054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0000fffffffff; valaddr_reg:x3; val_offset:138162*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138162*0 + 3*742*FLEN/8, x4, x1, x2)

inst_46055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0001fffffffff; valaddr_reg:x3; val_offset:138165*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138165*0 + 3*743*FLEN/8, x4, x1, x2)

inst_46056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0003fffffffff; valaddr_reg:x3; val_offset:138168*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138168*0 + 3*744*FLEN/8, x4, x1, x2)

inst_46057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0007fffffffff; valaddr_reg:x3; val_offset:138171*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138171*0 + 3*745*FLEN/8, x4, x1, x2)

inst_46058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f000ffffffffff; valaddr_reg:x3; val_offset:138174*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138174*0 + 3*746*FLEN/8, x4, x1, x2)

inst_46059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f001ffffffffff; valaddr_reg:x3; val_offset:138177*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138177*0 + 3*747*FLEN/8, x4, x1, x2)

inst_46060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f003ffffffffff; valaddr_reg:x3; val_offset:138180*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138180*0 + 3*748*FLEN/8, x4, x1, x2)

inst_46061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f007ffffffffff; valaddr_reg:x3; val_offset:138183*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138183*0 + 3*749*FLEN/8, x4, x1, x2)

inst_46062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f00fffffffffff; valaddr_reg:x3; val_offset:138186*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138186*0 + 3*750*FLEN/8, x4, x1, x2)

inst_46063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f01fffffffffff; valaddr_reg:x3; val_offset:138189*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138189*0 + 3*751*FLEN/8, x4, x1, x2)

inst_46064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f03fffffffffff; valaddr_reg:x3; val_offset:138192*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138192*0 + 3*752*FLEN/8, x4, x1, x2)

inst_46065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f07fffffffffff; valaddr_reg:x3; val_offset:138195*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138195*0 + 3*753*FLEN/8, x4, x1, x2)

inst_46066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f0ffffffffffff; valaddr_reg:x3; val_offset:138198*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138198*0 + 3*754*FLEN/8, x4, x1, x2)

inst_46067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f1ffffffffffff; valaddr_reg:x3; val_offset:138201*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138201*0 + 3*755*FLEN/8, x4, x1, x2)

inst_46068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f3ffffffffffff; valaddr_reg:x3; val_offset:138204*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138204*0 + 3*756*FLEN/8, x4, x1, x2)

inst_46069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f7ffffffffffff; valaddr_reg:x3; val_offset:138207*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138207*0 + 3*757*FLEN/8, x4, x1, x2)

inst_46070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80f8000000000000; valaddr_reg:x3; val_offset:138210*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138210*0 + 3*758*FLEN/8, x4, x1, x2)

inst_46071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fc000000000000; valaddr_reg:x3; val_offset:138213*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138213*0 + 3*759*FLEN/8, x4, x1, x2)

inst_46072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fe000000000000; valaddr_reg:x3; val_offset:138216*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138216*0 + 3*760*FLEN/8, x4, x1, x2)

inst_46073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ff000000000000; valaddr_reg:x3; val_offset:138219*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138219*0 + 3*761*FLEN/8, x4, x1, x2)

inst_46074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ff800000000000; valaddr_reg:x3; val_offset:138222*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138222*0 + 3*762*FLEN/8, x4, x1, x2)

inst_46075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffc00000000000; valaddr_reg:x3; val_offset:138225*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138225*0 + 3*763*FLEN/8, x4, x1, x2)

inst_46076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffe00000000000; valaddr_reg:x3; val_offset:138228*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138228*0 + 3*764*FLEN/8, x4, x1, x2)

inst_46077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fff00000000000; valaddr_reg:x3; val_offset:138231*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138231*0 + 3*765*FLEN/8, x4, x1, x2)

inst_46078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fff80000000000; valaddr_reg:x3; val_offset:138234*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138234*0 + 3*766*FLEN/8, x4, x1, x2)

inst_46079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffc0000000000; valaddr_reg:x3; val_offset:138237*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138237*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(118219490218475519,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318143,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318144,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(120471290032160768,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121034239985582080,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121315714962292736,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121456452450648064,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121526821194825728,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121562005566914560,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121579597752958976,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121588393845981184,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121592791892492288,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121594990915747840,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596090427375616,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596640183189504,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596915061096448,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597052500049920,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597121219526656,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597155579265024,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597172759134208,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597181349068800,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597185644036096,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597187791519744,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597188865261568,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189402132480,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189670567936,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189804785664,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189871894528,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189905448960,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189922226176,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189930614784,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189934809088,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189936906240,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189937954816,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938479104,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938741248,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938872320,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938937856,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938970624,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938987008,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938995200,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938999296,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939001344,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002368,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002880,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003136,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003264,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003328,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003360,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003376,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003384,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003388,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003390,64,FLEN)
NAN_BOXED(6889471305123917355,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003391,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887296,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887297,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887299,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887303,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887311,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887327,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887359,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887423,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887551,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887807,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736888319,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736889343,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736891391,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736895487,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736903679,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736920063,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736952831,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737018367,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737149439,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737411583,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737935871,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835738984447,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835741081599,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835745275903,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835753664511,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835770441727,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835803996159,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835871105023,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836005322751,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836273758207,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836810629119,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882837884370943,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882840031854591,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882844326821887,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882852916756479,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882870096625663,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882904456364031,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882973175840767,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883110614794239,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883385492701183,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883935248515071,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236885034760142847,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236887233783398399,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236891631829909503,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236900427922931711,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236918020108976127,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236953204481064959,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237023573225242623,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237164310713597951,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237445785690308607,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9238008735643729919,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572543,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572544,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240260535457415168,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240823485410836480,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241104960387547136,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241245697875902464,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241316066620080128,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241351250992168960,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241368843178213376,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241377639271235584,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241382037317746688,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241384236341002240,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385335852630016,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385885608443904,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386160486350848,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386297925304320,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386366644781056,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386401004519424,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386418184388608,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386426774323200,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386431069290496,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386433216774144,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434290515968,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434827386880,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435095822336,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435230040064,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435297148928,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435330703360,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435347480576,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435355869184,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435360063488,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435362160640,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363209216,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363733504,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363995648,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364126720,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364192256,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364225024,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364241408,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364249600,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364253696,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364255744,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364256768,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257280,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257536,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257664,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257728,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257760,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257776,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257784,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257788,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257790,64,FLEN)
NAN_BOXED(6889490995476874857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257791,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521856,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521857,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521859,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521863,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521871,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521887,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521919,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534521983,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534522111,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534522367,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534522879,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534523903,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534525951,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534530047,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534538239,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534554623,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534587391,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534652927,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260534783999,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260535046143,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260535570431,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260536619007,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260538716159,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260542910463,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260551299071,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260568076287,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260601630719,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260668739583,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779260802957311,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779261071392767,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779261608263679,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779262682005503,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779264829489151,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779269124456447,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779277714391039,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779294894260223,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779329253998591,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779397973475327,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779535412428799,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102779810290335743,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102780360046149631,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102781459557777407,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102783658581032959,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102788056627544063,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102796852720566271,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102814444906610687,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102849629278699519,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4102919998022877183,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4103060735511232511,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4103342210487943167,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4103905160441364479,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4105031060348207103,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4105031060348207104,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4106156960255049728,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4106719910208471040,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107001385185181696,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107142122673537024,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107212491417714688,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107247675789803520,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107265267975847936,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107274064068870144,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107278462115381248,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107280661138636800,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107281760650264576,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282310406078464,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282585283985408,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282722722938880,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282791442415616,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282825802153984,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282842982023168,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282851571957760,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282855866925056,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282858014408704,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282859088150528,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282859625021440,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282859893456896,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860027674624,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860094783488,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860128337920,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860145115136,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860153503744,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860157698048,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860159795200,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860160843776,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161368064,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161630208,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161761280,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161826816,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161859584,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161875968,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161884160,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161888256,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161890304,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161891328,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161891840,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892096,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892224,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892288,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892320,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892336,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892344,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892348,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892350,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4107282860161892351,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889528680878639173,64,FLEN)
NAN_BOXED(2324406441905718340,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6889536149601283023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298432,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298433,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298435,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298439,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298447,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298463,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298495,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298559,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298687,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298943,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665299455,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665300479,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665302527,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665306623,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665314815,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665331199,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665363967,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665429503,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665560575,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665822719,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193666347007,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193667395583,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193669492735,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193673687039,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193682075647,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193698852863,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193732407295,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193799516159,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193933733887,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194202169343,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194739040255,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561195812782079,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561197960265727,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561202255233023,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561210845167615,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561228025036799,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561262384775167,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561331104251903,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561468543205375,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561743421112319,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76562293176926207,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76563392688553983,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76565591711809535,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76569989758320639,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76578785851342847,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76596378037387263,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76631562409476095,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76701931153653759,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76842668642009087,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77124143618719743,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77687093572141055,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983679,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983680,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(79938893385826304,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80501843339247616,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80783318315958272,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80924055804313600,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80994424548491264,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81029608920580096,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81047201106624512,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81055997199646720,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81060395246157824,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81062594269413376,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81063693781041152,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064243536855040,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064518414761984,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064655853715456,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064724573192192,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064758932930560,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064776112799744,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064784702734336,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064788997701632,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064791145185280,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792218927104,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792755798016,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793024233472,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793158451200,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793225560064,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793259114496,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793275891712,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793284280320,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793288474624,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793290571776,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793291620352,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292144640,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292406784,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292537856,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292603392,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292636160,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292652544,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292660736,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292664832,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292666880,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292667904,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668416,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668672,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668800,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668864,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668896,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668912,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668920,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668924,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668926,64,FLEN)
NAN_BOXED(6889561932607396873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668927,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743616,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743617,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743619,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743623,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743631,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743647,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743679,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743743,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917743871,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917744127,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917744639,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917745663,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917747711,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917751807,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917759999,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917776383,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917809151,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492917874687,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492918005759,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492918267903,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492918792191,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492919840767,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492921937919,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492926132223,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492934520831,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492951298047,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194492984852479,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194493051961343,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194493186179071,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194493454614527,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194493991485439,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194495065227263,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194497212710911,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194501507678207,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194510097612799,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194527277481983,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194561637220351,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194630356697087,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380194767795650559,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380195042673557503,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380195592429371391,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380196691940999167,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380198890964254719,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380203289010765823,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380212085103788031,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380229677289832447,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380264861661921279,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380335230406098943,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380475967894454271,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13380757442871164927,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13381320392824586239,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13382446292731428863,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13382446292731428864,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13383572192638271488,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384135142591692800,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384416617568403456,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384557355056758784,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384627723800936448,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384662908173025280,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384680500359069696,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384689296452091904,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384693694498603008,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384695893521858560,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384696993033486336,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384697542789300224,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384697817667207168,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384697955106160640,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698023825637376,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698058185375744,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698075365244928,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698083955179520,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698088250146816,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698090397630464,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698091471372288,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092008243200,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092276678656,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092410896384,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092478005248,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092511559680,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092528336896,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092536725504,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092540919808,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092543016960,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092544065536,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092544589824,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092544851968,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092544983040,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545048576,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545081344,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545097728,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545105920,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545110016,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545112064,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545113088,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545113600,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545113856,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545113984,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114048,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114080,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114096,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114104,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114108,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114110,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13384698092545114111,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889568920076374527,64,FLEN)
NAN_BOXED(11516228083481175035,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333248,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333249,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333251,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333255,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333263,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333279,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333311,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333375,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333503,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333759,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265334271,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265335295,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265337343,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265341439,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265349631,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265366015,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265398783,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265464319,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265595391,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265857535,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031266381823,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031267430399,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031269527551,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031273721855,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031282110463,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031298887679,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031332442111,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031399550975,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031533768703,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031802204159,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926032339075071,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926033412816895,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926035560300543,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926039855267839,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926048445202431,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926065625071615,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926099984809983,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926168704286719,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926306143240191,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926581021147135,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290927130776961023,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290928230288588799,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290930429311844351,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290934827358355455,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290943623451377663,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290961215637422079,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290996400009510911,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291066768753688575,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291207506242043903,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291488981218754559,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9292051931172175871,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018495,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018496,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294303730985861120,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294866680939282432,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295148155915993088,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295288893404348416,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295359262148526080,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295394446520614912,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295412038706659328,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295420834799681536,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295425232846192640,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
