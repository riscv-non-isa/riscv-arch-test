
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_36096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000000000ff; valaddr_reg:x3; val_offset:108288*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108288*0 + 3*0*FLEN/8, x4, x1, x2)

inst_36097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000000001ff; valaddr_reg:x3; val_offset:108291*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108291*0 + 3*1*FLEN/8, x4, x1, x2)

inst_36098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000000003ff; valaddr_reg:x3; val_offset:108294*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108294*0 + 3*2*FLEN/8, x4, x1, x2)

inst_36099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000000007ff; valaddr_reg:x3; val_offset:108297*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108297*0 + 3*3*FLEN/8, x4, x1, x2)

inst_36100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000000000fff; valaddr_reg:x3; val_offset:108300*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108300*0 + 3*4*FLEN/8, x4, x1, x2)

inst_36101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000000001fff; valaddr_reg:x3; val_offset:108303*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108303*0 + 3*5*FLEN/8, x4, x1, x2)

inst_36102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:108306*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108306*0 + 3*6*FLEN/8, x4, x1, x2)

inst_36103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:108309*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108309*0 + 3*7*FLEN/8, x4, x1, x2)

inst_36104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:108312*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108312*0 + 3*8*FLEN/8, x4, x1, x2)

inst_36105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:108315*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108315*0 + 3*9*FLEN/8, x4, x1, x2)

inst_36106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:108318*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108318*0 + 3*10*FLEN/8, x4, x1, x2)

inst_36107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:108321*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108321*0 + 3*11*FLEN/8, x4, x1, x2)

inst_36108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:108324*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108324*0 + 3*12*FLEN/8, x4, x1, x2)

inst_36109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:108327*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108327*0 + 3*13*FLEN/8, x4, x1, x2)

inst_36110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:108330*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108330*0 + 3*14*FLEN/8, x4, x1, x2)

inst_36111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:108333*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108333*0 + 3*15*FLEN/8, x4, x1, x2)

inst_36112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:108336*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108336*0 + 3*16*FLEN/8, x4, x1, x2)

inst_36113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:108339*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108339*0 + 3*17*FLEN/8, x4, x1, x2)

inst_36114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000003ffffff; valaddr_reg:x3; val_offset:108342*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108342*0 + 3*18*FLEN/8, x4, x1, x2)

inst_36115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000007ffffff; valaddr_reg:x3; val_offset:108345*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108345*0 + 3*19*FLEN/8, x4, x1, x2)

inst_36116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000000fffffff; valaddr_reg:x3; val_offset:108348*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108348*0 + 3*20*FLEN/8, x4, x1, x2)

inst_36117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000001fffffff; valaddr_reg:x3; val_offset:108351*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108351*0 + 3*21*FLEN/8, x4, x1, x2)

inst_36118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000003fffffff; valaddr_reg:x3; val_offset:108354*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108354*0 + 3*22*FLEN/8, x4, x1, x2)

inst_36119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000007fffffff; valaddr_reg:x3; val_offset:108357*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108357*0 + 3*23*FLEN/8, x4, x1, x2)

inst_36120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00000ffffffff; valaddr_reg:x3; val_offset:108360*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108360*0 + 3*24*FLEN/8, x4, x1, x2)

inst_36121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00001ffffffff; valaddr_reg:x3; val_offset:108363*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108363*0 + 3*25*FLEN/8, x4, x1, x2)

inst_36122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00003ffffffff; valaddr_reg:x3; val_offset:108366*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108366*0 + 3*26*FLEN/8, x4, x1, x2)

inst_36123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00007ffffffff; valaddr_reg:x3; val_offset:108369*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108369*0 + 3*27*FLEN/8, x4, x1, x2)

inst_36124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0000fffffffff; valaddr_reg:x3; val_offset:108372*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108372*0 + 3*28*FLEN/8, x4, x1, x2)

inst_36125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0001fffffffff; valaddr_reg:x3; val_offset:108375*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108375*0 + 3*29*FLEN/8, x4, x1, x2)

inst_36126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0003fffffffff; valaddr_reg:x3; val_offset:108378*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108378*0 + 3*30*FLEN/8, x4, x1, x2)

inst_36127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0007fffffffff; valaddr_reg:x3; val_offset:108381*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108381*0 + 3*31*FLEN/8, x4, x1, x2)

inst_36128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c000ffffffffff; valaddr_reg:x3; val_offset:108384*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108384*0 + 3*32*FLEN/8, x4, x1, x2)

inst_36129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c001ffffffffff; valaddr_reg:x3; val_offset:108387*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108387*0 + 3*33*FLEN/8, x4, x1, x2)

inst_36130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c003ffffffffff; valaddr_reg:x3; val_offset:108390*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108390*0 + 3*34*FLEN/8, x4, x1, x2)

inst_36131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c007ffffffffff; valaddr_reg:x3; val_offset:108393*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108393*0 + 3*35*FLEN/8, x4, x1, x2)

inst_36132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c00fffffffffff; valaddr_reg:x3; val_offset:108396*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108396*0 + 3*36*FLEN/8, x4, x1, x2)

inst_36133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c01fffffffffff; valaddr_reg:x3; val_offset:108399*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108399*0 + 3*37*FLEN/8, x4, x1, x2)

inst_36134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c03fffffffffff; valaddr_reg:x3; val_offset:108402*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108402*0 + 3*38*FLEN/8, x4, x1, x2)

inst_36135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c07fffffffffff; valaddr_reg:x3; val_offset:108405*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108405*0 + 3*39*FLEN/8, x4, x1, x2)

inst_36136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c0ffffffffffff; valaddr_reg:x3; val_offset:108408*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108408*0 + 3*40*FLEN/8, x4, x1, x2)

inst_36137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c1ffffffffffff; valaddr_reg:x3; val_offset:108411*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108411*0 + 3*41*FLEN/8, x4, x1, x2)

inst_36138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c3ffffffffffff; valaddr_reg:x3; val_offset:108414*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108414*0 + 3*42*FLEN/8, x4, x1, x2)

inst_36139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c7ffffffffffff; valaddr_reg:x3; val_offset:108417*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108417*0 + 3*43*FLEN/8, x4, x1, x2)

inst_36140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1c8000000000000; valaddr_reg:x3; val_offset:108420*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108420*0 + 3*44*FLEN/8, x4, x1, x2)

inst_36141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cc000000000000; valaddr_reg:x3; val_offset:108423*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108423*0 + 3*45*FLEN/8, x4, x1, x2)

inst_36142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1ce000000000000; valaddr_reg:x3; val_offset:108426*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108426*0 + 3*46*FLEN/8, x4, x1, x2)

inst_36143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cf000000000000; valaddr_reg:x3; val_offset:108429*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108429*0 + 3*47*FLEN/8, x4, x1, x2)

inst_36144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cf800000000000; valaddr_reg:x3; val_offset:108432*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108432*0 + 3*48*FLEN/8, x4, x1, x2)

inst_36145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfc00000000000; valaddr_reg:x3; val_offset:108435*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108435*0 + 3*49*FLEN/8, x4, x1, x2)

inst_36146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfe00000000000; valaddr_reg:x3; val_offset:108438*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108438*0 + 3*50*FLEN/8, x4, x1, x2)

inst_36147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cff00000000000; valaddr_reg:x3; val_offset:108441*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108441*0 + 3*51*FLEN/8, x4, x1, x2)

inst_36148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cff80000000000; valaddr_reg:x3; val_offset:108444*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108444*0 + 3*52*FLEN/8, x4, x1, x2)

inst_36149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffc0000000000; valaddr_reg:x3; val_offset:108447*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108447*0 + 3*53*FLEN/8, x4, x1, x2)

inst_36150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffe0000000000; valaddr_reg:x3; val_offset:108450*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108450*0 + 3*54*FLEN/8, x4, x1, x2)

inst_36151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfff0000000000; valaddr_reg:x3; val_offset:108453*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108453*0 + 3*55*FLEN/8, x4, x1, x2)

inst_36152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfff8000000000; valaddr_reg:x3; val_offset:108456*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108456*0 + 3*56*FLEN/8, x4, x1, x2)

inst_36153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffc000000000; valaddr_reg:x3; val_offset:108459*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108459*0 + 3*57*FLEN/8, x4, x1, x2)

inst_36154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffe000000000; valaddr_reg:x3; val_offset:108462*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108462*0 + 3*58*FLEN/8, x4, x1, x2)

inst_36155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffff000000000; valaddr_reg:x3; val_offset:108465*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108465*0 + 3*59*FLEN/8, x4, x1, x2)

inst_36156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffff800000000; valaddr_reg:x3; val_offset:108468*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108468*0 + 3*60*FLEN/8, x4, x1, x2)

inst_36157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffc00000000; valaddr_reg:x3; val_offset:108471*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108471*0 + 3*61*FLEN/8, x4, x1, x2)

inst_36158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffe00000000; valaddr_reg:x3; val_offset:108474*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108474*0 + 3*62*FLEN/8, x4, x1, x2)

inst_36159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffff00000000; valaddr_reg:x3; val_offset:108477*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108477*0 + 3*63*FLEN/8, x4, x1, x2)

inst_36160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffff80000000; valaddr_reg:x3; val_offset:108480*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108480*0 + 3*64*FLEN/8, x4, x1, x2)

inst_36161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffc0000000; valaddr_reg:x3; val_offset:108483*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108483*0 + 3*65*FLEN/8, x4, x1, x2)

inst_36162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffe0000000; valaddr_reg:x3; val_offset:108486*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108486*0 + 3*66*FLEN/8, x4, x1, x2)

inst_36163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffff0000000; valaddr_reg:x3; val_offset:108489*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108489*0 + 3*67*FLEN/8, x4, x1, x2)

inst_36164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffff8000000; valaddr_reg:x3; val_offset:108492*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108492*0 + 3*68*FLEN/8, x4, x1, x2)

inst_36165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffc000000; valaddr_reg:x3; val_offset:108495*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108495*0 + 3*69*FLEN/8, x4, x1, x2)

inst_36166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffe000000; valaddr_reg:x3; val_offset:108498*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108498*0 + 3*70*FLEN/8, x4, x1, x2)

inst_36167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffff000000; valaddr_reg:x3; val_offset:108501*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108501*0 + 3*71*FLEN/8, x4, x1, x2)

inst_36168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffff800000; valaddr_reg:x3; val_offset:108504*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108504*0 + 3*72*FLEN/8, x4, x1, x2)

inst_36169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffc00000; valaddr_reg:x3; val_offset:108507*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108507*0 + 3*73*FLEN/8, x4, x1, x2)

inst_36170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffe00000; valaddr_reg:x3; val_offset:108510*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108510*0 + 3*74*FLEN/8, x4, x1, x2)

inst_36171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffff00000; valaddr_reg:x3; val_offset:108513*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108513*0 + 3*75*FLEN/8, x4, x1, x2)

inst_36172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffff80000; valaddr_reg:x3; val_offset:108516*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108516*0 + 3*76*FLEN/8, x4, x1, x2)

inst_36173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffc0000; valaddr_reg:x3; val_offset:108519*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108519*0 + 3*77*FLEN/8, x4, x1, x2)

inst_36174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffe0000; valaddr_reg:x3; val_offset:108522*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108522*0 + 3*78*FLEN/8, x4, x1, x2)

inst_36175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffff0000; valaddr_reg:x3; val_offset:108525*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108525*0 + 3*79*FLEN/8, x4, x1, x2)

inst_36176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffff8000; valaddr_reg:x3; val_offset:108528*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108528*0 + 3*80*FLEN/8, x4, x1, x2)

inst_36177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffc000; valaddr_reg:x3; val_offset:108531*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108531*0 + 3*81*FLEN/8, x4, x1, x2)

inst_36178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffe000; valaddr_reg:x3; val_offset:108534*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108534*0 + 3*82*FLEN/8, x4, x1, x2)

inst_36179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffff000; valaddr_reg:x3; val_offset:108537*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108537*0 + 3*83*FLEN/8, x4, x1, x2)

inst_36180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffff800; valaddr_reg:x3; val_offset:108540*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108540*0 + 3*84*FLEN/8, x4, x1, x2)

inst_36181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffffc00; valaddr_reg:x3; val_offset:108543*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108543*0 + 3*85*FLEN/8, x4, x1, x2)

inst_36182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffffe00; valaddr_reg:x3; val_offset:108546*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108546*0 + 3*86*FLEN/8, x4, x1, x2)

inst_36183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffff00; valaddr_reg:x3; val_offset:108549*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108549*0 + 3*87*FLEN/8, x4, x1, x2)

inst_36184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffff80; valaddr_reg:x3; val_offset:108552*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108552*0 + 3*88*FLEN/8, x4, x1, x2)

inst_36185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffffc0; valaddr_reg:x3; val_offset:108555*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108555*0 + 3*89*FLEN/8, x4, x1, x2)

inst_36186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffffe0; valaddr_reg:x3; val_offset:108558*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108558*0 + 3*90*FLEN/8, x4, x1, x2)

inst_36187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffffff0; valaddr_reg:x3; val_offset:108561*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108561*0 + 3*91*FLEN/8, x4, x1, x2)

inst_36188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffffff8; valaddr_reg:x3; val_offset:108564*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108564*0 + 3*92*FLEN/8, x4, x1, x2)

inst_36189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffffffc; valaddr_reg:x3; val_offset:108567*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108567*0 + 3*93*FLEN/8, x4, x1, x2)

inst_36190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cffffffffffffe; valaddr_reg:x3; val_offset:108570*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108570*0 + 3*94*FLEN/8, x4, x1, x2)

inst_36191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x61ff4a1d8d08d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f961ff4a1d8d08d; op2val:0x0;
op3val:0x1cfffffffffffff; valaddr_reg:x3; val_offset:108573*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108573*0 + 3*95*FLEN/8, x4, x1, x2)

inst_36192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:108576*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108576*0 + 3*96*FLEN/8, x4, x1, x2)

inst_36193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:108579*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108579*0 + 3*97*FLEN/8, x4, x1, x2)

inst_36194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:108582*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108582*0 + 3*98*FLEN/8, x4, x1, x2)

inst_36195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:108585*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108585*0 + 3*99*FLEN/8, x4, x1, x2)

inst_36196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:108588*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108588*0 + 3*100*FLEN/8, x4, x1, x2)

inst_36197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:108591*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108591*0 + 3*101*FLEN/8, x4, x1, x2)

inst_36198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:108594*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108594*0 + 3*102*FLEN/8, x4, x1, x2)

inst_36199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:108597*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108597*0 + 3*103*FLEN/8, x4, x1, x2)

inst_36200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:108600*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108600*0 + 3*104*FLEN/8, x4, x1, x2)

inst_36201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:108603*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108603*0 + 3*105*FLEN/8, x4, x1, x2)

inst_36202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:108606*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108606*0 + 3*106*FLEN/8, x4, x1, x2)

inst_36203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:108609*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108609*0 + 3*107*FLEN/8, x4, x1, x2)

inst_36204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:108612*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108612*0 + 3*108*FLEN/8, x4, x1, x2)

inst_36205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:108615*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108615*0 + 3*109*FLEN/8, x4, x1, x2)

inst_36206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:108618*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108618*0 + 3*110*FLEN/8, x4, x1, x2)

inst_36207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:108621*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108621*0 + 3*111*FLEN/8, x4, x1, x2)

inst_36208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:108624*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108624*0 + 3*112*FLEN/8, x4, x1, x2)

inst_36209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:108627*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108627*0 + 3*113*FLEN/8, x4, x1, x2)

inst_36210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:108630*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108630*0 + 3*114*FLEN/8, x4, x1, x2)

inst_36211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:108633*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108633*0 + 3*115*FLEN/8, x4, x1, x2)

inst_36212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:108636*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108636*0 + 3*116*FLEN/8, x4, x1, x2)

inst_36213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:108639*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108639*0 + 3*117*FLEN/8, x4, x1, x2)

inst_36214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000000000; valaddr_reg:x3; val_offset:108642*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108642*0 + 3*118*FLEN/8, x4, x1, x2)

inst_36215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000000001; valaddr_reg:x3; val_offset:108645*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108645*0 + 3*119*FLEN/8, x4, x1, x2)

inst_36216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000000003; valaddr_reg:x3; val_offset:108648*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108648*0 + 3*120*FLEN/8, x4, x1, x2)

inst_36217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000000007; valaddr_reg:x3; val_offset:108651*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108651*0 + 3*121*FLEN/8, x4, x1, x2)

inst_36218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000000000f; valaddr_reg:x3; val_offset:108654*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108654*0 + 3*122*FLEN/8, x4, x1, x2)

inst_36219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000000001f; valaddr_reg:x3; val_offset:108657*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108657*0 + 3*123*FLEN/8, x4, x1, x2)

inst_36220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000000003f; valaddr_reg:x3; val_offset:108660*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108660*0 + 3*124*FLEN/8, x4, x1, x2)

inst_36221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000000007f; valaddr_reg:x3; val_offset:108663*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108663*0 + 3*125*FLEN/8, x4, x1, x2)

inst_36222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000000000ff; valaddr_reg:x3; val_offset:108666*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108666*0 + 3*126*FLEN/8, x4, x1, x2)

inst_36223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000000001ff; valaddr_reg:x3; val_offset:108669*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108669*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_36224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000000003ff; valaddr_reg:x3; val_offset:108672*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108672*0 + 3*128*FLEN/8, x4, x1, x2)

inst_36225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000000007ff; valaddr_reg:x3; val_offset:108675*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108675*0 + 3*129*FLEN/8, x4, x1, x2)

inst_36226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000000fff; valaddr_reg:x3; val_offset:108678*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108678*0 + 3*130*FLEN/8, x4, x1, x2)

inst_36227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000001fff; valaddr_reg:x3; val_offset:108681*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108681*0 + 3*131*FLEN/8, x4, x1, x2)

inst_36228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000003fff; valaddr_reg:x3; val_offset:108684*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108684*0 + 3*132*FLEN/8, x4, x1, x2)

inst_36229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000007fff; valaddr_reg:x3; val_offset:108687*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108687*0 + 3*133*FLEN/8, x4, x1, x2)

inst_36230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000000ffff; valaddr_reg:x3; val_offset:108690*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108690*0 + 3*134*FLEN/8, x4, x1, x2)

inst_36231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000001ffff; valaddr_reg:x3; val_offset:108693*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108693*0 + 3*135*FLEN/8, x4, x1, x2)

inst_36232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000003ffff; valaddr_reg:x3; val_offset:108696*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108696*0 + 3*136*FLEN/8, x4, x1, x2)

inst_36233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000007ffff; valaddr_reg:x3; val_offset:108699*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108699*0 + 3*137*FLEN/8, x4, x1, x2)

inst_36234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000000fffff; valaddr_reg:x3; val_offset:108702*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108702*0 + 3*138*FLEN/8, x4, x1, x2)

inst_36235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000001fffff; valaddr_reg:x3; val_offset:108705*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108705*0 + 3*139*FLEN/8, x4, x1, x2)

inst_36236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000003fffff; valaddr_reg:x3; val_offset:108708*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108708*0 + 3*140*FLEN/8, x4, x1, x2)

inst_36237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000007fffff; valaddr_reg:x3; val_offset:108711*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108711*0 + 3*141*FLEN/8, x4, x1, x2)

inst_36238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000000ffffff; valaddr_reg:x3; val_offset:108714*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108714*0 + 3*142*FLEN/8, x4, x1, x2)

inst_36239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000001ffffff; valaddr_reg:x3; val_offset:108717*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108717*0 + 3*143*FLEN/8, x4, x1, x2)

inst_36240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000003ffffff; valaddr_reg:x3; val_offset:108720*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108720*0 + 3*144*FLEN/8, x4, x1, x2)

inst_36241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000007ffffff; valaddr_reg:x3; val_offset:108723*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108723*0 + 3*145*FLEN/8, x4, x1, x2)

inst_36242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000000fffffff; valaddr_reg:x3; val_offset:108726*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108726*0 + 3*146*FLEN/8, x4, x1, x2)

inst_36243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000001fffffff; valaddr_reg:x3; val_offset:108729*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108729*0 + 3*147*FLEN/8, x4, x1, x2)

inst_36244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000003fffffff; valaddr_reg:x3; val_offset:108732*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108732*0 + 3*148*FLEN/8, x4, x1, x2)

inst_36245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000007fffffff; valaddr_reg:x3; val_offset:108735*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108735*0 + 3*149*FLEN/8, x4, x1, x2)

inst_36246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500000ffffffff; valaddr_reg:x3; val_offset:108738*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108738*0 + 3*150*FLEN/8, x4, x1, x2)

inst_36247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500001ffffffff; valaddr_reg:x3; val_offset:108741*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108741*0 + 3*151*FLEN/8, x4, x1, x2)

inst_36248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500003ffffffff; valaddr_reg:x3; val_offset:108744*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108744*0 + 3*152*FLEN/8, x4, x1, x2)

inst_36249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500007ffffffff; valaddr_reg:x3; val_offset:108747*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108747*0 + 3*153*FLEN/8, x4, x1, x2)

inst_36250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250000fffffffff; valaddr_reg:x3; val_offset:108750*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108750*0 + 3*154*FLEN/8, x4, x1, x2)

inst_36251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250001fffffffff; valaddr_reg:x3; val_offset:108753*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108753*0 + 3*155*FLEN/8, x4, x1, x2)

inst_36252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250003fffffffff; valaddr_reg:x3; val_offset:108756*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108756*0 + 3*156*FLEN/8, x4, x1, x2)

inst_36253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250007fffffffff; valaddr_reg:x3; val_offset:108759*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108759*0 + 3*157*FLEN/8, x4, x1, x2)

inst_36254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825000ffffffffff; valaddr_reg:x3; val_offset:108762*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108762*0 + 3*158*FLEN/8, x4, x1, x2)

inst_36255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825001ffffffffff; valaddr_reg:x3; val_offset:108765*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108765*0 + 3*159*FLEN/8, x4, x1, x2)

inst_36256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825003ffffffffff; valaddr_reg:x3; val_offset:108768*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108768*0 + 3*160*FLEN/8, x4, x1, x2)

inst_36257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825007ffffffffff; valaddr_reg:x3; val_offset:108771*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108771*0 + 3*161*FLEN/8, x4, x1, x2)

inst_36258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82500fffffffffff; valaddr_reg:x3; val_offset:108774*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108774*0 + 3*162*FLEN/8, x4, x1, x2)

inst_36259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82501fffffffffff; valaddr_reg:x3; val_offset:108777*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108777*0 + 3*163*FLEN/8, x4, x1, x2)

inst_36260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82503fffffffffff; valaddr_reg:x3; val_offset:108780*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108780*0 + 3*164*FLEN/8, x4, x1, x2)

inst_36261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x82507fffffffffff; valaddr_reg:x3; val_offset:108783*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108783*0 + 3*165*FLEN/8, x4, x1, x2)

inst_36262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8250ffffffffffff; valaddr_reg:x3; val_offset:108786*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108786*0 + 3*166*FLEN/8, x4, x1, x2)

inst_36263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8251ffffffffffff; valaddr_reg:x3; val_offset:108789*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108789*0 + 3*167*FLEN/8, x4, x1, x2)

inst_36264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8253ffffffffffff; valaddr_reg:x3; val_offset:108792*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108792*0 + 3*168*FLEN/8, x4, x1, x2)

inst_36265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8257ffffffffffff; valaddr_reg:x3; val_offset:108795*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108795*0 + 3*169*FLEN/8, x4, x1, x2)

inst_36266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x8258000000000000; valaddr_reg:x3; val_offset:108798*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108798*0 + 3*170*FLEN/8, x4, x1, x2)

inst_36267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825c000000000000; valaddr_reg:x3; val_offset:108801*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108801*0 + 3*171*FLEN/8, x4, x1, x2)

inst_36268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825e000000000000; valaddr_reg:x3; val_offset:108804*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108804*0 + 3*172*FLEN/8, x4, x1, x2)

inst_36269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825f000000000000; valaddr_reg:x3; val_offset:108807*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108807*0 + 3*173*FLEN/8, x4, x1, x2)

inst_36270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825f800000000000; valaddr_reg:x3; val_offset:108810*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108810*0 + 3*174*FLEN/8, x4, x1, x2)

inst_36271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fc00000000000; valaddr_reg:x3; val_offset:108813*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108813*0 + 3*175*FLEN/8, x4, x1, x2)

inst_36272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fe00000000000; valaddr_reg:x3; val_offset:108816*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108816*0 + 3*176*FLEN/8, x4, x1, x2)

inst_36273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ff00000000000; valaddr_reg:x3; val_offset:108819*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108819*0 + 3*177*FLEN/8, x4, x1, x2)

inst_36274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ff80000000000; valaddr_reg:x3; val_offset:108822*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108822*0 + 3*178*FLEN/8, x4, x1, x2)

inst_36275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffc0000000000; valaddr_reg:x3; val_offset:108825*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108825*0 + 3*179*FLEN/8, x4, x1, x2)

inst_36276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffe0000000000; valaddr_reg:x3; val_offset:108828*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108828*0 + 3*180*FLEN/8, x4, x1, x2)

inst_36277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fff0000000000; valaddr_reg:x3; val_offset:108831*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108831*0 + 3*181*FLEN/8, x4, x1, x2)

inst_36278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fff8000000000; valaddr_reg:x3; val_offset:108834*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108834*0 + 3*182*FLEN/8, x4, x1, x2)

inst_36279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffc000000000; valaddr_reg:x3; val_offset:108837*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108837*0 + 3*183*FLEN/8, x4, x1, x2)

inst_36280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffe000000000; valaddr_reg:x3; val_offset:108840*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108840*0 + 3*184*FLEN/8, x4, x1, x2)

inst_36281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffff000000000; valaddr_reg:x3; val_offset:108843*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108843*0 + 3*185*FLEN/8, x4, x1, x2)

inst_36282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffff800000000; valaddr_reg:x3; val_offset:108846*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108846*0 + 3*186*FLEN/8, x4, x1, x2)

inst_36283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffc00000000; valaddr_reg:x3; val_offset:108849*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108849*0 + 3*187*FLEN/8, x4, x1, x2)

inst_36284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffe00000000; valaddr_reg:x3; val_offset:108852*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108852*0 + 3*188*FLEN/8, x4, x1, x2)

inst_36285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffff00000000; valaddr_reg:x3; val_offset:108855*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108855*0 + 3*189*FLEN/8, x4, x1, x2)

inst_36286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffff80000000; valaddr_reg:x3; val_offset:108858*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108858*0 + 3*190*FLEN/8, x4, x1, x2)

inst_36287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffc0000000; valaddr_reg:x3; val_offset:108861*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108861*0 + 3*191*FLEN/8, x4, x1, x2)

inst_36288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffe0000000; valaddr_reg:x3; val_offset:108864*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108864*0 + 3*192*FLEN/8, x4, x1, x2)

inst_36289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffff0000000; valaddr_reg:x3; val_offset:108867*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108867*0 + 3*193*FLEN/8, x4, x1, x2)

inst_36290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffff8000000; valaddr_reg:x3; val_offset:108870*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108870*0 + 3*194*FLEN/8, x4, x1, x2)

inst_36291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffc000000; valaddr_reg:x3; val_offset:108873*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108873*0 + 3*195*FLEN/8, x4, x1, x2)

inst_36292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffe000000; valaddr_reg:x3; val_offset:108876*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108876*0 + 3*196*FLEN/8, x4, x1, x2)

inst_36293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffff000000; valaddr_reg:x3; val_offset:108879*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108879*0 + 3*197*FLEN/8, x4, x1, x2)

inst_36294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffff800000; valaddr_reg:x3; val_offset:108882*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108882*0 + 3*198*FLEN/8, x4, x1, x2)

inst_36295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffc00000; valaddr_reg:x3; val_offset:108885*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108885*0 + 3*199*FLEN/8, x4, x1, x2)

inst_36296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffe00000; valaddr_reg:x3; val_offset:108888*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108888*0 + 3*200*FLEN/8, x4, x1, x2)

inst_36297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffff00000; valaddr_reg:x3; val_offset:108891*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108891*0 + 3*201*FLEN/8, x4, x1, x2)

inst_36298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffff80000; valaddr_reg:x3; val_offset:108894*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108894*0 + 3*202*FLEN/8, x4, x1, x2)

inst_36299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffc0000; valaddr_reg:x3; val_offset:108897*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108897*0 + 3*203*FLEN/8, x4, x1, x2)

inst_36300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffe0000; valaddr_reg:x3; val_offset:108900*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108900*0 + 3*204*FLEN/8, x4, x1, x2)

inst_36301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffff0000; valaddr_reg:x3; val_offset:108903*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108903*0 + 3*205*FLEN/8, x4, x1, x2)

inst_36302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffff8000; valaddr_reg:x3; val_offset:108906*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108906*0 + 3*206*FLEN/8, x4, x1, x2)

inst_36303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffc000; valaddr_reg:x3; val_offset:108909*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108909*0 + 3*207*FLEN/8, x4, x1, x2)

inst_36304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffe000; valaddr_reg:x3; val_offset:108912*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108912*0 + 3*208*FLEN/8, x4, x1, x2)

inst_36305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffff000; valaddr_reg:x3; val_offset:108915*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108915*0 + 3*209*FLEN/8, x4, x1, x2)

inst_36306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffff800; valaddr_reg:x3; val_offset:108918*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108918*0 + 3*210*FLEN/8, x4, x1, x2)

inst_36307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffffc00; valaddr_reg:x3; val_offset:108921*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108921*0 + 3*211*FLEN/8, x4, x1, x2)

inst_36308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffffe00; valaddr_reg:x3; val_offset:108924*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108924*0 + 3*212*FLEN/8, x4, x1, x2)

inst_36309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffff00; valaddr_reg:x3; val_offset:108927*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108927*0 + 3*213*FLEN/8, x4, x1, x2)

inst_36310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffff80; valaddr_reg:x3; val_offset:108930*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108930*0 + 3*214*FLEN/8, x4, x1, x2)

inst_36311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffffc0; valaddr_reg:x3; val_offset:108933*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108933*0 + 3*215*FLEN/8, x4, x1, x2)

inst_36312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffffe0; valaddr_reg:x3; val_offset:108936*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108936*0 + 3*216*FLEN/8, x4, x1, x2)

inst_36313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffffff0; valaddr_reg:x3; val_offset:108939*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108939*0 + 3*217*FLEN/8, x4, x1, x2)

inst_36314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffffff8; valaddr_reg:x3; val_offset:108942*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108942*0 + 3*218*FLEN/8, x4, x1, x2)

inst_36315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffffffc; valaddr_reg:x3; val_offset:108945*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108945*0 + 3*219*FLEN/8, x4, x1, x2)

inst_36316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825ffffffffffffe; valaddr_reg:x3; val_offset:108948*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108948*0 + 3*220*FLEN/8, x4, x1, x2)

inst_36317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6262400033edb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96262400033edb; op2val:0x8000;
op3val:0x825fffffffffffff; valaddr_reg:x3; val_offset:108951*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108951*0 + 3*221*FLEN/8, x4, x1, x2)

inst_36318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:108954*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108954*0 + 3*222*FLEN/8, x4, x1, x2)

inst_36319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:108957*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108957*0 + 3*223*FLEN/8, x4, x1, x2)

inst_36320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:108960*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108960*0 + 3*224*FLEN/8, x4, x1, x2)

inst_36321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:108963*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108963*0 + 3*225*FLEN/8, x4, x1, x2)

inst_36322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:108966*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108966*0 + 3*226*FLEN/8, x4, x1, x2)

inst_36323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:108969*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108969*0 + 3*227*FLEN/8, x4, x1, x2)

inst_36324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:108972*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108972*0 + 3*228*FLEN/8, x4, x1, x2)

inst_36325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:108975*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108975*0 + 3*229*FLEN/8, x4, x1, x2)

inst_36326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:108978*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108978*0 + 3*230*FLEN/8, x4, x1, x2)

inst_36327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:108981*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108981*0 + 3*231*FLEN/8, x4, x1, x2)

inst_36328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:108984*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108984*0 + 3*232*FLEN/8, x4, x1, x2)

inst_36329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:108987*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108987*0 + 3*233*FLEN/8, x4, x1, x2)

inst_36330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:108990*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108990*0 + 3*234*FLEN/8, x4, x1, x2)

inst_36331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:108993*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108993*0 + 3*235*FLEN/8, x4, x1, x2)

inst_36332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:108996*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108996*0 + 3*236*FLEN/8, x4, x1, x2)

inst_36333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:108999*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108999*0 + 3*237*FLEN/8, x4, x1, x2)

inst_36334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:109002*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109002*0 + 3*238*FLEN/8, x4, x1, x2)

inst_36335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:109005*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109005*0 + 3*239*FLEN/8, x4, x1, x2)

inst_36336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:109008*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109008*0 + 3*240*FLEN/8, x4, x1, x2)

inst_36337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:109011*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109011*0 + 3*241*FLEN/8, x4, x1, x2)

inst_36338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:109014*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109014*0 + 3*242*FLEN/8, x4, x1, x2)

inst_36339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:109017*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109017*0 + 3*243*FLEN/8, x4, x1, x2)

inst_36340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000000000; valaddr_reg:x3; val_offset:109020*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109020*0 + 3*244*FLEN/8, x4, x1, x2)

inst_36341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000000001; valaddr_reg:x3; val_offset:109023*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109023*0 + 3*245*FLEN/8, x4, x1, x2)

inst_36342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000000003; valaddr_reg:x3; val_offset:109026*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109026*0 + 3*246*FLEN/8, x4, x1, x2)

inst_36343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000000007; valaddr_reg:x3; val_offset:109029*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109029*0 + 3*247*FLEN/8, x4, x1, x2)

inst_36344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000000000f; valaddr_reg:x3; val_offset:109032*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109032*0 + 3*248*FLEN/8, x4, x1, x2)

inst_36345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000000001f; valaddr_reg:x3; val_offset:109035*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109035*0 + 3*249*FLEN/8, x4, x1, x2)

inst_36346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000000003f; valaddr_reg:x3; val_offset:109038*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109038*0 + 3*250*FLEN/8, x4, x1, x2)

inst_36347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000000007f; valaddr_reg:x3; val_offset:109041*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109041*0 + 3*251*FLEN/8, x4, x1, x2)

inst_36348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000000000ff; valaddr_reg:x3; val_offset:109044*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109044*0 + 3*252*FLEN/8, x4, x1, x2)

inst_36349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000000001ff; valaddr_reg:x3; val_offset:109047*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109047*0 + 3*253*FLEN/8, x4, x1, x2)

inst_36350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000000003ff; valaddr_reg:x3; val_offset:109050*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109050*0 + 3*254*FLEN/8, x4, x1, x2)

inst_36351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000000007ff; valaddr_reg:x3; val_offset:109053*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109053*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_36352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000000fff; valaddr_reg:x3; val_offset:109056*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109056*0 + 3*256*FLEN/8, x4, x1, x2)

inst_36353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000001fff; valaddr_reg:x3; val_offset:109059*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109059*0 + 3*257*FLEN/8, x4, x1, x2)

inst_36354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000003fff; valaddr_reg:x3; val_offset:109062*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109062*0 + 3*258*FLEN/8, x4, x1, x2)

inst_36355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000007fff; valaddr_reg:x3; val_offset:109065*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109065*0 + 3*259*FLEN/8, x4, x1, x2)

inst_36356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000000ffff; valaddr_reg:x3; val_offset:109068*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109068*0 + 3*260*FLEN/8, x4, x1, x2)

inst_36357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000001ffff; valaddr_reg:x3; val_offset:109071*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109071*0 + 3*261*FLEN/8, x4, x1, x2)

inst_36358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000003ffff; valaddr_reg:x3; val_offset:109074*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109074*0 + 3*262*FLEN/8, x4, x1, x2)

inst_36359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000007ffff; valaddr_reg:x3; val_offset:109077*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109077*0 + 3*263*FLEN/8, x4, x1, x2)

inst_36360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000000fffff; valaddr_reg:x3; val_offset:109080*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109080*0 + 3*264*FLEN/8, x4, x1, x2)

inst_36361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000001fffff; valaddr_reg:x3; val_offset:109083*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109083*0 + 3*265*FLEN/8, x4, x1, x2)

inst_36362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000003fffff; valaddr_reg:x3; val_offset:109086*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109086*0 + 3*266*FLEN/8, x4, x1, x2)

inst_36363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000007fffff; valaddr_reg:x3; val_offset:109089*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109089*0 + 3*267*FLEN/8, x4, x1, x2)

inst_36364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000000ffffff; valaddr_reg:x3; val_offset:109092*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109092*0 + 3*268*FLEN/8, x4, x1, x2)

inst_36365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000001ffffff; valaddr_reg:x3; val_offset:109095*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109095*0 + 3*269*FLEN/8, x4, x1, x2)

inst_36366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000003ffffff; valaddr_reg:x3; val_offset:109098*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109098*0 + 3*270*FLEN/8, x4, x1, x2)

inst_36367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000007ffffff; valaddr_reg:x3; val_offset:109101*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109101*0 + 3*271*FLEN/8, x4, x1, x2)

inst_36368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000000fffffff; valaddr_reg:x3; val_offset:109104*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109104*0 + 3*272*FLEN/8, x4, x1, x2)

inst_36369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000001fffffff; valaddr_reg:x3; val_offset:109107*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109107*0 + 3*273*FLEN/8, x4, x1, x2)

inst_36370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000003fffffff; valaddr_reg:x3; val_offset:109110*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109110*0 + 3*274*FLEN/8, x4, x1, x2)

inst_36371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000007fffffff; valaddr_reg:x3; val_offset:109113*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109113*0 + 3*275*FLEN/8, x4, x1, x2)

inst_36372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300000ffffffff; valaddr_reg:x3; val_offset:109116*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109116*0 + 3*276*FLEN/8, x4, x1, x2)

inst_36373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300001ffffffff; valaddr_reg:x3; val_offset:109119*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109119*0 + 3*277*FLEN/8, x4, x1, x2)

inst_36374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300003ffffffff; valaddr_reg:x3; val_offset:109122*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109122*0 + 3*278*FLEN/8, x4, x1, x2)

inst_36375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300007ffffffff; valaddr_reg:x3; val_offset:109125*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109125*0 + 3*279*FLEN/8, x4, x1, x2)

inst_36376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230000fffffffff; valaddr_reg:x3; val_offset:109128*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109128*0 + 3*280*FLEN/8, x4, x1, x2)

inst_36377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230001fffffffff; valaddr_reg:x3; val_offset:109131*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109131*0 + 3*281*FLEN/8, x4, x1, x2)

inst_36378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230003fffffffff; valaddr_reg:x3; val_offset:109134*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109134*0 + 3*282*FLEN/8, x4, x1, x2)

inst_36379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230007fffffffff; valaddr_reg:x3; val_offset:109137*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109137*0 + 3*283*FLEN/8, x4, x1, x2)

inst_36380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823000ffffffffff; valaddr_reg:x3; val_offset:109140*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109140*0 + 3*284*FLEN/8, x4, x1, x2)

inst_36381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823001ffffffffff; valaddr_reg:x3; val_offset:109143*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109143*0 + 3*285*FLEN/8, x4, x1, x2)

inst_36382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823003ffffffffff; valaddr_reg:x3; val_offset:109146*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109146*0 + 3*286*FLEN/8, x4, x1, x2)

inst_36383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823007ffffffffff; valaddr_reg:x3; val_offset:109149*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109149*0 + 3*287*FLEN/8, x4, x1, x2)

inst_36384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82300fffffffffff; valaddr_reg:x3; val_offset:109152*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109152*0 + 3*288*FLEN/8, x4, x1, x2)

inst_36385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82301fffffffffff; valaddr_reg:x3; val_offset:109155*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109155*0 + 3*289*FLEN/8, x4, x1, x2)

inst_36386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82303fffffffffff; valaddr_reg:x3; val_offset:109158*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109158*0 + 3*290*FLEN/8, x4, x1, x2)

inst_36387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x82307fffffffffff; valaddr_reg:x3; val_offset:109161*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109161*0 + 3*291*FLEN/8, x4, x1, x2)

inst_36388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8230ffffffffffff; valaddr_reg:x3; val_offset:109164*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109164*0 + 3*292*FLEN/8, x4, x1, x2)

inst_36389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8231ffffffffffff; valaddr_reg:x3; val_offset:109167*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109167*0 + 3*293*FLEN/8, x4, x1, x2)

inst_36390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8233ffffffffffff; valaddr_reg:x3; val_offset:109170*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109170*0 + 3*294*FLEN/8, x4, x1, x2)

inst_36391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8237ffffffffffff; valaddr_reg:x3; val_offset:109173*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109173*0 + 3*295*FLEN/8, x4, x1, x2)

inst_36392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x8238000000000000; valaddr_reg:x3; val_offset:109176*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109176*0 + 3*296*FLEN/8, x4, x1, x2)

inst_36393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823c000000000000; valaddr_reg:x3; val_offset:109179*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109179*0 + 3*297*FLEN/8, x4, x1, x2)

inst_36394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823e000000000000; valaddr_reg:x3; val_offset:109182*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109182*0 + 3*298*FLEN/8, x4, x1, x2)

inst_36395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823f000000000000; valaddr_reg:x3; val_offset:109185*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109185*0 + 3*299*FLEN/8, x4, x1, x2)

inst_36396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823f800000000000; valaddr_reg:x3; val_offset:109188*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109188*0 + 3*300*FLEN/8, x4, x1, x2)

inst_36397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fc00000000000; valaddr_reg:x3; val_offset:109191*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109191*0 + 3*301*FLEN/8, x4, x1, x2)

inst_36398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fe00000000000; valaddr_reg:x3; val_offset:109194*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109194*0 + 3*302*FLEN/8, x4, x1, x2)

inst_36399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ff00000000000; valaddr_reg:x3; val_offset:109197*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109197*0 + 3*303*FLEN/8, x4, x1, x2)

inst_36400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ff80000000000; valaddr_reg:x3; val_offset:109200*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109200*0 + 3*304*FLEN/8, x4, x1, x2)

inst_36401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffc0000000000; valaddr_reg:x3; val_offset:109203*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109203*0 + 3*305*FLEN/8, x4, x1, x2)

inst_36402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffe0000000000; valaddr_reg:x3; val_offset:109206*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109206*0 + 3*306*FLEN/8, x4, x1, x2)

inst_36403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fff0000000000; valaddr_reg:x3; val_offset:109209*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109209*0 + 3*307*FLEN/8, x4, x1, x2)

inst_36404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fff8000000000; valaddr_reg:x3; val_offset:109212*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109212*0 + 3*308*FLEN/8, x4, x1, x2)

inst_36405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffc000000000; valaddr_reg:x3; val_offset:109215*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109215*0 + 3*309*FLEN/8, x4, x1, x2)

inst_36406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffe000000000; valaddr_reg:x3; val_offset:109218*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109218*0 + 3*310*FLEN/8, x4, x1, x2)

inst_36407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffff000000000; valaddr_reg:x3; val_offset:109221*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109221*0 + 3*311*FLEN/8, x4, x1, x2)

inst_36408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffff800000000; valaddr_reg:x3; val_offset:109224*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109224*0 + 3*312*FLEN/8, x4, x1, x2)

inst_36409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffc00000000; valaddr_reg:x3; val_offset:109227*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109227*0 + 3*313*FLEN/8, x4, x1, x2)

inst_36410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffe00000000; valaddr_reg:x3; val_offset:109230*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109230*0 + 3*314*FLEN/8, x4, x1, x2)

inst_36411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffff00000000; valaddr_reg:x3; val_offset:109233*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109233*0 + 3*315*FLEN/8, x4, x1, x2)

inst_36412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffff80000000; valaddr_reg:x3; val_offset:109236*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109236*0 + 3*316*FLEN/8, x4, x1, x2)

inst_36413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffc0000000; valaddr_reg:x3; val_offset:109239*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109239*0 + 3*317*FLEN/8, x4, x1, x2)

inst_36414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffe0000000; valaddr_reg:x3; val_offset:109242*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109242*0 + 3*318*FLEN/8, x4, x1, x2)

inst_36415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffff0000000; valaddr_reg:x3; val_offset:109245*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109245*0 + 3*319*FLEN/8, x4, x1, x2)

inst_36416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffff8000000; valaddr_reg:x3; val_offset:109248*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109248*0 + 3*320*FLEN/8, x4, x1, x2)

inst_36417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffc000000; valaddr_reg:x3; val_offset:109251*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109251*0 + 3*321*FLEN/8, x4, x1, x2)

inst_36418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffe000000; valaddr_reg:x3; val_offset:109254*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109254*0 + 3*322*FLEN/8, x4, x1, x2)

inst_36419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffff000000; valaddr_reg:x3; val_offset:109257*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109257*0 + 3*323*FLEN/8, x4, x1, x2)

inst_36420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffff800000; valaddr_reg:x3; val_offset:109260*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109260*0 + 3*324*FLEN/8, x4, x1, x2)

inst_36421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffc00000; valaddr_reg:x3; val_offset:109263*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109263*0 + 3*325*FLEN/8, x4, x1, x2)

inst_36422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffe00000; valaddr_reg:x3; val_offset:109266*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109266*0 + 3*326*FLEN/8, x4, x1, x2)

inst_36423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffff00000; valaddr_reg:x3; val_offset:109269*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109269*0 + 3*327*FLEN/8, x4, x1, x2)

inst_36424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffff80000; valaddr_reg:x3; val_offset:109272*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109272*0 + 3*328*FLEN/8, x4, x1, x2)

inst_36425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffc0000; valaddr_reg:x3; val_offset:109275*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109275*0 + 3*329*FLEN/8, x4, x1, x2)

inst_36426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffe0000; valaddr_reg:x3; val_offset:109278*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109278*0 + 3*330*FLEN/8, x4, x1, x2)

inst_36427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffff0000; valaddr_reg:x3; val_offset:109281*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109281*0 + 3*331*FLEN/8, x4, x1, x2)

inst_36428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffff8000; valaddr_reg:x3; val_offset:109284*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109284*0 + 3*332*FLEN/8, x4, x1, x2)

inst_36429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffc000; valaddr_reg:x3; val_offset:109287*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109287*0 + 3*333*FLEN/8, x4, x1, x2)

inst_36430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffe000; valaddr_reg:x3; val_offset:109290*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109290*0 + 3*334*FLEN/8, x4, x1, x2)

inst_36431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffff000; valaddr_reg:x3; val_offset:109293*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109293*0 + 3*335*FLEN/8, x4, x1, x2)

inst_36432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffff800; valaddr_reg:x3; val_offset:109296*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109296*0 + 3*336*FLEN/8, x4, x1, x2)

inst_36433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffffc00; valaddr_reg:x3; val_offset:109299*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109299*0 + 3*337*FLEN/8, x4, x1, x2)

inst_36434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffffe00; valaddr_reg:x3; val_offset:109302*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109302*0 + 3*338*FLEN/8, x4, x1, x2)

inst_36435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffff00; valaddr_reg:x3; val_offset:109305*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109305*0 + 3*339*FLEN/8, x4, x1, x2)

inst_36436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffff80; valaddr_reg:x3; val_offset:109308*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109308*0 + 3*340*FLEN/8, x4, x1, x2)

inst_36437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffffc0; valaddr_reg:x3; val_offset:109311*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109311*0 + 3*341*FLEN/8, x4, x1, x2)

inst_36438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffffe0; valaddr_reg:x3; val_offset:109314*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109314*0 + 3*342*FLEN/8, x4, x1, x2)

inst_36439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffffff0; valaddr_reg:x3; val_offset:109317*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109317*0 + 3*343*FLEN/8, x4, x1, x2)

inst_36440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffffff8; valaddr_reg:x3; val_offset:109320*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109320*0 + 3*344*FLEN/8, x4, x1, x2)

inst_36441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffffffc; valaddr_reg:x3; val_offset:109323*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109323*0 + 3*345*FLEN/8, x4, x1, x2)

inst_36442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823ffffffffffffe; valaddr_reg:x3; val_offset:109326*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109326*0 + 3*346*FLEN/8, x4, x1, x2)

inst_36443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x691434a2e6d49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9691434a2e6d49; op2val:0x8000;
op3val:0x823fffffffffffff; valaddr_reg:x3; val_offset:109329*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109329*0 + 3*347*FLEN/8, x4, x1, x2)

inst_36444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000000000; valaddr_reg:x3; val_offset:109332*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109332*0 + 3*348*FLEN/8, x4, x1, x2)

inst_36445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000000001; valaddr_reg:x3; val_offset:109335*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109335*0 + 3*349*FLEN/8, x4, x1, x2)

inst_36446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000000003; valaddr_reg:x3; val_offset:109338*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109338*0 + 3*350*FLEN/8, x4, x1, x2)

inst_36447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000000007; valaddr_reg:x3; val_offset:109341*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109341*0 + 3*351*FLEN/8, x4, x1, x2)

inst_36448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000000000f; valaddr_reg:x3; val_offset:109344*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109344*0 + 3*352*FLEN/8, x4, x1, x2)

inst_36449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000000001f; valaddr_reg:x3; val_offset:109347*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109347*0 + 3*353*FLEN/8, x4, x1, x2)

inst_36450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000000003f; valaddr_reg:x3; val_offset:109350*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109350*0 + 3*354*FLEN/8, x4, x1, x2)

inst_36451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000000007f; valaddr_reg:x3; val_offset:109353*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109353*0 + 3*355*FLEN/8, x4, x1, x2)

inst_36452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000000000ff; valaddr_reg:x3; val_offset:109356*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109356*0 + 3*356*FLEN/8, x4, x1, x2)

inst_36453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000000001ff; valaddr_reg:x3; val_offset:109359*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109359*0 + 3*357*FLEN/8, x4, x1, x2)

inst_36454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000000003ff; valaddr_reg:x3; val_offset:109362*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109362*0 + 3*358*FLEN/8, x4, x1, x2)

inst_36455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000000007ff; valaddr_reg:x3; val_offset:109365*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109365*0 + 3*359*FLEN/8, x4, x1, x2)

inst_36456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000000fff; valaddr_reg:x3; val_offset:109368*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109368*0 + 3*360*FLEN/8, x4, x1, x2)

inst_36457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000001fff; valaddr_reg:x3; val_offset:109371*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109371*0 + 3*361*FLEN/8, x4, x1, x2)

inst_36458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000003fff; valaddr_reg:x3; val_offset:109374*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109374*0 + 3*362*FLEN/8, x4, x1, x2)

inst_36459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000007fff; valaddr_reg:x3; val_offset:109377*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109377*0 + 3*363*FLEN/8, x4, x1, x2)

inst_36460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000000ffff; valaddr_reg:x3; val_offset:109380*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109380*0 + 3*364*FLEN/8, x4, x1, x2)

inst_36461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000001ffff; valaddr_reg:x3; val_offset:109383*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109383*0 + 3*365*FLEN/8, x4, x1, x2)

inst_36462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000003ffff; valaddr_reg:x3; val_offset:109386*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109386*0 + 3*366*FLEN/8, x4, x1, x2)

inst_36463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000007ffff; valaddr_reg:x3; val_offset:109389*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109389*0 + 3*367*FLEN/8, x4, x1, x2)

inst_36464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000000fffff; valaddr_reg:x3; val_offset:109392*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109392*0 + 3*368*FLEN/8, x4, x1, x2)

inst_36465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000001fffff; valaddr_reg:x3; val_offset:109395*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109395*0 + 3*369*FLEN/8, x4, x1, x2)

inst_36466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000003fffff; valaddr_reg:x3; val_offset:109398*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109398*0 + 3*370*FLEN/8, x4, x1, x2)

inst_36467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000007fffff; valaddr_reg:x3; val_offset:109401*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109401*0 + 3*371*FLEN/8, x4, x1, x2)

inst_36468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000000ffffff; valaddr_reg:x3; val_offset:109404*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109404*0 + 3*372*FLEN/8, x4, x1, x2)

inst_36469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000001ffffff; valaddr_reg:x3; val_offset:109407*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109407*0 + 3*373*FLEN/8, x4, x1, x2)

inst_36470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000003ffffff; valaddr_reg:x3; val_offset:109410*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109410*0 + 3*374*FLEN/8, x4, x1, x2)

inst_36471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000007ffffff; valaddr_reg:x3; val_offset:109413*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109413*0 + 3*375*FLEN/8, x4, x1, x2)

inst_36472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000000fffffff; valaddr_reg:x3; val_offset:109416*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109416*0 + 3*376*FLEN/8, x4, x1, x2)

inst_36473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000001fffffff; valaddr_reg:x3; val_offset:109419*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109419*0 + 3*377*FLEN/8, x4, x1, x2)

inst_36474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000003fffffff; valaddr_reg:x3; val_offset:109422*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109422*0 + 3*378*FLEN/8, x4, x1, x2)

inst_36475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000007fffffff; valaddr_reg:x3; val_offset:109425*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109425*0 + 3*379*FLEN/8, x4, x1, x2)

inst_36476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400000ffffffff; valaddr_reg:x3; val_offset:109428*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109428*0 + 3*380*FLEN/8, x4, x1, x2)

inst_36477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400001ffffffff; valaddr_reg:x3; val_offset:109431*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109431*0 + 3*381*FLEN/8, x4, x1, x2)

inst_36478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400003ffffffff; valaddr_reg:x3; val_offset:109434*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109434*0 + 3*382*FLEN/8, x4, x1, x2)

inst_36479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400007ffffffff; valaddr_reg:x3; val_offset:109437*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109437*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_36480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40000fffffffff; valaddr_reg:x3; val_offset:109440*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109440*0 + 3*384*FLEN/8, x4, x1, x2)

inst_36481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40001fffffffff; valaddr_reg:x3; val_offset:109443*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109443*0 + 3*385*FLEN/8, x4, x1, x2)

inst_36482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40003fffffffff; valaddr_reg:x3; val_offset:109446*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109446*0 + 3*386*FLEN/8, x4, x1, x2)

inst_36483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40007fffffffff; valaddr_reg:x3; val_offset:109449*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109449*0 + 3*387*FLEN/8, x4, x1, x2)

inst_36484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4000ffffffffff; valaddr_reg:x3; val_offset:109452*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109452*0 + 3*388*FLEN/8, x4, x1, x2)

inst_36485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4001ffffffffff; valaddr_reg:x3; val_offset:109455*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109455*0 + 3*389*FLEN/8, x4, x1, x2)

inst_36486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4003ffffffffff; valaddr_reg:x3; val_offset:109458*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109458*0 + 3*390*FLEN/8, x4, x1, x2)

inst_36487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4007ffffffffff; valaddr_reg:x3; val_offset:109461*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109461*0 + 3*391*FLEN/8, x4, x1, x2)

inst_36488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe400fffffffffff; valaddr_reg:x3; val_offset:109464*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109464*0 + 3*392*FLEN/8, x4, x1, x2)

inst_36489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe401fffffffffff; valaddr_reg:x3; val_offset:109467*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109467*0 + 3*393*FLEN/8, x4, x1, x2)

inst_36490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe403fffffffffff; valaddr_reg:x3; val_offset:109470*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109470*0 + 3*394*FLEN/8, x4, x1, x2)

inst_36491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe407fffffffffff; valaddr_reg:x3; val_offset:109473*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109473*0 + 3*395*FLEN/8, x4, x1, x2)

inst_36492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe40ffffffffffff; valaddr_reg:x3; val_offset:109476*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109476*0 + 3*396*FLEN/8, x4, x1, x2)

inst_36493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe41ffffffffffff; valaddr_reg:x3; val_offset:109479*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109479*0 + 3*397*FLEN/8, x4, x1, x2)

inst_36494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe43ffffffffffff; valaddr_reg:x3; val_offset:109482*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109482*0 + 3*398*FLEN/8, x4, x1, x2)

inst_36495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe47ffffffffffff; valaddr_reg:x3; val_offset:109485*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109485*0 + 3*399*FLEN/8, x4, x1, x2)

inst_36496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe48000000000000; valaddr_reg:x3; val_offset:109488*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109488*0 + 3*400*FLEN/8, x4, x1, x2)

inst_36497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4c000000000000; valaddr_reg:x3; val_offset:109491*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109491*0 + 3*401*FLEN/8, x4, x1, x2)

inst_36498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4e000000000000; valaddr_reg:x3; val_offset:109494*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109494*0 + 3*402*FLEN/8, x4, x1, x2)

inst_36499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4f000000000000; valaddr_reg:x3; val_offset:109497*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109497*0 + 3*403*FLEN/8, x4, x1, x2)

inst_36500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4f800000000000; valaddr_reg:x3; val_offset:109500*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109500*0 + 3*404*FLEN/8, x4, x1, x2)

inst_36501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fc00000000000; valaddr_reg:x3; val_offset:109503*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109503*0 + 3*405*FLEN/8, x4, x1, x2)

inst_36502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fe00000000000; valaddr_reg:x3; val_offset:109506*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109506*0 + 3*406*FLEN/8, x4, x1, x2)

inst_36503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ff00000000000; valaddr_reg:x3; val_offset:109509*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109509*0 + 3*407*FLEN/8, x4, x1, x2)

inst_36504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ff80000000000; valaddr_reg:x3; val_offset:109512*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109512*0 + 3*408*FLEN/8, x4, x1, x2)

inst_36505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffc0000000000; valaddr_reg:x3; val_offset:109515*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109515*0 + 3*409*FLEN/8, x4, x1, x2)

inst_36506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffe0000000000; valaddr_reg:x3; val_offset:109518*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109518*0 + 3*410*FLEN/8, x4, x1, x2)

inst_36507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fff0000000000; valaddr_reg:x3; val_offset:109521*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109521*0 + 3*411*FLEN/8, x4, x1, x2)

inst_36508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fff8000000000; valaddr_reg:x3; val_offset:109524*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109524*0 + 3*412*FLEN/8, x4, x1, x2)

inst_36509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffc000000000; valaddr_reg:x3; val_offset:109527*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109527*0 + 3*413*FLEN/8, x4, x1, x2)

inst_36510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffe000000000; valaddr_reg:x3; val_offset:109530*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109530*0 + 3*414*FLEN/8, x4, x1, x2)

inst_36511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffff000000000; valaddr_reg:x3; val_offset:109533*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109533*0 + 3*415*FLEN/8, x4, x1, x2)

inst_36512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffff800000000; valaddr_reg:x3; val_offset:109536*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109536*0 + 3*416*FLEN/8, x4, x1, x2)

inst_36513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffc00000000; valaddr_reg:x3; val_offset:109539*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109539*0 + 3*417*FLEN/8, x4, x1, x2)

inst_36514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffe00000000; valaddr_reg:x3; val_offset:109542*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109542*0 + 3*418*FLEN/8, x4, x1, x2)

inst_36515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffff00000000; valaddr_reg:x3; val_offset:109545*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109545*0 + 3*419*FLEN/8, x4, x1, x2)

inst_36516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffff80000000; valaddr_reg:x3; val_offset:109548*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109548*0 + 3*420*FLEN/8, x4, x1, x2)

inst_36517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffc0000000; valaddr_reg:x3; val_offset:109551*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109551*0 + 3*421*FLEN/8, x4, x1, x2)

inst_36518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffe0000000; valaddr_reg:x3; val_offset:109554*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109554*0 + 3*422*FLEN/8, x4, x1, x2)

inst_36519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffff0000000; valaddr_reg:x3; val_offset:109557*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109557*0 + 3*423*FLEN/8, x4, x1, x2)

inst_36520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffff8000000; valaddr_reg:x3; val_offset:109560*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109560*0 + 3*424*FLEN/8, x4, x1, x2)

inst_36521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffc000000; valaddr_reg:x3; val_offset:109563*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109563*0 + 3*425*FLEN/8, x4, x1, x2)

inst_36522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffe000000; valaddr_reg:x3; val_offset:109566*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109566*0 + 3*426*FLEN/8, x4, x1, x2)

inst_36523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffff000000; valaddr_reg:x3; val_offset:109569*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109569*0 + 3*427*FLEN/8, x4, x1, x2)

inst_36524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffff800000; valaddr_reg:x3; val_offset:109572*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109572*0 + 3*428*FLEN/8, x4, x1, x2)

inst_36525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffc00000; valaddr_reg:x3; val_offset:109575*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109575*0 + 3*429*FLEN/8, x4, x1, x2)

inst_36526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffe00000; valaddr_reg:x3; val_offset:109578*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109578*0 + 3*430*FLEN/8, x4, x1, x2)

inst_36527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffff00000; valaddr_reg:x3; val_offset:109581*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109581*0 + 3*431*FLEN/8, x4, x1, x2)

inst_36528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffff80000; valaddr_reg:x3; val_offset:109584*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109584*0 + 3*432*FLEN/8, x4, x1, x2)

inst_36529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffc0000; valaddr_reg:x3; val_offset:109587*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109587*0 + 3*433*FLEN/8, x4, x1, x2)

inst_36530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffe0000; valaddr_reg:x3; val_offset:109590*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109590*0 + 3*434*FLEN/8, x4, x1, x2)

inst_36531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffff0000; valaddr_reg:x3; val_offset:109593*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109593*0 + 3*435*FLEN/8, x4, x1, x2)

inst_36532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffff8000; valaddr_reg:x3; val_offset:109596*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109596*0 + 3*436*FLEN/8, x4, x1, x2)

inst_36533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffc000; valaddr_reg:x3; val_offset:109599*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109599*0 + 3*437*FLEN/8, x4, x1, x2)

inst_36534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffe000; valaddr_reg:x3; val_offset:109602*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109602*0 + 3*438*FLEN/8, x4, x1, x2)

inst_36535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffff000; valaddr_reg:x3; val_offset:109605*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109605*0 + 3*439*FLEN/8, x4, x1, x2)

inst_36536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffff800; valaddr_reg:x3; val_offset:109608*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109608*0 + 3*440*FLEN/8, x4, x1, x2)

inst_36537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffffc00; valaddr_reg:x3; val_offset:109611*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109611*0 + 3*441*FLEN/8, x4, x1, x2)

inst_36538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffffe00; valaddr_reg:x3; val_offset:109614*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109614*0 + 3*442*FLEN/8, x4, x1, x2)

inst_36539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffff00; valaddr_reg:x3; val_offset:109617*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109617*0 + 3*443*FLEN/8, x4, x1, x2)

inst_36540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffff80; valaddr_reg:x3; val_offset:109620*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109620*0 + 3*444*FLEN/8, x4, x1, x2)

inst_36541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffffc0; valaddr_reg:x3; val_offset:109623*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109623*0 + 3*445*FLEN/8, x4, x1, x2)

inst_36542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffffe0; valaddr_reg:x3; val_offset:109626*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109626*0 + 3*446*FLEN/8, x4, x1, x2)

inst_36543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffffff0; valaddr_reg:x3; val_offset:109629*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109629*0 + 3*447*FLEN/8, x4, x1, x2)

inst_36544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffffff8; valaddr_reg:x3; val_offset:109632*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109632*0 + 3*448*FLEN/8, x4, x1, x2)

inst_36545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffffffc; valaddr_reg:x3; val_offset:109635*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109635*0 + 3*449*FLEN/8, x4, x1, x2)

inst_36546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4ffffffffffffe; valaddr_reg:x3; val_offset:109638*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109638*0 + 3*450*FLEN/8, x4, x1, x2)

inst_36547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbe4fffffffffffff; valaddr_reg:x3; val_offset:109641*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109641*0 + 3*451*FLEN/8, x4, x1, x2)

inst_36548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:109644*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109644*0 + 3*452*FLEN/8, x4, x1, x2)

inst_36549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:109647*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109647*0 + 3*453*FLEN/8, x4, x1, x2)

inst_36550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:109650*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109650*0 + 3*454*FLEN/8, x4, x1, x2)

inst_36551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:109653*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109653*0 + 3*455*FLEN/8, x4, x1, x2)

inst_36552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:109656*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109656*0 + 3*456*FLEN/8, x4, x1, x2)

inst_36553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:109659*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109659*0 + 3*457*FLEN/8, x4, x1, x2)

inst_36554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:109662*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109662*0 + 3*458*FLEN/8, x4, x1, x2)

inst_36555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:109665*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109665*0 + 3*459*FLEN/8, x4, x1, x2)

inst_36556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:109668*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109668*0 + 3*460*FLEN/8, x4, x1, x2)

inst_36557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:109671*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109671*0 + 3*461*FLEN/8, x4, x1, x2)

inst_36558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:109674*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109674*0 + 3*462*FLEN/8, x4, x1, x2)

inst_36559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:109677*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109677*0 + 3*463*FLEN/8, x4, x1, x2)

inst_36560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:109680*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109680*0 + 3*464*FLEN/8, x4, x1, x2)

inst_36561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:109683*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109683*0 + 3*465*FLEN/8, x4, x1, x2)

inst_36562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:109686*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109686*0 + 3*466*FLEN/8, x4, x1, x2)

inst_36563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:109689*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109689*0 + 3*467*FLEN/8, x4, x1, x2)

inst_36564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:109692*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109692*0 + 3*468*FLEN/8, x4, x1, x2)

inst_36565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:109695*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109695*0 + 3*469*FLEN/8, x4, x1, x2)

inst_36566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:109698*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109698*0 + 3*470*FLEN/8, x4, x1, x2)

inst_36567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:109701*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109701*0 + 3*471*FLEN/8, x4, x1, x2)

inst_36568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:109704*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109704*0 + 3*472*FLEN/8, x4, x1, x2)

inst_36569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x689eeed9bda55 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x9fd689eeed9bda55;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:109707*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109707*0 + 3*473*FLEN/8, x4, x1, x2)

inst_36570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:109710*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109710*0 + 3*474*FLEN/8, x4, x1, x2)

inst_36571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:109713*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109713*0 + 3*475*FLEN/8, x4, x1, x2)

inst_36572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:109716*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109716*0 + 3*476*FLEN/8, x4, x1, x2)

inst_36573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:109719*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109719*0 + 3*477*FLEN/8, x4, x1, x2)

inst_36574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:109722*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109722*0 + 3*478*FLEN/8, x4, x1, x2)

inst_36575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:109725*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109725*0 + 3*479*FLEN/8, x4, x1, x2)

inst_36576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:109728*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109728*0 + 3*480*FLEN/8, x4, x1, x2)

inst_36577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:109731*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109731*0 + 3*481*FLEN/8, x4, x1, x2)

inst_36578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:109734*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109734*0 + 3*482*FLEN/8, x4, x1, x2)

inst_36579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:109737*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109737*0 + 3*483*FLEN/8, x4, x1, x2)

inst_36580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:109740*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109740*0 + 3*484*FLEN/8, x4, x1, x2)

inst_36581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:109743*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109743*0 + 3*485*FLEN/8, x4, x1, x2)

inst_36582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:109746*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109746*0 + 3*486*FLEN/8, x4, x1, x2)

inst_36583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:109749*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109749*0 + 3*487*FLEN/8, x4, x1, x2)

inst_36584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:109752*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109752*0 + 3*488*FLEN/8, x4, x1, x2)

inst_36585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:109755*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109755*0 + 3*489*FLEN/8, x4, x1, x2)

inst_36586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:109758*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109758*0 + 3*490*FLEN/8, x4, x1, x2)

inst_36587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:109761*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109761*0 + 3*491*FLEN/8, x4, x1, x2)

inst_36588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:109764*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109764*0 + 3*492*FLEN/8, x4, x1, x2)

inst_36589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:109767*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109767*0 + 3*493*FLEN/8, x4, x1, x2)

inst_36590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:109770*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109770*0 + 3*494*FLEN/8, x4, x1, x2)

inst_36591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:109773*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109773*0 + 3*495*FLEN/8, x4, x1, x2)

inst_36592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000000000; valaddr_reg:x3; val_offset:109776*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109776*0 + 3*496*FLEN/8, x4, x1, x2)

inst_36593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000000001; valaddr_reg:x3; val_offset:109779*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109779*0 + 3*497*FLEN/8, x4, x1, x2)

inst_36594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000000003; valaddr_reg:x3; val_offset:109782*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109782*0 + 3*498*FLEN/8, x4, x1, x2)

inst_36595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000000007; valaddr_reg:x3; val_offset:109785*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109785*0 + 3*499*FLEN/8, x4, x1, x2)

inst_36596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000000000f; valaddr_reg:x3; val_offset:109788*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109788*0 + 3*500*FLEN/8, x4, x1, x2)

inst_36597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000000001f; valaddr_reg:x3; val_offset:109791*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109791*0 + 3*501*FLEN/8, x4, x1, x2)

inst_36598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000000003f; valaddr_reg:x3; val_offset:109794*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109794*0 + 3*502*FLEN/8, x4, x1, x2)

inst_36599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000000007f; valaddr_reg:x3; val_offset:109797*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109797*0 + 3*503*FLEN/8, x4, x1, x2)

inst_36600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000000000ff; valaddr_reg:x3; val_offset:109800*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109800*0 + 3*504*FLEN/8, x4, x1, x2)

inst_36601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000000001ff; valaddr_reg:x3; val_offset:109803*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109803*0 + 3*505*FLEN/8, x4, x1, x2)

inst_36602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000000003ff; valaddr_reg:x3; val_offset:109806*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109806*0 + 3*506*FLEN/8, x4, x1, x2)

inst_36603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000000007ff; valaddr_reg:x3; val_offset:109809*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109809*0 + 3*507*FLEN/8, x4, x1, x2)

inst_36604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000000fff; valaddr_reg:x3; val_offset:109812*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109812*0 + 3*508*FLEN/8, x4, x1, x2)

inst_36605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000001fff; valaddr_reg:x3; val_offset:109815*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109815*0 + 3*509*FLEN/8, x4, x1, x2)

inst_36606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000003fff; valaddr_reg:x3; val_offset:109818*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109818*0 + 3*510*FLEN/8, x4, x1, x2)

inst_36607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000007fff; valaddr_reg:x3; val_offset:109821*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109821*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_36608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000000ffff; valaddr_reg:x3; val_offset:109824*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109824*0 + 3*512*FLEN/8, x4, x1, x2)

inst_36609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000001ffff; valaddr_reg:x3; val_offset:109827*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109827*0 + 3*513*FLEN/8, x4, x1, x2)

inst_36610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000003ffff; valaddr_reg:x3; val_offset:109830*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109830*0 + 3*514*FLEN/8, x4, x1, x2)

inst_36611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000007ffff; valaddr_reg:x3; val_offset:109833*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109833*0 + 3*515*FLEN/8, x4, x1, x2)

inst_36612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000000fffff; valaddr_reg:x3; val_offset:109836*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109836*0 + 3*516*FLEN/8, x4, x1, x2)

inst_36613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000001fffff; valaddr_reg:x3; val_offset:109839*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109839*0 + 3*517*FLEN/8, x4, x1, x2)

inst_36614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000003fffff; valaddr_reg:x3; val_offset:109842*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109842*0 + 3*518*FLEN/8, x4, x1, x2)

inst_36615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000007fffff; valaddr_reg:x3; val_offset:109845*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109845*0 + 3*519*FLEN/8, x4, x1, x2)

inst_36616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000000ffffff; valaddr_reg:x3; val_offset:109848*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109848*0 + 3*520*FLEN/8, x4, x1, x2)

inst_36617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000001ffffff; valaddr_reg:x3; val_offset:109851*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109851*0 + 3*521*FLEN/8, x4, x1, x2)

inst_36618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000003ffffff; valaddr_reg:x3; val_offset:109854*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109854*0 + 3*522*FLEN/8, x4, x1, x2)

inst_36619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000007ffffff; valaddr_reg:x3; val_offset:109857*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109857*0 + 3*523*FLEN/8, x4, x1, x2)

inst_36620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000000fffffff; valaddr_reg:x3; val_offset:109860*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109860*0 + 3*524*FLEN/8, x4, x1, x2)

inst_36621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000001fffffff; valaddr_reg:x3; val_offset:109863*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109863*0 + 3*525*FLEN/8, x4, x1, x2)

inst_36622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000003fffffff; valaddr_reg:x3; val_offset:109866*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109866*0 + 3*526*FLEN/8, x4, x1, x2)

inst_36623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000007fffffff; valaddr_reg:x3; val_offset:109869*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109869*0 + 3*527*FLEN/8, x4, x1, x2)

inst_36624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000000ffffffff; valaddr_reg:x3; val_offset:109872*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109872*0 + 3*528*FLEN/8, x4, x1, x2)

inst_36625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000001ffffffff; valaddr_reg:x3; val_offset:109875*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109875*0 + 3*529*FLEN/8, x4, x1, x2)

inst_36626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000003ffffffff; valaddr_reg:x3; val_offset:109878*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109878*0 + 3*530*FLEN/8, x4, x1, x2)

inst_36627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000007ffffffff; valaddr_reg:x3; val_offset:109881*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109881*0 + 3*531*FLEN/8, x4, x1, x2)

inst_36628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300000fffffffff; valaddr_reg:x3; val_offset:109884*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109884*0 + 3*532*FLEN/8, x4, x1, x2)

inst_36629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300001fffffffff; valaddr_reg:x3; val_offset:109887*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109887*0 + 3*533*FLEN/8, x4, x1, x2)

inst_36630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300003fffffffff; valaddr_reg:x3; val_offset:109890*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109890*0 + 3*534*FLEN/8, x4, x1, x2)

inst_36631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300007fffffffff; valaddr_reg:x3; val_offset:109893*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109893*0 + 3*535*FLEN/8, x4, x1, x2)

inst_36632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30000ffffffffff; valaddr_reg:x3; val_offset:109896*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109896*0 + 3*536*FLEN/8, x4, x1, x2)

inst_36633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30001ffffffffff; valaddr_reg:x3; val_offset:109899*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109899*0 + 3*537*FLEN/8, x4, x1, x2)

inst_36634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30003ffffffffff; valaddr_reg:x3; val_offset:109902*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109902*0 + 3*538*FLEN/8, x4, x1, x2)

inst_36635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30007ffffffffff; valaddr_reg:x3; val_offset:109905*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109905*0 + 3*539*FLEN/8, x4, x1, x2)

inst_36636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3000fffffffffff; valaddr_reg:x3; val_offset:109908*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109908*0 + 3*540*FLEN/8, x4, x1, x2)

inst_36637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3001fffffffffff; valaddr_reg:x3; val_offset:109911*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109911*0 + 3*541*FLEN/8, x4, x1, x2)

inst_36638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3003fffffffffff; valaddr_reg:x3; val_offset:109914*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109914*0 + 3*542*FLEN/8, x4, x1, x2)

inst_36639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x3007fffffffffff; valaddr_reg:x3; val_offset:109917*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109917*0 + 3*543*FLEN/8, x4, x1, x2)

inst_36640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x300ffffffffffff; valaddr_reg:x3; val_offset:109920*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109920*0 + 3*544*FLEN/8, x4, x1, x2)

inst_36641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x301ffffffffffff; valaddr_reg:x3; val_offset:109923*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109923*0 + 3*545*FLEN/8, x4, x1, x2)

inst_36642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x303ffffffffffff; valaddr_reg:x3; val_offset:109926*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109926*0 + 3*546*FLEN/8, x4, x1, x2)

inst_36643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x307ffffffffffff; valaddr_reg:x3; val_offset:109929*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109929*0 + 3*547*FLEN/8, x4, x1, x2)

inst_36644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x308000000000000; valaddr_reg:x3; val_offset:109932*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109932*0 + 3*548*FLEN/8, x4, x1, x2)

inst_36645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30c000000000000; valaddr_reg:x3; val_offset:109935*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109935*0 + 3*549*FLEN/8, x4, x1, x2)

inst_36646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30e000000000000; valaddr_reg:x3; val_offset:109938*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109938*0 + 3*550*FLEN/8, x4, x1, x2)

inst_36647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30f000000000000; valaddr_reg:x3; val_offset:109941*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109941*0 + 3*551*FLEN/8, x4, x1, x2)

inst_36648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30f800000000000; valaddr_reg:x3; val_offset:109944*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109944*0 + 3*552*FLEN/8, x4, x1, x2)

inst_36649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fc00000000000; valaddr_reg:x3; val_offset:109947*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109947*0 + 3*553*FLEN/8, x4, x1, x2)

inst_36650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fe00000000000; valaddr_reg:x3; val_offset:109950*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109950*0 + 3*554*FLEN/8, x4, x1, x2)

inst_36651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ff00000000000; valaddr_reg:x3; val_offset:109953*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109953*0 + 3*555*FLEN/8, x4, x1, x2)

inst_36652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ff80000000000; valaddr_reg:x3; val_offset:109956*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109956*0 + 3*556*FLEN/8, x4, x1, x2)

inst_36653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffc0000000000; valaddr_reg:x3; val_offset:109959*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109959*0 + 3*557*FLEN/8, x4, x1, x2)

inst_36654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffe0000000000; valaddr_reg:x3; val_offset:109962*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109962*0 + 3*558*FLEN/8, x4, x1, x2)

inst_36655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fff0000000000; valaddr_reg:x3; val_offset:109965*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109965*0 + 3*559*FLEN/8, x4, x1, x2)

inst_36656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fff8000000000; valaddr_reg:x3; val_offset:109968*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109968*0 + 3*560*FLEN/8, x4, x1, x2)

inst_36657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffc000000000; valaddr_reg:x3; val_offset:109971*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109971*0 + 3*561*FLEN/8, x4, x1, x2)

inst_36658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffe000000000; valaddr_reg:x3; val_offset:109974*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109974*0 + 3*562*FLEN/8, x4, x1, x2)

inst_36659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffff000000000; valaddr_reg:x3; val_offset:109977*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109977*0 + 3*563*FLEN/8, x4, x1, x2)

inst_36660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffff800000000; valaddr_reg:x3; val_offset:109980*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109980*0 + 3*564*FLEN/8, x4, x1, x2)

inst_36661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffc00000000; valaddr_reg:x3; val_offset:109983*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109983*0 + 3*565*FLEN/8, x4, x1, x2)

inst_36662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffe00000000; valaddr_reg:x3; val_offset:109986*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109986*0 + 3*566*FLEN/8, x4, x1, x2)

inst_36663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffff00000000; valaddr_reg:x3; val_offset:109989*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109989*0 + 3*567*FLEN/8, x4, x1, x2)

inst_36664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffff80000000; valaddr_reg:x3; val_offset:109992*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109992*0 + 3*568*FLEN/8, x4, x1, x2)

inst_36665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffc0000000; valaddr_reg:x3; val_offset:109995*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109995*0 + 3*569*FLEN/8, x4, x1, x2)

inst_36666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffe0000000; valaddr_reg:x3; val_offset:109998*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 109998*0 + 3*570*FLEN/8, x4, x1, x2)

inst_36667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffff0000000; valaddr_reg:x3; val_offset:110001*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110001*0 + 3*571*FLEN/8, x4, x1, x2)

inst_36668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffff8000000; valaddr_reg:x3; val_offset:110004*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110004*0 + 3*572*FLEN/8, x4, x1, x2)

inst_36669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffc000000; valaddr_reg:x3; val_offset:110007*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110007*0 + 3*573*FLEN/8, x4, x1, x2)

inst_36670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffe000000; valaddr_reg:x3; val_offset:110010*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110010*0 + 3*574*FLEN/8, x4, x1, x2)

inst_36671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffff000000; valaddr_reg:x3; val_offset:110013*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110013*0 + 3*575*FLEN/8, x4, x1, x2)

inst_36672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffff800000; valaddr_reg:x3; val_offset:110016*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110016*0 + 3*576*FLEN/8, x4, x1, x2)

inst_36673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffc00000; valaddr_reg:x3; val_offset:110019*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110019*0 + 3*577*FLEN/8, x4, x1, x2)

inst_36674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffe00000; valaddr_reg:x3; val_offset:110022*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110022*0 + 3*578*FLEN/8, x4, x1, x2)

inst_36675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffff00000; valaddr_reg:x3; val_offset:110025*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110025*0 + 3*579*FLEN/8, x4, x1, x2)

inst_36676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffff80000; valaddr_reg:x3; val_offset:110028*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110028*0 + 3*580*FLEN/8, x4, x1, x2)

inst_36677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffc0000; valaddr_reg:x3; val_offset:110031*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110031*0 + 3*581*FLEN/8, x4, x1, x2)

inst_36678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffe0000; valaddr_reg:x3; val_offset:110034*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110034*0 + 3*582*FLEN/8, x4, x1, x2)

inst_36679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffff0000; valaddr_reg:x3; val_offset:110037*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110037*0 + 3*583*FLEN/8, x4, x1, x2)

inst_36680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffff8000; valaddr_reg:x3; val_offset:110040*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110040*0 + 3*584*FLEN/8, x4, x1, x2)

inst_36681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffc000; valaddr_reg:x3; val_offset:110043*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110043*0 + 3*585*FLEN/8, x4, x1, x2)

inst_36682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffe000; valaddr_reg:x3; val_offset:110046*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110046*0 + 3*586*FLEN/8, x4, x1, x2)

inst_36683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffff000; valaddr_reg:x3; val_offset:110049*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110049*0 + 3*587*FLEN/8, x4, x1, x2)

inst_36684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffff800; valaddr_reg:x3; val_offset:110052*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110052*0 + 3*588*FLEN/8, x4, x1, x2)

inst_36685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffffc00; valaddr_reg:x3; val_offset:110055*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110055*0 + 3*589*FLEN/8, x4, x1, x2)

inst_36686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffffe00; valaddr_reg:x3; val_offset:110058*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110058*0 + 3*590*FLEN/8, x4, x1, x2)

inst_36687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffff00; valaddr_reg:x3; val_offset:110061*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110061*0 + 3*591*FLEN/8, x4, x1, x2)

inst_36688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffff80; valaddr_reg:x3; val_offset:110064*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110064*0 + 3*592*FLEN/8, x4, x1, x2)

inst_36689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffffc0; valaddr_reg:x3; val_offset:110067*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110067*0 + 3*593*FLEN/8, x4, x1, x2)

inst_36690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffffe0; valaddr_reg:x3; val_offset:110070*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110070*0 + 3*594*FLEN/8, x4, x1, x2)

inst_36691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffffff0; valaddr_reg:x3; val_offset:110073*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110073*0 + 3*595*FLEN/8, x4, x1, x2)

inst_36692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffffff8; valaddr_reg:x3; val_offset:110076*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110076*0 + 3*596*FLEN/8, x4, x1, x2)

inst_36693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffffffc; valaddr_reg:x3; val_offset:110079*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110079*0 + 3*597*FLEN/8, x4, x1, x2)

inst_36694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30ffffffffffffe; valaddr_reg:x3; val_offset:110082*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110082*0 + 3*598*FLEN/8, x4, x1, x2)

inst_36695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6c645b4e098bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96c645b4e098bb; op2val:0x0;
op3val:0x30fffffffffffff; valaddr_reg:x3; val_offset:110085*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110085*0 + 3*599*FLEN/8, x4, x1, x2)

inst_36696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:110088*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110088*0 + 3*600*FLEN/8, x4, x1, x2)

inst_36697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:110091*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110091*0 + 3*601*FLEN/8, x4, x1, x2)

inst_36698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:110094*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110094*0 + 3*602*FLEN/8, x4, x1, x2)

inst_36699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:110097*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110097*0 + 3*603*FLEN/8, x4, x1, x2)

inst_36700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:110100*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110100*0 + 3*604*FLEN/8, x4, x1, x2)

inst_36701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:110103*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110103*0 + 3*605*FLEN/8, x4, x1, x2)

inst_36702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:110106*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110106*0 + 3*606*FLEN/8, x4, x1, x2)

inst_36703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:110109*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110109*0 + 3*607*FLEN/8, x4, x1, x2)

inst_36704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:110112*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110112*0 + 3*608*FLEN/8, x4, x1, x2)

inst_36705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:110115*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110115*0 + 3*609*FLEN/8, x4, x1, x2)

inst_36706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:110118*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110118*0 + 3*610*FLEN/8, x4, x1, x2)

inst_36707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:110121*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110121*0 + 3*611*FLEN/8, x4, x1, x2)

inst_36708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:110124*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110124*0 + 3*612*FLEN/8, x4, x1, x2)

inst_36709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:110127*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110127*0 + 3*613*FLEN/8, x4, x1, x2)

inst_36710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:110130*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110130*0 + 3*614*FLEN/8, x4, x1, x2)

inst_36711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:110133*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110133*0 + 3*615*FLEN/8, x4, x1, x2)

inst_36712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:110136*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110136*0 + 3*616*FLEN/8, x4, x1, x2)

inst_36713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:110139*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110139*0 + 3*617*FLEN/8, x4, x1, x2)

inst_36714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:110142*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110142*0 + 3*618*FLEN/8, x4, x1, x2)

inst_36715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:110145*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110145*0 + 3*619*FLEN/8, x4, x1, x2)

inst_36716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:110148*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110148*0 + 3*620*FLEN/8, x4, x1, x2)

inst_36717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:110151*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110151*0 + 3*621*FLEN/8, x4, x1, x2)

inst_36718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000000000; valaddr_reg:x3; val_offset:110154*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110154*0 + 3*622*FLEN/8, x4, x1, x2)

inst_36719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000000001; valaddr_reg:x3; val_offset:110157*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110157*0 + 3*623*FLEN/8, x4, x1, x2)

inst_36720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000000003; valaddr_reg:x3; val_offset:110160*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110160*0 + 3*624*FLEN/8, x4, x1, x2)

inst_36721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000000007; valaddr_reg:x3; val_offset:110163*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110163*0 + 3*625*FLEN/8, x4, x1, x2)

inst_36722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000000000f; valaddr_reg:x3; val_offset:110166*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110166*0 + 3*626*FLEN/8, x4, x1, x2)

inst_36723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000000001f; valaddr_reg:x3; val_offset:110169*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110169*0 + 3*627*FLEN/8, x4, x1, x2)

inst_36724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000000003f; valaddr_reg:x3; val_offset:110172*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110172*0 + 3*628*FLEN/8, x4, x1, x2)

inst_36725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000000007f; valaddr_reg:x3; val_offset:110175*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110175*0 + 3*629*FLEN/8, x4, x1, x2)

inst_36726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000000000ff; valaddr_reg:x3; val_offset:110178*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110178*0 + 3*630*FLEN/8, x4, x1, x2)

inst_36727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000000001ff; valaddr_reg:x3; val_offset:110181*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110181*0 + 3*631*FLEN/8, x4, x1, x2)

inst_36728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000000003ff; valaddr_reg:x3; val_offset:110184*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110184*0 + 3*632*FLEN/8, x4, x1, x2)

inst_36729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000000007ff; valaddr_reg:x3; val_offset:110187*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110187*0 + 3*633*FLEN/8, x4, x1, x2)

inst_36730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000000fff; valaddr_reg:x3; val_offset:110190*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110190*0 + 3*634*FLEN/8, x4, x1, x2)

inst_36731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000001fff; valaddr_reg:x3; val_offset:110193*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110193*0 + 3*635*FLEN/8, x4, x1, x2)

inst_36732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000003fff; valaddr_reg:x3; val_offset:110196*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110196*0 + 3*636*FLEN/8, x4, x1, x2)

inst_36733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000007fff; valaddr_reg:x3; val_offset:110199*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110199*0 + 3*637*FLEN/8, x4, x1, x2)

inst_36734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000000ffff; valaddr_reg:x3; val_offset:110202*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110202*0 + 3*638*FLEN/8, x4, x1, x2)

inst_36735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000001ffff; valaddr_reg:x3; val_offset:110205*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110205*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_36736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000003ffff; valaddr_reg:x3; val_offset:110208*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110208*0 + 3*640*FLEN/8, x4, x1, x2)

inst_36737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000007ffff; valaddr_reg:x3; val_offset:110211*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110211*0 + 3*641*FLEN/8, x4, x1, x2)

inst_36738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000000fffff; valaddr_reg:x3; val_offset:110214*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110214*0 + 3*642*FLEN/8, x4, x1, x2)

inst_36739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000001fffff; valaddr_reg:x3; val_offset:110217*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110217*0 + 3*643*FLEN/8, x4, x1, x2)

inst_36740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000003fffff; valaddr_reg:x3; val_offset:110220*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110220*0 + 3*644*FLEN/8, x4, x1, x2)

inst_36741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000007fffff; valaddr_reg:x3; val_offset:110223*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110223*0 + 3*645*FLEN/8, x4, x1, x2)

inst_36742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000000ffffff; valaddr_reg:x3; val_offset:110226*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110226*0 + 3*646*FLEN/8, x4, x1, x2)

inst_36743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000001ffffff; valaddr_reg:x3; val_offset:110229*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110229*0 + 3*647*FLEN/8, x4, x1, x2)

inst_36744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000003ffffff; valaddr_reg:x3; val_offset:110232*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110232*0 + 3*648*FLEN/8, x4, x1, x2)

inst_36745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000007ffffff; valaddr_reg:x3; val_offset:110235*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110235*0 + 3*649*FLEN/8, x4, x1, x2)

inst_36746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000000fffffff; valaddr_reg:x3; val_offset:110238*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110238*0 + 3*650*FLEN/8, x4, x1, x2)

inst_36747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000001fffffff; valaddr_reg:x3; val_offset:110241*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110241*0 + 3*651*FLEN/8, x4, x1, x2)

inst_36748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000003fffffff; valaddr_reg:x3; val_offset:110244*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110244*0 + 3*652*FLEN/8, x4, x1, x2)

inst_36749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000007fffffff; valaddr_reg:x3; val_offset:110247*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110247*0 + 3*653*FLEN/8, x4, x1, x2)

inst_36750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400000ffffffff; valaddr_reg:x3; val_offset:110250*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110250*0 + 3*654*FLEN/8, x4, x1, x2)

inst_36751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400001ffffffff; valaddr_reg:x3; val_offset:110253*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110253*0 + 3*655*FLEN/8, x4, x1, x2)

inst_36752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400003ffffffff; valaddr_reg:x3; val_offset:110256*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110256*0 + 3*656*FLEN/8, x4, x1, x2)

inst_36753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400007ffffffff; valaddr_reg:x3; val_offset:110259*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110259*0 + 3*657*FLEN/8, x4, x1, x2)

inst_36754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240000fffffffff; valaddr_reg:x3; val_offset:110262*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110262*0 + 3*658*FLEN/8, x4, x1, x2)

inst_36755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240001fffffffff; valaddr_reg:x3; val_offset:110265*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110265*0 + 3*659*FLEN/8, x4, x1, x2)

inst_36756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240003fffffffff; valaddr_reg:x3; val_offset:110268*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110268*0 + 3*660*FLEN/8, x4, x1, x2)

inst_36757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240007fffffffff; valaddr_reg:x3; val_offset:110271*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110271*0 + 3*661*FLEN/8, x4, x1, x2)

inst_36758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824000ffffffffff; valaddr_reg:x3; val_offset:110274*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110274*0 + 3*662*FLEN/8, x4, x1, x2)

inst_36759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824001ffffffffff; valaddr_reg:x3; val_offset:110277*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110277*0 + 3*663*FLEN/8, x4, x1, x2)

inst_36760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824003ffffffffff; valaddr_reg:x3; val_offset:110280*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110280*0 + 3*664*FLEN/8, x4, x1, x2)

inst_36761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824007ffffffffff; valaddr_reg:x3; val_offset:110283*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110283*0 + 3*665*FLEN/8, x4, x1, x2)

inst_36762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82400fffffffffff; valaddr_reg:x3; val_offset:110286*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110286*0 + 3*666*FLEN/8, x4, x1, x2)

inst_36763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82401fffffffffff; valaddr_reg:x3; val_offset:110289*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110289*0 + 3*667*FLEN/8, x4, x1, x2)

inst_36764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82403fffffffffff; valaddr_reg:x3; val_offset:110292*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110292*0 + 3*668*FLEN/8, x4, x1, x2)

inst_36765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x82407fffffffffff; valaddr_reg:x3; val_offset:110295*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110295*0 + 3*669*FLEN/8, x4, x1, x2)

inst_36766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8240ffffffffffff; valaddr_reg:x3; val_offset:110298*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110298*0 + 3*670*FLEN/8, x4, x1, x2)

inst_36767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8241ffffffffffff; valaddr_reg:x3; val_offset:110301*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110301*0 + 3*671*FLEN/8, x4, x1, x2)

inst_36768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8243ffffffffffff; valaddr_reg:x3; val_offset:110304*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110304*0 + 3*672*FLEN/8, x4, x1, x2)

inst_36769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8247ffffffffffff; valaddr_reg:x3; val_offset:110307*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110307*0 + 3*673*FLEN/8, x4, x1, x2)

inst_36770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x8248000000000000; valaddr_reg:x3; val_offset:110310*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110310*0 + 3*674*FLEN/8, x4, x1, x2)

inst_36771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824c000000000000; valaddr_reg:x3; val_offset:110313*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110313*0 + 3*675*FLEN/8, x4, x1, x2)

inst_36772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824e000000000000; valaddr_reg:x3; val_offset:110316*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110316*0 + 3*676*FLEN/8, x4, x1, x2)

inst_36773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824f000000000000; valaddr_reg:x3; val_offset:110319*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110319*0 + 3*677*FLEN/8, x4, x1, x2)

inst_36774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824f800000000000; valaddr_reg:x3; val_offset:110322*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110322*0 + 3*678*FLEN/8, x4, x1, x2)

inst_36775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fc00000000000; valaddr_reg:x3; val_offset:110325*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110325*0 + 3*679*FLEN/8, x4, x1, x2)

inst_36776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fe00000000000; valaddr_reg:x3; val_offset:110328*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110328*0 + 3*680*FLEN/8, x4, x1, x2)

inst_36777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ff00000000000; valaddr_reg:x3; val_offset:110331*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110331*0 + 3*681*FLEN/8, x4, x1, x2)

inst_36778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ff80000000000; valaddr_reg:x3; val_offset:110334*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110334*0 + 3*682*FLEN/8, x4, x1, x2)

inst_36779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffc0000000000; valaddr_reg:x3; val_offset:110337*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110337*0 + 3*683*FLEN/8, x4, x1, x2)

inst_36780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffe0000000000; valaddr_reg:x3; val_offset:110340*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110340*0 + 3*684*FLEN/8, x4, x1, x2)

inst_36781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fff0000000000; valaddr_reg:x3; val_offset:110343*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110343*0 + 3*685*FLEN/8, x4, x1, x2)

inst_36782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fff8000000000; valaddr_reg:x3; val_offset:110346*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110346*0 + 3*686*FLEN/8, x4, x1, x2)

inst_36783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffc000000000; valaddr_reg:x3; val_offset:110349*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110349*0 + 3*687*FLEN/8, x4, x1, x2)

inst_36784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffe000000000; valaddr_reg:x3; val_offset:110352*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110352*0 + 3*688*FLEN/8, x4, x1, x2)

inst_36785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffff000000000; valaddr_reg:x3; val_offset:110355*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110355*0 + 3*689*FLEN/8, x4, x1, x2)

inst_36786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffff800000000; valaddr_reg:x3; val_offset:110358*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110358*0 + 3*690*FLEN/8, x4, x1, x2)

inst_36787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffc00000000; valaddr_reg:x3; val_offset:110361*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110361*0 + 3*691*FLEN/8, x4, x1, x2)

inst_36788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffe00000000; valaddr_reg:x3; val_offset:110364*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110364*0 + 3*692*FLEN/8, x4, x1, x2)

inst_36789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffff00000000; valaddr_reg:x3; val_offset:110367*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110367*0 + 3*693*FLEN/8, x4, x1, x2)

inst_36790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffff80000000; valaddr_reg:x3; val_offset:110370*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110370*0 + 3*694*FLEN/8, x4, x1, x2)

inst_36791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffc0000000; valaddr_reg:x3; val_offset:110373*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110373*0 + 3*695*FLEN/8, x4, x1, x2)

inst_36792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffe0000000; valaddr_reg:x3; val_offset:110376*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110376*0 + 3*696*FLEN/8, x4, x1, x2)

inst_36793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffff0000000; valaddr_reg:x3; val_offset:110379*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110379*0 + 3*697*FLEN/8, x4, x1, x2)

inst_36794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffff8000000; valaddr_reg:x3; val_offset:110382*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110382*0 + 3*698*FLEN/8, x4, x1, x2)

inst_36795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffc000000; valaddr_reg:x3; val_offset:110385*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110385*0 + 3*699*FLEN/8, x4, x1, x2)

inst_36796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffe000000; valaddr_reg:x3; val_offset:110388*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110388*0 + 3*700*FLEN/8, x4, x1, x2)

inst_36797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffff000000; valaddr_reg:x3; val_offset:110391*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110391*0 + 3*701*FLEN/8, x4, x1, x2)

inst_36798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffff800000; valaddr_reg:x3; val_offset:110394*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110394*0 + 3*702*FLEN/8, x4, x1, x2)

inst_36799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffc00000; valaddr_reg:x3; val_offset:110397*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110397*0 + 3*703*FLEN/8, x4, x1, x2)

inst_36800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffe00000; valaddr_reg:x3; val_offset:110400*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110400*0 + 3*704*FLEN/8, x4, x1, x2)

inst_36801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffff00000; valaddr_reg:x3; val_offset:110403*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110403*0 + 3*705*FLEN/8, x4, x1, x2)

inst_36802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffff80000; valaddr_reg:x3; val_offset:110406*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110406*0 + 3*706*FLEN/8, x4, x1, x2)

inst_36803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffc0000; valaddr_reg:x3; val_offset:110409*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110409*0 + 3*707*FLEN/8, x4, x1, x2)

inst_36804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffe0000; valaddr_reg:x3; val_offset:110412*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110412*0 + 3*708*FLEN/8, x4, x1, x2)

inst_36805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffff0000; valaddr_reg:x3; val_offset:110415*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110415*0 + 3*709*FLEN/8, x4, x1, x2)

inst_36806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffff8000; valaddr_reg:x3; val_offset:110418*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110418*0 + 3*710*FLEN/8, x4, x1, x2)

inst_36807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffc000; valaddr_reg:x3; val_offset:110421*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110421*0 + 3*711*FLEN/8, x4, x1, x2)

inst_36808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffe000; valaddr_reg:x3; val_offset:110424*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110424*0 + 3*712*FLEN/8, x4, x1, x2)

inst_36809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffff000; valaddr_reg:x3; val_offset:110427*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110427*0 + 3*713*FLEN/8, x4, x1, x2)

inst_36810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffff800; valaddr_reg:x3; val_offset:110430*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110430*0 + 3*714*FLEN/8, x4, x1, x2)

inst_36811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffffc00; valaddr_reg:x3; val_offset:110433*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110433*0 + 3*715*FLEN/8, x4, x1, x2)

inst_36812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffffe00; valaddr_reg:x3; val_offset:110436*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110436*0 + 3*716*FLEN/8, x4, x1, x2)

inst_36813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffff00; valaddr_reg:x3; val_offset:110439*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110439*0 + 3*717*FLEN/8, x4, x1, x2)

inst_36814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffff80; valaddr_reg:x3; val_offset:110442*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110442*0 + 3*718*FLEN/8, x4, x1, x2)

inst_36815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffffc0; valaddr_reg:x3; val_offset:110445*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110445*0 + 3*719*FLEN/8, x4, x1, x2)

inst_36816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffffe0; valaddr_reg:x3; val_offset:110448*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110448*0 + 3*720*FLEN/8, x4, x1, x2)

inst_36817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffffff0; valaddr_reg:x3; val_offset:110451*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110451*0 + 3*721*FLEN/8, x4, x1, x2)

inst_36818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffffff8; valaddr_reg:x3; val_offset:110454*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110454*0 + 3*722*FLEN/8, x4, x1, x2)

inst_36819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffffffc; valaddr_reg:x3; val_offset:110457*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110457*0 + 3*723*FLEN/8, x4, x1, x2)

inst_36820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824ffffffffffffe; valaddr_reg:x3; val_offset:110460*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110460*0 + 3*724*FLEN/8, x4, x1, x2)

inst_36821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d5a59350bdcb; op2val:0x8000;
op3val:0x824fffffffffffff; valaddr_reg:x3; val_offset:110463*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110463*0 + 3*725*FLEN/8, x4, x1, x2)

inst_36822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:110466*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110466*0 + 3*726*FLEN/8, x4, x1, x2)

inst_36823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:110469*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110469*0 + 3*727*FLEN/8, x4, x1, x2)

inst_36824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:110472*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110472*0 + 3*728*FLEN/8, x4, x1, x2)

inst_36825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:110475*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110475*0 + 3*729*FLEN/8, x4, x1, x2)

inst_36826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:110478*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110478*0 + 3*730*FLEN/8, x4, x1, x2)

inst_36827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:110481*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110481*0 + 3*731*FLEN/8, x4, x1, x2)

inst_36828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:110484*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110484*0 + 3*732*FLEN/8, x4, x1, x2)

inst_36829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:110487*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110487*0 + 3*733*FLEN/8, x4, x1, x2)

inst_36830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:110490*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110490*0 + 3*734*FLEN/8, x4, x1, x2)

inst_36831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:110493*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110493*0 + 3*735*FLEN/8, x4, x1, x2)

inst_36832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:110496*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110496*0 + 3*736*FLEN/8, x4, x1, x2)

inst_36833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:110499*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110499*0 + 3*737*FLEN/8, x4, x1, x2)

inst_36834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:110502*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110502*0 + 3*738*FLEN/8, x4, x1, x2)

inst_36835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:110505*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110505*0 + 3*739*FLEN/8, x4, x1, x2)

inst_36836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:110508*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110508*0 + 3*740*FLEN/8, x4, x1, x2)

inst_36837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:110511*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110511*0 + 3*741*FLEN/8, x4, x1, x2)

inst_36838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:110514*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110514*0 + 3*742*FLEN/8, x4, x1, x2)

inst_36839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:110517*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110517*0 + 3*743*FLEN/8, x4, x1, x2)

inst_36840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:110520*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110520*0 + 3*744*FLEN/8, x4, x1, x2)

inst_36841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:110523*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110523*0 + 3*745*FLEN/8, x4, x1, x2)

inst_36842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:110526*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110526*0 + 3*746*FLEN/8, x4, x1, x2)

inst_36843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:110529*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110529*0 + 3*747*FLEN/8, x4, x1, x2)

inst_36844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000000000; valaddr_reg:x3; val_offset:110532*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110532*0 + 3*748*FLEN/8, x4, x1, x2)

inst_36845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000000001; valaddr_reg:x3; val_offset:110535*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110535*0 + 3*749*FLEN/8, x4, x1, x2)

inst_36846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000000003; valaddr_reg:x3; val_offset:110538*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110538*0 + 3*750*FLEN/8, x4, x1, x2)

inst_36847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000000007; valaddr_reg:x3; val_offset:110541*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110541*0 + 3*751*FLEN/8, x4, x1, x2)

inst_36848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000000000f; valaddr_reg:x3; val_offset:110544*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110544*0 + 3*752*FLEN/8, x4, x1, x2)

inst_36849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000000001f; valaddr_reg:x3; val_offset:110547*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110547*0 + 3*753*FLEN/8, x4, x1, x2)

inst_36850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000000003f; valaddr_reg:x3; val_offset:110550*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110550*0 + 3*754*FLEN/8, x4, x1, x2)

inst_36851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000000007f; valaddr_reg:x3; val_offset:110553*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110553*0 + 3*755*FLEN/8, x4, x1, x2)

inst_36852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a00000000000ff; valaddr_reg:x3; val_offset:110556*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110556*0 + 3*756*FLEN/8, x4, x1, x2)

inst_36853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a00000000001ff; valaddr_reg:x3; val_offset:110559*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110559*0 + 3*757*FLEN/8, x4, x1, x2)

inst_36854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a00000000003ff; valaddr_reg:x3; val_offset:110562*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110562*0 + 3*758*FLEN/8, x4, x1, x2)

inst_36855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a00000000007ff; valaddr_reg:x3; val_offset:110565*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110565*0 + 3*759*FLEN/8, x4, x1, x2)

inst_36856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000000fff; valaddr_reg:x3; val_offset:110568*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110568*0 + 3*760*FLEN/8, x4, x1, x2)

inst_36857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000001fff; valaddr_reg:x3; val_offset:110571*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110571*0 + 3*761*FLEN/8, x4, x1, x2)

inst_36858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000003fff; valaddr_reg:x3; val_offset:110574*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110574*0 + 3*762*FLEN/8, x4, x1, x2)

inst_36859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a0000000007fff; valaddr_reg:x3; val_offset:110577*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110577*0 + 3*763*FLEN/8, x4, x1, x2)

inst_36860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000000ffff; valaddr_reg:x3; val_offset:110580*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110580*0 + 3*764*FLEN/8, x4, x1, x2)

inst_36861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000001ffff; valaddr_reg:x3; val_offset:110583*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110583*0 + 3*765*FLEN/8, x4, x1, x2)

inst_36862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000003ffff; valaddr_reg:x3; val_offset:110586*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110586*0 + 3*766*FLEN/8, x4, x1, x2)

inst_36863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x8000;
op3val:0x81a000000007ffff; valaddr_reg:x3; val_offset:110589*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110589*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374143,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374399,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374911,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566375935,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566377983,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566382079,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789633482751,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789700591615,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789834809343,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790103244799,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790640115711,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100791713857535,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100793861341183,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100798156308479,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100806746243071,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100823926112255,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100858285850623,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100927005327359,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101064444280831,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101339322187775,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101889078001663,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126102988589629439,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126105187612884991,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126109585659396095,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126118381752418303,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126135973938462719,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126171158310551551,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126241527054729215,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126382264543084543,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126663739519795199,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127226689473216511,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059135,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059136,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(129478489286901760,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130041439240323072,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130322914217033728,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130463651705389056,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130534020449566720,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130569204821655552,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130586797007699968,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130595593100722176,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130599991147233280,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130602190170488832,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603289682116608,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603839437930496,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604114315837440,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604251754790912,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604320474267648,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604354834006016,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604372013875200,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604380603809792,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604384898777088,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604387046260736,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388120002560,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388656873472,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388925308928,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389059526656,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389126635520,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389160189952,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389176967168,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389185355776,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389189550080,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389191647232,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389192695808,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193220096,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193482240,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193613312,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193678848,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193711616,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193728000,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193736192,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193740288,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193742336,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743360,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743872,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744128,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744256,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744320,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744352,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744368,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744376,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744380,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744382,64,FLEN)
NAN_BOXED(6887727815657574541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744383,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484160,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484161,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484163,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484167,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484175,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484191,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484223,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484287,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484415,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484671,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067485183,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067486207,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067488255,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067492351,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067500543,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067516927,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067549695,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067615231,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067746303,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068008447,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068532735,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223069581311,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223071678463,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223075872767,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223084261375,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223101038591,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223134593023,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223201701887,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223335919615,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223604355071,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005224141225983,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005225214967807,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005227362451455,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005231657418751,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005240247353343,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005257427222527,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005291786960895,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005360506437631,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005497945391103,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005772823298047,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390006322579111935,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390007422090739711,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390009621113995263,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390014019160506367,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390022815253528575,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390040407439572991,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390075591811661823,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390145960555839487,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390286698044194815,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390568173020905471,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9391131122974326783,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169407,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169408,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393382922788012032,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393945872741433344,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394227347718144000,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394368085206499328,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394438453950676992,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394473638322765824,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394491230508810240,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394500026601832448,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394504424648343552,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394506623671599104,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394507723183226880,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508272939040768,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508547816947712,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508685255901184,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508753975377920,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508788335116288,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508805514985472,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508814104920064,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508818399887360,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508820547371008,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508821621112832,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822157983744,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822426419200,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822560636928,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822627745792,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822661300224,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822678077440,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822686466048,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822690660352,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822692757504,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822693806080,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694330368,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694592512,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694723584,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694789120,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694821888,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694838272,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694846464,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694850560,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694852608,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694853632,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854144,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854400,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854528,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854592,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854624,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854640,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854648,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854652,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854654,64,FLEN)
NAN_BOXED(6887734616170643163,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854655,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743168,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743169,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743171,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743175,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743183,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743199,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743231,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743295,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743423,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743679,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812744191,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812745215,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812747263,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812751359,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812759551,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812775935,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812808703,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812874239,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813005311,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813267455,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813791743,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023814840319,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023816937471,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023821131775,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023829520383,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023846297599,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023879852031,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023946960895,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024081178623,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024349614079,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024886484991,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998025960226815,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998028107710463,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998032402677759,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998040992612351,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998058172481535,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998092532219903,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998161251696639,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998298690650111,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998573568557055,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380999123324370943,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381000222835998719,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381002421859254271,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381006819905765375,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381015615998787583,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381033208184831999,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381068392556920831,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381138761301098495,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381279498789453823,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381560973766164479,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9382123923719585791,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428415,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428416,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384375723533271040,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384938673486692352,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385220148463403008,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385360885951758336,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385431254695936000,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385466439068024832,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385484031254069248,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385492827347091456,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385497225393602560,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385499424416858112,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385500523928485888,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501073684299776,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501348562206720,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501486001160192,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501554720636928,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501589080375296,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501606260244480,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501614850179072,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501619145146368,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501621292630016,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622366371840,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622903242752,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623171678208,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623305895936,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623373004800,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623406559232,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623423336448,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623431725056,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623435919360,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623438016512,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439065088,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439589376,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439851520,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439982592,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440048128,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440080896,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440097280,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440105472,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440109568,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440111616,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440112640,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113152,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113408,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113536,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113600,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113632,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113648,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113656,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113660,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113662,64,FLEN)
NAN_BOXED(6887852398303145289,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113663,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789824,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789825,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789827,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789831,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789839,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789855,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789887,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715789951,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715790079,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715790335,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715790847,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715791871,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715793919,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715798015,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715806207,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715822591,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715855359,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265715920895,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265716051967,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265716314111,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265716838399,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265717886975,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265719984127,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265724178431,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265732567039,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265749344255,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265782898687,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265850007551,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957265984225279,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957266252660735,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957266789531647,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957267863273471,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957270010757119,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957274305724415,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957282895659007,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957300075528191,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957334435266559,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957403154743295,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957540593696767,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708957815471603711,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708958365227417599,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708959464739045375,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708961663762300927,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708966061808812031,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708974857901834239,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13708992450087878655,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13709027634459967487,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13709098003204145151,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13709238740692500479,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13709520215669211135,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13710083165622632447,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13711209065529475071,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13711209065529475072,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13712334965436317696,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13712897915389739008,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713179390366449664,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713320127854804992,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713390496598982656,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713425680971071488,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713443273157115904,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713452069250138112,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713456467296649216,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713458666319904768,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713459765831532544,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460315587346432,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460590465253376,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460727904206848,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460796623683584,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460830983421952,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460848163291136,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460856753225728,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460861048193024,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460863195676672,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460864269418496,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460864806289408,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865074724864,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865208942592,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865276051456,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865309605888,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865326383104,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865334771712,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865338966016,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865341063168,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865342111744,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865342636032,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865342898176,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343029248,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343094784,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343127552,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343143936,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343152128,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343156224,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343158272,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343159296,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343159808,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160064,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160192,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160256,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160288,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160304,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160312,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160316,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160318,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13713460865343160319,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(11517544756328258133,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783808,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783809,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783811,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783815,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783823,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783839,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783871,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783935,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784063,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784319,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784831,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113785855,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113787903,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113791999,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113800191,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113816575,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113849343,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113914879,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114045951,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114308095,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114832383,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782115880959,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782117978111,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782122172415,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782130561023,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782147338239,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782180892671,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782248001535,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782382219263,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782650654719,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172783187525631,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172784261267455,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172786408751103,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172790703718399,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172799293652991,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172816473522175,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172850833260543,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172919552737279,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173056991690751,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173331869597695,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173881625411583,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216174981137039359,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216177180160294911,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216181578206806015,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216190374299828223,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216207966485872639,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216243150857961471,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216313519602139135,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216454257090494463,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216735732067205119,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(217298682020626431,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(218424581927469055,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(218424581927469056,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(219550481834311680,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220113431787732992,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220394906764443648,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220535644252798976,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220606012996976640,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220641197369065472,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220658789555109888,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220667585648132096,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220671983694643200,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220674182717898752,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220675282229526528,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220675831985340416,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676106863247360,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676244302200832,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676313021677568,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676347381415936,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676364561285120,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676373151219712,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676377446187008,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676379593670656,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676380667412480,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381204283392,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381472718848,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381606936576,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381674045440,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381707599872,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381724377088,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381732765696,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381736960000,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381739057152,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740105728,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740630016,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740892160,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741023232,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741088768,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741121536,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741137920,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741146112,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741150208,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741152256,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153280,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153792,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154048,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154176,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154240,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154272,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154288,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154296,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154300,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154302,64,FLEN)
NAN_BOXED(6887910682799413435,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154303,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113664,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113665,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113667,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113671,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113679,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113695,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113727,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113791,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113919,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114175,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114687,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440115711,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440117759,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440121855,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440130047,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440146431,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440179199,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440244735,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440375807,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440637951,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623441162239,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623442210815,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623444307967,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623448502271,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623456890879,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623473668095,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623507222527,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623574331391,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623708549119,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623976984575,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501624513855487,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501625587597311,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501627735080959,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501632030048255,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501640619982847,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501657799852031,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501692159590399,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501760879067135,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501898318020607,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502173195927551,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502722951741439,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385503822463369215,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385506021486624767,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385510419533135871,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385519215626158079,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385536807812202495,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385571992184291327,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385642360928468991,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385783098416824319,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386064573393534975,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386627523346956287,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798911,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798912,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9388879323160641536,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389442273114062848,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389723748090773504,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389864485579128832,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389934854323306496,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389970038695395328,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389987630881439744,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389996426974461952,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390000825020973056,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390003024044228608,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004123555856384,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004673311670272,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004948189577216,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005085628530688,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005154348007424,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005188707745792,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005205887614976,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005214477549568,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005218772516864,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005220920000512,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005221993742336,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222530613248,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222799048704,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222933266432,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223000375296,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223033929728,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223050706944,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223059095552,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223063289856,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223065387008,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066435584,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066959872,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067222016,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067353088,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067418624,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067451392,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067467776,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067475968,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067480064,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067482112,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483136,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483648,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483904,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484032,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484096,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484128,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484144,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484152,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484156,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484158,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484159,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408704,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408705,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408707,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408711,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408719,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408735,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408767,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408831,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408959,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409215,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409727,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166410751,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166412799,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166416895,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166425087,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166441471,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166474239,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166539775,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166670847,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166932991,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
