
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_98304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:294912*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294912*0 + 3*0*FLEN/8, x4, x1, x2)

inst_98305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:294915*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294915*0 + 3*1*FLEN/8, x4, x1, x2)

inst_98306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:294918*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294918*0 + 3*2*FLEN/8, x4, x1, x2)

inst_98307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:294921*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294921*0 + 3*3*FLEN/8, x4, x1, x2)

inst_98308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:294924*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294924*0 + 3*4*FLEN/8, x4, x1, x2)

inst_98309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:294927*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294927*0 + 3*5*FLEN/8, x4, x1, x2)

inst_98310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:294930*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294930*0 + 3*6*FLEN/8, x4, x1, x2)

inst_98311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:294933*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294933*0 + 3*7*FLEN/8, x4, x1, x2)

inst_98312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:294936*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294936*0 + 3*8*FLEN/8, x4, x1, x2)

inst_98313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:294939*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294939*0 + 3*9*FLEN/8, x4, x1, x2)

inst_98314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:294942*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294942*0 + 3*10*FLEN/8, x4, x1, x2)

inst_98315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:294945*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294945*0 + 3*11*FLEN/8, x4, x1, x2)

inst_98316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:294948*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294948*0 + 3*12*FLEN/8, x4, x1, x2)

inst_98317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:294951*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294951*0 + 3*13*FLEN/8, x4, x1, x2)

inst_98318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:294954*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294954*0 + 3*14*FLEN/8, x4, x1, x2)

inst_98319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:294957*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294957*0 + 3*15*FLEN/8, x4, x1, x2)

inst_98320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:294960*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294960*0 + 3*16*FLEN/8, x4, x1, x2)

inst_98321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:294963*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294963*0 + 3*17*FLEN/8, x4, x1, x2)

inst_98322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:294966*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294966*0 + 3*18*FLEN/8, x4, x1, x2)

inst_98323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:294969*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294969*0 + 3*19*FLEN/8, x4, x1, x2)

inst_98324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:294972*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294972*0 + 3*20*FLEN/8, x4, x1, x2)

inst_98325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:294975*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294975*0 + 3*21*FLEN/8, x4, x1, x2)

inst_98326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:294978*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294978*0 + 3*22*FLEN/8, x4, x1, x2)

inst_98327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:294981*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294981*0 + 3*23*FLEN/8, x4, x1, x2)

inst_98328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:294984*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294984*0 + 3*24*FLEN/8, x4, x1, x2)

inst_98329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:294987*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294987*0 + 3*25*FLEN/8, x4, x1, x2)

inst_98330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:294990*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294990*0 + 3*26*FLEN/8, x4, x1, x2)

inst_98331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:294993*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294993*0 + 3*27*FLEN/8, x4, x1, x2)

inst_98332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:294996*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294996*0 + 3*28*FLEN/8, x4, x1, x2)

inst_98333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:294999*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294999*0 + 3*29*FLEN/8, x4, x1, x2)

inst_98334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:295002*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295002*0 + 3*30*FLEN/8, x4, x1, x2)

inst_98335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:295005*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295005*0 + 3*31*FLEN/8, x4, x1, x2)

inst_98336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:295008*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295008*0 + 3*32*FLEN/8, x4, x1, x2)

inst_98337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:295011*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295011*0 + 3*33*FLEN/8, x4, x1, x2)

inst_98338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:295014*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295014*0 + 3*34*FLEN/8, x4, x1, x2)

inst_98339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0835a585a90e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0835a585a90e; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:295017*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295017*0 + 3*35*FLEN/8, x4, x1, x2)

inst_98340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000000000; valaddr_reg:x3; val_offset:295020*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295020*0 + 3*36*FLEN/8, x4, x1, x2)

inst_98341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000000001; valaddr_reg:x3; val_offset:295023*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295023*0 + 3*37*FLEN/8, x4, x1, x2)

inst_98342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000000003; valaddr_reg:x3; val_offset:295026*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295026*0 + 3*38*FLEN/8, x4, x1, x2)

inst_98343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000000007; valaddr_reg:x3; val_offset:295029*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295029*0 + 3*39*FLEN/8, x4, x1, x2)

inst_98344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000000000f; valaddr_reg:x3; val_offset:295032*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295032*0 + 3*40*FLEN/8, x4, x1, x2)

inst_98345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000000001f; valaddr_reg:x3; val_offset:295035*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295035*0 + 3*41*FLEN/8, x4, x1, x2)

inst_98346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000000003f; valaddr_reg:x3; val_offset:295038*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295038*0 + 3*42*FLEN/8, x4, x1, x2)

inst_98347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000000007f; valaddr_reg:x3; val_offset:295041*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295041*0 + 3*43*FLEN/8, x4, x1, x2)

inst_98348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000000000ff; valaddr_reg:x3; val_offset:295044*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295044*0 + 3*44*FLEN/8, x4, x1, x2)

inst_98349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000000001ff; valaddr_reg:x3; val_offset:295047*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295047*0 + 3*45*FLEN/8, x4, x1, x2)

inst_98350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000000003ff; valaddr_reg:x3; val_offset:295050*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295050*0 + 3*46*FLEN/8, x4, x1, x2)

inst_98351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000000007ff; valaddr_reg:x3; val_offset:295053*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295053*0 + 3*47*FLEN/8, x4, x1, x2)

inst_98352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000000fff; valaddr_reg:x3; val_offset:295056*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295056*0 + 3*48*FLEN/8, x4, x1, x2)

inst_98353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000001fff; valaddr_reg:x3; val_offset:295059*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295059*0 + 3*49*FLEN/8, x4, x1, x2)

inst_98354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000003fff; valaddr_reg:x3; val_offset:295062*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295062*0 + 3*50*FLEN/8, x4, x1, x2)

inst_98355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000007fff; valaddr_reg:x3; val_offset:295065*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295065*0 + 3*51*FLEN/8, x4, x1, x2)

inst_98356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000000ffff; valaddr_reg:x3; val_offset:295068*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295068*0 + 3*52*FLEN/8, x4, x1, x2)

inst_98357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000001ffff; valaddr_reg:x3; val_offset:295071*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295071*0 + 3*53*FLEN/8, x4, x1, x2)

inst_98358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000003ffff; valaddr_reg:x3; val_offset:295074*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295074*0 + 3*54*FLEN/8, x4, x1, x2)

inst_98359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000007ffff; valaddr_reg:x3; val_offset:295077*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295077*0 + 3*55*FLEN/8, x4, x1, x2)

inst_98360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000000fffff; valaddr_reg:x3; val_offset:295080*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295080*0 + 3*56*FLEN/8, x4, x1, x2)

inst_98361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000001fffff; valaddr_reg:x3; val_offset:295083*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295083*0 + 3*57*FLEN/8, x4, x1, x2)

inst_98362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000003fffff; valaddr_reg:x3; val_offset:295086*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295086*0 + 3*58*FLEN/8, x4, x1, x2)

inst_98363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000007fffff; valaddr_reg:x3; val_offset:295089*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295089*0 + 3*59*FLEN/8, x4, x1, x2)

inst_98364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000000ffffff; valaddr_reg:x3; val_offset:295092*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295092*0 + 3*60*FLEN/8, x4, x1, x2)

inst_98365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000001ffffff; valaddr_reg:x3; val_offset:295095*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295095*0 + 3*61*FLEN/8, x4, x1, x2)

inst_98366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000003ffffff; valaddr_reg:x3; val_offset:295098*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295098*0 + 3*62*FLEN/8, x4, x1, x2)

inst_98367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000007ffffff; valaddr_reg:x3; val_offset:295101*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295101*0 + 3*63*FLEN/8, x4, x1, x2)

inst_98368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000000fffffff; valaddr_reg:x3; val_offset:295104*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295104*0 + 3*64*FLEN/8, x4, x1, x2)

inst_98369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000001fffffff; valaddr_reg:x3; val_offset:295107*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295107*0 + 3*65*FLEN/8, x4, x1, x2)

inst_98370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000003fffffff; valaddr_reg:x3; val_offset:295110*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295110*0 + 3*66*FLEN/8, x4, x1, x2)

inst_98371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000007fffffff; valaddr_reg:x3; val_offset:295113*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295113*0 + 3*67*FLEN/8, x4, x1, x2)

inst_98372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00000ffffffff; valaddr_reg:x3; val_offset:295116*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295116*0 + 3*68*FLEN/8, x4, x1, x2)

inst_98373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00001ffffffff; valaddr_reg:x3; val_offset:295119*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295119*0 + 3*69*FLEN/8, x4, x1, x2)

inst_98374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00003ffffffff; valaddr_reg:x3; val_offset:295122*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295122*0 + 3*70*FLEN/8, x4, x1, x2)

inst_98375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00007ffffffff; valaddr_reg:x3; val_offset:295125*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295125*0 + 3*71*FLEN/8, x4, x1, x2)

inst_98376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0000fffffffff; valaddr_reg:x3; val_offset:295128*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295128*0 + 3*72*FLEN/8, x4, x1, x2)

inst_98377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0001fffffffff; valaddr_reg:x3; val_offset:295131*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295131*0 + 3*73*FLEN/8, x4, x1, x2)

inst_98378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0003fffffffff; valaddr_reg:x3; val_offset:295134*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295134*0 + 3*74*FLEN/8, x4, x1, x2)

inst_98379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0007fffffffff; valaddr_reg:x3; val_offset:295137*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295137*0 + 3*75*FLEN/8, x4, x1, x2)

inst_98380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c000ffffffffff; valaddr_reg:x3; val_offset:295140*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295140*0 + 3*76*FLEN/8, x4, x1, x2)

inst_98381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c001ffffffffff; valaddr_reg:x3; val_offset:295143*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295143*0 + 3*77*FLEN/8, x4, x1, x2)

inst_98382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c003ffffffffff; valaddr_reg:x3; val_offset:295146*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295146*0 + 3*78*FLEN/8, x4, x1, x2)

inst_98383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c007ffffffffff; valaddr_reg:x3; val_offset:295149*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295149*0 + 3*79*FLEN/8, x4, x1, x2)

inst_98384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c00fffffffffff; valaddr_reg:x3; val_offset:295152*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295152*0 + 3*80*FLEN/8, x4, x1, x2)

inst_98385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c01fffffffffff; valaddr_reg:x3; val_offset:295155*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295155*0 + 3*81*FLEN/8, x4, x1, x2)

inst_98386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c03fffffffffff; valaddr_reg:x3; val_offset:295158*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295158*0 + 3*82*FLEN/8, x4, x1, x2)

inst_98387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c07fffffffffff; valaddr_reg:x3; val_offset:295161*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295161*0 + 3*83*FLEN/8, x4, x1, x2)

inst_98388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c0ffffffffffff; valaddr_reg:x3; val_offset:295164*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295164*0 + 3*84*FLEN/8, x4, x1, x2)

inst_98389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c1ffffffffffff; valaddr_reg:x3; val_offset:295167*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295167*0 + 3*85*FLEN/8, x4, x1, x2)

inst_98390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c3ffffffffffff; valaddr_reg:x3; val_offset:295170*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295170*0 + 3*86*FLEN/8, x4, x1, x2)

inst_98391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c7ffffffffffff; valaddr_reg:x3; val_offset:295173*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295173*0 + 3*87*FLEN/8, x4, x1, x2)

inst_98392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8c8000000000000; valaddr_reg:x3; val_offset:295176*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295176*0 + 3*88*FLEN/8, x4, x1, x2)

inst_98393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cc000000000000; valaddr_reg:x3; val_offset:295179*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295179*0 + 3*89*FLEN/8, x4, x1, x2)

inst_98394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8ce000000000000; valaddr_reg:x3; val_offset:295182*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295182*0 + 3*90*FLEN/8, x4, x1, x2)

inst_98395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cf000000000000; valaddr_reg:x3; val_offset:295185*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295185*0 + 3*91*FLEN/8, x4, x1, x2)

inst_98396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cf800000000000; valaddr_reg:x3; val_offset:295188*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295188*0 + 3*92*FLEN/8, x4, x1, x2)

inst_98397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfc00000000000; valaddr_reg:x3; val_offset:295191*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295191*0 + 3*93*FLEN/8, x4, x1, x2)

inst_98398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfe00000000000; valaddr_reg:x3; val_offset:295194*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295194*0 + 3*94*FLEN/8, x4, x1, x2)

inst_98399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cff00000000000; valaddr_reg:x3; val_offset:295197*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295197*0 + 3*95*FLEN/8, x4, x1, x2)

inst_98400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cff80000000000; valaddr_reg:x3; val_offset:295200*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295200*0 + 3*96*FLEN/8, x4, x1, x2)

inst_98401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffc0000000000; valaddr_reg:x3; val_offset:295203*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295203*0 + 3*97*FLEN/8, x4, x1, x2)

inst_98402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffe0000000000; valaddr_reg:x3; val_offset:295206*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295206*0 + 3*98*FLEN/8, x4, x1, x2)

inst_98403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfff0000000000; valaddr_reg:x3; val_offset:295209*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295209*0 + 3*99*FLEN/8, x4, x1, x2)

inst_98404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfff8000000000; valaddr_reg:x3; val_offset:295212*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295212*0 + 3*100*FLEN/8, x4, x1, x2)

inst_98405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffc000000000; valaddr_reg:x3; val_offset:295215*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295215*0 + 3*101*FLEN/8, x4, x1, x2)

inst_98406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffe000000000; valaddr_reg:x3; val_offset:295218*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295218*0 + 3*102*FLEN/8, x4, x1, x2)

inst_98407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffff000000000; valaddr_reg:x3; val_offset:295221*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295221*0 + 3*103*FLEN/8, x4, x1, x2)

inst_98408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffff800000000; valaddr_reg:x3; val_offset:295224*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295224*0 + 3*104*FLEN/8, x4, x1, x2)

inst_98409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffc00000000; valaddr_reg:x3; val_offset:295227*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295227*0 + 3*105*FLEN/8, x4, x1, x2)

inst_98410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffe00000000; valaddr_reg:x3; val_offset:295230*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295230*0 + 3*106*FLEN/8, x4, x1, x2)

inst_98411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffff00000000; valaddr_reg:x3; val_offset:295233*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295233*0 + 3*107*FLEN/8, x4, x1, x2)

inst_98412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffff80000000; valaddr_reg:x3; val_offset:295236*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295236*0 + 3*108*FLEN/8, x4, x1, x2)

inst_98413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffc0000000; valaddr_reg:x3; val_offset:295239*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295239*0 + 3*109*FLEN/8, x4, x1, x2)

inst_98414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffe0000000; valaddr_reg:x3; val_offset:295242*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295242*0 + 3*110*FLEN/8, x4, x1, x2)

inst_98415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffff0000000; valaddr_reg:x3; val_offset:295245*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295245*0 + 3*111*FLEN/8, x4, x1, x2)

inst_98416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffff8000000; valaddr_reg:x3; val_offset:295248*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295248*0 + 3*112*FLEN/8, x4, x1, x2)

inst_98417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffc000000; valaddr_reg:x3; val_offset:295251*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295251*0 + 3*113*FLEN/8, x4, x1, x2)

inst_98418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffe000000; valaddr_reg:x3; val_offset:295254*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295254*0 + 3*114*FLEN/8, x4, x1, x2)

inst_98419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffff000000; valaddr_reg:x3; val_offset:295257*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295257*0 + 3*115*FLEN/8, x4, x1, x2)

inst_98420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffff800000; valaddr_reg:x3; val_offset:295260*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295260*0 + 3*116*FLEN/8, x4, x1, x2)

inst_98421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffc00000; valaddr_reg:x3; val_offset:295263*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295263*0 + 3*117*FLEN/8, x4, x1, x2)

inst_98422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffe00000; valaddr_reg:x3; val_offset:295266*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295266*0 + 3*118*FLEN/8, x4, x1, x2)

inst_98423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffff00000; valaddr_reg:x3; val_offset:295269*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295269*0 + 3*119*FLEN/8, x4, x1, x2)

inst_98424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffff80000; valaddr_reg:x3; val_offset:295272*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295272*0 + 3*120*FLEN/8, x4, x1, x2)

inst_98425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffc0000; valaddr_reg:x3; val_offset:295275*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295275*0 + 3*121*FLEN/8, x4, x1, x2)

inst_98426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffe0000; valaddr_reg:x3; val_offset:295278*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295278*0 + 3*122*FLEN/8, x4, x1, x2)

inst_98427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffff0000; valaddr_reg:x3; val_offset:295281*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295281*0 + 3*123*FLEN/8, x4, x1, x2)

inst_98428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffff8000; valaddr_reg:x3; val_offset:295284*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295284*0 + 3*124*FLEN/8, x4, x1, x2)

inst_98429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffc000; valaddr_reg:x3; val_offset:295287*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295287*0 + 3*125*FLEN/8, x4, x1, x2)

inst_98430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffe000; valaddr_reg:x3; val_offset:295290*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295290*0 + 3*126*FLEN/8, x4, x1, x2)

inst_98431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffff000; valaddr_reg:x3; val_offset:295293*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295293*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_98432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffff800; valaddr_reg:x3; val_offset:295296*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295296*0 + 3*128*FLEN/8, x4, x1, x2)

inst_98433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffffc00; valaddr_reg:x3; val_offset:295299*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295299*0 + 3*129*FLEN/8, x4, x1, x2)

inst_98434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffffe00; valaddr_reg:x3; val_offset:295302*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295302*0 + 3*130*FLEN/8, x4, x1, x2)

inst_98435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffff00; valaddr_reg:x3; val_offset:295305*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295305*0 + 3*131*FLEN/8, x4, x1, x2)

inst_98436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffff80; valaddr_reg:x3; val_offset:295308*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295308*0 + 3*132*FLEN/8, x4, x1, x2)

inst_98437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffffc0; valaddr_reg:x3; val_offset:295311*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295311*0 + 3*133*FLEN/8, x4, x1, x2)

inst_98438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffffe0; valaddr_reg:x3; val_offset:295314*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295314*0 + 3*134*FLEN/8, x4, x1, x2)

inst_98439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffffff0; valaddr_reg:x3; val_offset:295317*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295317*0 + 3*135*FLEN/8, x4, x1, x2)

inst_98440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffffff8; valaddr_reg:x3; val_offset:295320*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295320*0 + 3*136*FLEN/8, x4, x1, x2)

inst_98441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffffffc; valaddr_reg:x3; val_offset:295323*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295323*0 + 3*137*FLEN/8, x4, x1, x2)

inst_98442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cffffffffffffe; valaddr_reg:x3; val_offset:295326*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295326*0 + 3*138*FLEN/8, x4, x1, x2)

inst_98443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xb8cfffffffffffff; valaddr_reg:x3; val_offset:295329*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295329*0 + 3*139*FLEN/8, x4, x1, x2)

inst_98444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:295332*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295332*0 + 3*140*FLEN/8, x4, x1, x2)

inst_98445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:295335*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295335*0 + 3*141*FLEN/8, x4, x1, x2)

inst_98446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:295338*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295338*0 + 3*142*FLEN/8, x4, x1, x2)

inst_98447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:295341*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295341*0 + 3*143*FLEN/8, x4, x1, x2)

inst_98448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:295344*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295344*0 + 3*144*FLEN/8, x4, x1, x2)

inst_98449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:295347*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295347*0 + 3*145*FLEN/8, x4, x1, x2)

inst_98450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:295350*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295350*0 + 3*146*FLEN/8, x4, x1, x2)

inst_98451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:295353*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295353*0 + 3*147*FLEN/8, x4, x1, x2)

inst_98452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:295356*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295356*0 + 3*148*FLEN/8, x4, x1, x2)

inst_98453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:295359*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295359*0 + 3*149*FLEN/8, x4, x1, x2)

inst_98454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:295362*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295362*0 + 3*150*FLEN/8, x4, x1, x2)

inst_98455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:295365*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295365*0 + 3*151*FLEN/8, x4, x1, x2)

inst_98456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:295368*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295368*0 + 3*152*FLEN/8, x4, x1, x2)

inst_98457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:295371*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295371*0 + 3*153*FLEN/8, x4, x1, x2)

inst_98458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:295374*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295374*0 + 3*154*FLEN/8, x4, x1, x2)

inst_98459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:295377*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295377*0 + 3*155*FLEN/8, x4, x1, x2)

inst_98460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:295380*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295380*0 + 3*156*FLEN/8, x4, x1, x2)

inst_98461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:295383*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295383*0 + 3*157*FLEN/8, x4, x1, x2)

inst_98462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:295386*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295386*0 + 3*158*FLEN/8, x4, x1, x2)

inst_98463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:295389*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295389*0 + 3*159*FLEN/8, x4, x1, x2)

inst_98464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:295392*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295392*0 + 3*160*FLEN/8, x4, x1, x2)

inst_98465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0892add2cc6e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f91043cddd5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0892add2cc6e; op2val:0x9fc07f91043cddd5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:295395*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295395*0 + 3*161*FLEN/8, x4, x1, x2)

inst_98466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000000000; valaddr_reg:x3; val_offset:295398*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295398*0 + 3*162*FLEN/8, x4, x1, x2)

inst_98467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000000001; valaddr_reg:x3; val_offset:295401*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295401*0 + 3*163*FLEN/8, x4, x1, x2)

inst_98468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000000003; valaddr_reg:x3; val_offset:295404*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295404*0 + 3*164*FLEN/8, x4, x1, x2)

inst_98469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000000007; valaddr_reg:x3; val_offset:295407*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295407*0 + 3*165*FLEN/8, x4, x1, x2)

inst_98470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000000000f; valaddr_reg:x3; val_offset:295410*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295410*0 + 3*166*FLEN/8, x4, x1, x2)

inst_98471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000000001f; valaddr_reg:x3; val_offset:295413*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295413*0 + 3*167*FLEN/8, x4, x1, x2)

inst_98472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000000003f; valaddr_reg:x3; val_offset:295416*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295416*0 + 3*168*FLEN/8, x4, x1, x2)

inst_98473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000000007f; valaddr_reg:x3; val_offset:295419*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295419*0 + 3*169*FLEN/8, x4, x1, x2)

inst_98474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000000000ff; valaddr_reg:x3; val_offset:295422*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295422*0 + 3*170*FLEN/8, x4, x1, x2)

inst_98475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000000001ff; valaddr_reg:x3; val_offset:295425*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295425*0 + 3*171*FLEN/8, x4, x1, x2)

inst_98476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000000003ff; valaddr_reg:x3; val_offset:295428*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295428*0 + 3*172*FLEN/8, x4, x1, x2)

inst_98477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000000007ff; valaddr_reg:x3; val_offset:295431*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295431*0 + 3*173*FLEN/8, x4, x1, x2)

inst_98478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000000fff; valaddr_reg:x3; val_offset:295434*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295434*0 + 3*174*FLEN/8, x4, x1, x2)

inst_98479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000001fff; valaddr_reg:x3; val_offset:295437*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295437*0 + 3*175*FLEN/8, x4, x1, x2)

inst_98480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000003fff; valaddr_reg:x3; val_offset:295440*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295440*0 + 3*176*FLEN/8, x4, x1, x2)

inst_98481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000007fff; valaddr_reg:x3; val_offset:295443*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295443*0 + 3*177*FLEN/8, x4, x1, x2)

inst_98482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000000ffff; valaddr_reg:x3; val_offset:295446*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295446*0 + 3*178*FLEN/8, x4, x1, x2)

inst_98483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000001ffff; valaddr_reg:x3; val_offset:295449*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295449*0 + 3*179*FLEN/8, x4, x1, x2)

inst_98484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000003ffff; valaddr_reg:x3; val_offset:295452*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295452*0 + 3*180*FLEN/8, x4, x1, x2)

inst_98485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000007ffff; valaddr_reg:x3; val_offset:295455*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295455*0 + 3*181*FLEN/8, x4, x1, x2)

inst_98486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000000fffff; valaddr_reg:x3; val_offset:295458*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295458*0 + 3*182*FLEN/8, x4, x1, x2)

inst_98487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000001fffff; valaddr_reg:x3; val_offset:295461*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295461*0 + 3*183*FLEN/8, x4, x1, x2)

inst_98488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000003fffff; valaddr_reg:x3; val_offset:295464*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295464*0 + 3*184*FLEN/8, x4, x1, x2)

inst_98489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000007fffff; valaddr_reg:x3; val_offset:295467*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295467*0 + 3*185*FLEN/8, x4, x1, x2)

inst_98490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000000ffffff; valaddr_reg:x3; val_offset:295470*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295470*0 + 3*186*FLEN/8, x4, x1, x2)

inst_98491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000001ffffff; valaddr_reg:x3; val_offset:295473*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295473*0 + 3*187*FLEN/8, x4, x1, x2)

inst_98492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000003ffffff; valaddr_reg:x3; val_offset:295476*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295476*0 + 3*188*FLEN/8, x4, x1, x2)

inst_98493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000007ffffff; valaddr_reg:x3; val_offset:295479*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295479*0 + 3*189*FLEN/8, x4, x1, x2)

inst_98494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000000fffffff; valaddr_reg:x3; val_offset:295482*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295482*0 + 3*190*FLEN/8, x4, x1, x2)

inst_98495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000001fffffff; valaddr_reg:x3; val_offset:295485*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295485*0 + 3*191*FLEN/8, x4, x1, x2)

inst_98496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000003fffffff; valaddr_reg:x3; val_offset:295488*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295488*0 + 3*192*FLEN/8, x4, x1, x2)

inst_98497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000007fffffff; valaddr_reg:x3; val_offset:295491*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295491*0 + 3*193*FLEN/8, x4, x1, x2)

inst_98498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00000ffffffff; valaddr_reg:x3; val_offset:295494*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295494*0 + 3*194*FLEN/8, x4, x1, x2)

inst_98499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00001ffffffff; valaddr_reg:x3; val_offset:295497*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295497*0 + 3*195*FLEN/8, x4, x1, x2)

inst_98500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00003ffffffff; valaddr_reg:x3; val_offset:295500*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295500*0 + 3*196*FLEN/8, x4, x1, x2)

inst_98501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00007ffffffff; valaddr_reg:x3; val_offset:295503*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295503*0 + 3*197*FLEN/8, x4, x1, x2)

inst_98502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0000fffffffff; valaddr_reg:x3; val_offset:295506*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295506*0 + 3*198*FLEN/8, x4, x1, x2)

inst_98503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0001fffffffff; valaddr_reg:x3; val_offset:295509*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295509*0 + 3*199*FLEN/8, x4, x1, x2)

inst_98504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0003fffffffff; valaddr_reg:x3; val_offset:295512*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295512*0 + 3*200*FLEN/8, x4, x1, x2)

inst_98505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0007fffffffff; valaddr_reg:x3; val_offset:295515*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295515*0 + 3*201*FLEN/8, x4, x1, x2)

inst_98506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b000ffffffffff; valaddr_reg:x3; val_offset:295518*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295518*0 + 3*202*FLEN/8, x4, x1, x2)

inst_98507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b001ffffffffff; valaddr_reg:x3; val_offset:295521*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295521*0 + 3*203*FLEN/8, x4, x1, x2)

inst_98508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b003ffffffffff; valaddr_reg:x3; val_offset:295524*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295524*0 + 3*204*FLEN/8, x4, x1, x2)

inst_98509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b007ffffffffff; valaddr_reg:x3; val_offset:295527*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295527*0 + 3*205*FLEN/8, x4, x1, x2)

inst_98510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b00fffffffffff; valaddr_reg:x3; val_offset:295530*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295530*0 + 3*206*FLEN/8, x4, x1, x2)

inst_98511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b01fffffffffff; valaddr_reg:x3; val_offset:295533*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295533*0 + 3*207*FLEN/8, x4, x1, x2)

inst_98512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b03fffffffffff; valaddr_reg:x3; val_offset:295536*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295536*0 + 3*208*FLEN/8, x4, x1, x2)

inst_98513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b07fffffffffff; valaddr_reg:x3; val_offset:295539*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295539*0 + 3*209*FLEN/8, x4, x1, x2)

inst_98514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b0ffffffffffff; valaddr_reg:x3; val_offset:295542*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295542*0 + 3*210*FLEN/8, x4, x1, x2)

inst_98515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b1ffffffffffff; valaddr_reg:x3; val_offset:295545*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295545*0 + 3*211*FLEN/8, x4, x1, x2)

inst_98516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b3ffffffffffff; valaddr_reg:x3; val_offset:295548*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295548*0 + 3*212*FLEN/8, x4, x1, x2)

inst_98517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b7ffffffffffff; valaddr_reg:x3; val_offset:295551*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295551*0 + 3*213*FLEN/8, x4, x1, x2)

inst_98518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8b8000000000000; valaddr_reg:x3; val_offset:295554*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295554*0 + 3*214*FLEN/8, x4, x1, x2)

inst_98519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bc000000000000; valaddr_reg:x3; val_offset:295557*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295557*0 + 3*215*FLEN/8, x4, x1, x2)

inst_98520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8be000000000000; valaddr_reg:x3; val_offset:295560*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295560*0 + 3*216*FLEN/8, x4, x1, x2)

inst_98521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bf000000000000; valaddr_reg:x3; val_offset:295563*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295563*0 + 3*217*FLEN/8, x4, x1, x2)

inst_98522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bf800000000000; valaddr_reg:x3; val_offset:295566*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295566*0 + 3*218*FLEN/8, x4, x1, x2)

inst_98523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfc00000000000; valaddr_reg:x3; val_offset:295569*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295569*0 + 3*219*FLEN/8, x4, x1, x2)

inst_98524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfe00000000000; valaddr_reg:x3; val_offset:295572*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295572*0 + 3*220*FLEN/8, x4, x1, x2)

inst_98525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bff00000000000; valaddr_reg:x3; val_offset:295575*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295575*0 + 3*221*FLEN/8, x4, x1, x2)

inst_98526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bff80000000000; valaddr_reg:x3; val_offset:295578*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295578*0 + 3*222*FLEN/8, x4, x1, x2)

inst_98527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffc0000000000; valaddr_reg:x3; val_offset:295581*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295581*0 + 3*223*FLEN/8, x4, x1, x2)

inst_98528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffe0000000000; valaddr_reg:x3; val_offset:295584*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295584*0 + 3*224*FLEN/8, x4, x1, x2)

inst_98529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfff0000000000; valaddr_reg:x3; val_offset:295587*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295587*0 + 3*225*FLEN/8, x4, x1, x2)

inst_98530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfff8000000000; valaddr_reg:x3; val_offset:295590*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295590*0 + 3*226*FLEN/8, x4, x1, x2)

inst_98531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffc000000000; valaddr_reg:x3; val_offset:295593*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295593*0 + 3*227*FLEN/8, x4, x1, x2)

inst_98532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffe000000000; valaddr_reg:x3; val_offset:295596*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295596*0 + 3*228*FLEN/8, x4, x1, x2)

inst_98533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffff000000000; valaddr_reg:x3; val_offset:295599*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295599*0 + 3*229*FLEN/8, x4, x1, x2)

inst_98534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffff800000000; valaddr_reg:x3; val_offset:295602*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295602*0 + 3*230*FLEN/8, x4, x1, x2)

inst_98535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffc00000000; valaddr_reg:x3; val_offset:295605*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295605*0 + 3*231*FLEN/8, x4, x1, x2)

inst_98536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffe00000000; valaddr_reg:x3; val_offset:295608*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295608*0 + 3*232*FLEN/8, x4, x1, x2)

inst_98537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffff00000000; valaddr_reg:x3; val_offset:295611*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295611*0 + 3*233*FLEN/8, x4, x1, x2)

inst_98538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffff80000000; valaddr_reg:x3; val_offset:295614*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295614*0 + 3*234*FLEN/8, x4, x1, x2)

inst_98539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffc0000000; valaddr_reg:x3; val_offset:295617*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295617*0 + 3*235*FLEN/8, x4, x1, x2)

inst_98540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffe0000000; valaddr_reg:x3; val_offset:295620*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295620*0 + 3*236*FLEN/8, x4, x1, x2)

inst_98541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffff0000000; valaddr_reg:x3; val_offset:295623*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295623*0 + 3*237*FLEN/8, x4, x1, x2)

inst_98542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffff8000000; valaddr_reg:x3; val_offset:295626*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295626*0 + 3*238*FLEN/8, x4, x1, x2)

inst_98543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffc000000; valaddr_reg:x3; val_offset:295629*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295629*0 + 3*239*FLEN/8, x4, x1, x2)

inst_98544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffe000000; valaddr_reg:x3; val_offset:295632*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295632*0 + 3*240*FLEN/8, x4, x1, x2)

inst_98545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffff000000; valaddr_reg:x3; val_offset:295635*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295635*0 + 3*241*FLEN/8, x4, x1, x2)

inst_98546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffff800000; valaddr_reg:x3; val_offset:295638*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295638*0 + 3*242*FLEN/8, x4, x1, x2)

inst_98547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffc00000; valaddr_reg:x3; val_offset:295641*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295641*0 + 3*243*FLEN/8, x4, x1, x2)

inst_98548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffe00000; valaddr_reg:x3; val_offset:295644*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295644*0 + 3*244*FLEN/8, x4, x1, x2)

inst_98549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffff00000; valaddr_reg:x3; val_offset:295647*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295647*0 + 3*245*FLEN/8, x4, x1, x2)

inst_98550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffff80000; valaddr_reg:x3; val_offset:295650*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295650*0 + 3*246*FLEN/8, x4, x1, x2)

inst_98551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffc0000; valaddr_reg:x3; val_offset:295653*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295653*0 + 3*247*FLEN/8, x4, x1, x2)

inst_98552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffe0000; valaddr_reg:x3; val_offset:295656*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295656*0 + 3*248*FLEN/8, x4, x1, x2)

inst_98553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffff0000; valaddr_reg:x3; val_offset:295659*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295659*0 + 3*249*FLEN/8, x4, x1, x2)

inst_98554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffff8000; valaddr_reg:x3; val_offset:295662*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295662*0 + 3*250*FLEN/8, x4, x1, x2)

inst_98555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffc000; valaddr_reg:x3; val_offset:295665*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295665*0 + 3*251*FLEN/8, x4, x1, x2)

inst_98556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffe000; valaddr_reg:x3; val_offset:295668*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295668*0 + 3*252*FLEN/8, x4, x1, x2)

inst_98557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffff000; valaddr_reg:x3; val_offset:295671*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295671*0 + 3*253*FLEN/8, x4, x1, x2)

inst_98558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffff800; valaddr_reg:x3; val_offset:295674*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295674*0 + 3*254*FLEN/8, x4, x1, x2)

inst_98559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffffc00; valaddr_reg:x3; val_offset:295677*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295677*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_98560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffffe00; valaddr_reg:x3; val_offset:295680*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295680*0 + 3*256*FLEN/8, x4, x1, x2)

inst_98561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffff00; valaddr_reg:x3; val_offset:295683*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295683*0 + 3*257*FLEN/8, x4, x1, x2)

inst_98562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffff80; valaddr_reg:x3; val_offset:295686*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295686*0 + 3*258*FLEN/8, x4, x1, x2)

inst_98563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffffc0; valaddr_reg:x3; val_offset:295689*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295689*0 + 3*259*FLEN/8, x4, x1, x2)

inst_98564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffffe0; valaddr_reg:x3; val_offset:295692*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295692*0 + 3*260*FLEN/8, x4, x1, x2)

inst_98565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffffff0; valaddr_reg:x3; val_offset:295695*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295695*0 + 3*261*FLEN/8, x4, x1, x2)

inst_98566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffffff8; valaddr_reg:x3; val_offset:295698*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295698*0 + 3*262*FLEN/8, x4, x1, x2)

inst_98567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffffffc; valaddr_reg:x3; val_offset:295701*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295701*0 + 3*263*FLEN/8, x4, x1, x2)

inst_98568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bffffffffffffe; valaddr_reg:x3; val_offset:295704*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295704*0 + 3*264*FLEN/8, x4, x1, x2)

inst_98569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xb8bfffffffffffff; valaddr_reg:x3; val_offset:295707*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295707*0 + 3*265*FLEN/8, x4, x1, x2)

inst_98570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:295710*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295710*0 + 3*266*FLEN/8, x4, x1, x2)

inst_98571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:295713*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295713*0 + 3*267*FLEN/8, x4, x1, x2)

inst_98572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:295716*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295716*0 + 3*268*FLEN/8, x4, x1, x2)

inst_98573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:295719*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295719*0 + 3*269*FLEN/8, x4, x1, x2)

inst_98574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:295722*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295722*0 + 3*270*FLEN/8, x4, x1, x2)

inst_98575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:295725*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295725*0 + 3*271*FLEN/8, x4, x1, x2)

inst_98576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:295728*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295728*0 + 3*272*FLEN/8, x4, x1, x2)

inst_98577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:295731*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295731*0 + 3*273*FLEN/8, x4, x1, x2)

inst_98578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:295734*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295734*0 + 3*274*FLEN/8, x4, x1, x2)

inst_98579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:295737*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295737*0 + 3*275*FLEN/8, x4, x1, x2)

inst_98580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:295740*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295740*0 + 3*276*FLEN/8, x4, x1, x2)

inst_98581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:295743*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295743*0 + 3*277*FLEN/8, x4, x1, x2)

inst_98582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:295746*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295746*0 + 3*278*FLEN/8, x4, x1, x2)

inst_98583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:295749*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295749*0 + 3*279*FLEN/8, x4, x1, x2)

inst_98584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:295752*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295752*0 + 3*280*FLEN/8, x4, x1, x2)

inst_98585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:295755*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295755*0 + 3*281*FLEN/8, x4, x1, x2)

inst_98586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:295758*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295758*0 + 3*282*FLEN/8, x4, x1, x2)

inst_98587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:295761*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295761*0 + 3*283*FLEN/8, x4, x1, x2)

inst_98588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:295764*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295764*0 + 3*284*FLEN/8, x4, x1, x2)

inst_98589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:295767*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295767*0 + 3*285*FLEN/8, x4, x1, x2)

inst_98590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:295770*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295770*0 + 3*286*FLEN/8, x4, x1, x2)

inst_98591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf08b5da67e1b1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07f7e5138e22b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf08b5da67e1b1; op2val:0x9fc07f7e5138e22b;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:295773*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295773*0 + 3*287*FLEN/8, x4, x1, x2)

inst_98592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000000000; valaddr_reg:x3; val_offset:295776*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295776*0 + 3*288*FLEN/8, x4, x1, x2)

inst_98593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000000001; valaddr_reg:x3; val_offset:295779*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295779*0 + 3*289*FLEN/8, x4, x1, x2)

inst_98594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000000003; valaddr_reg:x3; val_offset:295782*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295782*0 + 3*290*FLEN/8, x4, x1, x2)

inst_98595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000000007; valaddr_reg:x3; val_offset:295785*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295785*0 + 3*291*FLEN/8, x4, x1, x2)

inst_98596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000000000f; valaddr_reg:x3; val_offset:295788*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295788*0 + 3*292*FLEN/8, x4, x1, x2)

inst_98597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000000001f; valaddr_reg:x3; val_offset:295791*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295791*0 + 3*293*FLEN/8, x4, x1, x2)

inst_98598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000000003f; valaddr_reg:x3; val_offset:295794*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295794*0 + 3*294*FLEN/8, x4, x1, x2)

inst_98599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000000007f; valaddr_reg:x3; val_offset:295797*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295797*0 + 3*295*FLEN/8, x4, x1, x2)

inst_98600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000000000ff; valaddr_reg:x3; val_offset:295800*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295800*0 + 3*296*FLEN/8, x4, x1, x2)

inst_98601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000000001ff; valaddr_reg:x3; val_offset:295803*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295803*0 + 3*297*FLEN/8, x4, x1, x2)

inst_98602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000000003ff; valaddr_reg:x3; val_offset:295806*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295806*0 + 3*298*FLEN/8, x4, x1, x2)

inst_98603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000000007ff; valaddr_reg:x3; val_offset:295809*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295809*0 + 3*299*FLEN/8, x4, x1, x2)

inst_98604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000000fff; valaddr_reg:x3; val_offset:295812*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295812*0 + 3*300*FLEN/8, x4, x1, x2)

inst_98605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000001fff; valaddr_reg:x3; val_offset:295815*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295815*0 + 3*301*FLEN/8, x4, x1, x2)

inst_98606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000003fff; valaddr_reg:x3; val_offset:295818*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295818*0 + 3*302*FLEN/8, x4, x1, x2)

inst_98607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000007fff; valaddr_reg:x3; val_offset:295821*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295821*0 + 3*303*FLEN/8, x4, x1, x2)

inst_98608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000000ffff; valaddr_reg:x3; val_offset:295824*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295824*0 + 3*304*FLEN/8, x4, x1, x2)

inst_98609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000001ffff; valaddr_reg:x3; val_offset:295827*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295827*0 + 3*305*FLEN/8, x4, x1, x2)

inst_98610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000003ffff; valaddr_reg:x3; val_offset:295830*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295830*0 + 3*306*FLEN/8, x4, x1, x2)

inst_98611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000007ffff; valaddr_reg:x3; val_offset:295833*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295833*0 + 3*307*FLEN/8, x4, x1, x2)

inst_98612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000000fffff; valaddr_reg:x3; val_offset:295836*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295836*0 + 3*308*FLEN/8, x4, x1, x2)

inst_98613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000001fffff; valaddr_reg:x3; val_offset:295839*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295839*0 + 3*309*FLEN/8, x4, x1, x2)

inst_98614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000003fffff; valaddr_reg:x3; val_offset:295842*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295842*0 + 3*310*FLEN/8, x4, x1, x2)

inst_98615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000007fffff; valaddr_reg:x3; val_offset:295845*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295845*0 + 3*311*FLEN/8, x4, x1, x2)

inst_98616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000000ffffff; valaddr_reg:x3; val_offset:295848*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295848*0 + 3*312*FLEN/8, x4, x1, x2)

inst_98617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000001ffffff; valaddr_reg:x3; val_offset:295851*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295851*0 + 3*313*FLEN/8, x4, x1, x2)

inst_98618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000003ffffff; valaddr_reg:x3; val_offset:295854*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295854*0 + 3*314*FLEN/8, x4, x1, x2)

inst_98619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000007ffffff; valaddr_reg:x3; val_offset:295857*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295857*0 + 3*315*FLEN/8, x4, x1, x2)

inst_98620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000000fffffff; valaddr_reg:x3; val_offset:295860*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295860*0 + 3*316*FLEN/8, x4, x1, x2)

inst_98621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000001fffffff; valaddr_reg:x3; val_offset:295863*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295863*0 + 3*317*FLEN/8, x4, x1, x2)

inst_98622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000003fffffff; valaddr_reg:x3; val_offset:295866*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295866*0 + 3*318*FLEN/8, x4, x1, x2)

inst_98623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000007fffffff; valaddr_reg:x3; val_offset:295869*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295869*0 + 3*319*FLEN/8, x4, x1, x2)

inst_98624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00000ffffffff; valaddr_reg:x3; val_offset:295872*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295872*0 + 3*320*FLEN/8, x4, x1, x2)

inst_98625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00001ffffffff; valaddr_reg:x3; val_offset:295875*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295875*0 + 3*321*FLEN/8, x4, x1, x2)

inst_98626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00003ffffffff; valaddr_reg:x3; val_offset:295878*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295878*0 + 3*322*FLEN/8, x4, x1, x2)

inst_98627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00007ffffffff; valaddr_reg:x3; val_offset:295881*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295881*0 + 3*323*FLEN/8, x4, x1, x2)

inst_98628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0000fffffffff; valaddr_reg:x3; val_offset:295884*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295884*0 + 3*324*FLEN/8, x4, x1, x2)

inst_98629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0001fffffffff; valaddr_reg:x3; val_offset:295887*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295887*0 + 3*325*FLEN/8, x4, x1, x2)

inst_98630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0003fffffffff; valaddr_reg:x3; val_offset:295890*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295890*0 + 3*326*FLEN/8, x4, x1, x2)

inst_98631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0007fffffffff; valaddr_reg:x3; val_offset:295893*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295893*0 + 3*327*FLEN/8, x4, x1, x2)

inst_98632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b000ffffffffff; valaddr_reg:x3; val_offset:295896*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295896*0 + 3*328*FLEN/8, x4, x1, x2)

inst_98633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b001ffffffffff; valaddr_reg:x3; val_offset:295899*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295899*0 + 3*329*FLEN/8, x4, x1, x2)

inst_98634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b003ffffffffff; valaddr_reg:x3; val_offset:295902*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295902*0 + 3*330*FLEN/8, x4, x1, x2)

inst_98635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b007ffffffffff; valaddr_reg:x3; val_offset:295905*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295905*0 + 3*331*FLEN/8, x4, x1, x2)

inst_98636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b00fffffffffff; valaddr_reg:x3; val_offset:295908*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295908*0 + 3*332*FLEN/8, x4, x1, x2)

inst_98637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b01fffffffffff; valaddr_reg:x3; val_offset:295911*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295911*0 + 3*333*FLEN/8, x4, x1, x2)

inst_98638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b03fffffffffff; valaddr_reg:x3; val_offset:295914*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295914*0 + 3*334*FLEN/8, x4, x1, x2)

inst_98639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b07fffffffffff; valaddr_reg:x3; val_offset:295917*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295917*0 + 3*335*FLEN/8, x4, x1, x2)

inst_98640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b0ffffffffffff; valaddr_reg:x3; val_offset:295920*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295920*0 + 3*336*FLEN/8, x4, x1, x2)

inst_98641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b1ffffffffffff; valaddr_reg:x3; val_offset:295923*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295923*0 + 3*337*FLEN/8, x4, x1, x2)

inst_98642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b3ffffffffffff; valaddr_reg:x3; val_offset:295926*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295926*0 + 3*338*FLEN/8, x4, x1, x2)

inst_98643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b7ffffffffffff; valaddr_reg:x3; val_offset:295929*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295929*0 + 3*339*FLEN/8, x4, x1, x2)

inst_98644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7b8000000000000; valaddr_reg:x3; val_offset:295932*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295932*0 + 3*340*FLEN/8, x4, x1, x2)

inst_98645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bc000000000000; valaddr_reg:x3; val_offset:295935*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295935*0 + 3*341*FLEN/8, x4, x1, x2)

inst_98646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7be000000000000; valaddr_reg:x3; val_offset:295938*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295938*0 + 3*342*FLEN/8, x4, x1, x2)

inst_98647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bf000000000000; valaddr_reg:x3; val_offset:295941*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295941*0 + 3*343*FLEN/8, x4, x1, x2)

inst_98648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bf800000000000; valaddr_reg:x3; val_offset:295944*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295944*0 + 3*344*FLEN/8, x4, x1, x2)

inst_98649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfc00000000000; valaddr_reg:x3; val_offset:295947*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295947*0 + 3*345*FLEN/8, x4, x1, x2)

inst_98650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfe00000000000; valaddr_reg:x3; val_offset:295950*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295950*0 + 3*346*FLEN/8, x4, x1, x2)

inst_98651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bff00000000000; valaddr_reg:x3; val_offset:295953*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295953*0 + 3*347*FLEN/8, x4, x1, x2)

inst_98652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bff80000000000; valaddr_reg:x3; val_offset:295956*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295956*0 + 3*348*FLEN/8, x4, x1, x2)

inst_98653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffc0000000000; valaddr_reg:x3; val_offset:295959*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295959*0 + 3*349*FLEN/8, x4, x1, x2)

inst_98654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffe0000000000; valaddr_reg:x3; val_offset:295962*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295962*0 + 3*350*FLEN/8, x4, x1, x2)

inst_98655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfff0000000000; valaddr_reg:x3; val_offset:295965*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295965*0 + 3*351*FLEN/8, x4, x1, x2)

inst_98656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfff8000000000; valaddr_reg:x3; val_offset:295968*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295968*0 + 3*352*FLEN/8, x4, x1, x2)

inst_98657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffc000000000; valaddr_reg:x3; val_offset:295971*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295971*0 + 3*353*FLEN/8, x4, x1, x2)

inst_98658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffe000000000; valaddr_reg:x3; val_offset:295974*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295974*0 + 3*354*FLEN/8, x4, x1, x2)

inst_98659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffff000000000; valaddr_reg:x3; val_offset:295977*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295977*0 + 3*355*FLEN/8, x4, x1, x2)

inst_98660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffff800000000; valaddr_reg:x3; val_offset:295980*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295980*0 + 3*356*FLEN/8, x4, x1, x2)

inst_98661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffc00000000; valaddr_reg:x3; val_offset:295983*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295983*0 + 3*357*FLEN/8, x4, x1, x2)

inst_98662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffe00000000; valaddr_reg:x3; val_offset:295986*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295986*0 + 3*358*FLEN/8, x4, x1, x2)

inst_98663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffff00000000; valaddr_reg:x3; val_offset:295989*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295989*0 + 3*359*FLEN/8, x4, x1, x2)

inst_98664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffff80000000; valaddr_reg:x3; val_offset:295992*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295992*0 + 3*360*FLEN/8, x4, x1, x2)

inst_98665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffc0000000; valaddr_reg:x3; val_offset:295995*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295995*0 + 3*361*FLEN/8, x4, x1, x2)

inst_98666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffe0000000; valaddr_reg:x3; val_offset:295998*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 295998*0 + 3*362*FLEN/8, x4, x1, x2)

inst_98667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffff0000000; valaddr_reg:x3; val_offset:296001*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296001*0 + 3*363*FLEN/8, x4, x1, x2)

inst_98668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffff8000000; valaddr_reg:x3; val_offset:296004*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296004*0 + 3*364*FLEN/8, x4, x1, x2)

inst_98669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffc000000; valaddr_reg:x3; val_offset:296007*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296007*0 + 3*365*FLEN/8, x4, x1, x2)

inst_98670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffe000000; valaddr_reg:x3; val_offset:296010*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296010*0 + 3*366*FLEN/8, x4, x1, x2)

inst_98671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffff000000; valaddr_reg:x3; val_offset:296013*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296013*0 + 3*367*FLEN/8, x4, x1, x2)

inst_98672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffff800000; valaddr_reg:x3; val_offset:296016*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296016*0 + 3*368*FLEN/8, x4, x1, x2)

inst_98673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffc00000; valaddr_reg:x3; val_offset:296019*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296019*0 + 3*369*FLEN/8, x4, x1, x2)

inst_98674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffe00000; valaddr_reg:x3; val_offset:296022*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296022*0 + 3*370*FLEN/8, x4, x1, x2)

inst_98675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffff00000; valaddr_reg:x3; val_offset:296025*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296025*0 + 3*371*FLEN/8, x4, x1, x2)

inst_98676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffff80000; valaddr_reg:x3; val_offset:296028*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296028*0 + 3*372*FLEN/8, x4, x1, x2)

inst_98677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffc0000; valaddr_reg:x3; val_offset:296031*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296031*0 + 3*373*FLEN/8, x4, x1, x2)

inst_98678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffe0000; valaddr_reg:x3; val_offset:296034*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296034*0 + 3*374*FLEN/8, x4, x1, x2)

inst_98679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffff0000; valaddr_reg:x3; val_offset:296037*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296037*0 + 3*375*FLEN/8, x4, x1, x2)

inst_98680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffff8000; valaddr_reg:x3; val_offset:296040*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296040*0 + 3*376*FLEN/8, x4, x1, x2)

inst_98681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffc000; valaddr_reg:x3; val_offset:296043*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296043*0 + 3*377*FLEN/8, x4, x1, x2)

inst_98682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffe000; valaddr_reg:x3; val_offset:296046*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296046*0 + 3*378*FLEN/8, x4, x1, x2)

inst_98683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffff000; valaddr_reg:x3; val_offset:296049*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296049*0 + 3*379*FLEN/8, x4, x1, x2)

inst_98684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffff800; valaddr_reg:x3; val_offset:296052*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296052*0 + 3*380*FLEN/8, x4, x1, x2)

inst_98685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffffc00; valaddr_reg:x3; val_offset:296055*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296055*0 + 3*381*FLEN/8, x4, x1, x2)

inst_98686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffffe00; valaddr_reg:x3; val_offset:296058*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296058*0 + 3*382*FLEN/8, x4, x1, x2)

inst_98687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffff00; valaddr_reg:x3; val_offset:296061*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296061*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_98688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffff80; valaddr_reg:x3; val_offset:296064*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296064*0 + 3*384*FLEN/8, x4, x1, x2)

inst_98689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffffc0; valaddr_reg:x3; val_offset:296067*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296067*0 + 3*385*FLEN/8, x4, x1, x2)

inst_98690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffffe0; valaddr_reg:x3; val_offset:296070*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296070*0 + 3*386*FLEN/8, x4, x1, x2)

inst_98691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffffff0; valaddr_reg:x3; val_offset:296073*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296073*0 + 3*387*FLEN/8, x4, x1, x2)

inst_98692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffffff8; valaddr_reg:x3; val_offset:296076*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296076*0 + 3*388*FLEN/8, x4, x1, x2)

inst_98693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffffffc; valaddr_reg:x3; val_offset:296079*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296079*0 + 3*389*FLEN/8, x4, x1, x2)

inst_98694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bffffffffffffe; valaddr_reg:x3; val_offset:296082*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296082*0 + 3*390*FLEN/8, x4, x1, x2)

inst_98695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x37b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xb7bfffffffffffff; valaddr_reg:x3; val_offset:296085*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296085*0 + 3*391*FLEN/8, x4, x1, x2)

inst_98696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:296088*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296088*0 + 3*392*FLEN/8, x4, x1, x2)

inst_98697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:296091*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296091*0 + 3*393*FLEN/8, x4, x1, x2)

inst_98698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:296094*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296094*0 + 3*394*FLEN/8, x4, x1, x2)

inst_98699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:296097*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296097*0 + 3*395*FLEN/8, x4, x1, x2)

inst_98700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:296100*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296100*0 + 3*396*FLEN/8, x4, x1, x2)

inst_98701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:296103*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296103*0 + 3*397*FLEN/8, x4, x1, x2)

inst_98702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:296106*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296106*0 + 3*398*FLEN/8, x4, x1, x2)

inst_98703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:296109*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296109*0 + 3*399*FLEN/8, x4, x1, x2)

inst_98704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:296112*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296112*0 + 3*400*FLEN/8, x4, x1, x2)

inst_98705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:296115*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296115*0 + 3*401*FLEN/8, x4, x1, x2)

inst_98706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:296118*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296118*0 + 3*402*FLEN/8, x4, x1, x2)

inst_98707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:296121*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296121*0 + 3*403*FLEN/8, x4, x1, x2)

inst_98708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:296124*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296124*0 + 3*404*FLEN/8, x4, x1, x2)

inst_98709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:296127*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296127*0 + 3*405*FLEN/8, x4, x1, x2)

inst_98710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:296130*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296130*0 + 3*406*FLEN/8, x4, x1, x2)

inst_98711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:296133*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296133*0 + 3*407*FLEN/8, x4, x1, x2)

inst_98712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:296136*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296136*0 + 3*408*FLEN/8, x4, x1, x2)

inst_98713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:296139*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296139*0 + 3*409*FLEN/8, x4, x1, x2)

inst_98714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:296142*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296142*0 + 3*410*FLEN/8, x4, x1, x2)

inst_98715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:296145*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296145*0 + 3*411*FLEN/8, x4, x1, x2)

inst_98716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:296148*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296148*0 + 3*412*FLEN/8, x4, x1, x2)

inst_98717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x07d8803500e80 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x9fc07d8803500e80;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:296151*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296151*0 + 3*413*FLEN/8, x4, x1, x2)

inst_98718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:296154*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296154*0 + 3*414*FLEN/8, x4, x1, x2)

inst_98719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:296157*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296157*0 + 3*415*FLEN/8, x4, x1, x2)

inst_98720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:296160*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296160*0 + 3*416*FLEN/8, x4, x1, x2)

inst_98721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:296163*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296163*0 + 3*417*FLEN/8, x4, x1, x2)

inst_98722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:296166*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296166*0 + 3*418*FLEN/8, x4, x1, x2)

inst_98723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:296169*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296169*0 + 3*419*FLEN/8, x4, x1, x2)

inst_98724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:296172*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296172*0 + 3*420*FLEN/8, x4, x1, x2)

inst_98725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:296175*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296175*0 + 3*421*FLEN/8, x4, x1, x2)

inst_98726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:296178*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296178*0 + 3*422*FLEN/8, x4, x1, x2)

inst_98727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:296181*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296181*0 + 3*423*FLEN/8, x4, x1, x2)

inst_98728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:296184*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296184*0 + 3*424*FLEN/8, x4, x1, x2)

inst_98729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:296187*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296187*0 + 3*425*FLEN/8, x4, x1, x2)

inst_98730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:296190*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296190*0 + 3*426*FLEN/8, x4, x1, x2)

inst_98731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:296193*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296193*0 + 3*427*FLEN/8, x4, x1, x2)

inst_98732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:296196*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296196*0 + 3*428*FLEN/8, x4, x1, x2)

inst_98733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:296199*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296199*0 + 3*429*FLEN/8, x4, x1, x2)

inst_98734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:296202*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296202*0 + 3*430*FLEN/8, x4, x1, x2)

inst_98735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:296205*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296205*0 + 3*431*FLEN/8, x4, x1, x2)

inst_98736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:296208*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296208*0 + 3*432*FLEN/8, x4, x1, x2)

inst_98737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:296211*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296211*0 + 3*433*FLEN/8, x4, x1, x2)

inst_98738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:296214*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296214*0 + 3*434*FLEN/8, x4, x1, x2)

inst_98739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:296217*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296217*0 + 3*435*FLEN/8, x4, x1, x2)

inst_98740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000000000; valaddr_reg:x3; val_offset:296220*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296220*0 + 3*436*FLEN/8, x4, x1, x2)

inst_98741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000000001; valaddr_reg:x3; val_offset:296223*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296223*0 + 3*437*FLEN/8, x4, x1, x2)

inst_98742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000000003; valaddr_reg:x3; val_offset:296226*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296226*0 + 3*438*FLEN/8, x4, x1, x2)

inst_98743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000000007; valaddr_reg:x3; val_offset:296229*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296229*0 + 3*439*FLEN/8, x4, x1, x2)

inst_98744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000000000f; valaddr_reg:x3; val_offset:296232*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296232*0 + 3*440*FLEN/8, x4, x1, x2)

inst_98745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000000001f; valaddr_reg:x3; val_offset:296235*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296235*0 + 3*441*FLEN/8, x4, x1, x2)

inst_98746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000000003f; valaddr_reg:x3; val_offset:296238*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296238*0 + 3*442*FLEN/8, x4, x1, x2)

inst_98747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000000007f; valaddr_reg:x3; val_offset:296241*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296241*0 + 3*443*FLEN/8, x4, x1, x2)

inst_98748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000000000ff; valaddr_reg:x3; val_offset:296244*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296244*0 + 3*444*FLEN/8, x4, x1, x2)

inst_98749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000000001ff; valaddr_reg:x3; val_offset:296247*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296247*0 + 3*445*FLEN/8, x4, x1, x2)

inst_98750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000000003ff; valaddr_reg:x3; val_offset:296250*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296250*0 + 3*446*FLEN/8, x4, x1, x2)

inst_98751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000000007ff; valaddr_reg:x3; val_offset:296253*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296253*0 + 3*447*FLEN/8, x4, x1, x2)

inst_98752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000000fff; valaddr_reg:x3; val_offset:296256*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296256*0 + 3*448*FLEN/8, x4, x1, x2)

inst_98753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000001fff; valaddr_reg:x3; val_offset:296259*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296259*0 + 3*449*FLEN/8, x4, x1, x2)

inst_98754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000003fff; valaddr_reg:x3; val_offset:296262*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296262*0 + 3*450*FLEN/8, x4, x1, x2)

inst_98755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000007fff; valaddr_reg:x3; val_offset:296265*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296265*0 + 3*451*FLEN/8, x4, x1, x2)

inst_98756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000000ffff; valaddr_reg:x3; val_offset:296268*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296268*0 + 3*452*FLEN/8, x4, x1, x2)

inst_98757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000001ffff; valaddr_reg:x3; val_offset:296271*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296271*0 + 3*453*FLEN/8, x4, x1, x2)

inst_98758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000003ffff; valaddr_reg:x3; val_offset:296274*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296274*0 + 3*454*FLEN/8, x4, x1, x2)

inst_98759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000007ffff; valaddr_reg:x3; val_offset:296277*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296277*0 + 3*455*FLEN/8, x4, x1, x2)

inst_98760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000000fffff; valaddr_reg:x3; val_offset:296280*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296280*0 + 3*456*FLEN/8, x4, x1, x2)

inst_98761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000001fffff; valaddr_reg:x3; val_offset:296283*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296283*0 + 3*457*FLEN/8, x4, x1, x2)

inst_98762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000003fffff; valaddr_reg:x3; val_offset:296286*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296286*0 + 3*458*FLEN/8, x4, x1, x2)

inst_98763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000007fffff; valaddr_reg:x3; val_offset:296289*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296289*0 + 3*459*FLEN/8, x4, x1, x2)

inst_98764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000000ffffff; valaddr_reg:x3; val_offset:296292*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296292*0 + 3*460*FLEN/8, x4, x1, x2)

inst_98765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000001ffffff; valaddr_reg:x3; val_offset:296295*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296295*0 + 3*461*FLEN/8, x4, x1, x2)

inst_98766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000003ffffff; valaddr_reg:x3; val_offset:296298*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296298*0 + 3*462*FLEN/8, x4, x1, x2)

inst_98767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000007ffffff; valaddr_reg:x3; val_offset:296301*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296301*0 + 3*463*FLEN/8, x4, x1, x2)

inst_98768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000000fffffff; valaddr_reg:x3; val_offset:296304*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296304*0 + 3*464*FLEN/8, x4, x1, x2)

inst_98769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000001fffffff; valaddr_reg:x3; val_offset:296307*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296307*0 + 3*465*FLEN/8, x4, x1, x2)

inst_98770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000003fffffff; valaddr_reg:x3; val_offset:296310*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296310*0 + 3*466*FLEN/8, x4, x1, x2)

inst_98771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000007fffffff; valaddr_reg:x3; val_offset:296313*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296313*0 + 3*467*FLEN/8, x4, x1, x2)

inst_98772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700000ffffffff; valaddr_reg:x3; val_offset:296316*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296316*0 + 3*468*FLEN/8, x4, x1, x2)

inst_98773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700001ffffffff; valaddr_reg:x3; val_offset:296319*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296319*0 + 3*469*FLEN/8, x4, x1, x2)

inst_98774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700003ffffffff; valaddr_reg:x3; val_offset:296322*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296322*0 + 3*470*FLEN/8, x4, x1, x2)

inst_98775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700007ffffffff; valaddr_reg:x3; val_offset:296325*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296325*0 + 3*471*FLEN/8, x4, x1, x2)

inst_98776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270000fffffffff; valaddr_reg:x3; val_offset:296328*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296328*0 + 3*472*FLEN/8, x4, x1, x2)

inst_98777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270001fffffffff; valaddr_reg:x3; val_offset:296331*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296331*0 + 3*473*FLEN/8, x4, x1, x2)

inst_98778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270003fffffffff; valaddr_reg:x3; val_offset:296334*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296334*0 + 3*474*FLEN/8, x4, x1, x2)

inst_98779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270007fffffffff; valaddr_reg:x3; val_offset:296337*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296337*0 + 3*475*FLEN/8, x4, x1, x2)

inst_98780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27000ffffffffff; valaddr_reg:x3; val_offset:296340*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296340*0 + 3*476*FLEN/8, x4, x1, x2)

inst_98781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27001ffffffffff; valaddr_reg:x3; val_offset:296343*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296343*0 + 3*477*FLEN/8, x4, x1, x2)

inst_98782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27003ffffffffff; valaddr_reg:x3; val_offset:296346*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296346*0 + 3*478*FLEN/8, x4, x1, x2)

inst_98783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27007ffffffffff; valaddr_reg:x3; val_offset:296349*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296349*0 + 3*479*FLEN/8, x4, x1, x2)

inst_98784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2700fffffffffff; valaddr_reg:x3; val_offset:296352*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296352*0 + 3*480*FLEN/8, x4, x1, x2)

inst_98785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2701fffffffffff; valaddr_reg:x3; val_offset:296355*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296355*0 + 3*481*FLEN/8, x4, x1, x2)

inst_98786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2703fffffffffff; valaddr_reg:x3; val_offset:296358*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296358*0 + 3*482*FLEN/8, x4, x1, x2)

inst_98787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x2707fffffffffff; valaddr_reg:x3; val_offset:296361*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296361*0 + 3*483*FLEN/8, x4, x1, x2)

inst_98788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x270ffffffffffff; valaddr_reg:x3; val_offset:296364*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296364*0 + 3*484*FLEN/8, x4, x1, x2)

inst_98789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x271ffffffffffff; valaddr_reg:x3; val_offset:296367*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296367*0 + 3*485*FLEN/8, x4, x1, x2)

inst_98790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x273ffffffffffff; valaddr_reg:x3; val_offset:296370*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296370*0 + 3*486*FLEN/8, x4, x1, x2)

inst_98791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x277ffffffffffff; valaddr_reg:x3; val_offset:296373*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296373*0 + 3*487*FLEN/8, x4, x1, x2)

inst_98792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x278000000000000; valaddr_reg:x3; val_offset:296376*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296376*0 + 3*488*FLEN/8, x4, x1, x2)

inst_98793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27c000000000000; valaddr_reg:x3; val_offset:296379*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296379*0 + 3*489*FLEN/8, x4, x1, x2)

inst_98794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27e000000000000; valaddr_reg:x3; val_offset:296382*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296382*0 + 3*490*FLEN/8, x4, x1, x2)

inst_98795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27f000000000000; valaddr_reg:x3; val_offset:296385*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296385*0 + 3*491*FLEN/8, x4, x1, x2)

inst_98796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27f800000000000; valaddr_reg:x3; val_offset:296388*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296388*0 + 3*492*FLEN/8, x4, x1, x2)

inst_98797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fc00000000000; valaddr_reg:x3; val_offset:296391*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296391*0 + 3*493*FLEN/8, x4, x1, x2)

inst_98798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fe00000000000; valaddr_reg:x3; val_offset:296394*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296394*0 + 3*494*FLEN/8, x4, x1, x2)

inst_98799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ff00000000000; valaddr_reg:x3; val_offset:296397*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296397*0 + 3*495*FLEN/8, x4, x1, x2)

inst_98800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ff80000000000; valaddr_reg:x3; val_offset:296400*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296400*0 + 3*496*FLEN/8, x4, x1, x2)

inst_98801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffc0000000000; valaddr_reg:x3; val_offset:296403*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296403*0 + 3*497*FLEN/8, x4, x1, x2)

inst_98802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffe0000000000; valaddr_reg:x3; val_offset:296406*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296406*0 + 3*498*FLEN/8, x4, x1, x2)

inst_98803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fff0000000000; valaddr_reg:x3; val_offset:296409*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296409*0 + 3*499*FLEN/8, x4, x1, x2)

inst_98804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fff8000000000; valaddr_reg:x3; val_offset:296412*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296412*0 + 3*500*FLEN/8, x4, x1, x2)

inst_98805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffc000000000; valaddr_reg:x3; val_offset:296415*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296415*0 + 3*501*FLEN/8, x4, x1, x2)

inst_98806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffe000000000; valaddr_reg:x3; val_offset:296418*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296418*0 + 3*502*FLEN/8, x4, x1, x2)

inst_98807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffff000000000; valaddr_reg:x3; val_offset:296421*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296421*0 + 3*503*FLEN/8, x4, x1, x2)

inst_98808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffff800000000; valaddr_reg:x3; val_offset:296424*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296424*0 + 3*504*FLEN/8, x4, x1, x2)

inst_98809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffc00000000; valaddr_reg:x3; val_offset:296427*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296427*0 + 3*505*FLEN/8, x4, x1, x2)

inst_98810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffe00000000; valaddr_reg:x3; val_offset:296430*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296430*0 + 3*506*FLEN/8, x4, x1, x2)

inst_98811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffff00000000; valaddr_reg:x3; val_offset:296433*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296433*0 + 3*507*FLEN/8, x4, x1, x2)

inst_98812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffff80000000; valaddr_reg:x3; val_offset:296436*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296436*0 + 3*508*FLEN/8, x4, x1, x2)

inst_98813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffc0000000; valaddr_reg:x3; val_offset:296439*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296439*0 + 3*509*FLEN/8, x4, x1, x2)

inst_98814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffe0000000; valaddr_reg:x3; val_offset:296442*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296442*0 + 3*510*FLEN/8, x4, x1, x2)

inst_98815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffff0000000; valaddr_reg:x3; val_offset:296445*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296445*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_98816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffff8000000; valaddr_reg:x3; val_offset:296448*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296448*0 + 3*512*FLEN/8, x4, x1, x2)

inst_98817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffc000000; valaddr_reg:x3; val_offset:296451*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296451*0 + 3*513*FLEN/8, x4, x1, x2)

inst_98818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffe000000; valaddr_reg:x3; val_offset:296454*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296454*0 + 3*514*FLEN/8, x4, x1, x2)

inst_98819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffff000000; valaddr_reg:x3; val_offset:296457*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296457*0 + 3*515*FLEN/8, x4, x1, x2)

inst_98820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffff800000; valaddr_reg:x3; val_offset:296460*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296460*0 + 3*516*FLEN/8, x4, x1, x2)

inst_98821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffc00000; valaddr_reg:x3; val_offset:296463*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296463*0 + 3*517*FLEN/8, x4, x1, x2)

inst_98822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffe00000; valaddr_reg:x3; val_offset:296466*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296466*0 + 3*518*FLEN/8, x4, x1, x2)

inst_98823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffff00000; valaddr_reg:x3; val_offset:296469*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296469*0 + 3*519*FLEN/8, x4, x1, x2)

inst_98824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffff80000; valaddr_reg:x3; val_offset:296472*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296472*0 + 3*520*FLEN/8, x4, x1, x2)

inst_98825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffc0000; valaddr_reg:x3; val_offset:296475*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296475*0 + 3*521*FLEN/8, x4, x1, x2)

inst_98826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffe0000; valaddr_reg:x3; val_offset:296478*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296478*0 + 3*522*FLEN/8, x4, x1, x2)

inst_98827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffff0000; valaddr_reg:x3; val_offset:296481*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296481*0 + 3*523*FLEN/8, x4, x1, x2)

inst_98828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffff8000; valaddr_reg:x3; val_offset:296484*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296484*0 + 3*524*FLEN/8, x4, x1, x2)

inst_98829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffc000; valaddr_reg:x3; val_offset:296487*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296487*0 + 3*525*FLEN/8, x4, x1, x2)

inst_98830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffe000; valaddr_reg:x3; val_offset:296490*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296490*0 + 3*526*FLEN/8, x4, x1, x2)

inst_98831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffff000; valaddr_reg:x3; val_offset:296493*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296493*0 + 3*527*FLEN/8, x4, x1, x2)

inst_98832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffff800; valaddr_reg:x3; val_offset:296496*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296496*0 + 3*528*FLEN/8, x4, x1, x2)

inst_98833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffffc00; valaddr_reg:x3; val_offset:296499*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296499*0 + 3*529*FLEN/8, x4, x1, x2)

inst_98834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffffe00; valaddr_reg:x3; val_offset:296502*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296502*0 + 3*530*FLEN/8, x4, x1, x2)

inst_98835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffff00; valaddr_reg:x3; val_offset:296505*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296505*0 + 3*531*FLEN/8, x4, x1, x2)

inst_98836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffff80; valaddr_reg:x3; val_offset:296508*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296508*0 + 3*532*FLEN/8, x4, x1, x2)

inst_98837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffffc0; valaddr_reg:x3; val_offset:296511*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296511*0 + 3*533*FLEN/8, x4, x1, x2)

inst_98838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffffe0; valaddr_reg:x3; val_offset:296514*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296514*0 + 3*534*FLEN/8, x4, x1, x2)

inst_98839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffffff0; valaddr_reg:x3; val_offset:296517*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296517*0 + 3*535*FLEN/8, x4, x1, x2)

inst_98840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffffff8; valaddr_reg:x3; val_offset:296520*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296520*0 + 3*536*FLEN/8, x4, x1, x2)

inst_98841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffffffc; valaddr_reg:x3; val_offset:296523*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296523*0 + 3*537*FLEN/8, x4, x1, x2)

inst_98842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27ffffffffffffe; valaddr_reg:x3; val_offset:296526*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296526*0 + 3*538*FLEN/8, x4, x1, x2)

inst_98843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf1d95c70242f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf1d95c70242f1; op2val:0x0;
op3val:0x27fffffffffffff; valaddr_reg:x3; val_offset:296529*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296529*0 + 3*539*FLEN/8, x4, x1, x2)

inst_98844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:296532*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296532*0 + 3*540*FLEN/8, x4, x1, x2)

inst_98845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:296535*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296535*0 + 3*541*FLEN/8, x4, x1, x2)

inst_98846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:296538*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296538*0 + 3*542*FLEN/8, x4, x1, x2)

inst_98847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:296541*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296541*0 + 3*543*FLEN/8, x4, x1, x2)

inst_98848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:296544*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296544*0 + 3*544*FLEN/8, x4, x1, x2)

inst_98849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:296547*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296547*0 + 3*545*FLEN/8, x4, x1, x2)

inst_98850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:296550*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296550*0 + 3*546*FLEN/8, x4, x1, x2)

inst_98851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:296553*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296553*0 + 3*547*FLEN/8, x4, x1, x2)

inst_98852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:296556*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296556*0 + 3*548*FLEN/8, x4, x1, x2)

inst_98853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:296559*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296559*0 + 3*549*FLEN/8, x4, x1, x2)

inst_98854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:296562*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296562*0 + 3*550*FLEN/8, x4, x1, x2)

inst_98855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:296565*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296565*0 + 3*551*FLEN/8, x4, x1, x2)

inst_98856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:296568*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296568*0 + 3*552*FLEN/8, x4, x1, x2)

inst_98857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:296571*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296571*0 + 3*553*FLEN/8, x4, x1, x2)

inst_98858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:296574*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296574*0 + 3*554*FLEN/8, x4, x1, x2)

inst_98859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:296577*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296577*0 + 3*555*FLEN/8, x4, x1, x2)

inst_98860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:296580*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296580*0 + 3*556*FLEN/8, x4, x1, x2)

inst_98861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:296583*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296583*0 + 3*557*FLEN/8, x4, x1, x2)

inst_98862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:296586*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296586*0 + 3*558*FLEN/8, x4, x1, x2)

inst_98863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:296589*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296589*0 + 3*559*FLEN/8, x4, x1, x2)

inst_98864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:296592*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296592*0 + 3*560*FLEN/8, x4, x1, x2)

inst_98865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:296595*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296595*0 + 3*561*FLEN/8, x4, x1, x2)

inst_98866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000000000; valaddr_reg:x3; val_offset:296598*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296598*0 + 3*562*FLEN/8, x4, x1, x2)

inst_98867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000000001; valaddr_reg:x3; val_offset:296601*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296601*0 + 3*563*FLEN/8, x4, x1, x2)

inst_98868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000000003; valaddr_reg:x3; val_offset:296604*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296604*0 + 3*564*FLEN/8, x4, x1, x2)

inst_98869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000000007; valaddr_reg:x3; val_offset:296607*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296607*0 + 3*565*FLEN/8, x4, x1, x2)

inst_98870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000000000f; valaddr_reg:x3; val_offset:296610*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296610*0 + 3*566*FLEN/8, x4, x1, x2)

inst_98871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000000001f; valaddr_reg:x3; val_offset:296613*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296613*0 + 3*567*FLEN/8, x4, x1, x2)

inst_98872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000000003f; valaddr_reg:x3; val_offset:296616*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296616*0 + 3*568*FLEN/8, x4, x1, x2)

inst_98873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000000007f; valaddr_reg:x3; val_offset:296619*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296619*0 + 3*569*FLEN/8, x4, x1, x2)

inst_98874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000000000ff; valaddr_reg:x3; val_offset:296622*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296622*0 + 3*570*FLEN/8, x4, x1, x2)

inst_98875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000000001ff; valaddr_reg:x3; val_offset:296625*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296625*0 + 3*571*FLEN/8, x4, x1, x2)

inst_98876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000000003ff; valaddr_reg:x3; val_offset:296628*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296628*0 + 3*572*FLEN/8, x4, x1, x2)

inst_98877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000000007ff; valaddr_reg:x3; val_offset:296631*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296631*0 + 3*573*FLEN/8, x4, x1, x2)

inst_98878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000000fff; valaddr_reg:x3; val_offset:296634*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296634*0 + 3*574*FLEN/8, x4, x1, x2)

inst_98879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000001fff; valaddr_reg:x3; val_offset:296637*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296637*0 + 3*575*FLEN/8, x4, x1, x2)

inst_98880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000003fff; valaddr_reg:x3; val_offset:296640*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296640*0 + 3*576*FLEN/8, x4, x1, x2)

inst_98881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000007fff; valaddr_reg:x3; val_offset:296643*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296643*0 + 3*577*FLEN/8, x4, x1, x2)

inst_98882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000000ffff; valaddr_reg:x3; val_offset:296646*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296646*0 + 3*578*FLEN/8, x4, x1, x2)

inst_98883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000001ffff; valaddr_reg:x3; val_offset:296649*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296649*0 + 3*579*FLEN/8, x4, x1, x2)

inst_98884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000003ffff; valaddr_reg:x3; val_offset:296652*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296652*0 + 3*580*FLEN/8, x4, x1, x2)

inst_98885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000007ffff; valaddr_reg:x3; val_offset:296655*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296655*0 + 3*581*FLEN/8, x4, x1, x2)

inst_98886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000000fffff; valaddr_reg:x3; val_offset:296658*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296658*0 + 3*582*FLEN/8, x4, x1, x2)

inst_98887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000001fffff; valaddr_reg:x3; val_offset:296661*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296661*0 + 3*583*FLEN/8, x4, x1, x2)

inst_98888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000003fffff; valaddr_reg:x3; val_offset:296664*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296664*0 + 3*584*FLEN/8, x4, x1, x2)

inst_98889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000007fffff; valaddr_reg:x3; val_offset:296667*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296667*0 + 3*585*FLEN/8, x4, x1, x2)

inst_98890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000000ffffff; valaddr_reg:x3; val_offset:296670*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296670*0 + 3*586*FLEN/8, x4, x1, x2)

inst_98891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000001ffffff; valaddr_reg:x3; val_offset:296673*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296673*0 + 3*587*FLEN/8, x4, x1, x2)

inst_98892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000003ffffff; valaddr_reg:x3; val_offset:296676*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296676*0 + 3*588*FLEN/8, x4, x1, x2)

inst_98893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000007ffffff; valaddr_reg:x3; val_offset:296679*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296679*0 + 3*589*FLEN/8, x4, x1, x2)

inst_98894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000000fffffff; valaddr_reg:x3; val_offset:296682*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296682*0 + 3*590*FLEN/8, x4, x1, x2)

inst_98895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000001fffffff; valaddr_reg:x3; val_offset:296685*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296685*0 + 3*591*FLEN/8, x4, x1, x2)

inst_98896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000003fffffff; valaddr_reg:x3; val_offset:296688*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296688*0 + 3*592*FLEN/8, x4, x1, x2)

inst_98897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000007fffffff; valaddr_reg:x3; val_offset:296691*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296691*0 + 3*593*FLEN/8, x4, x1, x2)

inst_98898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200000ffffffff; valaddr_reg:x3; val_offset:296694*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296694*0 + 3*594*FLEN/8, x4, x1, x2)

inst_98899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200001ffffffff; valaddr_reg:x3; val_offset:296697*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296697*0 + 3*595*FLEN/8, x4, x1, x2)

inst_98900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200003ffffffff; valaddr_reg:x3; val_offset:296700*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296700*0 + 3*596*FLEN/8, x4, x1, x2)

inst_98901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200007ffffffff; valaddr_reg:x3; val_offset:296703*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296703*0 + 3*597*FLEN/8, x4, x1, x2)

inst_98902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020000fffffffff; valaddr_reg:x3; val_offset:296706*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296706*0 + 3*598*FLEN/8, x4, x1, x2)

inst_98903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020001fffffffff; valaddr_reg:x3; val_offset:296709*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296709*0 + 3*599*FLEN/8, x4, x1, x2)

inst_98904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020003fffffffff; valaddr_reg:x3; val_offset:296712*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296712*0 + 3*600*FLEN/8, x4, x1, x2)

inst_98905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020007fffffffff; valaddr_reg:x3; val_offset:296715*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296715*0 + 3*601*FLEN/8, x4, x1, x2)

inst_98906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802000ffffffffff; valaddr_reg:x3; val_offset:296718*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296718*0 + 3*602*FLEN/8, x4, x1, x2)

inst_98907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802001ffffffffff; valaddr_reg:x3; val_offset:296721*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296721*0 + 3*603*FLEN/8, x4, x1, x2)

inst_98908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802003ffffffffff; valaddr_reg:x3; val_offset:296724*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296724*0 + 3*604*FLEN/8, x4, x1, x2)

inst_98909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802007ffffffffff; valaddr_reg:x3; val_offset:296727*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296727*0 + 3*605*FLEN/8, x4, x1, x2)

inst_98910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80200fffffffffff; valaddr_reg:x3; val_offset:296730*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296730*0 + 3*606*FLEN/8, x4, x1, x2)

inst_98911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80201fffffffffff; valaddr_reg:x3; val_offset:296733*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296733*0 + 3*607*FLEN/8, x4, x1, x2)

inst_98912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80203fffffffffff; valaddr_reg:x3; val_offset:296736*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296736*0 + 3*608*FLEN/8, x4, x1, x2)

inst_98913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x80207fffffffffff; valaddr_reg:x3; val_offset:296739*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296739*0 + 3*609*FLEN/8, x4, x1, x2)

inst_98914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8020ffffffffffff; valaddr_reg:x3; val_offset:296742*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296742*0 + 3*610*FLEN/8, x4, x1, x2)

inst_98915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8021ffffffffffff; valaddr_reg:x3; val_offset:296745*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296745*0 + 3*611*FLEN/8, x4, x1, x2)

inst_98916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8023ffffffffffff; valaddr_reg:x3; val_offset:296748*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296748*0 + 3*612*FLEN/8, x4, x1, x2)

inst_98917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8027ffffffffffff; valaddr_reg:x3; val_offset:296751*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296751*0 + 3*613*FLEN/8, x4, x1, x2)

inst_98918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x8028000000000000; valaddr_reg:x3; val_offset:296754*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296754*0 + 3*614*FLEN/8, x4, x1, x2)

inst_98919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802c000000000000; valaddr_reg:x3; val_offset:296757*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296757*0 + 3*615*FLEN/8, x4, x1, x2)

inst_98920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802e000000000000; valaddr_reg:x3; val_offset:296760*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296760*0 + 3*616*FLEN/8, x4, x1, x2)

inst_98921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802f000000000000; valaddr_reg:x3; val_offset:296763*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296763*0 + 3*617*FLEN/8, x4, x1, x2)

inst_98922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802f800000000000; valaddr_reg:x3; val_offset:296766*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296766*0 + 3*618*FLEN/8, x4, x1, x2)

inst_98923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fc00000000000; valaddr_reg:x3; val_offset:296769*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296769*0 + 3*619*FLEN/8, x4, x1, x2)

inst_98924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fe00000000000; valaddr_reg:x3; val_offset:296772*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296772*0 + 3*620*FLEN/8, x4, x1, x2)

inst_98925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ff00000000000; valaddr_reg:x3; val_offset:296775*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296775*0 + 3*621*FLEN/8, x4, x1, x2)

inst_98926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ff80000000000; valaddr_reg:x3; val_offset:296778*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296778*0 + 3*622*FLEN/8, x4, x1, x2)

inst_98927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffc0000000000; valaddr_reg:x3; val_offset:296781*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296781*0 + 3*623*FLEN/8, x4, x1, x2)

inst_98928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffe0000000000; valaddr_reg:x3; val_offset:296784*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296784*0 + 3*624*FLEN/8, x4, x1, x2)

inst_98929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fff0000000000; valaddr_reg:x3; val_offset:296787*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296787*0 + 3*625*FLEN/8, x4, x1, x2)

inst_98930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fff8000000000; valaddr_reg:x3; val_offset:296790*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296790*0 + 3*626*FLEN/8, x4, x1, x2)

inst_98931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffc000000000; valaddr_reg:x3; val_offset:296793*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296793*0 + 3*627*FLEN/8, x4, x1, x2)

inst_98932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffe000000000; valaddr_reg:x3; val_offset:296796*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296796*0 + 3*628*FLEN/8, x4, x1, x2)

inst_98933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffff000000000; valaddr_reg:x3; val_offset:296799*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296799*0 + 3*629*FLEN/8, x4, x1, x2)

inst_98934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffff800000000; valaddr_reg:x3; val_offset:296802*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296802*0 + 3*630*FLEN/8, x4, x1, x2)

inst_98935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffc00000000; valaddr_reg:x3; val_offset:296805*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296805*0 + 3*631*FLEN/8, x4, x1, x2)

inst_98936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffe00000000; valaddr_reg:x3; val_offset:296808*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296808*0 + 3*632*FLEN/8, x4, x1, x2)

inst_98937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffff00000000; valaddr_reg:x3; val_offset:296811*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296811*0 + 3*633*FLEN/8, x4, x1, x2)

inst_98938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffff80000000; valaddr_reg:x3; val_offset:296814*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296814*0 + 3*634*FLEN/8, x4, x1, x2)

inst_98939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffc0000000; valaddr_reg:x3; val_offset:296817*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296817*0 + 3*635*FLEN/8, x4, x1, x2)

inst_98940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffe0000000; valaddr_reg:x3; val_offset:296820*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296820*0 + 3*636*FLEN/8, x4, x1, x2)

inst_98941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffff0000000; valaddr_reg:x3; val_offset:296823*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296823*0 + 3*637*FLEN/8, x4, x1, x2)

inst_98942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffff8000000; valaddr_reg:x3; val_offset:296826*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296826*0 + 3*638*FLEN/8, x4, x1, x2)

inst_98943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffc000000; valaddr_reg:x3; val_offset:296829*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296829*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_98944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffe000000; valaddr_reg:x3; val_offset:296832*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296832*0 + 3*640*FLEN/8, x4, x1, x2)

inst_98945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffff000000; valaddr_reg:x3; val_offset:296835*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296835*0 + 3*641*FLEN/8, x4, x1, x2)

inst_98946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffff800000; valaddr_reg:x3; val_offset:296838*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296838*0 + 3*642*FLEN/8, x4, x1, x2)

inst_98947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffc00000; valaddr_reg:x3; val_offset:296841*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296841*0 + 3*643*FLEN/8, x4, x1, x2)

inst_98948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffe00000; valaddr_reg:x3; val_offset:296844*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296844*0 + 3*644*FLEN/8, x4, x1, x2)

inst_98949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffff00000; valaddr_reg:x3; val_offset:296847*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296847*0 + 3*645*FLEN/8, x4, x1, x2)

inst_98950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffff80000; valaddr_reg:x3; val_offset:296850*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296850*0 + 3*646*FLEN/8, x4, x1, x2)

inst_98951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffc0000; valaddr_reg:x3; val_offset:296853*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296853*0 + 3*647*FLEN/8, x4, x1, x2)

inst_98952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffe0000; valaddr_reg:x3; val_offset:296856*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296856*0 + 3*648*FLEN/8, x4, x1, x2)

inst_98953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffff0000; valaddr_reg:x3; val_offset:296859*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296859*0 + 3*649*FLEN/8, x4, x1, x2)

inst_98954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffff8000; valaddr_reg:x3; val_offset:296862*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296862*0 + 3*650*FLEN/8, x4, x1, x2)

inst_98955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffc000; valaddr_reg:x3; val_offset:296865*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296865*0 + 3*651*FLEN/8, x4, x1, x2)

inst_98956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffe000; valaddr_reg:x3; val_offset:296868*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296868*0 + 3*652*FLEN/8, x4, x1, x2)

inst_98957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffff000; valaddr_reg:x3; val_offset:296871*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296871*0 + 3*653*FLEN/8, x4, x1, x2)

inst_98958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffff800; valaddr_reg:x3; val_offset:296874*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296874*0 + 3*654*FLEN/8, x4, x1, x2)

inst_98959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffffc00; valaddr_reg:x3; val_offset:296877*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296877*0 + 3*655*FLEN/8, x4, x1, x2)

inst_98960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffffe00; valaddr_reg:x3; val_offset:296880*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296880*0 + 3*656*FLEN/8, x4, x1, x2)

inst_98961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffff00; valaddr_reg:x3; val_offset:296883*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296883*0 + 3*657*FLEN/8, x4, x1, x2)

inst_98962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffff80; valaddr_reg:x3; val_offset:296886*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296886*0 + 3*658*FLEN/8, x4, x1, x2)

inst_98963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffffc0; valaddr_reg:x3; val_offset:296889*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296889*0 + 3*659*FLEN/8, x4, x1, x2)

inst_98964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffffe0; valaddr_reg:x3; val_offset:296892*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296892*0 + 3*660*FLEN/8, x4, x1, x2)

inst_98965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffffff0; valaddr_reg:x3; val_offset:296895*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296895*0 + 3*661*FLEN/8, x4, x1, x2)

inst_98966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffffff8; valaddr_reg:x3; val_offset:296898*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296898*0 + 3*662*FLEN/8, x4, x1, x2)

inst_98967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffffffc; valaddr_reg:x3; val_offset:296901*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296901*0 + 3*663*FLEN/8, x4, x1, x2)

inst_98968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802ffffffffffffe; valaddr_reg:x3; val_offset:296904*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296904*0 + 3*664*FLEN/8, x4, x1, x2)

inst_98969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf233966510bcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf233966510bcc; op2val:0x8000;
op3val:0x802fffffffffffff; valaddr_reg:x3; val_offset:296907*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296907*0 + 3*665*FLEN/8, x4, x1, x2)

inst_98970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:296910*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296910*0 + 3*666*FLEN/8, x4, x1, x2)

inst_98971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:296913*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296913*0 + 3*667*FLEN/8, x4, x1, x2)

inst_98972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:296916*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296916*0 + 3*668*FLEN/8, x4, x1, x2)

inst_98973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:296919*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296919*0 + 3*669*FLEN/8, x4, x1, x2)

inst_98974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:296922*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296922*0 + 3*670*FLEN/8, x4, x1, x2)

inst_98975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:296925*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296925*0 + 3*671*FLEN/8, x4, x1, x2)

inst_98976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:296928*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296928*0 + 3*672*FLEN/8, x4, x1, x2)

inst_98977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:296931*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296931*0 + 3*673*FLEN/8, x4, x1, x2)

inst_98978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:296934*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296934*0 + 3*674*FLEN/8, x4, x1, x2)

inst_98979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:296937*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296937*0 + 3*675*FLEN/8, x4, x1, x2)

inst_98980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:296940*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296940*0 + 3*676*FLEN/8, x4, x1, x2)

inst_98981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:296943*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296943*0 + 3*677*FLEN/8, x4, x1, x2)

inst_98982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:296946*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296946*0 + 3*678*FLEN/8, x4, x1, x2)

inst_98983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:296949*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296949*0 + 3*679*FLEN/8, x4, x1, x2)

inst_98984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:296952*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296952*0 + 3*680*FLEN/8, x4, x1, x2)

inst_98985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:296955*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296955*0 + 3*681*FLEN/8, x4, x1, x2)

inst_98986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:296958*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296958*0 + 3*682*FLEN/8, x4, x1, x2)

inst_98987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:296961*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296961*0 + 3*683*FLEN/8, x4, x1, x2)

inst_98988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:296964*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296964*0 + 3*684*FLEN/8, x4, x1, x2)

inst_98989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:296967*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296967*0 + 3*685*FLEN/8, x4, x1, x2)

inst_98990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:296970*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296970*0 + 3*686*FLEN/8, x4, x1, x2)

inst_98991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:296973*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296973*0 + 3*687*FLEN/8, x4, x1, x2)

inst_98992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000000000; valaddr_reg:x3; val_offset:296976*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296976*0 + 3*688*FLEN/8, x4, x1, x2)

inst_98993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000000001; valaddr_reg:x3; val_offset:296979*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296979*0 + 3*689*FLEN/8, x4, x1, x2)

inst_98994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000000003; valaddr_reg:x3; val_offset:296982*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296982*0 + 3*690*FLEN/8, x4, x1, x2)

inst_98995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000000007; valaddr_reg:x3; val_offset:296985*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296985*0 + 3*691*FLEN/8, x4, x1, x2)

inst_98996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000000000f; valaddr_reg:x3; val_offset:296988*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296988*0 + 3*692*FLEN/8, x4, x1, x2)

inst_98997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000000001f; valaddr_reg:x3; val_offset:296991*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296991*0 + 3*693*FLEN/8, x4, x1, x2)

inst_98998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000000003f; valaddr_reg:x3; val_offset:296994*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296994*0 + 3*694*FLEN/8, x4, x1, x2)

inst_98999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000000007f; valaddr_reg:x3; val_offset:296997*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 296997*0 + 3*695*FLEN/8, x4, x1, x2)

inst_99000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000000000ff; valaddr_reg:x3; val_offset:297000*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297000*0 + 3*696*FLEN/8, x4, x1, x2)

inst_99001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000000001ff; valaddr_reg:x3; val_offset:297003*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297003*0 + 3*697*FLEN/8, x4, x1, x2)

inst_99002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000000003ff; valaddr_reg:x3; val_offset:297006*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297006*0 + 3*698*FLEN/8, x4, x1, x2)

inst_99003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000000007ff; valaddr_reg:x3; val_offset:297009*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297009*0 + 3*699*FLEN/8, x4, x1, x2)

inst_99004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000000fff; valaddr_reg:x3; val_offset:297012*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297012*0 + 3*700*FLEN/8, x4, x1, x2)

inst_99005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000001fff; valaddr_reg:x3; val_offset:297015*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297015*0 + 3*701*FLEN/8, x4, x1, x2)

inst_99006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000003fff; valaddr_reg:x3; val_offset:297018*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297018*0 + 3*702*FLEN/8, x4, x1, x2)

inst_99007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000007fff; valaddr_reg:x3; val_offset:297021*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297021*0 + 3*703*FLEN/8, x4, x1, x2)

inst_99008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000000ffff; valaddr_reg:x3; val_offset:297024*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297024*0 + 3*704*FLEN/8, x4, x1, x2)

inst_99009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000001ffff; valaddr_reg:x3; val_offset:297027*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297027*0 + 3*705*FLEN/8, x4, x1, x2)

inst_99010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000003ffff; valaddr_reg:x3; val_offset:297030*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297030*0 + 3*706*FLEN/8, x4, x1, x2)

inst_99011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000007ffff; valaddr_reg:x3; val_offset:297033*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297033*0 + 3*707*FLEN/8, x4, x1, x2)

inst_99012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000000fffff; valaddr_reg:x3; val_offset:297036*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297036*0 + 3*708*FLEN/8, x4, x1, x2)

inst_99013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000001fffff; valaddr_reg:x3; val_offset:297039*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297039*0 + 3*709*FLEN/8, x4, x1, x2)

inst_99014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000003fffff; valaddr_reg:x3; val_offset:297042*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297042*0 + 3*710*FLEN/8, x4, x1, x2)

inst_99015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000007fffff; valaddr_reg:x3; val_offset:297045*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297045*0 + 3*711*FLEN/8, x4, x1, x2)

inst_99016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000000ffffff; valaddr_reg:x3; val_offset:297048*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297048*0 + 3*712*FLEN/8, x4, x1, x2)

inst_99017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000001ffffff; valaddr_reg:x3; val_offset:297051*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297051*0 + 3*713*FLEN/8, x4, x1, x2)

inst_99018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000003ffffff; valaddr_reg:x3; val_offset:297054*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297054*0 + 3*714*FLEN/8, x4, x1, x2)

inst_99019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000007ffffff; valaddr_reg:x3; val_offset:297057*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297057*0 + 3*715*FLEN/8, x4, x1, x2)

inst_99020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000000fffffff; valaddr_reg:x3; val_offset:297060*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297060*0 + 3*716*FLEN/8, x4, x1, x2)

inst_99021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000001fffffff; valaddr_reg:x3; val_offset:297063*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297063*0 + 3*717*FLEN/8, x4, x1, x2)

inst_99022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000003fffffff; valaddr_reg:x3; val_offset:297066*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297066*0 + 3*718*FLEN/8, x4, x1, x2)

inst_99023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000007fffffff; valaddr_reg:x3; val_offset:297069*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297069*0 + 3*719*FLEN/8, x4, x1, x2)

inst_99024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00000ffffffff; valaddr_reg:x3; val_offset:297072*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297072*0 + 3*720*FLEN/8, x4, x1, x2)

inst_99025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00001ffffffff; valaddr_reg:x3; val_offset:297075*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297075*0 + 3*721*FLEN/8, x4, x1, x2)

inst_99026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00003ffffffff; valaddr_reg:x3; val_offset:297078*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297078*0 + 3*722*FLEN/8, x4, x1, x2)

inst_99027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00007ffffffff; valaddr_reg:x3; val_offset:297081*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297081*0 + 3*723*FLEN/8, x4, x1, x2)

inst_99028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0000fffffffff; valaddr_reg:x3; val_offset:297084*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297084*0 + 3*724*FLEN/8, x4, x1, x2)

inst_99029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0001fffffffff; valaddr_reg:x3; val_offset:297087*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297087*0 + 3*725*FLEN/8, x4, x1, x2)

inst_99030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0003fffffffff; valaddr_reg:x3; val_offset:297090*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297090*0 + 3*726*FLEN/8, x4, x1, x2)

inst_99031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0007fffffffff; valaddr_reg:x3; val_offset:297093*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297093*0 + 3*727*FLEN/8, x4, x1, x2)

inst_99032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d000ffffffffff; valaddr_reg:x3; val_offset:297096*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297096*0 + 3*728*FLEN/8, x4, x1, x2)

inst_99033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d001ffffffffff; valaddr_reg:x3; val_offset:297099*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297099*0 + 3*729*FLEN/8, x4, x1, x2)

inst_99034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d003ffffffffff; valaddr_reg:x3; val_offset:297102*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297102*0 + 3*730*FLEN/8, x4, x1, x2)

inst_99035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d007ffffffffff; valaddr_reg:x3; val_offset:297105*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297105*0 + 3*731*FLEN/8, x4, x1, x2)

inst_99036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d00fffffffffff; valaddr_reg:x3; val_offset:297108*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297108*0 + 3*732*FLEN/8, x4, x1, x2)

inst_99037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d01fffffffffff; valaddr_reg:x3; val_offset:297111*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297111*0 + 3*733*FLEN/8, x4, x1, x2)

inst_99038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d03fffffffffff; valaddr_reg:x3; val_offset:297114*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297114*0 + 3*734*FLEN/8, x4, x1, x2)

inst_99039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d07fffffffffff; valaddr_reg:x3; val_offset:297117*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297117*0 + 3*735*FLEN/8, x4, x1, x2)

inst_99040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d0ffffffffffff; valaddr_reg:x3; val_offset:297120*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297120*0 + 3*736*FLEN/8, x4, x1, x2)

inst_99041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d1ffffffffffff; valaddr_reg:x3; val_offset:297123*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297123*0 + 3*737*FLEN/8, x4, x1, x2)

inst_99042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d3ffffffffffff; valaddr_reg:x3; val_offset:297126*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297126*0 + 3*738*FLEN/8, x4, x1, x2)

inst_99043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d7ffffffffffff; valaddr_reg:x3; val_offset:297129*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297129*0 + 3*739*FLEN/8, x4, x1, x2)

inst_99044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3d8000000000000; valaddr_reg:x3; val_offset:297132*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297132*0 + 3*740*FLEN/8, x4, x1, x2)

inst_99045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dc000000000000; valaddr_reg:x3; val_offset:297135*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297135*0 + 3*741*FLEN/8, x4, x1, x2)

inst_99046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3de000000000000; valaddr_reg:x3; val_offset:297138*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297138*0 + 3*742*FLEN/8, x4, x1, x2)

inst_99047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3df000000000000; valaddr_reg:x3; val_offset:297141*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297141*0 + 3*743*FLEN/8, x4, x1, x2)

inst_99048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3df800000000000; valaddr_reg:x3; val_offset:297144*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297144*0 + 3*744*FLEN/8, x4, x1, x2)

inst_99049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfc00000000000; valaddr_reg:x3; val_offset:297147*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297147*0 + 3*745*FLEN/8, x4, x1, x2)

inst_99050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfe00000000000; valaddr_reg:x3; val_offset:297150*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297150*0 + 3*746*FLEN/8, x4, x1, x2)

inst_99051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dff00000000000; valaddr_reg:x3; val_offset:297153*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297153*0 + 3*747*FLEN/8, x4, x1, x2)

inst_99052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dff80000000000; valaddr_reg:x3; val_offset:297156*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297156*0 + 3*748*FLEN/8, x4, x1, x2)

inst_99053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffc0000000000; valaddr_reg:x3; val_offset:297159*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297159*0 + 3*749*FLEN/8, x4, x1, x2)

inst_99054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffe0000000000; valaddr_reg:x3; val_offset:297162*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297162*0 + 3*750*FLEN/8, x4, x1, x2)

inst_99055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfff0000000000; valaddr_reg:x3; val_offset:297165*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297165*0 + 3*751*FLEN/8, x4, x1, x2)

inst_99056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfff8000000000; valaddr_reg:x3; val_offset:297168*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297168*0 + 3*752*FLEN/8, x4, x1, x2)

inst_99057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffc000000000; valaddr_reg:x3; val_offset:297171*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297171*0 + 3*753*FLEN/8, x4, x1, x2)

inst_99058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffe000000000; valaddr_reg:x3; val_offset:297174*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297174*0 + 3*754*FLEN/8, x4, x1, x2)

inst_99059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffff000000000; valaddr_reg:x3; val_offset:297177*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297177*0 + 3*755*FLEN/8, x4, x1, x2)

inst_99060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffff800000000; valaddr_reg:x3; val_offset:297180*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297180*0 + 3*756*FLEN/8, x4, x1, x2)

inst_99061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffc00000000; valaddr_reg:x3; val_offset:297183*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297183*0 + 3*757*FLEN/8, x4, x1, x2)

inst_99062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffe00000000; valaddr_reg:x3; val_offset:297186*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297186*0 + 3*758*FLEN/8, x4, x1, x2)

inst_99063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffff00000000; valaddr_reg:x3; val_offset:297189*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297189*0 + 3*759*FLEN/8, x4, x1, x2)

inst_99064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffff80000000; valaddr_reg:x3; val_offset:297192*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297192*0 + 3*760*FLEN/8, x4, x1, x2)

inst_99065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffc0000000; valaddr_reg:x3; val_offset:297195*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297195*0 + 3*761*FLEN/8, x4, x1, x2)

inst_99066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffe0000000; valaddr_reg:x3; val_offset:297198*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297198*0 + 3*762*FLEN/8, x4, x1, x2)

inst_99067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffff0000000; valaddr_reg:x3; val_offset:297201*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297201*0 + 3*763*FLEN/8, x4, x1, x2)

inst_99068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffff8000000; valaddr_reg:x3; val_offset:297204*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297204*0 + 3*764*FLEN/8, x4, x1, x2)

inst_99069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffc000000; valaddr_reg:x3; val_offset:297207*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297207*0 + 3*765*FLEN/8, x4, x1, x2)

inst_99070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffe000000; valaddr_reg:x3; val_offset:297210*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297210*0 + 3*766*FLEN/8, x4, x1, x2)

inst_99071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffff000000; valaddr_reg:x3; val_offset:297213*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297213*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6894738581030807822,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186176,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186177,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186179,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186183,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186191,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186207,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186239,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186303,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186431,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507186687,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507187199,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507188223,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507190271,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507194367,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507202559,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507218943,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507251711,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507317247,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507448319,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498507710463,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498508234751,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498509283327,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498511380479,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498515574783,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498523963391,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498540740607,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498574295039,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498641403903,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640498775621631,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640499044057087,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640499580927999,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640500654669823,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640502802153471,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640507097120767,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640515687055359,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640532866924543,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640567226662911,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640635946139647,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312640773385093119,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312641048263000063,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312641598018813951,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312642697530441727,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312644896553697279,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312649294600208383,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312658090693230591,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312675682879275007,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312710867251363839,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312781235995541503,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13312921973483896831,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13313203448460607487,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13313766398414028799,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13314892298320871423,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13314892298320871424,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13316018198227714048,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13316581148181135360,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13316862623157846016,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317003360646201344,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317073729390379008,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317108913762467840,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317126505948512256,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317135302041534464,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317139700088045568,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317141899111301120,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317142998622928896,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317143548378742784,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317143823256649728,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317143960695603200,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144029415079936,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144063774818304,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144080954687488,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144089544622080,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144093839589376,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144095987073024,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144097060814848,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144097597685760,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144097866121216,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098000338944,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098067447808,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098101002240,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098117779456,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098126168064,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098130362368,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098132459520,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098133508096,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134032384,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134294528,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134425600,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134491136,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134523904,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134540288,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134548480,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134552576,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134554624,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134555648,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556160,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556416,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556544,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556608,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556640,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556656,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556664,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556668,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556670,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13317144098134556671,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894738980602039406,64,FLEN)
NAN_BOXED(11511340908377071061,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815680,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815681,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815683,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815687,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815695,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815711,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815743,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815807,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879815935,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879816191,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879816703,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879817727,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879819775,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879823871,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879832063,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879848447,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879881215,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898879946751,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898880077823,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898880339967,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898880864255,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898881912831,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898884009983,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898888204287,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898896592895,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898913370111,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136898946924543,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136899014033407,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136899148251135,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136899416686591,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136899953557503,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136901027299327,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136903174782975,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136907469750271,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136916059684863,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136933239554047,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308136967599292415,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308137036318769151,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308137173757722623,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308137448635629567,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308137998391443455,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308139097903071231,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308141296926326783,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308145694972837887,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308154491065860095,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308172083251904511,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308207267623993343,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308277636368171007,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308418373856526335,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13308699848833236991,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13309262798786658303,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13310388698693500927,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13310388698693500928,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13311514598600343552,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312077548553764864,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312359023530475520,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312499761018830848,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312570129763008512,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312605314135097344,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312622906321141760,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312631702414163968,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312636100460675072,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312638299483930624,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312639398995558400,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312639948751372288,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640223629279232,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640361068232704,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640429787709440,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640464147447808,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640481327316992,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640489917251584,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640494212218880,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640496359702528,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640497433444352,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640497970315264,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498238750720,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498372968448,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498440077312,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498473631744,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498490408960,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498498797568,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498502991872,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498505089024,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498506137600,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498506661888,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498506924032,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507055104,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507120640,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507153408,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507169792,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507177984,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507182080,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507184128,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507185152,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507185664,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507185920,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186048,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186112,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186144,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186160,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186168,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186172,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186174,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13312640498507186175,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(11511340828064277035,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887744,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887745,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887747,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887751,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887759,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887775,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887807,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887871,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841887999,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841888255,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841888767,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841889791,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841891839,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841895935,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841904127,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841920511,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304841953279,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304842018815,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304842149887,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304842412031,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304842936319,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304843984895,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304846082047,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304850276351,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304858664959,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304875442175,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304908996607,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079304976105471,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079305110323199,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079305378758655,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079305915629567,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079306989371391,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079309136855039,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079313431822335,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079322021756927,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079339201626111,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079373561364479,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079442280841215,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079579719794687,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236079854597701631,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236080404353515519,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236081503865143295,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236083702888398847,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236088100934909951,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236096897027932159,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236114489213976575,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236149673586065407,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236220042330243071,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236360779818598399,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13236642254795309055,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13237205204748730367,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13238331104655572991,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13238331104655572992,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13239457004562415616,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240019954515836928,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240301429492547584,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240442166980902912,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240512535725080576,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240547720097169408,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240565312283213824,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240574108376236032,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240578506422747136,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240580705446002688,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240581804957630464,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582354713444352,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582629591351296,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582767030304768,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582835749781504,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582870109519872,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582887289389056,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582895879323648,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582900174290944,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582902321774592,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582903395516416,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582903932387328,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904200822784,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904335040512,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904402149376,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904435703808,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904452481024,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904460869632,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904465063936,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904467161088,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904468209664,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904468733952,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904468996096,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469127168,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469192704,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469225472,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469241856,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469250048,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469254144,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469256192,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469257216,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469257728,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469257984,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258112,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258176,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258208,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258224,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258232,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258236,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258238,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13240582904469258239,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(11511338670683590272,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449344,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449345,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449347,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449351,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449359,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449375,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449407,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449471,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449599,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449855,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467450367,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467451391,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467453439,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467457535,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467465727,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467482111,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467514879,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467580415,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467711487,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467973631,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385468497919,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385469546495,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385471643647,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385475837951,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385484226559,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385501003775,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385534558207,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385601667071,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385735884799,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640386004320255,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640386541191167,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640387614932991,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640389762416639,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640394057383935,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640402647318527,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640419827187711,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640454186926079,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640522906402815,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640660345356287,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640935223263231,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175641484979077119,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175642584490704895,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175644783513960447,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175649181560471551,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175657977653493759,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175675569839538175,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175710754211627007,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175781122955804671,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175921860444159999,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(176203335420870655,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(176766285374291967,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(177892185281134591,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(177892185281134592,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(179018085187977216,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(179581035141398528,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(179862510118109184,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180003247606464512,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180073616350642176,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180108800722731008,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180126392908775424,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180135189001797632,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180139587048308736,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180141786071564288,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180142885583192064,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143435339005952,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143710216912896,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143847655866368,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143916375343104,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143950735081472,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143967914950656,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143976504885248,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143980799852544,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143982947336192,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984021078016,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984557948928,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984826384384,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984960602112,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985027710976,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985061265408,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985078042624,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985086431232,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985090625536,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985092722688,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985093771264,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094295552,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094557696,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094688768,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094754304,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094787072,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094803456,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094811648,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094815744,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094817792,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094818816,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819328,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819584,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819712,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819776,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819808,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819824,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819832,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819836,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819838,64,FLEN)
NAN_BOXED(6894762083653665521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819839,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516800,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516801,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516803,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516807,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516815,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516831,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516863,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516927,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517055,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517311,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517823,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109518847,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109520895,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109524991,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109533183,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109549567,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109582335,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109647871,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109778943,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236110041087,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236110565375,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236111613951,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236113711103,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236117905407,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236126294015,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236143071231,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236176625663,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236243734527,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236377952255,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236646387711,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379237183258623,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379238257000447,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379240404484095,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379244699451391,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379253289385983,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379270469255167,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379304828993535,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379373548470271,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379510987423743,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379785865330687,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232380335621144575,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232381435132772351,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232383634156027903,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232388032202539007,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232396828295561215,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232414420481605631,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232449604853694463,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232519973597872127,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232660711086227455,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232942186062938111,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9233505136016359423,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9234631035923202047,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9234631035923202048,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9235756935830044672,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236319885783465984,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236601360760176640,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236742098248531968,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236812466992709632,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236847651364798464,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236865243550842880,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236874039643865088,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236878437690376192,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236880636713631744,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236881736225259520,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882285981073408,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882560858980352,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882698297933824,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882767017410560,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882801377148928,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882818557018112,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882827146952704,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882831441920000,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882833589403648,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882834663145472,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835200016384,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835468451840,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835602669568,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835669778432,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835703332864,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835720110080,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835728498688,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835732692992,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835734790144,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835735838720,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736363008,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736625152,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736756224,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736821760,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736854528,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736870912,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736879104,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736883200,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736885248,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886272,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886784,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887040,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887168,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887232,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887264,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887280,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887288,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887292,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887294,64,FLEN)
NAN_BOXED(6894768283964214220,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887295,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600256,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600257,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600259,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600263,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600271,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600287,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600319,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600383,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600511,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600767,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269601279,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269602303,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269604351,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269608447,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269616639,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269633023,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269665791,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269731327,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269862399,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270124543,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270648831,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577271697407,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577273794559,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577277988863,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577286377471,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577303154687,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577336709119,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577403817983,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577538035711,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577806471167,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719578343342079,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719579417083903,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719581564567551,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719585859534847,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719594449469439,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719611629338623,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719645989076991,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719714708553727,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719852147507199,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720127025414143,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720676781228031,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274721776292855807,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274723975316111359,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274728373362622463,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274737169455644671,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274754761641689087,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274789946013777919,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274860314757955583,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275001052246310911,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275282527223021567,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275845477176442879,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285503,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285504,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278097276990128128,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278660226943549440,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278941701920260096,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279082439408615424,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279152808152793088,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279187992524881920,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279205584710926336,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279214380803948544,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279218778850459648,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279220977873715200,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222077385342976,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222627141156864,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222902019063808,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223039458017280,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223108177494016,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223142537232384,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223159717101568,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223168307036160,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223172602003456,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223174749487104,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223175823228928,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176360099840,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176628535296,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176762753024,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176829861888,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176863416320,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176880193536,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
