
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_94464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:283392*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283392*0 + 3*0*FLEN/8, x4, x1, x2)

inst_94465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:283395*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283395*0 + 3*1*FLEN/8, x4, x1, x2)

inst_94466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:283398*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283398*0 + 3*2*FLEN/8, x4, x1, x2)

inst_94467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:283401*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283401*0 + 3*3*FLEN/8, x4, x1, x2)

inst_94468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000000000; valaddr_reg:x3; val_offset:283404*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283404*0 + 3*4*FLEN/8, x4, x1, x2)

inst_94469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000000001; valaddr_reg:x3; val_offset:283407*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283407*0 + 3*5*FLEN/8, x4, x1, x2)

inst_94470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000000003; valaddr_reg:x3; val_offset:283410*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283410*0 + 3*6*FLEN/8, x4, x1, x2)

inst_94471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000000007; valaddr_reg:x3; val_offset:283413*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283413*0 + 3*7*FLEN/8, x4, x1, x2)

inst_94472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000000000f; valaddr_reg:x3; val_offset:283416*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283416*0 + 3*8*FLEN/8, x4, x1, x2)

inst_94473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000000001f; valaddr_reg:x3; val_offset:283419*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283419*0 + 3*9*FLEN/8, x4, x1, x2)

inst_94474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000000003f; valaddr_reg:x3; val_offset:283422*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283422*0 + 3*10*FLEN/8, x4, x1, x2)

inst_94475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000000007f; valaddr_reg:x3; val_offset:283425*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283425*0 + 3*11*FLEN/8, x4, x1, x2)

inst_94476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000000000ff; valaddr_reg:x3; val_offset:283428*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283428*0 + 3*12*FLEN/8, x4, x1, x2)

inst_94477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000000001ff; valaddr_reg:x3; val_offset:283431*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283431*0 + 3*13*FLEN/8, x4, x1, x2)

inst_94478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000000003ff; valaddr_reg:x3; val_offset:283434*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283434*0 + 3*14*FLEN/8, x4, x1, x2)

inst_94479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000000007ff; valaddr_reg:x3; val_offset:283437*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283437*0 + 3*15*FLEN/8, x4, x1, x2)

inst_94480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000000fff; valaddr_reg:x3; val_offset:283440*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283440*0 + 3*16*FLEN/8, x4, x1, x2)

inst_94481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000001fff; valaddr_reg:x3; val_offset:283443*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283443*0 + 3*17*FLEN/8, x4, x1, x2)

inst_94482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000003fff; valaddr_reg:x3; val_offset:283446*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283446*0 + 3*18*FLEN/8, x4, x1, x2)

inst_94483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000007fff; valaddr_reg:x3; val_offset:283449*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283449*0 + 3*19*FLEN/8, x4, x1, x2)

inst_94484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000000ffff; valaddr_reg:x3; val_offset:283452*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283452*0 + 3*20*FLEN/8, x4, x1, x2)

inst_94485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000001ffff; valaddr_reg:x3; val_offset:283455*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283455*0 + 3*21*FLEN/8, x4, x1, x2)

inst_94486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000003ffff; valaddr_reg:x3; val_offset:283458*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283458*0 + 3*22*FLEN/8, x4, x1, x2)

inst_94487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000007ffff; valaddr_reg:x3; val_offset:283461*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283461*0 + 3*23*FLEN/8, x4, x1, x2)

inst_94488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000000fffff; valaddr_reg:x3; val_offset:283464*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283464*0 + 3*24*FLEN/8, x4, x1, x2)

inst_94489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000001fffff; valaddr_reg:x3; val_offset:283467*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283467*0 + 3*25*FLEN/8, x4, x1, x2)

inst_94490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000003fffff; valaddr_reg:x3; val_offset:283470*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283470*0 + 3*26*FLEN/8, x4, x1, x2)

inst_94491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000007fffff; valaddr_reg:x3; val_offset:283473*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283473*0 + 3*27*FLEN/8, x4, x1, x2)

inst_94492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000000ffffff; valaddr_reg:x3; val_offset:283476*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283476*0 + 3*28*FLEN/8, x4, x1, x2)

inst_94493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000001ffffff; valaddr_reg:x3; val_offset:283479*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283479*0 + 3*29*FLEN/8, x4, x1, x2)

inst_94494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000003ffffff; valaddr_reg:x3; val_offset:283482*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283482*0 + 3*30*FLEN/8, x4, x1, x2)

inst_94495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000007ffffff; valaddr_reg:x3; val_offset:283485*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283485*0 + 3*31*FLEN/8, x4, x1, x2)

inst_94496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000000fffffff; valaddr_reg:x3; val_offset:283488*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283488*0 + 3*32*FLEN/8, x4, x1, x2)

inst_94497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000001fffffff; valaddr_reg:x3; val_offset:283491*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283491*0 + 3*33*FLEN/8, x4, x1, x2)

inst_94498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000003fffffff; valaddr_reg:x3; val_offset:283494*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283494*0 + 3*34*FLEN/8, x4, x1, x2)

inst_94499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000007fffffff; valaddr_reg:x3; val_offset:283497*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283497*0 + 3*35*FLEN/8, x4, x1, x2)

inst_94500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000000ffffffff; valaddr_reg:x3; val_offset:283500*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283500*0 + 3*36*FLEN/8, x4, x1, x2)

inst_94501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000001ffffffff; valaddr_reg:x3; val_offset:283503*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283503*0 + 3*37*FLEN/8, x4, x1, x2)

inst_94502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000003ffffffff; valaddr_reg:x3; val_offset:283506*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283506*0 + 3*38*FLEN/8, x4, x1, x2)

inst_94503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000007ffffffff; valaddr_reg:x3; val_offset:283509*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283509*0 + 3*39*FLEN/8, x4, x1, x2)

inst_94504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300000fffffffff; valaddr_reg:x3; val_offset:283512*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283512*0 + 3*40*FLEN/8, x4, x1, x2)

inst_94505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300001fffffffff; valaddr_reg:x3; val_offset:283515*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283515*0 + 3*41*FLEN/8, x4, x1, x2)

inst_94506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300003fffffffff; valaddr_reg:x3; val_offset:283518*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283518*0 + 3*42*FLEN/8, x4, x1, x2)

inst_94507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300007fffffffff; valaddr_reg:x3; val_offset:283521*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283521*0 + 3*43*FLEN/8, x4, x1, x2)

inst_94508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830000ffffffffff; valaddr_reg:x3; val_offset:283524*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283524*0 + 3*44*FLEN/8, x4, x1, x2)

inst_94509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830001ffffffffff; valaddr_reg:x3; val_offset:283527*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283527*0 + 3*45*FLEN/8, x4, x1, x2)

inst_94510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830003ffffffffff; valaddr_reg:x3; val_offset:283530*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283530*0 + 3*46*FLEN/8, x4, x1, x2)

inst_94511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830007ffffffffff; valaddr_reg:x3; val_offset:283533*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283533*0 + 3*47*FLEN/8, x4, x1, x2)

inst_94512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83000fffffffffff; valaddr_reg:x3; val_offset:283536*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283536*0 + 3*48*FLEN/8, x4, x1, x2)

inst_94513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83001fffffffffff; valaddr_reg:x3; val_offset:283539*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283539*0 + 3*49*FLEN/8, x4, x1, x2)

inst_94514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83003fffffffffff; valaddr_reg:x3; val_offset:283542*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283542*0 + 3*50*FLEN/8, x4, x1, x2)

inst_94515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x83007fffffffffff; valaddr_reg:x3; val_offset:283545*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283545*0 + 3*51*FLEN/8, x4, x1, x2)

inst_94516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8300ffffffffffff; valaddr_reg:x3; val_offset:283548*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283548*0 + 3*52*FLEN/8, x4, x1, x2)

inst_94517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8301ffffffffffff; valaddr_reg:x3; val_offset:283551*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283551*0 + 3*53*FLEN/8, x4, x1, x2)

inst_94518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8303ffffffffffff; valaddr_reg:x3; val_offset:283554*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283554*0 + 3*54*FLEN/8, x4, x1, x2)

inst_94519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8307ffffffffffff; valaddr_reg:x3; val_offset:283557*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283557*0 + 3*55*FLEN/8, x4, x1, x2)

inst_94520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8308000000000000; valaddr_reg:x3; val_offset:283560*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283560*0 + 3*56*FLEN/8, x4, x1, x2)

inst_94521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830c000000000000; valaddr_reg:x3; val_offset:283563*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283563*0 + 3*57*FLEN/8, x4, x1, x2)

inst_94522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830e000000000000; valaddr_reg:x3; val_offset:283566*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283566*0 + 3*58*FLEN/8, x4, x1, x2)

inst_94523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830f000000000000; valaddr_reg:x3; val_offset:283569*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283569*0 + 3*59*FLEN/8, x4, x1, x2)

inst_94524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830f800000000000; valaddr_reg:x3; val_offset:283572*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283572*0 + 3*60*FLEN/8, x4, x1, x2)

inst_94525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fc00000000000; valaddr_reg:x3; val_offset:283575*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283575*0 + 3*61*FLEN/8, x4, x1, x2)

inst_94526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fe00000000000; valaddr_reg:x3; val_offset:283578*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283578*0 + 3*62*FLEN/8, x4, x1, x2)

inst_94527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ff00000000000; valaddr_reg:x3; val_offset:283581*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283581*0 + 3*63*FLEN/8, x4, x1, x2)

inst_94528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ff80000000000; valaddr_reg:x3; val_offset:283584*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283584*0 + 3*64*FLEN/8, x4, x1, x2)

inst_94529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffc0000000000; valaddr_reg:x3; val_offset:283587*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283587*0 + 3*65*FLEN/8, x4, x1, x2)

inst_94530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffe0000000000; valaddr_reg:x3; val_offset:283590*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283590*0 + 3*66*FLEN/8, x4, x1, x2)

inst_94531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fff0000000000; valaddr_reg:x3; val_offset:283593*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283593*0 + 3*67*FLEN/8, x4, x1, x2)

inst_94532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fff8000000000; valaddr_reg:x3; val_offset:283596*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283596*0 + 3*68*FLEN/8, x4, x1, x2)

inst_94533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffc000000000; valaddr_reg:x3; val_offset:283599*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283599*0 + 3*69*FLEN/8, x4, x1, x2)

inst_94534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffe000000000; valaddr_reg:x3; val_offset:283602*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283602*0 + 3*70*FLEN/8, x4, x1, x2)

inst_94535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffff000000000; valaddr_reg:x3; val_offset:283605*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283605*0 + 3*71*FLEN/8, x4, x1, x2)

inst_94536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffff800000000; valaddr_reg:x3; val_offset:283608*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283608*0 + 3*72*FLEN/8, x4, x1, x2)

inst_94537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffc00000000; valaddr_reg:x3; val_offset:283611*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283611*0 + 3*73*FLEN/8, x4, x1, x2)

inst_94538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffe00000000; valaddr_reg:x3; val_offset:283614*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283614*0 + 3*74*FLEN/8, x4, x1, x2)

inst_94539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffff00000000; valaddr_reg:x3; val_offset:283617*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283617*0 + 3*75*FLEN/8, x4, x1, x2)

inst_94540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffff80000000; valaddr_reg:x3; val_offset:283620*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283620*0 + 3*76*FLEN/8, x4, x1, x2)

inst_94541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffc0000000; valaddr_reg:x3; val_offset:283623*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283623*0 + 3*77*FLEN/8, x4, x1, x2)

inst_94542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffe0000000; valaddr_reg:x3; val_offset:283626*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283626*0 + 3*78*FLEN/8, x4, x1, x2)

inst_94543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffff0000000; valaddr_reg:x3; val_offset:283629*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283629*0 + 3*79*FLEN/8, x4, x1, x2)

inst_94544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffff8000000; valaddr_reg:x3; val_offset:283632*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283632*0 + 3*80*FLEN/8, x4, x1, x2)

inst_94545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffc000000; valaddr_reg:x3; val_offset:283635*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283635*0 + 3*81*FLEN/8, x4, x1, x2)

inst_94546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffe000000; valaddr_reg:x3; val_offset:283638*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283638*0 + 3*82*FLEN/8, x4, x1, x2)

inst_94547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffff000000; valaddr_reg:x3; val_offset:283641*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283641*0 + 3*83*FLEN/8, x4, x1, x2)

inst_94548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffff800000; valaddr_reg:x3; val_offset:283644*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283644*0 + 3*84*FLEN/8, x4, x1, x2)

inst_94549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffc00000; valaddr_reg:x3; val_offset:283647*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283647*0 + 3*85*FLEN/8, x4, x1, x2)

inst_94550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffe00000; valaddr_reg:x3; val_offset:283650*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283650*0 + 3*86*FLEN/8, x4, x1, x2)

inst_94551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffff00000; valaddr_reg:x3; val_offset:283653*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283653*0 + 3*87*FLEN/8, x4, x1, x2)

inst_94552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffff80000; valaddr_reg:x3; val_offset:283656*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283656*0 + 3*88*FLEN/8, x4, x1, x2)

inst_94553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffc0000; valaddr_reg:x3; val_offset:283659*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283659*0 + 3*89*FLEN/8, x4, x1, x2)

inst_94554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffe0000; valaddr_reg:x3; val_offset:283662*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283662*0 + 3*90*FLEN/8, x4, x1, x2)

inst_94555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffff0000; valaddr_reg:x3; val_offset:283665*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283665*0 + 3*91*FLEN/8, x4, x1, x2)

inst_94556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffff8000; valaddr_reg:x3; val_offset:283668*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283668*0 + 3*92*FLEN/8, x4, x1, x2)

inst_94557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffc000; valaddr_reg:x3; val_offset:283671*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283671*0 + 3*93*FLEN/8, x4, x1, x2)

inst_94558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffe000; valaddr_reg:x3; val_offset:283674*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283674*0 + 3*94*FLEN/8, x4, x1, x2)

inst_94559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffff000; valaddr_reg:x3; val_offset:283677*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283677*0 + 3*95*FLEN/8, x4, x1, x2)

inst_94560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffff800; valaddr_reg:x3; val_offset:283680*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283680*0 + 3*96*FLEN/8, x4, x1, x2)

inst_94561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffffc00; valaddr_reg:x3; val_offset:283683*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283683*0 + 3*97*FLEN/8, x4, x1, x2)

inst_94562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffffe00; valaddr_reg:x3; val_offset:283686*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283686*0 + 3*98*FLEN/8, x4, x1, x2)

inst_94563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffff00; valaddr_reg:x3; val_offset:283689*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283689*0 + 3*99*FLEN/8, x4, x1, x2)

inst_94564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffff80; valaddr_reg:x3; val_offset:283692*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283692*0 + 3*100*FLEN/8, x4, x1, x2)

inst_94565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffffc0; valaddr_reg:x3; val_offset:283695*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283695*0 + 3*101*FLEN/8, x4, x1, x2)

inst_94566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffffe0; valaddr_reg:x3; val_offset:283698*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283698*0 + 3*102*FLEN/8, x4, x1, x2)

inst_94567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffffff0; valaddr_reg:x3; val_offset:283701*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283701*0 + 3*103*FLEN/8, x4, x1, x2)

inst_94568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffffff8; valaddr_reg:x3; val_offset:283704*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283704*0 + 3*104*FLEN/8, x4, x1, x2)

inst_94569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffffffc; valaddr_reg:x3; val_offset:283707*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283707*0 + 3*105*FLEN/8, x4, x1, x2)

inst_94570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830ffffffffffffe; valaddr_reg:x3; val_offset:283710*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283710*0 + 3*106*FLEN/8, x4, x1, x2)

inst_94571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x830fffffffffffff; valaddr_reg:x3; val_offset:283713*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283713*0 + 3*107*FLEN/8, x4, x1, x2)

inst_94572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:283716*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283716*0 + 3*108*FLEN/8, x4, x1, x2)

inst_94573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:283719*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283719*0 + 3*109*FLEN/8, x4, x1, x2)

inst_94574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:283722*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283722*0 + 3*110*FLEN/8, x4, x1, x2)

inst_94575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:283725*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283725*0 + 3*111*FLEN/8, x4, x1, x2)

inst_94576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:283728*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283728*0 + 3*112*FLEN/8, x4, x1, x2)

inst_94577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:283731*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283731*0 + 3*113*FLEN/8, x4, x1, x2)

inst_94578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:283734*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283734*0 + 3*114*FLEN/8, x4, x1, x2)

inst_94579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:283737*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283737*0 + 3*115*FLEN/8, x4, x1, x2)

inst_94580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:283740*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283740*0 + 3*116*FLEN/8, x4, x1, x2)

inst_94581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:283743*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283743*0 + 3*117*FLEN/8, x4, x1, x2)

inst_94582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:283746*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283746*0 + 3*118*FLEN/8, x4, x1, x2)

inst_94583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:283749*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283749*0 + 3*119*FLEN/8, x4, x1, x2)

inst_94584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:283752*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283752*0 + 3*120*FLEN/8, x4, x1, x2)

inst_94585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:283755*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283755*0 + 3*121*FLEN/8, x4, x1, x2)

inst_94586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:283758*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283758*0 + 3*122*FLEN/8, x4, x1, x2)

inst_94587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:283761*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283761*0 + 3*123*FLEN/8, x4, x1, x2)

inst_94588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:283764*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283764*0 + 3*124*FLEN/8, x4, x1, x2)

inst_94589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:283767*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283767*0 + 3*125*FLEN/8, x4, x1, x2)

inst_94590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:283770*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283770*0 + 3*126*FLEN/8, x4, x1, x2)

inst_94591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:283773*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283773*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_94592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:283776*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283776*0 + 3*128*FLEN/8, x4, x1, x2)

inst_94593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:283779*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283779*0 + 3*129*FLEN/8, x4, x1, x2)

inst_94594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:283782*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283782*0 + 3*130*FLEN/8, x4, x1, x2)

inst_94595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:283785*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283785*0 + 3*131*FLEN/8, x4, x1, x2)

inst_94596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:283788*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283788*0 + 3*132*FLEN/8, x4, x1, x2)

inst_94597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:283791*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283791*0 + 3*133*FLEN/8, x4, x1, x2)

inst_94598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:283794*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283794*0 + 3*134*FLEN/8, x4, x1, x2)

inst_94599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:283797*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283797*0 + 3*135*FLEN/8, x4, x1, x2)

inst_94600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:283800*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283800*0 + 3*136*FLEN/8, x4, x1, x2)

inst_94601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:283803*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283803*0 + 3*137*FLEN/8, x4, x1, x2)

inst_94602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:283806*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283806*0 + 3*138*FLEN/8, x4, x1, x2)

inst_94603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:283809*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283809*0 + 3*139*FLEN/8, x4, x1, x2)

inst_94604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:283812*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283812*0 + 3*140*FLEN/8, x4, x1, x2)

inst_94605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:283815*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283815*0 + 3*141*FLEN/8, x4, x1, x2)

inst_94606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:283818*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283818*0 + 3*142*FLEN/8, x4, x1, x2)

inst_94607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:283821*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283821*0 + 3*143*FLEN/8, x4, x1, x2)

inst_94608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:283824*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283824*0 + 3*144*FLEN/8, x4, x1, x2)

inst_94609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:283827*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283827*0 + 3*145*FLEN/8, x4, x1, x2)

inst_94610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:283830*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283830*0 + 3*146*FLEN/8, x4, x1, x2)

inst_94611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:283833*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283833*0 + 3*147*FLEN/8, x4, x1, x2)

inst_94612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:283836*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283836*0 + 3*148*FLEN/8, x4, x1, x2)

inst_94613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:283839*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283839*0 + 3*149*FLEN/8, x4, x1, x2)

inst_94614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:283842*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283842*0 + 3*150*FLEN/8, x4, x1, x2)

inst_94615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:283845*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283845*0 + 3*151*FLEN/8, x4, x1, x2)

inst_94616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:283848*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283848*0 + 3*152*FLEN/8, x4, x1, x2)

inst_94617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:283851*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283851*0 + 3*153*FLEN/8, x4, x1, x2)

inst_94618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:283854*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283854*0 + 3*154*FLEN/8, x4, x1, x2)

inst_94619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:283857*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283857*0 + 3*155*FLEN/8, x4, x1, x2)

inst_94620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:283860*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283860*0 + 3*156*FLEN/8, x4, x1, x2)

inst_94621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:283863*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283863*0 + 3*157*FLEN/8, x4, x1, x2)

inst_94622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:283866*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283866*0 + 3*158*FLEN/8, x4, x1, x2)

inst_94623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:283869*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283869*0 + 3*159*FLEN/8, x4, x1, x2)

inst_94624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:283872*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283872*0 + 3*160*FLEN/8, x4, x1, x2)

inst_94625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:283875*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283875*0 + 3*161*FLEN/8, x4, x1, x2)

inst_94626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:283878*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283878*0 + 3*162*FLEN/8, x4, x1, x2)

inst_94627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:283881*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283881*0 + 3*163*FLEN/8, x4, x1, x2)

inst_94628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:283884*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283884*0 + 3*164*FLEN/8, x4, x1, x2)

inst_94629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:283887*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283887*0 + 3*165*FLEN/8, x4, x1, x2)

inst_94630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:283890*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283890*0 + 3*166*FLEN/8, x4, x1, x2)

inst_94631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:283893*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283893*0 + 3*167*FLEN/8, x4, x1, x2)

inst_94632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:283896*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283896*0 + 3*168*FLEN/8, x4, x1, x2)

inst_94633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:283899*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283899*0 + 3*169*FLEN/8, x4, x1, x2)

inst_94634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:283902*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283902*0 + 3*170*FLEN/8, x4, x1, x2)

inst_94635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:283905*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283905*0 + 3*171*FLEN/8, x4, x1, x2)

inst_94636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:283908*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283908*0 + 3*172*FLEN/8, x4, x1, x2)

inst_94637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:283911*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283911*0 + 3*173*FLEN/8, x4, x1, x2)

inst_94638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:283914*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283914*0 + 3*174*FLEN/8, x4, x1, x2)

inst_94639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:283917*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283917*0 + 3*175*FLEN/8, x4, x1, x2)

inst_94640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:283920*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283920*0 + 3*176*FLEN/8, x4, x1, x2)

inst_94641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:283923*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283923*0 + 3*177*FLEN/8, x4, x1, x2)

inst_94642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:283926*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283926*0 + 3*178*FLEN/8, x4, x1, x2)

inst_94643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:283929*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283929*0 + 3*179*FLEN/8, x4, x1, x2)

inst_94644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:283932*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283932*0 + 3*180*FLEN/8, x4, x1, x2)

inst_94645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:283935*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283935*0 + 3*181*FLEN/8, x4, x1, x2)

inst_94646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:283938*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283938*0 + 3*182*FLEN/8, x4, x1, x2)

inst_94647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:283941*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283941*0 + 3*183*FLEN/8, x4, x1, x2)

inst_94648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:283944*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283944*0 + 3*184*FLEN/8, x4, x1, x2)

inst_94649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:283947*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283947*0 + 3*185*FLEN/8, x4, x1, x2)

inst_94650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:283950*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283950*0 + 3*186*FLEN/8, x4, x1, x2)

inst_94651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:283953*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283953*0 + 3*187*FLEN/8, x4, x1, x2)

inst_94652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:283956*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283956*0 + 3*188*FLEN/8, x4, x1, x2)

inst_94653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:283959*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283959*0 + 3*189*FLEN/8, x4, x1, x2)

inst_94654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:283962*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283962*0 + 3*190*FLEN/8, x4, x1, x2)

inst_94655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:283965*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283965*0 + 3*191*FLEN/8, x4, x1, x2)

inst_94656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:283968*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283968*0 + 3*192*FLEN/8, x4, x1, x2)

inst_94657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:283971*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283971*0 + 3*193*FLEN/8, x4, x1, x2)

inst_94658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:283974*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283974*0 + 3*194*FLEN/8, x4, x1, x2)

inst_94659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:283977*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283977*0 + 3*195*FLEN/8, x4, x1, x2)

inst_94660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:283980*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283980*0 + 3*196*FLEN/8, x4, x1, x2)

inst_94661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:283983*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283983*0 + 3*197*FLEN/8, x4, x1, x2)

inst_94662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:283986*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283986*0 + 3*198*FLEN/8, x4, x1, x2)

inst_94663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:283989*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283989*0 + 3*199*FLEN/8, x4, x1, x2)

inst_94664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:283992*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283992*0 + 3*200*FLEN/8, x4, x1, x2)

inst_94665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:283995*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283995*0 + 3*201*FLEN/8, x4, x1, x2)

inst_94666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:283998*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283998*0 + 3*202*FLEN/8, x4, x1, x2)

inst_94667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:284001*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284001*0 + 3*203*FLEN/8, x4, x1, x2)

inst_94668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:284004*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284004*0 + 3*204*FLEN/8, x4, x1, x2)

inst_94669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:284007*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284007*0 + 3*205*FLEN/8, x4, x1, x2)

inst_94670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:284010*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284010*0 + 3*206*FLEN/8, x4, x1, x2)

inst_94671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:284013*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284013*0 + 3*207*FLEN/8, x4, x1, x2)

inst_94672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:284016*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284016*0 + 3*208*FLEN/8, x4, x1, x2)

inst_94673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:284019*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284019*0 + 3*209*FLEN/8, x4, x1, x2)

inst_94674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:284022*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284022*0 + 3*210*FLEN/8, x4, x1, x2)

inst_94675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:284025*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284025*0 + 3*211*FLEN/8, x4, x1, x2)

inst_94676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:284028*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284028*0 + 3*212*FLEN/8, x4, x1, x2)

inst_94677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:284031*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284031*0 + 3*213*FLEN/8, x4, x1, x2)

inst_94678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:284034*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284034*0 + 3*214*FLEN/8, x4, x1, x2)

inst_94679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:284037*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284037*0 + 3*215*FLEN/8, x4, x1, x2)

inst_94680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:284040*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284040*0 + 3*216*FLEN/8, x4, x1, x2)

inst_94681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:284043*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284043*0 + 3*217*FLEN/8, x4, x1, x2)

inst_94682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:284046*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284046*0 + 3*218*FLEN/8, x4, x1, x2)

inst_94683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:284049*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284049*0 + 3*219*FLEN/8, x4, x1, x2)

inst_94684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:284052*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284052*0 + 3*220*FLEN/8, x4, x1, x2)

inst_94685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:284055*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284055*0 + 3*221*FLEN/8, x4, x1, x2)

inst_94686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:284058*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284058*0 + 3*222*FLEN/8, x4, x1, x2)

inst_94687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:284061*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284061*0 + 3*223*FLEN/8, x4, x1, x2)

inst_94688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:284064*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284064*0 + 3*224*FLEN/8, x4, x1, x2)

inst_94689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffff00; valaddr_reg:x3; val_offset:284067*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284067*0 + 3*225*FLEN/8, x4, x1, x2)

inst_94690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffff80; valaddr_reg:x3; val_offset:284070*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284070*0 + 3*226*FLEN/8, x4, x1, x2)

inst_94691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:284073*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284073*0 + 3*227*FLEN/8, x4, x1, x2)

inst_94692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:284076*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284076*0 + 3*228*FLEN/8, x4, x1, x2)

inst_94693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffffff0; valaddr_reg:x3; val_offset:284079*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284079*0 + 3*229*FLEN/8, x4, x1, x2)

inst_94694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffffff8; valaddr_reg:x3; val_offset:284082*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284082*0 + 3*230*FLEN/8, x4, x1, x2)

inst_94695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:284085*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284085*0 + 3*231*FLEN/8, x4, x1, x2)

inst_94696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:284088*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284088*0 + 3*232*FLEN/8, x4, x1, x2)

inst_94697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb22819ba20c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb22819ba20c3; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:284091*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284091*0 + 3*233*FLEN/8, x4, x1, x2)

inst_94698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:284094*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284094*0 + 3*234*FLEN/8, x4, x1, x2)

inst_94699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:284097*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284097*0 + 3*235*FLEN/8, x4, x1, x2)

inst_94700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:284100*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284100*0 + 3*236*FLEN/8, x4, x1, x2)

inst_94701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:284103*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284103*0 + 3*237*FLEN/8, x4, x1, x2)

inst_94702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:284106*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284106*0 + 3*238*FLEN/8, x4, x1, x2)

inst_94703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:284109*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284109*0 + 3*239*FLEN/8, x4, x1, x2)

inst_94704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:284112*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284112*0 + 3*240*FLEN/8, x4, x1, x2)

inst_94705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:284115*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284115*0 + 3*241*FLEN/8, x4, x1, x2)

inst_94706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:284118*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284118*0 + 3*242*FLEN/8, x4, x1, x2)

inst_94707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:284121*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284121*0 + 3*243*FLEN/8, x4, x1, x2)

inst_94708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:284124*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284124*0 + 3*244*FLEN/8, x4, x1, x2)

inst_94709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:284127*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284127*0 + 3*245*FLEN/8, x4, x1, x2)

inst_94710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:284130*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284130*0 + 3*246*FLEN/8, x4, x1, x2)

inst_94711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:284133*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284133*0 + 3*247*FLEN/8, x4, x1, x2)

inst_94712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:284136*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284136*0 + 3*248*FLEN/8, x4, x1, x2)

inst_94713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:284139*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284139*0 + 3*249*FLEN/8, x4, x1, x2)

inst_94714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:284142*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284142*0 + 3*250*FLEN/8, x4, x1, x2)

inst_94715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:284145*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284145*0 + 3*251*FLEN/8, x4, x1, x2)

inst_94716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:284148*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284148*0 + 3*252*FLEN/8, x4, x1, x2)

inst_94717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:284151*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284151*0 + 3*253*FLEN/8, x4, x1, x2)

inst_94718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:284154*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284154*0 + 3*254*FLEN/8, x4, x1, x2)

inst_94719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:284157*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284157*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_94720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000000000; valaddr_reg:x3; val_offset:284160*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284160*0 + 3*256*FLEN/8, x4, x1, x2)

inst_94721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000000001; valaddr_reg:x3; val_offset:284163*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284163*0 + 3*257*FLEN/8, x4, x1, x2)

inst_94722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000000003; valaddr_reg:x3; val_offset:284166*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284166*0 + 3*258*FLEN/8, x4, x1, x2)

inst_94723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000000007; valaddr_reg:x3; val_offset:284169*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284169*0 + 3*259*FLEN/8, x4, x1, x2)

inst_94724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000000000f; valaddr_reg:x3; val_offset:284172*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284172*0 + 3*260*FLEN/8, x4, x1, x2)

inst_94725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000000001f; valaddr_reg:x3; val_offset:284175*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284175*0 + 3*261*FLEN/8, x4, x1, x2)

inst_94726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000000003f; valaddr_reg:x3; val_offset:284178*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284178*0 + 3*262*FLEN/8, x4, x1, x2)

inst_94727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000000007f; valaddr_reg:x3; val_offset:284181*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284181*0 + 3*263*FLEN/8, x4, x1, x2)

inst_94728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000000000ff; valaddr_reg:x3; val_offset:284184*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284184*0 + 3*264*FLEN/8, x4, x1, x2)

inst_94729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000000001ff; valaddr_reg:x3; val_offset:284187*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284187*0 + 3*265*FLEN/8, x4, x1, x2)

inst_94730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000000003ff; valaddr_reg:x3; val_offset:284190*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284190*0 + 3*266*FLEN/8, x4, x1, x2)

inst_94731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000000007ff; valaddr_reg:x3; val_offset:284193*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284193*0 + 3*267*FLEN/8, x4, x1, x2)

inst_94732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000000fff; valaddr_reg:x3; val_offset:284196*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284196*0 + 3*268*FLEN/8, x4, x1, x2)

inst_94733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000001fff; valaddr_reg:x3; val_offset:284199*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284199*0 + 3*269*FLEN/8, x4, x1, x2)

inst_94734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000003fff; valaddr_reg:x3; val_offset:284202*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284202*0 + 3*270*FLEN/8, x4, x1, x2)

inst_94735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000007fff; valaddr_reg:x3; val_offset:284205*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284205*0 + 3*271*FLEN/8, x4, x1, x2)

inst_94736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000000ffff; valaddr_reg:x3; val_offset:284208*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284208*0 + 3*272*FLEN/8, x4, x1, x2)

inst_94737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000001ffff; valaddr_reg:x3; val_offset:284211*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284211*0 + 3*273*FLEN/8, x4, x1, x2)

inst_94738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000003ffff; valaddr_reg:x3; val_offset:284214*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284214*0 + 3*274*FLEN/8, x4, x1, x2)

inst_94739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000007ffff; valaddr_reg:x3; val_offset:284217*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284217*0 + 3*275*FLEN/8, x4, x1, x2)

inst_94740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000000fffff; valaddr_reg:x3; val_offset:284220*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284220*0 + 3*276*FLEN/8, x4, x1, x2)

inst_94741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000001fffff; valaddr_reg:x3; val_offset:284223*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284223*0 + 3*277*FLEN/8, x4, x1, x2)

inst_94742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000003fffff; valaddr_reg:x3; val_offset:284226*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284226*0 + 3*278*FLEN/8, x4, x1, x2)

inst_94743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000007fffff; valaddr_reg:x3; val_offset:284229*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284229*0 + 3*279*FLEN/8, x4, x1, x2)

inst_94744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000000ffffff; valaddr_reg:x3; val_offset:284232*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284232*0 + 3*280*FLEN/8, x4, x1, x2)

inst_94745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000001ffffff; valaddr_reg:x3; val_offset:284235*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284235*0 + 3*281*FLEN/8, x4, x1, x2)

inst_94746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000003ffffff; valaddr_reg:x3; val_offset:284238*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284238*0 + 3*282*FLEN/8, x4, x1, x2)

inst_94747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000007ffffff; valaddr_reg:x3; val_offset:284241*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284241*0 + 3*283*FLEN/8, x4, x1, x2)

inst_94748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000000fffffff; valaddr_reg:x3; val_offset:284244*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284244*0 + 3*284*FLEN/8, x4, x1, x2)

inst_94749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000001fffffff; valaddr_reg:x3; val_offset:284247*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284247*0 + 3*285*FLEN/8, x4, x1, x2)

inst_94750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000003fffffff; valaddr_reg:x3; val_offset:284250*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284250*0 + 3*286*FLEN/8, x4, x1, x2)

inst_94751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000007fffffff; valaddr_reg:x3; val_offset:284253*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284253*0 + 3*287*FLEN/8, x4, x1, x2)

inst_94752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000000ffffffff; valaddr_reg:x3; val_offset:284256*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284256*0 + 3*288*FLEN/8, x4, x1, x2)

inst_94753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000001ffffffff; valaddr_reg:x3; val_offset:284259*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284259*0 + 3*289*FLEN/8, x4, x1, x2)

inst_94754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000003ffffffff; valaddr_reg:x3; val_offset:284262*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284262*0 + 3*290*FLEN/8, x4, x1, x2)

inst_94755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000007ffffffff; valaddr_reg:x3; val_offset:284265*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284265*0 + 3*291*FLEN/8, x4, x1, x2)

inst_94756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400000fffffffff; valaddr_reg:x3; val_offset:284268*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284268*0 + 3*292*FLEN/8, x4, x1, x2)

inst_94757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400001fffffffff; valaddr_reg:x3; val_offset:284271*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284271*0 + 3*293*FLEN/8, x4, x1, x2)

inst_94758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400003fffffffff; valaddr_reg:x3; val_offset:284274*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284274*0 + 3*294*FLEN/8, x4, x1, x2)

inst_94759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400007fffffffff; valaddr_reg:x3; val_offset:284277*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284277*0 + 3*295*FLEN/8, x4, x1, x2)

inst_94760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40000ffffffffff; valaddr_reg:x3; val_offset:284280*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284280*0 + 3*296*FLEN/8, x4, x1, x2)

inst_94761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40001ffffffffff; valaddr_reg:x3; val_offset:284283*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284283*0 + 3*297*FLEN/8, x4, x1, x2)

inst_94762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40003ffffffffff; valaddr_reg:x3; val_offset:284286*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284286*0 + 3*298*FLEN/8, x4, x1, x2)

inst_94763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40007ffffffffff; valaddr_reg:x3; val_offset:284289*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284289*0 + 3*299*FLEN/8, x4, x1, x2)

inst_94764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4000fffffffffff; valaddr_reg:x3; val_offset:284292*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284292*0 + 3*300*FLEN/8, x4, x1, x2)

inst_94765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4001fffffffffff; valaddr_reg:x3; val_offset:284295*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284295*0 + 3*301*FLEN/8, x4, x1, x2)

inst_94766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4003fffffffffff; valaddr_reg:x3; val_offset:284298*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284298*0 + 3*302*FLEN/8, x4, x1, x2)

inst_94767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x4007fffffffffff; valaddr_reg:x3; val_offset:284301*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284301*0 + 3*303*FLEN/8, x4, x1, x2)

inst_94768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x400ffffffffffff; valaddr_reg:x3; val_offset:284304*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284304*0 + 3*304*FLEN/8, x4, x1, x2)

inst_94769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x401ffffffffffff; valaddr_reg:x3; val_offset:284307*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284307*0 + 3*305*FLEN/8, x4, x1, x2)

inst_94770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x403ffffffffffff; valaddr_reg:x3; val_offset:284310*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284310*0 + 3*306*FLEN/8, x4, x1, x2)

inst_94771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x407ffffffffffff; valaddr_reg:x3; val_offset:284313*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284313*0 + 3*307*FLEN/8, x4, x1, x2)

inst_94772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x408000000000000; valaddr_reg:x3; val_offset:284316*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284316*0 + 3*308*FLEN/8, x4, x1, x2)

inst_94773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40c000000000000; valaddr_reg:x3; val_offset:284319*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284319*0 + 3*309*FLEN/8, x4, x1, x2)

inst_94774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40e000000000000; valaddr_reg:x3; val_offset:284322*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284322*0 + 3*310*FLEN/8, x4, x1, x2)

inst_94775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40f000000000000; valaddr_reg:x3; val_offset:284325*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284325*0 + 3*311*FLEN/8, x4, x1, x2)

inst_94776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40f800000000000; valaddr_reg:x3; val_offset:284328*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284328*0 + 3*312*FLEN/8, x4, x1, x2)

inst_94777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fc00000000000; valaddr_reg:x3; val_offset:284331*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284331*0 + 3*313*FLEN/8, x4, x1, x2)

inst_94778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fe00000000000; valaddr_reg:x3; val_offset:284334*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284334*0 + 3*314*FLEN/8, x4, x1, x2)

inst_94779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ff00000000000; valaddr_reg:x3; val_offset:284337*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284337*0 + 3*315*FLEN/8, x4, x1, x2)

inst_94780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ff80000000000; valaddr_reg:x3; val_offset:284340*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284340*0 + 3*316*FLEN/8, x4, x1, x2)

inst_94781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffc0000000000; valaddr_reg:x3; val_offset:284343*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284343*0 + 3*317*FLEN/8, x4, x1, x2)

inst_94782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffe0000000000; valaddr_reg:x3; val_offset:284346*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284346*0 + 3*318*FLEN/8, x4, x1, x2)

inst_94783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fff0000000000; valaddr_reg:x3; val_offset:284349*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284349*0 + 3*319*FLEN/8, x4, x1, x2)

inst_94784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fff8000000000; valaddr_reg:x3; val_offset:284352*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284352*0 + 3*320*FLEN/8, x4, x1, x2)

inst_94785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffc000000000; valaddr_reg:x3; val_offset:284355*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284355*0 + 3*321*FLEN/8, x4, x1, x2)

inst_94786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffe000000000; valaddr_reg:x3; val_offset:284358*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284358*0 + 3*322*FLEN/8, x4, x1, x2)

inst_94787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffff000000000; valaddr_reg:x3; val_offset:284361*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284361*0 + 3*323*FLEN/8, x4, x1, x2)

inst_94788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffff800000000; valaddr_reg:x3; val_offset:284364*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284364*0 + 3*324*FLEN/8, x4, x1, x2)

inst_94789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffc00000000; valaddr_reg:x3; val_offset:284367*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284367*0 + 3*325*FLEN/8, x4, x1, x2)

inst_94790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffe00000000; valaddr_reg:x3; val_offset:284370*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284370*0 + 3*326*FLEN/8, x4, x1, x2)

inst_94791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffff00000000; valaddr_reg:x3; val_offset:284373*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284373*0 + 3*327*FLEN/8, x4, x1, x2)

inst_94792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffff80000000; valaddr_reg:x3; val_offset:284376*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284376*0 + 3*328*FLEN/8, x4, x1, x2)

inst_94793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffc0000000; valaddr_reg:x3; val_offset:284379*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284379*0 + 3*329*FLEN/8, x4, x1, x2)

inst_94794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffe0000000; valaddr_reg:x3; val_offset:284382*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284382*0 + 3*330*FLEN/8, x4, x1, x2)

inst_94795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffff0000000; valaddr_reg:x3; val_offset:284385*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284385*0 + 3*331*FLEN/8, x4, x1, x2)

inst_94796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffff8000000; valaddr_reg:x3; val_offset:284388*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284388*0 + 3*332*FLEN/8, x4, x1, x2)

inst_94797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffc000000; valaddr_reg:x3; val_offset:284391*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284391*0 + 3*333*FLEN/8, x4, x1, x2)

inst_94798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffe000000; valaddr_reg:x3; val_offset:284394*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284394*0 + 3*334*FLEN/8, x4, x1, x2)

inst_94799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffff000000; valaddr_reg:x3; val_offset:284397*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284397*0 + 3*335*FLEN/8, x4, x1, x2)

inst_94800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffff800000; valaddr_reg:x3; val_offset:284400*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284400*0 + 3*336*FLEN/8, x4, x1, x2)

inst_94801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffc00000; valaddr_reg:x3; val_offset:284403*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284403*0 + 3*337*FLEN/8, x4, x1, x2)

inst_94802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffe00000; valaddr_reg:x3; val_offset:284406*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284406*0 + 3*338*FLEN/8, x4, x1, x2)

inst_94803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffff00000; valaddr_reg:x3; val_offset:284409*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284409*0 + 3*339*FLEN/8, x4, x1, x2)

inst_94804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffff80000; valaddr_reg:x3; val_offset:284412*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284412*0 + 3*340*FLEN/8, x4, x1, x2)

inst_94805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffc0000; valaddr_reg:x3; val_offset:284415*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284415*0 + 3*341*FLEN/8, x4, x1, x2)

inst_94806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffe0000; valaddr_reg:x3; val_offset:284418*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284418*0 + 3*342*FLEN/8, x4, x1, x2)

inst_94807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffff0000; valaddr_reg:x3; val_offset:284421*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284421*0 + 3*343*FLEN/8, x4, x1, x2)

inst_94808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffff8000; valaddr_reg:x3; val_offset:284424*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284424*0 + 3*344*FLEN/8, x4, x1, x2)

inst_94809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffc000; valaddr_reg:x3; val_offset:284427*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284427*0 + 3*345*FLEN/8, x4, x1, x2)

inst_94810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffe000; valaddr_reg:x3; val_offset:284430*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284430*0 + 3*346*FLEN/8, x4, x1, x2)

inst_94811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffff000; valaddr_reg:x3; val_offset:284433*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284433*0 + 3*347*FLEN/8, x4, x1, x2)

inst_94812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffff800; valaddr_reg:x3; val_offset:284436*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284436*0 + 3*348*FLEN/8, x4, x1, x2)

inst_94813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffffc00; valaddr_reg:x3; val_offset:284439*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284439*0 + 3*349*FLEN/8, x4, x1, x2)

inst_94814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffffe00; valaddr_reg:x3; val_offset:284442*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284442*0 + 3*350*FLEN/8, x4, x1, x2)

inst_94815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffff00; valaddr_reg:x3; val_offset:284445*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284445*0 + 3*351*FLEN/8, x4, x1, x2)

inst_94816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffff80; valaddr_reg:x3; val_offset:284448*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284448*0 + 3*352*FLEN/8, x4, x1, x2)

inst_94817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffffc0; valaddr_reg:x3; val_offset:284451*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284451*0 + 3*353*FLEN/8, x4, x1, x2)

inst_94818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffffe0; valaddr_reg:x3; val_offset:284454*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284454*0 + 3*354*FLEN/8, x4, x1, x2)

inst_94819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffffff0; valaddr_reg:x3; val_offset:284457*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284457*0 + 3*355*FLEN/8, x4, x1, x2)

inst_94820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffffff8; valaddr_reg:x3; val_offset:284460*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284460*0 + 3*356*FLEN/8, x4, x1, x2)

inst_94821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffffffc; valaddr_reg:x3; val_offset:284463*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284463*0 + 3*357*FLEN/8, x4, x1, x2)

inst_94822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40ffffffffffffe; valaddr_reg:x3; val_offset:284466*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284466*0 + 3*358*FLEN/8, x4, x1, x2)

inst_94823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xddc267f0bdf07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faddc267f0bdf07; op2val:0x0;
op3val:0x40fffffffffffff; valaddr_reg:x3; val_offset:284469*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284469*0 + 3*359*FLEN/8, x4, x1, x2)

inst_94824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:284472*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284472*0 + 3*360*FLEN/8, x4, x1, x2)

inst_94825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:284475*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284475*0 + 3*361*FLEN/8, x4, x1, x2)

inst_94826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:284478*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284478*0 + 3*362*FLEN/8, x4, x1, x2)

inst_94827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:284481*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284481*0 + 3*363*FLEN/8, x4, x1, x2)

inst_94828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:284484*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284484*0 + 3*364*FLEN/8, x4, x1, x2)

inst_94829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:284487*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284487*0 + 3*365*FLEN/8, x4, x1, x2)

inst_94830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:284490*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284490*0 + 3*366*FLEN/8, x4, x1, x2)

inst_94831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:284493*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284493*0 + 3*367*FLEN/8, x4, x1, x2)

inst_94832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:284496*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284496*0 + 3*368*FLEN/8, x4, x1, x2)

inst_94833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:284499*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284499*0 + 3*369*FLEN/8, x4, x1, x2)

inst_94834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:284502*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284502*0 + 3*370*FLEN/8, x4, x1, x2)

inst_94835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:284505*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284505*0 + 3*371*FLEN/8, x4, x1, x2)

inst_94836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:284508*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284508*0 + 3*372*FLEN/8, x4, x1, x2)

inst_94837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:284511*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284511*0 + 3*373*FLEN/8, x4, x1, x2)

inst_94838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:284514*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284514*0 + 3*374*FLEN/8, x4, x1, x2)

inst_94839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:284517*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284517*0 + 3*375*FLEN/8, x4, x1, x2)

inst_94840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:284520*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284520*0 + 3*376*FLEN/8, x4, x1, x2)

inst_94841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:284523*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284523*0 + 3*377*FLEN/8, x4, x1, x2)

inst_94842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:284526*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284526*0 + 3*378*FLEN/8, x4, x1, x2)

inst_94843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:284529*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284529*0 + 3*379*FLEN/8, x4, x1, x2)

inst_94844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:284532*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284532*0 + 3*380*FLEN/8, x4, x1, x2)

inst_94845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:284535*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284535*0 + 3*381*FLEN/8, x4, x1, x2)

inst_94846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:284538*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284538*0 + 3*382*FLEN/8, x4, x1, x2)

inst_94847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:284541*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284541*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_94848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:284544*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284544*0 + 3*384*FLEN/8, x4, x1, x2)

inst_94849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:284547*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284547*0 + 3*385*FLEN/8, x4, x1, x2)

inst_94850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:284550*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284550*0 + 3*386*FLEN/8, x4, x1, x2)

inst_94851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:284553*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284553*0 + 3*387*FLEN/8, x4, x1, x2)

inst_94852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:284556*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284556*0 + 3*388*FLEN/8, x4, x1, x2)

inst_94853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:284559*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284559*0 + 3*389*FLEN/8, x4, x1, x2)

inst_94854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:284562*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284562*0 + 3*390*FLEN/8, x4, x1, x2)

inst_94855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:284565*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284565*0 + 3*391*FLEN/8, x4, x1, x2)

inst_94856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:284568*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284568*0 + 3*392*FLEN/8, x4, x1, x2)

inst_94857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:284571*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284571*0 + 3*393*FLEN/8, x4, x1, x2)

inst_94858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:284574*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284574*0 + 3*394*FLEN/8, x4, x1, x2)

inst_94859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:284577*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284577*0 + 3*395*FLEN/8, x4, x1, x2)

inst_94860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:284580*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284580*0 + 3*396*FLEN/8, x4, x1, x2)

inst_94861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:284583*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284583*0 + 3*397*FLEN/8, x4, x1, x2)

inst_94862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:284586*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284586*0 + 3*398*FLEN/8, x4, x1, x2)

inst_94863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:284589*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284589*0 + 3*399*FLEN/8, x4, x1, x2)

inst_94864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:284592*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284592*0 + 3*400*FLEN/8, x4, x1, x2)

inst_94865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:284595*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284595*0 + 3*401*FLEN/8, x4, x1, x2)

inst_94866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:284598*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284598*0 + 3*402*FLEN/8, x4, x1, x2)

inst_94867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:284601*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284601*0 + 3*403*FLEN/8, x4, x1, x2)

inst_94868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:284604*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284604*0 + 3*404*FLEN/8, x4, x1, x2)

inst_94869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:284607*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284607*0 + 3*405*FLEN/8, x4, x1, x2)

inst_94870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:284610*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284610*0 + 3*406*FLEN/8, x4, x1, x2)

inst_94871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:284613*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284613*0 + 3*407*FLEN/8, x4, x1, x2)

inst_94872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:284616*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284616*0 + 3*408*FLEN/8, x4, x1, x2)

inst_94873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:284619*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284619*0 + 3*409*FLEN/8, x4, x1, x2)

inst_94874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:284622*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284622*0 + 3*410*FLEN/8, x4, x1, x2)

inst_94875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:284625*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284625*0 + 3*411*FLEN/8, x4, x1, x2)

inst_94876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:284628*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284628*0 + 3*412*FLEN/8, x4, x1, x2)

inst_94877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:284631*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284631*0 + 3*413*FLEN/8, x4, x1, x2)

inst_94878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:284634*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284634*0 + 3*414*FLEN/8, x4, x1, x2)

inst_94879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:284637*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284637*0 + 3*415*FLEN/8, x4, x1, x2)

inst_94880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:284640*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284640*0 + 3*416*FLEN/8, x4, x1, x2)

inst_94881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:284643*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284643*0 + 3*417*FLEN/8, x4, x1, x2)

inst_94882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:284646*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284646*0 + 3*418*FLEN/8, x4, x1, x2)

inst_94883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:284649*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284649*0 + 3*419*FLEN/8, x4, x1, x2)

inst_94884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:284652*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284652*0 + 3*420*FLEN/8, x4, x1, x2)

inst_94885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:284655*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284655*0 + 3*421*FLEN/8, x4, x1, x2)

inst_94886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:284658*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284658*0 + 3*422*FLEN/8, x4, x1, x2)

inst_94887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:284661*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284661*0 + 3*423*FLEN/8, x4, x1, x2)

inst_94888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:284664*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284664*0 + 3*424*FLEN/8, x4, x1, x2)

inst_94889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:284667*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284667*0 + 3*425*FLEN/8, x4, x1, x2)

inst_94890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:284670*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284670*0 + 3*426*FLEN/8, x4, x1, x2)

inst_94891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:284673*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284673*0 + 3*427*FLEN/8, x4, x1, x2)

inst_94892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:284676*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284676*0 + 3*428*FLEN/8, x4, x1, x2)

inst_94893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:284679*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284679*0 + 3*429*FLEN/8, x4, x1, x2)

inst_94894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:284682*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284682*0 + 3*430*FLEN/8, x4, x1, x2)

inst_94895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:284685*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284685*0 + 3*431*FLEN/8, x4, x1, x2)

inst_94896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:284688*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284688*0 + 3*432*FLEN/8, x4, x1, x2)

inst_94897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:284691*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284691*0 + 3*433*FLEN/8, x4, x1, x2)

inst_94898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:284694*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284694*0 + 3*434*FLEN/8, x4, x1, x2)

inst_94899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:284697*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284697*0 + 3*435*FLEN/8, x4, x1, x2)

inst_94900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:284700*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284700*0 + 3*436*FLEN/8, x4, x1, x2)

inst_94901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:284703*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284703*0 + 3*437*FLEN/8, x4, x1, x2)

inst_94902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:284706*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284706*0 + 3*438*FLEN/8, x4, x1, x2)

inst_94903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:284709*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284709*0 + 3*439*FLEN/8, x4, x1, x2)

inst_94904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:284712*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284712*0 + 3*440*FLEN/8, x4, x1, x2)

inst_94905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:284715*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284715*0 + 3*441*FLEN/8, x4, x1, x2)

inst_94906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:284718*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284718*0 + 3*442*FLEN/8, x4, x1, x2)

inst_94907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:284721*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284721*0 + 3*443*FLEN/8, x4, x1, x2)

inst_94908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:284724*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284724*0 + 3*444*FLEN/8, x4, x1, x2)

inst_94909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:284727*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284727*0 + 3*445*FLEN/8, x4, x1, x2)

inst_94910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:284730*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284730*0 + 3*446*FLEN/8, x4, x1, x2)

inst_94911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:284733*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284733*0 + 3*447*FLEN/8, x4, x1, x2)

inst_94912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:284736*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284736*0 + 3*448*FLEN/8, x4, x1, x2)

inst_94913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:284739*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284739*0 + 3*449*FLEN/8, x4, x1, x2)

inst_94914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:284742*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284742*0 + 3*450*FLEN/8, x4, x1, x2)

inst_94915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:284745*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284745*0 + 3*451*FLEN/8, x4, x1, x2)

inst_94916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:284748*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284748*0 + 3*452*FLEN/8, x4, x1, x2)

inst_94917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:284751*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284751*0 + 3*453*FLEN/8, x4, x1, x2)

inst_94918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:284754*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284754*0 + 3*454*FLEN/8, x4, x1, x2)

inst_94919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:284757*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284757*0 + 3*455*FLEN/8, x4, x1, x2)

inst_94920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:284760*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284760*0 + 3*456*FLEN/8, x4, x1, x2)

inst_94921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:284763*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284763*0 + 3*457*FLEN/8, x4, x1, x2)

inst_94922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:284766*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284766*0 + 3*458*FLEN/8, x4, x1, x2)

inst_94923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:284769*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284769*0 + 3*459*FLEN/8, x4, x1, x2)

inst_94924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:284772*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284772*0 + 3*460*FLEN/8, x4, x1, x2)

inst_94925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:284775*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284775*0 + 3*461*FLEN/8, x4, x1, x2)

inst_94926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:284778*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284778*0 + 3*462*FLEN/8, x4, x1, x2)

inst_94927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:284781*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284781*0 + 3*463*FLEN/8, x4, x1, x2)

inst_94928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:284784*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284784*0 + 3*464*FLEN/8, x4, x1, x2)

inst_94929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:284787*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284787*0 + 3*465*FLEN/8, x4, x1, x2)

inst_94930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:284790*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284790*0 + 3*466*FLEN/8, x4, x1, x2)

inst_94931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:284793*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284793*0 + 3*467*FLEN/8, x4, x1, x2)

inst_94932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:284796*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284796*0 + 3*468*FLEN/8, x4, x1, x2)

inst_94933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:284799*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284799*0 + 3*469*FLEN/8, x4, x1, x2)

inst_94934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:284802*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284802*0 + 3*470*FLEN/8, x4, x1, x2)

inst_94935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:284805*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284805*0 + 3*471*FLEN/8, x4, x1, x2)

inst_94936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:284808*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284808*0 + 3*472*FLEN/8, x4, x1, x2)

inst_94937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:284811*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284811*0 + 3*473*FLEN/8, x4, x1, x2)

inst_94938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:284814*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284814*0 + 3*474*FLEN/8, x4, x1, x2)

inst_94939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:284817*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284817*0 + 3*475*FLEN/8, x4, x1, x2)

inst_94940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:284820*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284820*0 + 3*476*FLEN/8, x4, x1, x2)

inst_94941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:284823*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284823*0 + 3*477*FLEN/8, x4, x1, x2)

inst_94942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:284826*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284826*0 + 3*478*FLEN/8, x4, x1, x2)

inst_94943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:284829*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284829*0 + 3*479*FLEN/8, x4, x1, x2)

inst_94944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:284832*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284832*0 + 3*480*FLEN/8, x4, x1, x2)

inst_94945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:284835*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284835*0 + 3*481*FLEN/8, x4, x1, x2)

inst_94946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:284838*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284838*0 + 3*482*FLEN/8, x4, x1, x2)

inst_94947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:284841*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284841*0 + 3*483*FLEN/8, x4, x1, x2)

inst_94948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:284844*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284844*0 + 3*484*FLEN/8, x4, x1, x2)

inst_94949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdde410918280a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadde410918280a; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:284847*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284847*0 + 3*485*FLEN/8, x4, x1, x2)

inst_94950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000000000; valaddr_reg:x3; val_offset:284850*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284850*0 + 3*486*FLEN/8, x4, x1, x2)

inst_94951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000000001; valaddr_reg:x3; val_offset:284853*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284853*0 + 3*487*FLEN/8, x4, x1, x2)

inst_94952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000000003; valaddr_reg:x3; val_offset:284856*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284856*0 + 3*488*FLEN/8, x4, x1, x2)

inst_94953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000000007; valaddr_reg:x3; val_offset:284859*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284859*0 + 3*489*FLEN/8, x4, x1, x2)

inst_94954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000000000f; valaddr_reg:x3; val_offset:284862*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284862*0 + 3*490*FLEN/8, x4, x1, x2)

inst_94955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000000001f; valaddr_reg:x3; val_offset:284865*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284865*0 + 3*491*FLEN/8, x4, x1, x2)

inst_94956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000000003f; valaddr_reg:x3; val_offset:284868*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284868*0 + 3*492*FLEN/8, x4, x1, x2)

inst_94957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000000007f; valaddr_reg:x3; val_offset:284871*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284871*0 + 3*493*FLEN/8, x4, x1, x2)

inst_94958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000000000ff; valaddr_reg:x3; val_offset:284874*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284874*0 + 3*494*FLEN/8, x4, x1, x2)

inst_94959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000000001ff; valaddr_reg:x3; val_offset:284877*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284877*0 + 3*495*FLEN/8, x4, x1, x2)

inst_94960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000000003ff; valaddr_reg:x3; val_offset:284880*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284880*0 + 3*496*FLEN/8, x4, x1, x2)

inst_94961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000000007ff; valaddr_reg:x3; val_offset:284883*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284883*0 + 3*497*FLEN/8, x4, x1, x2)

inst_94962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000000fff; valaddr_reg:x3; val_offset:284886*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284886*0 + 3*498*FLEN/8, x4, x1, x2)

inst_94963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000001fff; valaddr_reg:x3; val_offset:284889*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284889*0 + 3*499*FLEN/8, x4, x1, x2)

inst_94964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000003fff; valaddr_reg:x3; val_offset:284892*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284892*0 + 3*500*FLEN/8, x4, x1, x2)

inst_94965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000007fff; valaddr_reg:x3; val_offset:284895*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284895*0 + 3*501*FLEN/8, x4, x1, x2)

inst_94966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000000ffff; valaddr_reg:x3; val_offset:284898*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284898*0 + 3*502*FLEN/8, x4, x1, x2)

inst_94967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000001ffff; valaddr_reg:x3; val_offset:284901*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284901*0 + 3*503*FLEN/8, x4, x1, x2)

inst_94968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000003ffff; valaddr_reg:x3; val_offset:284904*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284904*0 + 3*504*FLEN/8, x4, x1, x2)

inst_94969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000007ffff; valaddr_reg:x3; val_offset:284907*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284907*0 + 3*505*FLEN/8, x4, x1, x2)

inst_94970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000000fffff; valaddr_reg:x3; val_offset:284910*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284910*0 + 3*506*FLEN/8, x4, x1, x2)

inst_94971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000001fffff; valaddr_reg:x3; val_offset:284913*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284913*0 + 3*507*FLEN/8, x4, x1, x2)

inst_94972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000003fffff; valaddr_reg:x3; val_offset:284916*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284916*0 + 3*508*FLEN/8, x4, x1, x2)

inst_94973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000007fffff; valaddr_reg:x3; val_offset:284919*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284919*0 + 3*509*FLEN/8, x4, x1, x2)

inst_94974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000000ffffff; valaddr_reg:x3; val_offset:284922*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284922*0 + 3*510*FLEN/8, x4, x1, x2)

inst_94975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000001ffffff; valaddr_reg:x3; val_offset:284925*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284925*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_94976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000003ffffff; valaddr_reg:x3; val_offset:284928*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284928*0 + 3*512*FLEN/8, x4, x1, x2)

inst_94977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000007ffffff; valaddr_reg:x3; val_offset:284931*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284931*0 + 3*513*FLEN/8, x4, x1, x2)

inst_94978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000000fffffff; valaddr_reg:x3; val_offset:284934*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284934*0 + 3*514*FLEN/8, x4, x1, x2)

inst_94979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000001fffffff; valaddr_reg:x3; val_offset:284937*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284937*0 + 3*515*FLEN/8, x4, x1, x2)

inst_94980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000003fffffff; valaddr_reg:x3; val_offset:284940*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284940*0 + 3*516*FLEN/8, x4, x1, x2)

inst_94981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000007fffffff; valaddr_reg:x3; val_offset:284943*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284943*0 + 3*517*FLEN/8, x4, x1, x2)

inst_94982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900000ffffffff; valaddr_reg:x3; val_offset:284946*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284946*0 + 3*518*FLEN/8, x4, x1, x2)

inst_94983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900001ffffffff; valaddr_reg:x3; val_offset:284949*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284949*0 + 3*519*FLEN/8, x4, x1, x2)

inst_94984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900003ffffffff; valaddr_reg:x3; val_offset:284952*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284952*0 + 3*520*FLEN/8, x4, x1, x2)

inst_94985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900007ffffffff; valaddr_reg:x3; val_offset:284955*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284955*0 + 3*521*FLEN/8, x4, x1, x2)

inst_94986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90000fffffffff; valaddr_reg:x3; val_offset:284958*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284958*0 + 3*522*FLEN/8, x4, x1, x2)

inst_94987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90001fffffffff; valaddr_reg:x3; val_offset:284961*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284961*0 + 3*523*FLEN/8, x4, x1, x2)

inst_94988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90003fffffffff; valaddr_reg:x3; val_offset:284964*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284964*0 + 3*524*FLEN/8, x4, x1, x2)

inst_94989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90007fffffffff; valaddr_reg:x3; val_offset:284967*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284967*0 + 3*525*FLEN/8, x4, x1, x2)

inst_94990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9000ffffffffff; valaddr_reg:x3; val_offset:284970*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284970*0 + 3*526*FLEN/8, x4, x1, x2)

inst_94991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9001ffffffffff; valaddr_reg:x3; val_offset:284973*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284973*0 + 3*527*FLEN/8, x4, x1, x2)

inst_94992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9003ffffffffff; valaddr_reg:x3; val_offset:284976*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284976*0 + 3*528*FLEN/8, x4, x1, x2)

inst_94993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9007ffffffffff; valaddr_reg:x3; val_offset:284979*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284979*0 + 3*529*FLEN/8, x4, x1, x2)

inst_94994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b900fffffffffff; valaddr_reg:x3; val_offset:284982*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284982*0 + 3*530*FLEN/8, x4, x1, x2)

inst_94995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b901fffffffffff; valaddr_reg:x3; val_offset:284985*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284985*0 + 3*531*FLEN/8, x4, x1, x2)

inst_94996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b903fffffffffff; valaddr_reg:x3; val_offset:284988*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284988*0 + 3*532*FLEN/8, x4, x1, x2)

inst_94997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b907fffffffffff; valaddr_reg:x3; val_offset:284991*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284991*0 + 3*533*FLEN/8, x4, x1, x2)

inst_94998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b90ffffffffffff; valaddr_reg:x3; val_offset:284994*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284994*0 + 3*534*FLEN/8, x4, x1, x2)

inst_94999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b91ffffffffffff; valaddr_reg:x3; val_offset:284997*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 284997*0 + 3*535*FLEN/8, x4, x1, x2)

inst_95000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b93ffffffffffff; valaddr_reg:x3; val_offset:285000*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285000*0 + 3*536*FLEN/8, x4, x1, x2)

inst_95001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b97ffffffffffff; valaddr_reg:x3; val_offset:285003*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285003*0 + 3*537*FLEN/8, x4, x1, x2)

inst_95002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b98000000000000; valaddr_reg:x3; val_offset:285006*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285006*0 + 3*538*FLEN/8, x4, x1, x2)

inst_95003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9c000000000000; valaddr_reg:x3; val_offset:285009*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285009*0 + 3*539*FLEN/8, x4, x1, x2)

inst_95004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9e000000000000; valaddr_reg:x3; val_offset:285012*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285012*0 + 3*540*FLEN/8, x4, x1, x2)

inst_95005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9f000000000000; valaddr_reg:x3; val_offset:285015*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285015*0 + 3*541*FLEN/8, x4, x1, x2)

inst_95006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9f800000000000; valaddr_reg:x3; val_offset:285018*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285018*0 + 3*542*FLEN/8, x4, x1, x2)

inst_95007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fc00000000000; valaddr_reg:x3; val_offset:285021*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285021*0 + 3*543*FLEN/8, x4, x1, x2)

inst_95008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fe00000000000; valaddr_reg:x3; val_offset:285024*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285024*0 + 3*544*FLEN/8, x4, x1, x2)

inst_95009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ff00000000000; valaddr_reg:x3; val_offset:285027*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285027*0 + 3*545*FLEN/8, x4, x1, x2)

inst_95010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ff80000000000; valaddr_reg:x3; val_offset:285030*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285030*0 + 3*546*FLEN/8, x4, x1, x2)

inst_95011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffc0000000000; valaddr_reg:x3; val_offset:285033*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285033*0 + 3*547*FLEN/8, x4, x1, x2)

inst_95012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffe0000000000; valaddr_reg:x3; val_offset:285036*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285036*0 + 3*548*FLEN/8, x4, x1, x2)

inst_95013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fff0000000000; valaddr_reg:x3; val_offset:285039*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285039*0 + 3*549*FLEN/8, x4, x1, x2)

inst_95014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fff8000000000; valaddr_reg:x3; val_offset:285042*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285042*0 + 3*550*FLEN/8, x4, x1, x2)

inst_95015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffc000000000; valaddr_reg:x3; val_offset:285045*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285045*0 + 3*551*FLEN/8, x4, x1, x2)

inst_95016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffe000000000; valaddr_reg:x3; val_offset:285048*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285048*0 + 3*552*FLEN/8, x4, x1, x2)

inst_95017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffff000000000; valaddr_reg:x3; val_offset:285051*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285051*0 + 3*553*FLEN/8, x4, x1, x2)

inst_95018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffff800000000; valaddr_reg:x3; val_offset:285054*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285054*0 + 3*554*FLEN/8, x4, x1, x2)

inst_95019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffc00000000; valaddr_reg:x3; val_offset:285057*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285057*0 + 3*555*FLEN/8, x4, x1, x2)

inst_95020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffe00000000; valaddr_reg:x3; val_offset:285060*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285060*0 + 3*556*FLEN/8, x4, x1, x2)

inst_95021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffff00000000; valaddr_reg:x3; val_offset:285063*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285063*0 + 3*557*FLEN/8, x4, x1, x2)

inst_95022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffff80000000; valaddr_reg:x3; val_offset:285066*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285066*0 + 3*558*FLEN/8, x4, x1, x2)

inst_95023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffc0000000; valaddr_reg:x3; val_offset:285069*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285069*0 + 3*559*FLEN/8, x4, x1, x2)

inst_95024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffe0000000; valaddr_reg:x3; val_offset:285072*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285072*0 + 3*560*FLEN/8, x4, x1, x2)

inst_95025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffff0000000; valaddr_reg:x3; val_offset:285075*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285075*0 + 3*561*FLEN/8, x4, x1, x2)

inst_95026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffff8000000; valaddr_reg:x3; val_offset:285078*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285078*0 + 3*562*FLEN/8, x4, x1, x2)

inst_95027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffc000000; valaddr_reg:x3; val_offset:285081*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285081*0 + 3*563*FLEN/8, x4, x1, x2)

inst_95028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffe000000; valaddr_reg:x3; val_offset:285084*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285084*0 + 3*564*FLEN/8, x4, x1, x2)

inst_95029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffff000000; valaddr_reg:x3; val_offset:285087*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285087*0 + 3*565*FLEN/8, x4, x1, x2)

inst_95030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffff800000; valaddr_reg:x3; val_offset:285090*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285090*0 + 3*566*FLEN/8, x4, x1, x2)

inst_95031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffc00000; valaddr_reg:x3; val_offset:285093*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285093*0 + 3*567*FLEN/8, x4, x1, x2)

inst_95032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffe00000; valaddr_reg:x3; val_offset:285096*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285096*0 + 3*568*FLEN/8, x4, x1, x2)

inst_95033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffff00000; valaddr_reg:x3; val_offset:285099*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285099*0 + 3*569*FLEN/8, x4, x1, x2)

inst_95034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffff80000; valaddr_reg:x3; val_offset:285102*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285102*0 + 3*570*FLEN/8, x4, x1, x2)

inst_95035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffc0000; valaddr_reg:x3; val_offset:285105*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285105*0 + 3*571*FLEN/8, x4, x1, x2)

inst_95036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffe0000; valaddr_reg:x3; val_offset:285108*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285108*0 + 3*572*FLEN/8, x4, x1, x2)

inst_95037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffff0000; valaddr_reg:x3; val_offset:285111*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285111*0 + 3*573*FLEN/8, x4, x1, x2)

inst_95038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffff8000; valaddr_reg:x3; val_offset:285114*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285114*0 + 3*574*FLEN/8, x4, x1, x2)

inst_95039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffc000; valaddr_reg:x3; val_offset:285117*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285117*0 + 3*575*FLEN/8, x4, x1, x2)

inst_95040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffe000; valaddr_reg:x3; val_offset:285120*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285120*0 + 3*576*FLEN/8, x4, x1, x2)

inst_95041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffff000; valaddr_reg:x3; val_offset:285123*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285123*0 + 3*577*FLEN/8, x4, x1, x2)

inst_95042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffff800; valaddr_reg:x3; val_offset:285126*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285126*0 + 3*578*FLEN/8, x4, x1, x2)

inst_95043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffffc00; valaddr_reg:x3; val_offset:285129*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285129*0 + 3*579*FLEN/8, x4, x1, x2)

inst_95044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffffe00; valaddr_reg:x3; val_offset:285132*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285132*0 + 3*580*FLEN/8, x4, x1, x2)

inst_95045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffff00; valaddr_reg:x3; val_offset:285135*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285135*0 + 3*581*FLEN/8, x4, x1, x2)

inst_95046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffff80; valaddr_reg:x3; val_offset:285138*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285138*0 + 3*582*FLEN/8, x4, x1, x2)

inst_95047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffffc0; valaddr_reg:x3; val_offset:285141*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285141*0 + 3*583*FLEN/8, x4, x1, x2)

inst_95048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffffe0; valaddr_reg:x3; val_offset:285144*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285144*0 + 3*584*FLEN/8, x4, x1, x2)

inst_95049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffffff0; valaddr_reg:x3; val_offset:285147*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285147*0 + 3*585*FLEN/8, x4, x1, x2)

inst_95050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffffff8; valaddr_reg:x3; val_offset:285150*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285150*0 + 3*586*FLEN/8, x4, x1, x2)

inst_95051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffffffc; valaddr_reg:x3; val_offset:285153*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285153*0 + 3*587*FLEN/8, x4, x1, x2)

inst_95052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9ffffffffffffe; valaddr_reg:x3; val_offset:285156*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285156*0 + 3*588*FLEN/8, x4, x1, x2)

inst_95053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3b9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3b9fffffffffffff; valaddr_reg:x3; val_offset:285159*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285159*0 + 3*589*FLEN/8, x4, x1, x2)

inst_95054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:285162*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285162*0 + 3*590*FLEN/8, x4, x1, x2)

inst_95055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:285165*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285165*0 + 3*591*FLEN/8, x4, x1, x2)

inst_95056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:285168*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285168*0 + 3*592*FLEN/8, x4, x1, x2)

inst_95057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:285171*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285171*0 + 3*593*FLEN/8, x4, x1, x2)

inst_95058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:285174*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285174*0 + 3*594*FLEN/8, x4, x1, x2)

inst_95059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:285177*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285177*0 + 3*595*FLEN/8, x4, x1, x2)

inst_95060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:285180*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285180*0 + 3*596*FLEN/8, x4, x1, x2)

inst_95061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:285183*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285183*0 + 3*597*FLEN/8, x4, x1, x2)

inst_95062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:285186*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285186*0 + 3*598*FLEN/8, x4, x1, x2)

inst_95063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:285189*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285189*0 + 3*599*FLEN/8, x4, x1, x2)

inst_95064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:285192*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285192*0 + 3*600*FLEN/8, x4, x1, x2)

inst_95065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:285195*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285195*0 + 3*601*FLEN/8, x4, x1, x2)

inst_95066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:285198*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285198*0 + 3*602*FLEN/8, x4, x1, x2)

inst_95067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:285201*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285201*0 + 3*603*FLEN/8, x4, x1, x2)

inst_95068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:285204*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285204*0 + 3*604*FLEN/8, x4, x1, x2)

inst_95069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:285207*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285207*0 + 3*605*FLEN/8, x4, x1, x2)

inst_95070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:285210*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285210*0 + 3*606*FLEN/8, x4, x1, x2)

inst_95071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:285213*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285213*0 + 3*607*FLEN/8, x4, x1, x2)

inst_95072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:285216*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285216*0 + 3*608*FLEN/8, x4, x1, x2)

inst_95073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:285219*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285219*0 + 3*609*FLEN/8, x4, x1, x2)

inst_95074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:285222*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285222*0 + 3*610*FLEN/8, x4, x1, x2)

inst_95075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe03b7e6a9f0c4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x10ef3cd84b81c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae03b7e6a9f0c4; op2val:0x20310ef3cd84b81c;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:285225*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285225*0 + 3*611*FLEN/8, x4, x1, x2)

inst_95076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:285228*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285228*0 + 3*612*FLEN/8, x4, x1, x2)

inst_95077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:285231*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285231*0 + 3*613*FLEN/8, x4, x1, x2)

inst_95078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:285234*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285234*0 + 3*614*FLEN/8, x4, x1, x2)

inst_95079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:285237*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285237*0 + 3*615*FLEN/8, x4, x1, x2)

inst_95080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:285240*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285240*0 + 3*616*FLEN/8, x4, x1, x2)

inst_95081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:285243*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285243*0 + 3*617*FLEN/8, x4, x1, x2)

inst_95082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:285246*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285246*0 + 3*618*FLEN/8, x4, x1, x2)

inst_95083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:285249*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285249*0 + 3*619*FLEN/8, x4, x1, x2)

inst_95084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:285252*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285252*0 + 3*620*FLEN/8, x4, x1, x2)

inst_95085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:285255*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285255*0 + 3*621*FLEN/8, x4, x1, x2)

inst_95086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:285258*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285258*0 + 3*622*FLEN/8, x4, x1, x2)

inst_95087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:285261*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285261*0 + 3*623*FLEN/8, x4, x1, x2)

inst_95088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:285264*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285264*0 + 3*624*FLEN/8, x4, x1, x2)

inst_95089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:285267*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285267*0 + 3*625*FLEN/8, x4, x1, x2)

inst_95090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:285270*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285270*0 + 3*626*FLEN/8, x4, x1, x2)

inst_95091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:285273*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285273*0 + 3*627*FLEN/8, x4, x1, x2)

inst_95092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:285276*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285276*0 + 3*628*FLEN/8, x4, x1, x2)

inst_95093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:285279*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285279*0 + 3*629*FLEN/8, x4, x1, x2)

inst_95094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:285282*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285282*0 + 3*630*FLEN/8, x4, x1, x2)

inst_95095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:285285*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285285*0 + 3*631*FLEN/8, x4, x1, x2)

inst_95096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:285288*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285288*0 + 3*632*FLEN/8, x4, x1, x2)

inst_95097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:285291*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285291*0 + 3*633*FLEN/8, x4, x1, x2)

inst_95098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000000000; valaddr_reg:x3; val_offset:285294*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285294*0 + 3*634*FLEN/8, x4, x1, x2)

inst_95099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000000001; valaddr_reg:x3; val_offset:285297*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285297*0 + 3*635*FLEN/8, x4, x1, x2)

inst_95100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000000003; valaddr_reg:x3; val_offset:285300*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285300*0 + 3*636*FLEN/8, x4, x1, x2)

inst_95101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000000007; valaddr_reg:x3; val_offset:285303*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285303*0 + 3*637*FLEN/8, x4, x1, x2)

inst_95102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000000000f; valaddr_reg:x3; val_offset:285306*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285306*0 + 3*638*FLEN/8, x4, x1, x2)

inst_95103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000000001f; valaddr_reg:x3; val_offset:285309*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285309*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_95104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000000003f; valaddr_reg:x3; val_offset:285312*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285312*0 + 3*640*FLEN/8, x4, x1, x2)

inst_95105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000000007f; valaddr_reg:x3; val_offset:285315*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285315*0 + 3*641*FLEN/8, x4, x1, x2)

inst_95106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000000000ff; valaddr_reg:x3; val_offset:285318*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285318*0 + 3*642*FLEN/8, x4, x1, x2)

inst_95107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000000001ff; valaddr_reg:x3; val_offset:285321*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285321*0 + 3*643*FLEN/8, x4, x1, x2)

inst_95108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000000003ff; valaddr_reg:x3; val_offset:285324*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285324*0 + 3*644*FLEN/8, x4, x1, x2)

inst_95109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000000007ff; valaddr_reg:x3; val_offset:285327*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285327*0 + 3*645*FLEN/8, x4, x1, x2)

inst_95110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000000fff; valaddr_reg:x3; val_offset:285330*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285330*0 + 3*646*FLEN/8, x4, x1, x2)

inst_95111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000001fff; valaddr_reg:x3; val_offset:285333*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285333*0 + 3*647*FLEN/8, x4, x1, x2)

inst_95112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000003fff; valaddr_reg:x3; val_offset:285336*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285336*0 + 3*648*FLEN/8, x4, x1, x2)

inst_95113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000007fff; valaddr_reg:x3; val_offset:285339*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285339*0 + 3*649*FLEN/8, x4, x1, x2)

inst_95114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000000ffff; valaddr_reg:x3; val_offset:285342*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285342*0 + 3*650*FLEN/8, x4, x1, x2)

inst_95115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000001ffff; valaddr_reg:x3; val_offset:285345*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285345*0 + 3*651*FLEN/8, x4, x1, x2)

inst_95116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000003ffff; valaddr_reg:x3; val_offset:285348*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285348*0 + 3*652*FLEN/8, x4, x1, x2)

inst_95117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000007ffff; valaddr_reg:x3; val_offset:285351*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285351*0 + 3*653*FLEN/8, x4, x1, x2)

inst_95118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000000fffff; valaddr_reg:x3; val_offset:285354*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285354*0 + 3*654*FLEN/8, x4, x1, x2)

inst_95119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000001fffff; valaddr_reg:x3; val_offset:285357*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285357*0 + 3*655*FLEN/8, x4, x1, x2)

inst_95120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000003fffff; valaddr_reg:x3; val_offset:285360*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285360*0 + 3*656*FLEN/8, x4, x1, x2)

inst_95121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000007fffff; valaddr_reg:x3; val_offset:285363*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285363*0 + 3*657*FLEN/8, x4, x1, x2)

inst_95122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000000ffffff; valaddr_reg:x3; val_offset:285366*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285366*0 + 3*658*FLEN/8, x4, x1, x2)

inst_95123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000001ffffff; valaddr_reg:x3; val_offset:285369*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285369*0 + 3*659*FLEN/8, x4, x1, x2)

inst_95124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000003ffffff; valaddr_reg:x3; val_offset:285372*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285372*0 + 3*660*FLEN/8, x4, x1, x2)

inst_95125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000007ffffff; valaddr_reg:x3; val_offset:285375*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285375*0 + 3*661*FLEN/8, x4, x1, x2)

inst_95126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000000fffffff; valaddr_reg:x3; val_offset:285378*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285378*0 + 3*662*FLEN/8, x4, x1, x2)

inst_95127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000001fffffff; valaddr_reg:x3; val_offset:285381*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285381*0 + 3*663*FLEN/8, x4, x1, x2)

inst_95128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000003fffffff; valaddr_reg:x3; val_offset:285384*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285384*0 + 3*664*FLEN/8, x4, x1, x2)

inst_95129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000007fffffff; valaddr_reg:x3; val_offset:285387*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285387*0 + 3*665*FLEN/8, x4, x1, x2)

inst_95130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00000ffffffff; valaddr_reg:x3; val_offset:285390*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285390*0 + 3*666*FLEN/8, x4, x1, x2)

inst_95131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00001ffffffff; valaddr_reg:x3; val_offset:285393*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285393*0 + 3*667*FLEN/8, x4, x1, x2)

inst_95132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00003ffffffff; valaddr_reg:x3; val_offset:285396*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285396*0 + 3*668*FLEN/8, x4, x1, x2)

inst_95133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00007ffffffff; valaddr_reg:x3; val_offset:285399*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285399*0 + 3*669*FLEN/8, x4, x1, x2)

inst_95134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0000fffffffff; valaddr_reg:x3; val_offset:285402*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285402*0 + 3*670*FLEN/8, x4, x1, x2)

inst_95135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0001fffffffff; valaddr_reg:x3; val_offset:285405*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285405*0 + 3*671*FLEN/8, x4, x1, x2)

inst_95136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0003fffffffff; valaddr_reg:x3; val_offset:285408*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285408*0 + 3*672*FLEN/8, x4, x1, x2)

inst_95137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0007fffffffff; valaddr_reg:x3; val_offset:285411*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285411*0 + 3*673*FLEN/8, x4, x1, x2)

inst_95138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a000ffffffffff; valaddr_reg:x3; val_offset:285414*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285414*0 + 3*674*FLEN/8, x4, x1, x2)

inst_95139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a001ffffffffff; valaddr_reg:x3; val_offset:285417*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285417*0 + 3*675*FLEN/8, x4, x1, x2)

inst_95140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a003ffffffffff; valaddr_reg:x3; val_offset:285420*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285420*0 + 3*676*FLEN/8, x4, x1, x2)

inst_95141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a007ffffffffff; valaddr_reg:x3; val_offset:285423*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285423*0 + 3*677*FLEN/8, x4, x1, x2)

inst_95142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a00fffffffffff; valaddr_reg:x3; val_offset:285426*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285426*0 + 3*678*FLEN/8, x4, x1, x2)

inst_95143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a01fffffffffff; valaddr_reg:x3; val_offset:285429*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285429*0 + 3*679*FLEN/8, x4, x1, x2)

inst_95144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a03fffffffffff; valaddr_reg:x3; val_offset:285432*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285432*0 + 3*680*FLEN/8, x4, x1, x2)

inst_95145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a07fffffffffff; valaddr_reg:x3; val_offset:285435*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285435*0 + 3*681*FLEN/8, x4, x1, x2)

inst_95146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a0ffffffffffff; valaddr_reg:x3; val_offset:285438*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285438*0 + 3*682*FLEN/8, x4, x1, x2)

inst_95147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a1ffffffffffff; valaddr_reg:x3; val_offset:285441*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285441*0 + 3*683*FLEN/8, x4, x1, x2)

inst_95148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a3ffffffffffff; valaddr_reg:x3; val_offset:285444*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285444*0 + 3*684*FLEN/8, x4, x1, x2)

inst_95149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a7ffffffffffff; valaddr_reg:x3; val_offset:285447*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285447*0 + 3*685*FLEN/8, x4, x1, x2)

inst_95150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1a8000000000000; valaddr_reg:x3; val_offset:285450*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285450*0 + 3*686*FLEN/8, x4, x1, x2)

inst_95151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1ac000000000000; valaddr_reg:x3; val_offset:285453*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285453*0 + 3*687*FLEN/8, x4, x1, x2)

inst_95152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1ae000000000000; valaddr_reg:x3; val_offset:285456*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285456*0 + 3*688*FLEN/8, x4, x1, x2)

inst_95153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1af000000000000; valaddr_reg:x3; val_offset:285459*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285459*0 + 3*689*FLEN/8, x4, x1, x2)

inst_95154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1af800000000000; valaddr_reg:x3; val_offset:285462*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285462*0 + 3*690*FLEN/8, x4, x1, x2)

inst_95155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afc00000000000; valaddr_reg:x3; val_offset:285465*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285465*0 + 3*691*FLEN/8, x4, x1, x2)

inst_95156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afe00000000000; valaddr_reg:x3; val_offset:285468*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285468*0 + 3*692*FLEN/8, x4, x1, x2)

inst_95157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1aff00000000000; valaddr_reg:x3; val_offset:285471*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285471*0 + 3*693*FLEN/8, x4, x1, x2)

inst_95158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1aff80000000000; valaddr_reg:x3; val_offset:285474*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285474*0 + 3*694*FLEN/8, x4, x1, x2)

inst_95159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affc0000000000; valaddr_reg:x3; val_offset:285477*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285477*0 + 3*695*FLEN/8, x4, x1, x2)

inst_95160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affe0000000000; valaddr_reg:x3; val_offset:285480*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285480*0 + 3*696*FLEN/8, x4, x1, x2)

inst_95161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afff0000000000; valaddr_reg:x3; val_offset:285483*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285483*0 + 3*697*FLEN/8, x4, x1, x2)

inst_95162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afff8000000000; valaddr_reg:x3; val_offset:285486*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285486*0 + 3*698*FLEN/8, x4, x1, x2)

inst_95163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffc000000000; valaddr_reg:x3; val_offset:285489*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285489*0 + 3*699*FLEN/8, x4, x1, x2)

inst_95164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffe000000000; valaddr_reg:x3; val_offset:285492*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285492*0 + 3*700*FLEN/8, x4, x1, x2)

inst_95165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affff000000000; valaddr_reg:x3; val_offset:285495*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285495*0 + 3*701*FLEN/8, x4, x1, x2)

inst_95166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affff800000000; valaddr_reg:x3; val_offset:285498*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285498*0 + 3*702*FLEN/8, x4, x1, x2)

inst_95167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffc00000000; valaddr_reg:x3; val_offset:285501*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285501*0 + 3*703*FLEN/8, x4, x1, x2)

inst_95168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffe00000000; valaddr_reg:x3; val_offset:285504*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285504*0 + 3*704*FLEN/8, x4, x1, x2)

inst_95169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffff00000000; valaddr_reg:x3; val_offset:285507*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285507*0 + 3*705*FLEN/8, x4, x1, x2)

inst_95170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffff80000000; valaddr_reg:x3; val_offset:285510*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285510*0 + 3*706*FLEN/8, x4, x1, x2)

inst_95171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffc0000000; valaddr_reg:x3; val_offset:285513*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285513*0 + 3*707*FLEN/8, x4, x1, x2)

inst_95172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffe0000000; valaddr_reg:x3; val_offset:285516*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285516*0 + 3*708*FLEN/8, x4, x1, x2)

inst_95173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffff0000000; valaddr_reg:x3; val_offset:285519*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285519*0 + 3*709*FLEN/8, x4, x1, x2)

inst_95174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffff8000000; valaddr_reg:x3; val_offset:285522*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285522*0 + 3*710*FLEN/8, x4, x1, x2)

inst_95175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffc000000; valaddr_reg:x3; val_offset:285525*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285525*0 + 3*711*FLEN/8, x4, x1, x2)

inst_95176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffe000000; valaddr_reg:x3; val_offset:285528*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285528*0 + 3*712*FLEN/8, x4, x1, x2)

inst_95177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffff000000; valaddr_reg:x3; val_offset:285531*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285531*0 + 3*713*FLEN/8, x4, x1, x2)

inst_95178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffff800000; valaddr_reg:x3; val_offset:285534*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285534*0 + 3*714*FLEN/8, x4, x1, x2)

inst_95179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffc00000; valaddr_reg:x3; val_offset:285537*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285537*0 + 3*715*FLEN/8, x4, x1, x2)

inst_95180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffe00000; valaddr_reg:x3; val_offset:285540*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285540*0 + 3*716*FLEN/8, x4, x1, x2)

inst_95181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffff00000; valaddr_reg:x3; val_offset:285543*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285543*0 + 3*717*FLEN/8, x4, x1, x2)

inst_95182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffff80000; valaddr_reg:x3; val_offset:285546*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285546*0 + 3*718*FLEN/8, x4, x1, x2)

inst_95183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffc0000; valaddr_reg:x3; val_offset:285549*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285549*0 + 3*719*FLEN/8, x4, x1, x2)

inst_95184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffe0000; valaddr_reg:x3; val_offset:285552*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285552*0 + 3*720*FLEN/8, x4, x1, x2)

inst_95185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffff0000; valaddr_reg:x3; val_offset:285555*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285555*0 + 3*721*FLEN/8, x4, x1, x2)

inst_95186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffff8000; valaddr_reg:x3; val_offset:285558*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285558*0 + 3*722*FLEN/8, x4, x1, x2)

inst_95187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffc000; valaddr_reg:x3; val_offset:285561*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285561*0 + 3*723*FLEN/8, x4, x1, x2)

inst_95188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffe000; valaddr_reg:x3; val_offset:285564*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285564*0 + 3*724*FLEN/8, x4, x1, x2)

inst_95189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffff000; valaddr_reg:x3; val_offset:285567*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285567*0 + 3*725*FLEN/8, x4, x1, x2)

inst_95190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffff800; valaddr_reg:x3; val_offset:285570*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285570*0 + 3*726*FLEN/8, x4, x1, x2)

inst_95191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffffc00; valaddr_reg:x3; val_offset:285573*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285573*0 + 3*727*FLEN/8, x4, x1, x2)

inst_95192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffffe00; valaddr_reg:x3; val_offset:285576*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285576*0 + 3*728*FLEN/8, x4, x1, x2)

inst_95193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffff00; valaddr_reg:x3; val_offset:285579*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285579*0 + 3*729*FLEN/8, x4, x1, x2)

inst_95194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffff80; valaddr_reg:x3; val_offset:285582*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285582*0 + 3*730*FLEN/8, x4, x1, x2)

inst_95195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffffc0; valaddr_reg:x3; val_offset:285585*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285585*0 + 3*731*FLEN/8, x4, x1, x2)

inst_95196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffffe0; valaddr_reg:x3; val_offset:285588*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285588*0 + 3*732*FLEN/8, x4, x1, x2)

inst_95197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffffff0; valaddr_reg:x3; val_offset:285591*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285591*0 + 3*733*FLEN/8, x4, x1, x2)

inst_95198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffffff8; valaddr_reg:x3; val_offset:285594*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285594*0 + 3*734*FLEN/8, x4, x1, x2)

inst_95199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffffffc; valaddr_reg:x3; val_offset:285597*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285597*0 + 3*735*FLEN/8, x4, x1, x2)

inst_95200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1affffffffffffe; valaddr_reg:x3; val_offset:285600*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285600*0 + 3*736*FLEN/8, x4, x1, x2)

inst_95201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe0da7fdfbb633 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae0da7fdfbb633; op2val:0x0;
op3val:0x1afffffffffffff; valaddr_reg:x3; val_offset:285603*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285603*0 + 3*737*FLEN/8, x4, x1, x2)

inst_95202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:285606*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285606*0 + 3*738*FLEN/8, x4, x1, x2)

inst_95203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:285609*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285609*0 + 3*739*FLEN/8, x4, x1, x2)

inst_95204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:285612*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285612*0 + 3*740*FLEN/8, x4, x1, x2)

inst_95205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:285615*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285615*0 + 3*741*FLEN/8, x4, x1, x2)

inst_95206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:285618*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285618*0 + 3*742*FLEN/8, x4, x1, x2)

inst_95207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:285621*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285621*0 + 3*743*FLEN/8, x4, x1, x2)

inst_95208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:285624*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285624*0 + 3*744*FLEN/8, x4, x1, x2)

inst_95209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:285627*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285627*0 + 3*745*FLEN/8, x4, x1, x2)

inst_95210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:285630*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285630*0 + 3*746*FLEN/8, x4, x1, x2)

inst_95211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:285633*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285633*0 + 3*747*FLEN/8, x4, x1, x2)

inst_95212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:285636*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285636*0 + 3*748*FLEN/8, x4, x1, x2)

inst_95213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:285639*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285639*0 + 3*749*FLEN/8, x4, x1, x2)

inst_95214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:285642*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285642*0 + 3*750*FLEN/8, x4, x1, x2)

inst_95215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:285645*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285645*0 + 3*751*FLEN/8, x4, x1, x2)

inst_95216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:285648*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285648*0 + 3*752*FLEN/8, x4, x1, x2)

inst_95217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:285651*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285651*0 + 3*753*FLEN/8, x4, x1, x2)

inst_95218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:285654*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285654*0 + 3*754*FLEN/8, x4, x1, x2)

inst_95219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:285657*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285657*0 + 3*755*FLEN/8, x4, x1, x2)

inst_95220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:285660*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285660*0 + 3*756*FLEN/8, x4, x1, x2)

inst_95221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:285663*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285663*0 + 3*757*FLEN/8, x4, x1, x2)

inst_95222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:285666*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285666*0 + 3*758*FLEN/8, x4, x1, x2)

inst_95223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:285669*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285669*0 + 3*759*FLEN/8, x4, x1, x2)

inst_95224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:285672*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285672*0 + 3*760*FLEN/8, x4, x1, x2)

inst_95225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:285675*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285675*0 + 3*761*FLEN/8, x4, x1, x2)

inst_95226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:285678*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285678*0 + 3*762*FLEN/8, x4, x1, x2)

inst_95227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:285681*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285681*0 + 3*763*FLEN/8, x4, x1, x2)

inst_95228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:285684*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285684*0 + 3*764*FLEN/8, x4, x1, x2)

inst_95229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:285687*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285687*0 + 3*765*FLEN/8, x4, x1, x2)

inst_95230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:285690*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285690*0 + 3*766*FLEN/8, x4, x1, x2)

inst_95231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1474cf35fa01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae1474cf35fa01; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:285693*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285693*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559616,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559617,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559619,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559623,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559631,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559647,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559679,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559743,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559871,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560127,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560639,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968561663,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968563711,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968567807,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968575999,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968592383,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968625151,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968690687,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968821759,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969083903,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969608191,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818970656767,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818972753919,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818976948223,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818985336831,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819002114047,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819035668479,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819102777343,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819236995071,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819505430527,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544820042301439,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544821116043263,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544823263526911,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544827558494207,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544836148428799,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544853328297983,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544887688036351,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544956407513087,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545093846466559,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545368724373503,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545918480187391,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439547017991815167,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439549217015070719,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439553615061581823,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439562411154604031,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439580003340648447,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439615187712737279,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439685556456914943,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439826293945270271,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440107768921980927,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440670718875402239,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244863,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244864,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9442922518689087488,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443485468642508800,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443766943619219456,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443907681107574784,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443978049851752448,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444013234223841280,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444030826409885696,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444039622502907904,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444044020549419008,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444046219572674560,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047319084302336,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047868840116224,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048143718023168,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048281156976640,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048349876453376,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048384236191744,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048401416060928,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048410005995520,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048414300962816,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048416448446464,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048417522188288,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418059059200,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418327494656,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418461712384,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418528821248,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418562375680,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418579152896,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418587541504,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418591735808,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418593832960,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418594881536,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595405824,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595667968,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595799040,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595864576,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595897344,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595913728,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595921920,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595926016,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595928064,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929088,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929600,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929856,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929984,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930048,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930080,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930096,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930104,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930108,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930110,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930111,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375614840832,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375883276288,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376017494016,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376084602880,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376118157312,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376134934528,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376143323136,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376147517440,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376149614592,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376150663168,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151187456,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151449600,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151580672,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151646208,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151678976,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151695360,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151703552,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151707648,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151709696,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151710720,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711232,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711488,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711616,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711680,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711712,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711728,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711736,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711740,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711742,64,FLEN)
NAN_BOXED(6894362489874161859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711743,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711744,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711745,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711747,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711751,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711759,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711775,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711807,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711871,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711999,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712255,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712767,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151713791,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151715839,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151719935,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151728127,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151744511,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151777279,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151842815,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151973887,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152236031,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152760319,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376153808895,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376155906047,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376160100351,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376168488959,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376185266175,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376218820607,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376285929471,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376420147199,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376688582655,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230377225453567,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230378299195391,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230380446679039,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230384741646335,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230393331580927,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230410511450111,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230444871188479,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230513590665215,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230651029618687,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230925907525631,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288231475663339519,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288232575174967295,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288234774198222847,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288239172244733951,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288247968337756159,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288265560523800575,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288300744895889407,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288371113640067071,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288511851128422399,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288793326105133055,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(289356276058554367,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(290482175965396991,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(290482175965396992,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(291608075872239616,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292171025825660928,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292452500802371584,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292593238290726912,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292663607034904576,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292698791406993408,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292716383593037824,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292725179686060032,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292729577732571136,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292731776755826688,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292732876267454464,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733426023268352,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733700901175296,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733838340128768,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733907059605504,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733941419343872,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733958599213056,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733967189147648,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733971484114944,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733973631598592,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733974705340416,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975242211328,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975510646784,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975644864512,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975711973376,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975745527808,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975762305024,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975770693632,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975774887936,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975776985088,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778033664,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778557952,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778820096,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778951168,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779016704,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779049472,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779065856,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779074048,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779078144,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779080192,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081216,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081728,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081984,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082112,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082176,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082208,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082224,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082232,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082236,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082238,64,FLEN)
NAN_BOXED(6894408662472449799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082239,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963968,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963969,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963971,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963975,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963983,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963999,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964031,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964095,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6894410975480915978,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082688,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082689,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082691,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082695,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082703,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082719,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082751,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082815,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884082943,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884083199,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884083711,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884084735,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884086783,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884090879,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884099071,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884115455,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884148223,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884213759,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884344831,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444884606975,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444885131263,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444886179839,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444888276991,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444892471295,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444900859903,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444917637119,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930444951191551,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930445018300415,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930445152518143,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930445420953599,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930445957824511,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930447031566335,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930449179049983,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930453474017279,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930462063951871,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930479243821055,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930513603559423,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930582323036159,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930719761989631,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291930994639896575,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291931544395710463,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291932643907338239,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291934842930593791,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291939240977104895,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291948037070127103,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4291965629256171519,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4292000813628260351,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4292071182372438015,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4292211919860793343,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4292493394837503999,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4293056344790925311,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4294182244697767935,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4294182244697767936,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4295308144604610560,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4295871094558031872,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296152569534742528,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296293307023097856,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296363675767275520,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296398860139364352,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296416452325408768,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296425248418430976,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296429646464942080,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296431845488197632,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296432944999825408,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296433494755639296,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296433769633546240,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296433907072499712,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296433975791976448,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434010151714816,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434027331584000,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434035921518592,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434040216485888,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434042363969536,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434043437711360,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434043974582272,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044243017728,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044377235456,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044444344320,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044477898752,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044494675968,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044503064576,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044507258880,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044509356032,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044510404608,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044510928896,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511191040,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511322112,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511387648,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511420416,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511436800,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511444992,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511449088,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511451136,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511452160,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511452672,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511452928,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453056,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453120,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453152,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453168,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453176,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453180,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453182,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4296434044511453183,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894452167934603460,64,FLEN)
NAN_BOXED(2319651723360385052,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632896,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632897,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632899,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632903,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632911,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632927,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632959,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633023,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633151,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633407,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633919,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311634943,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311636991,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311641087,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311649279,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311665663,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311698431,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311763967,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311895039,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590312157183,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590312681471,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590313730047,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590315827199,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590320021503,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590328410111,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590345187327,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590378741759,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590445850623,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590580068351,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590848503807,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093591385374719,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093592459116543,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093594606600191,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093598901567487,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093607491502079,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093624671371263,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093659031109631,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093727750586367,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093865189539839,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117094140067446783,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117094689823260671,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117095789334888447,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117097988358143999,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117102386404655103,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117111182497677311,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117128774683721727,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117163959055810559,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117234327799988223,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117375065288343551,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117656540265054207,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(118219490218475519,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318143,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318144,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(120471290032160768,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121034239985582080,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121315714962292736,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121456452450648064,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121526821194825728,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121562005566914560,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121579597752958976,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121588393845981184,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121592791892492288,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121594990915747840,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596090427375616,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596640183189504,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596915061096448,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597052500049920,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597121219526656,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597155579265024,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597172759134208,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597181349068800,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597185644036096,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597187791519744,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597188865261568,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189402132480,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189670567936,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189804785664,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189871894528,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189905448960,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189922226176,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189930614784,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189934809088,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189936906240,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189937954816,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938479104,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938741248,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938872320,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938937856,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938970624,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938987008,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938995200,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938999296,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939001344,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002368,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002880,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003136,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003264,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003328,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003360,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003376,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003384,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003388,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003390,64,FLEN)
NAN_BOXED(6894463094722639411,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003391,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6894470571475991041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
