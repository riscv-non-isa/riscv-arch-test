
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_93696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:281088*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281088*0 + 3*0*FLEN/8, x4, x1, x2)

inst_93697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:281091*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281091*0 + 3*1*FLEN/8, x4, x1, x2)

inst_93698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:281094*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281094*0 + 3*2*FLEN/8, x4, x1, x2)

inst_93699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:281097*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281097*0 + 3*3*FLEN/8, x4, x1, x2)

inst_93700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:281100*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281100*0 + 3*4*FLEN/8, x4, x1, x2)

inst_93701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:281103*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281103*0 + 3*5*FLEN/8, x4, x1, x2)

inst_93702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:281106*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281106*0 + 3*6*FLEN/8, x4, x1, x2)

inst_93703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:281109*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281109*0 + 3*7*FLEN/8, x4, x1, x2)

inst_93704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:281112*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281112*0 + 3*8*FLEN/8, x4, x1, x2)

inst_93705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:281115*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281115*0 + 3*9*FLEN/8, x4, x1, x2)

inst_93706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:281118*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281118*0 + 3*10*FLEN/8, x4, x1, x2)

inst_93707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:281121*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281121*0 + 3*11*FLEN/8, x4, x1, x2)

inst_93708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:281124*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281124*0 + 3*12*FLEN/8, x4, x1, x2)

inst_93709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:281127*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281127*0 + 3*13*FLEN/8, x4, x1, x2)

inst_93710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:281130*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281130*0 + 3*14*FLEN/8, x4, x1, x2)

inst_93711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:281133*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281133*0 + 3*15*FLEN/8, x4, x1, x2)

inst_93712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000000000; valaddr_reg:x3; val_offset:281136*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281136*0 + 3*16*FLEN/8, x4, x1, x2)

inst_93713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000000001; valaddr_reg:x3; val_offset:281139*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281139*0 + 3*17*FLEN/8, x4, x1, x2)

inst_93714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000000003; valaddr_reg:x3; val_offset:281142*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281142*0 + 3*18*FLEN/8, x4, x1, x2)

inst_93715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000000007; valaddr_reg:x3; val_offset:281145*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281145*0 + 3*19*FLEN/8, x4, x1, x2)

inst_93716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000000000f; valaddr_reg:x3; val_offset:281148*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281148*0 + 3*20*FLEN/8, x4, x1, x2)

inst_93717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000000001f; valaddr_reg:x3; val_offset:281151*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281151*0 + 3*21*FLEN/8, x4, x1, x2)

inst_93718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000000003f; valaddr_reg:x3; val_offset:281154*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281154*0 + 3*22*FLEN/8, x4, x1, x2)

inst_93719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000000007f; valaddr_reg:x3; val_offset:281157*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281157*0 + 3*23*FLEN/8, x4, x1, x2)

inst_93720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000000000ff; valaddr_reg:x3; val_offset:281160*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281160*0 + 3*24*FLEN/8, x4, x1, x2)

inst_93721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000000001ff; valaddr_reg:x3; val_offset:281163*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281163*0 + 3*25*FLEN/8, x4, x1, x2)

inst_93722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000000003ff; valaddr_reg:x3; val_offset:281166*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281166*0 + 3*26*FLEN/8, x4, x1, x2)

inst_93723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000000007ff; valaddr_reg:x3; val_offset:281169*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281169*0 + 3*27*FLEN/8, x4, x1, x2)

inst_93724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000000fff; valaddr_reg:x3; val_offset:281172*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281172*0 + 3*28*FLEN/8, x4, x1, x2)

inst_93725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000001fff; valaddr_reg:x3; val_offset:281175*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281175*0 + 3*29*FLEN/8, x4, x1, x2)

inst_93726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000003fff; valaddr_reg:x3; val_offset:281178*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281178*0 + 3*30*FLEN/8, x4, x1, x2)

inst_93727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000007fff; valaddr_reg:x3; val_offset:281181*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281181*0 + 3*31*FLEN/8, x4, x1, x2)

inst_93728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000000ffff; valaddr_reg:x3; val_offset:281184*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281184*0 + 3*32*FLEN/8, x4, x1, x2)

inst_93729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000001ffff; valaddr_reg:x3; val_offset:281187*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281187*0 + 3*33*FLEN/8, x4, x1, x2)

inst_93730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000003ffff; valaddr_reg:x3; val_offset:281190*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281190*0 + 3*34*FLEN/8, x4, x1, x2)

inst_93731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000007ffff; valaddr_reg:x3; val_offset:281193*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281193*0 + 3*35*FLEN/8, x4, x1, x2)

inst_93732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000000fffff; valaddr_reg:x3; val_offset:281196*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281196*0 + 3*36*FLEN/8, x4, x1, x2)

inst_93733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000001fffff; valaddr_reg:x3; val_offset:281199*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281199*0 + 3*37*FLEN/8, x4, x1, x2)

inst_93734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000003fffff; valaddr_reg:x3; val_offset:281202*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281202*0 + 3*38*FLEN/8, x4, x1, x2)

inst_93735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000007fffff; valaddr_reg:x3; val_offset:281205*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281205*0 + 3*39*FLEN/8, x4, x1, x2)

inst_93736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000000ffffff; valaddr_reg:x3; val_offset:281208*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281208*0 + 3*40*FLEN/8, x4, x1, x2)

inst_93737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000001ffffff; valaddr_reg:x3; val_offset:281211*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281211*0 + 3*41*FLEN/8, x4, x1, x2)

inst_93738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000003ffffff; valaddr_reg:x3; val_offset:281214*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281214*0 + 3*42*FLEN/8, x4, x1, x2)

inst_93739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000007ffffff; valaddr_reg:x3; val_offset:281217*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281217*0 + 3*43*FLEN/8, x4, x1, x2)

inst_93740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000000fffffff; valaddr_reg:x3; val_offset:281220*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281220*0 + 3*44*FLEN/8, x4, x1, x2)

inst_93741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000001fffffff; valaddr_reg:x3; val_offset:281223*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281223*0 + 3*45*FLEN/8, x4, x1, x2)

inst_93742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000003fffffff; valaddr_reg:x3; val_offset:281226*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281226*0 + 3*46*FLEN/8, x4, x1, x2)

inst_93743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000007fffffff; valaddr_reg:x3; val_offset:281229*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281229*0 + 3*47*FLEN/8, x4, x1, x2)

inst_93744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300000ffffffff; valaddr_reg:x3; val_offset:281232*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281232*0 + 3*48*FLEN/8, x4, x1, x2)

inst_93745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300001ffffffff; valaddr_reg:x3; val_offset:281235*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281235*0 + 3*49*FLEN/8, x4, x1, x2)

inst_93746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300003ffffffff; valaddr_reg:x3; val_offset:281238*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281238*0 + 3*50*FLEN/8, x4, x1, x2)

inst_93747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300007ffffffff; valaddr_reg:x3; val_offset:281241*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281241*0 + 3*51*FLEN/8, x4, x1, x2)

inst_93748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230000fffffffff; valaddr_reg:x3; val_offset:281244*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281244*0 + 3*52*FLEN/8, x4, x1, x2)

inst_93749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230001fffffffff; valaddr_reg:x3; val_offset:281247*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281247*0 + 3*53*FLEN/8, x4, x1, x2)

inst_93750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230003fffffffff; valaddr_reg:x3; val_offset:281250*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281250*0 + 3*54*FLEN/8, x4, x1, x2)

inst_93751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230007fffffffff; valaddr_reg:x3; val_offset:281253*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281253*0 + 3*55*FLEN/8, x4, x1, x2)

inst_93752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23000ffffffffff; valaddr_reg:x3; val_offset:281256*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281256*0 + 3*56*FLEN/8, x4, x1, x2)

inst_93753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23001ffffffffff; valaddr_reg:x3; val_offset:281259*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281259*0 + 3*57*FLEN/8, x4, x1, x2)

inst_93754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23003ffffffffff; valaddr_reg:x3; val_offset:281262*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281262*0 + 3*58*FLEN/8, x4, x1, x2)

inst_93755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23007ffffffffff; valaddr_reg:x3; val_offset:281265*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281265*0 + 3*59*FLEN/8, x4, x1, x2)

inst_93756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2300fffffffffff; valaddr_reg:x3; val_offset:281268*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281268*0 + 3*60*FLEN/8, x4, x1, x2)

inst_93757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2301fffffffffff; valaddr_reg:x3; val_offset:281271*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281271*0 + 3*61*FLEN/8, x4, x1, x2)

inst_93758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2303fffffffffff; valaddr_reg:x3; val_offset:281274*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281274*0 + 3*62*FLEN/8, x4, x1, x2)

inst_93759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x2307fffffffffff; valaddr_reg:x3; val_offset:281277*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281277*0 + 3*63*FLEN/8, x4, x1, x2)

inst_93760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x230ffffffffffff; valaddr_reg:x3; val_offset:281280*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281280*0 + 3*64*FLEN/8, x4, x1, x2)

inst_93761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x231ffffffffffff; valaddr_reg:x3; val_offset:281283*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281283*0 + 3*65*FLEN/8, x4, x1, x2)

inst_93762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x233ffffffffffff; valaddr_reg:x3; val_offset:281286*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281286*0 + 3*66*FLEN/8, x4, x1, x2)

inst_93763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x237ffffffffffff; valaddr_reg:x3; val_offset:281289*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281289*0 + 3*67*FLEN/8, x4, x1, x2)

inst_93764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x238000000000000; valaddr_reg:x3; val_offset:281292*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281292*0 + 3*68*FLEN/8, x4, x1, x2)

inst_93765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23c000000000000; valaddr_reg:x3; val_offset:281295*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281295*0 + 3*69*FLEN/8, x4, x1, x2)

inst_93766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23e000000000000; valaddr_reg:x3; val_offset:281298*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281298*0 + 3*70*FLEN/8, x4, x1, x2)

inst_93767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23f000000000000; valaddr_reg:x3; val_offset:281301*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281301*0 + 3*71*FLEN/8, x4, x1, x2)

inst_93768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23f800000000000; valaddr_reg:x3; val_offset:281304*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281304*0 + 3*72*FLEN/8, x4, x1, x2)

inst_93769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fc00000000000; valaddr_reg:x3; val_offset:281307*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281307*0 + 3*73*FLEN/8, x4, x1, x2)

inst_93770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fe00000000000; valaddr_reg:x3; val_offset:281310*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281310*0 + 3*74*FLEN/8, x4, x1, x2)

inst_93771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ff00000000000; valaddr_reg:x3; val_offset:281313*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281313*0 + 3*75*FLEN/8, x4, x1, x2)

inst_93772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ff80000000000; valaddr_reg:x3; val_offset:281316*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281316*0 + 3*76*FLEN/8, x4, x1, x2)

inst_93773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffc0000000000; valaddr_reg:x3; val_offset:281319*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281319*0 + 3*77*FLEN/8, x4, x1, x2)

inst_93774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffe0000000000; valaddr_reg:x3; val_offset:281322*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281322*0 + 3*78*FLEN/8, x4, x1, x2)

inst_93775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fff0000000000; valaddr_reg:x3; val_offset:281325*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281325*0 + 3*79*FLEN/8, x4, x1, x2)

inst_93776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fff8000000000; valaddr_reg:x3; val_offset:281328*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281328*0 + 3*80*FLEN/8, x4, x1, x2)

inst_93777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffc000000000; valaddr_reg:x3; val_offset:281331*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281331*0 + 3*81*FLEN/8, x4, x1, x2)

inst_93778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffe000000000; valaddr_reg:x3; val_offset:281334*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281334*0 + 3*82*FLEN/8, x4, x1, x2)

inst_93779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffff000000000; valaddr_reg:x3; val_offset:281337*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281337*0 + 3*83*FLEN/8, x4, x1, x2)

inst_93780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffff800000000; valaddr_reg:x3; val_offset:281340*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281340*0 + 3*84*FLEN/8, x4, x1, x2)

inst_93781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffc00000000; valaddr_reg:x3; val_offset:281343*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281343*0 + 3*85*FLEN/8, x4, x1, x2)

inst_93782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffe00000000; valaddr_reg:x3; val_offset:281346*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281346*0 + 3*86*FLEN/8, x4, x1, x2)

inst_93783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffff00000000; valaddr_reg:x3; val_offset:281349*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281349*0 + 3*87*FLEN/8, x4, x1, x2)

inst_93784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffff80000000; valaddr_reg:x3; val_offset:281352*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281352*0 + 3*88*FLEN/8, x4, x1, x2)

inst_93785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffc0000000; valaddr_reg:x3; val_offset:281355*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281355*0 + 3*89*FLEN/8, x4, x1, x2)

inst_93786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffe0000000; valaddr_reg:x3; val_offset:281358*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281358*0 + 3*90*FLEN/8, x4, x1, x2)

inst_93787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffff0000000; valaddr_reg:x3; val_offset:281361*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281361*0 + 3*91*FLEN/8, x4, x1, x2)

inst_93788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffff8000000; valaddr_reg:x3; val_offset:281364*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281364*0 + 3*92*FLEN/8, x4, x1, x2)

inst_93789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffc000000; valaddr_reg:x3; val_offset:281367*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281367*0 + 3*93*FLEN/8, x4, x1, x2)

inst_93790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffe000000; valaddr_reg:x3; val_offset:281370*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281370*0 + 3*94*FLEN/8, x4, x1, x2)

inst_93791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffff000000; valaddr_reg:x3; val_offset:281373*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281373*0 + 3*95*FLEN/8, x4, x1, x2)

inst_93792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffff800000; valaddr_reg:x3; val_offset:281376*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281376*0 + 3*96*FLEN/8, x4, x1, x2)

inst_93793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffc00000; valaddr_reg:x3; val_offset:281379*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281379*0 + 3*97*FLEN/8, x4, x1, x2)

inst_93794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffe00000; valaddr_reg:x3; val_offset:281382*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281382*0 + 3*98*FLEN/8, x4, x1, x2)

inst_93795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffff00000; valaddr_reg:x3; val_offset:281385*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281385*0 + 3*99*FLEN/8, x4, x1, x2)

inst_93796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffff80000; valaddr_reg:x3; val_offset:281388*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281388*0 + 3*100*FLEN/8, x4, x1, x2)

inst_93797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffc0000; valaddr_reg:x3; val_offset:281391*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281391*0 + 3*101*FLEN/8, x4, x1, x2)

inst_93798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffe0000; valaddr_reg:x3; val_offset:281394*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281394*0 + 3*102*FLEN/8, x4, x1, x2)

inst_93799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffff0000; valaddr_reg:x3; val_offset:281397*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281397*0 + 3*103*FLEN/8, x4, x1, x2)

inst_93800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffff8000; valaddr_reg:x3; val_offset:281400*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281400*0 + 3*104*FLEN/8, x4, x1, x2)

inst_93801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffc000; valaddr_reg:x3; val_offset:281403*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281403*0 + 3*105*FLEN/8, x4, x1, x2)

inst_93802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffe000; valaddr_reg:x3; val_offset:281406*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281406*0 + 3*106*FLEN/8, x4, x1, x2)

inst_93803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffff000; valaddr_reg:x3; val_offset:281409*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281409*0 + 3*107*FLEN/8, x4, x1, x2)

inst_93804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffff800; valaddr_reg:x3; val_offset:281412*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281412*0 + 3*108*FLEN/8, x4, x1, x2)

inst_93805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffffc00; valaddr_reg:x3; val_offset:281415*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281415*0 + 3*109*FLEN/8, x4, x1, x2)

inst_93806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffffe00; valaddr_reg:x3; val_offset:281418*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281418*0 + 3*110*FLEN/8, x4, x1, x2)

inst_93807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffff00; valaddr_reg:x3; val_offset:281421*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281421*0 + 3*111*FLEN/8, x4, x1, x2)

inst_93808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffff80; valaddr_reg:x3; val_offset:281424*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281424*0 + 3*112*FLEN/8, x4, x1, x2)

inst_93809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffffc0; valaddr_reg:x3; val_offset:281427*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281427*0 + 3*113*FLEN/8, x4, x1, x2)

inst_93810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffffe0; valaddr_reg:x3; val_offset:281430*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281430*0 + 3*114*FLEN/8, x4, x1, x2)

inst_93811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffffff0; valaddr_reg:x3; val_offset:281433*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281433*0 + 3*115*FLEN/8, x4, x1, x2)

inst_93812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffffff8; valaddr_reg:x3; val_offset:281436*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281436*0 + 3*116*FLEN/8, x4, x1, x2)

inst_93813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffffffc; valaddr_reg:x3; val_offset:281439*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281439*0 + 3*117*FLEN/8, x4, x1, x2)

inst_93814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23ffffffffffffe; valaddr_reg:x3; val_offset:281442*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281442*0 + 3*118*FLEN/8, x4, x1, x2)

inst_93815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x23fffffffffffff; valaddr_reg:x3; val_offset:281445*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281445*0 + 3*119*FLEN/8, x4, x1, x2)

inst_93816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:281448*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281448*0 + 3*120*FLEN/8, x4, x1, x2)

inst_93817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:281451*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281451*0 + 3*121*FLEN/8, x4, x1, x2)

inst_93818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:281454*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281454*0 + 3*122*FLEN/8, x4, x1, x2)

inst_93819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:281457*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281457*0 + 3*123*FLEN/8, x4, x1, x2)

inst_93820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:281460*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281460*0 + 3*124*FLEN/8, x4, x1, x2)

inst_93821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:281463*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281463*0 + 3*125*FLEN/8, x4, x1, x2)

inst_93822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:281466*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281466*0 + 3*126*FLEN/8, x4, x1, x2)

inst_93823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:281469*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281469*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_93824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:281472*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281472*0 + 3*128*FLEN/8, x4, x1, x2)

inst_93825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:281475*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281475*0 + 3*129*FLEN/8, x4, x1, x2)

inst_93826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:281478*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281478*0 + 3*130*FLEN/8, x4, x1, x2)

inst_93827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:281481*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281481*0 + 3*131*FLEN/8, x4, x1, x2)

inst_93828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:281484*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281484*0 + 3*132*FLEN/8, x4, x1, x2)

inst_93829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:281487*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281487*0 + 3*133*FLEN/8, x4, x1, x2)

inst_93830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:281490*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281490*0 + 3*134*FLEN/8, x4, x1, x2)

inst_93831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:281493*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281493*0 + 3*135*FLEN/8, x4, x1, x2)

inst_93832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:281496*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281496*0 + 3*136*FLEN/8, x4, x1, x2)

inst_93833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:281499*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281499*0 + 3*137*FLEN/8, x4, x1, x2)

inst_93834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:281502*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281502*0 + 3*138*FLEN/8, x4, x1, x2)

inst_93835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:281505*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281505*0 + 3*139*FLEN/8, x4, x1, x2)

inst_93836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:281508*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281508*0 + 3*140*FLEN/8, x4, x1, x2)

inst_93837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:281511*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281511*0 + 3*141*FLEN/8, x4, x1, x2)

inst_93838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000000000; valaddr_reg:x3; val_offset:281514*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281514*0 + 3*142*FLEN/8, x4, x1, x2)

inst_93839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000000001; valaddr_reg:x3; val_offset:281517*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281517*0 + 3*143*FLEN/8, x4, x1, x2)

inst_93840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000000003; valaddr_reg:x3; val_offset:281520*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281520*0 + 3*144*FLEN/8, x4, x1, x2)

inst_93841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000000007; valaddr_reg:x3; val_offset:281523*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281523*0 + 3*145*FLEN/8, x4, x1, x2)

inst_93842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000000000f; valaddr_reg:x3; val_offset:281526*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281526*0 + 3*146*FLEN/8, x4, x1, x2)

inst_93843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000000001f; valaddr_reg:x3; val_offset:281529*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281529*0 + 3*147*FLEN/8, x4, x1, x2)

inst_93844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000000003f; valaddr_reg:x3; val_offset:281532*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281532*0 + 3*148*FLEN/8, x4, x1, x2)

inst_93845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000000007f; valaddr_reg:x3; val_offset:281535*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281535*0 + 3*149*FLEN/8, x4, x1, x2)

inst_93846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000000000ff; valaddr_reg:x3; val_offset:281538*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281538*0 + 3*150*FLEN/8, x4, x1, x2)

inst_93847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000000001ff; valaddr_reg:x3; val_offset:281541*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281541*0 + 3*151*FLEN/8, x4, x1, x2)

inst_93848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000000003ff; valaddr_reg:x3; val_offset:281544*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281544*0 + 3*152*FLEN/8, x4, x1, x2)

inst_93849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000000007ff; valaddr_reg:x3; val_offset:281547*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281547*0 + 3*153*FLEN/8, x4, x1, x2)

inst_93850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000000fff; valaddr_reg:x3; val_offset:281550*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281550*0 + 3*154*FLEN/8, x4, x1, x2)

inst_93851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000001fff; valaddr_reg:x3; val_offset:281553*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281553*0 + 3*155*FLEN/8, x4, x1, x2)

inst_93852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000003fff; valaddr_reg:x3; val_offset:281556*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281556*0 + 3*156*FLEN/8, x4, x1, x2)

inst_93853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000007fff; valaddr_reg:x3; val_offset:281559*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281559*0 + 3*157*FLEN/8, x4, x1, x2)

inst_93854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000000ffff; valaddr_reg:x3; val_offset:281562*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281562*0 + 3*158*FLEN/8, x4, x1, x2)

inst_93855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000001ffff; valaddr_reg:x3; val_offset:281565*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281565*0 + 3*159*FLEN/8, x4, x1, x2)

inst_93856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000003ffff; valaddr_reg:x3; val_offset:281568*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281568*0 + 3*160*FLEN/8, x4, x1, x2)

inst_93857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000007ffff; valaddr_reg:x3; val_offset:281571*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281571*0 + 3*161*FLEN/8, x4, x1, x2)

inst_93858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000000fffff; valaddr_reg:x3; val_offset:281574*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281574*0 + 3*162*FLEN/8, x4, x1, x2)

inst_93859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000001fffff; valaddr_reg:x3; val_offset:281577*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281577*0 + 3*163*FLEN/8, x4, x1, x2)

inst_93860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000003fffff; valaddr_reg:x3; val_offset:281580*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281580*0 + 3*164*FLEN/8, x4, x1, x2)

inst_93861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000007fffff; valaddr_reg:x3; val_offset:281583*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281583*0 + 3*165*FLEN/8, x4, x1, x2)

inst_93862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000000ffffff; valaddr_reg:x3; val_offset:281586*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281586*0 + 3*166*FLEN/8, x4, x1, x2)

inst_93863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000001ffffff; valaddr_reg:x3; val_offset:281589*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281589*0 + 3*167*FLEN/8, x4, x1, x2)

inst_93864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000003ffffff; valaddr_reg:x3; val_offset:281592*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281592*0 + 3*168*FLEN/8, x4, x1, x2)

inst_93865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000007ffffff; valaddr_reg:x3; val_offset:281595*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281595*0 + 3*169*FLEN/8, x4, x1, x2)

inst_93866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000000fffffff; valaddr_reg:x3; val_offset:281598*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281598*0 + 3*170*FLEN/8, x4, x1, x2)

inst_93867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000001fffffff; valaddr_reg:x3; val_offset:281601*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281601*0 + 3*171*FLEN/8, x4, x1, x2)

inst_93868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000003fffffff; valaddr_reg:x3; val_offset:281604*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281604*0 + 3*172*FLEN/8, x4, x1, x2)

inst_93869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000007fffffff; valaddr_reg:x3; val_offset:281607*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281607*0 + 3*173*FLEN/8, x4, x1, x2)

inst_93870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300000ffffffff; valaddr_reg:x3; val_offset:281610*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281610*0 + 3*174*FLEN/8, x4, x1, x2)

inst_93871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300001ffffffff; valaddr_reg:x3; val_offset:281613*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281613*0 + 3*175*FLEN/8, x4, x1, x2)

inst_93872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300003ffffffff; valaddr_reg:x3; val_offset:281616*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281616*0 + 3*176*FLEN/8, x4, x1, x2)

inst_93873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300007ffffffff; valaddr_reg:x3; val_offset:281619*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281619*0 + 3*177*FLEN/8, x4, x1, x2)

inst_93874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230000fffffffff; valaddr_reg:x3; val_offset:281622*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281622*0 + 3*178*FLEN/8, x4, x1, x2)

inst_93875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230001fffffffff; valaddr_reg:x3; val_offset:281625*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281625*0 + 3*179*FLEN/8, x4, x1, x2)

inst_93876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230003fffffffff; valaddr_reg:x3; val_offset:281628*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281628*0 + 3*180*FLEN/8, x4, x1, x2)

inst_93877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230007fffffffff; valaddr_reg:x3; val_offset:281631*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281631*0 + 3*181*FLEN/8, x4, x1, x2)

inst_93878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23000ffffffffff; valaddr_reg:x3; val_offset:281634*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281634*0 + 3*182*FLEN/8, x4, x1, x2)

inst_93879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23001ffffffffff; valaddr_reg:x3; val_offset:281637*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281637*0 + 3*183*FLEN/8, x4, x1, x2)

inst_93880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23003ffffffffff; valaddr_reg:x3; val_offset:281640*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281640*0 + 3*184*FLEN/8, x4, x1, x2)

inst_93881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23007ffffffffff; valaddr_reg:x3; val_offset:281643*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281643*0 + 3*185*FLEN/8, x4, x1, x2)

inst_93882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2300fffffffffff; valaddr_reg:x3; val_offset:281646*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281646*0 + 3*186*FLEN/8, x4, x1, x2)

inst_93883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2301fffffffffff; valaddr_reg:x3; val_offset:281649*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281649*0 + 3*187*FLEN/8, x4, x1, x2)

inst_93884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2303fffffffffff; valaddr_reg:x3; val_offset:281652*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281652*0 + 3*188*FLEN/8, x4, x1, x2)

inst_93885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x2307fffffffffff; valaddr_reg:x3; val_offset:281655*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281655*0 + 3*189*FLEN/8, x4, x1, x2)

inst_93886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x230ffffffffffff; valaddr_reg:x3; val_offset:281658*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281658*0 + 3*190*FLEN/8, x4, x1, x2)

inst_93887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x231ffffffffffff; valaddr_reg:x3; val_offset:281661*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281661*0 + 3*191*FLEN/8, x4, x1, x2)

inst_93888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x233ffffffffffff; valaddr_reg:x3; val_offset:281664*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281664*0 + 3*192*FLEN/8, x4, x1, x2)

inst_93889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x237ffffffffffff; valaddr_reg:x3; val_offset:281667*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281667*0 + 3*193*FLEN/8, x4, x1, x2)

inst_93890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x238000000000000; valaddr_reg:x3; val_offset:281670*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281670*0 + 3*194*FLEN/8, x4, x1, x2)

inst_93891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23c000000000000; valaddr_reg:x3; val_offset:281673*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281673*0 + 3*195*FLEN/8, x4, x1, x2)

inst_93892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23e000000000000; valaddr_reg:x3; val_offset:281676*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281676*0 + 3*196*FLEN/8, x4, x1, x2)

inst_93893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23f000000000000; valaddr_reg:x3; val_offset:281679*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281679*0 + 3*197*FLEN/8, x4, x1, x2)

inst_93894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23f800000000000; valaddr_reg:x3; val_offset:281682*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281682*0 + 3*198*FLEN/8, x4, x1, x2)

inst_93895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fc00000000000; valaddr_reg:x3; val_offset:281685*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281685*0 + 3*199*FLEN/8, x4, x1, x2)

inst_93896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fe00000000000; valaddr_reg:x3; val_offset:281688*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281688*0 + 3*200*FLEN/8, x4, x1, x2)

inst_93897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ff00000000000; valaddr_reg:x3; val_offset:281691*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281691*0 + 3*201*FLEN/8, x4, x1, x2)

inst_93898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ff80000000000; valaddr_reg:x3; val_offset:281694*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281694*0 + 3*202*FLEN/8, x4, x1, x2)

inst_93899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffc0000000000; valaddr_reg:x3; val_offset:281697*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281697*0 + 3*203*FLEN/8, x4, x1, x2)

inst_93900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffe0000000000; valaddr_reg:x3; val_offset:281700*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281700*0 + 3*204*FLEN/8, x4, x1, x2)

inst_93901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fff0000000000; valaddr_reg:x3; val_offset:281703*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281703*0 + 3*205*FLEN/8, x4, x1, x2)

inst_93902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fff8000000000; valaddr_reg:x3; val_offset:281706*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281706*0 + 3*206*FLEN/8, x4, x1, x2)

inst_93903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffc000000000; valaddr_reg:x3; val_offset:281709*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281709*0 + 3*207*FLEN/8, x4, x1, x2)

inst_93904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffe000000000; valaddr_reg:x3; val_offset:281712*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281712*0 + 3*208*FLEN/8, x4, x1, x2)

inst_93905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffff000000000; valaddr_reg:x3; val_offset:281715*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281715*0 + 3*209*FLEN/8, x4, x1, x2)

inst_93906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffff800000000; valaddr_reg:x3; val_offset:281718*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281718*0 + 3*210*FLEN/8, x4, x1, x2)

inst_93907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffc00000000; valaddr_reg:x3; val_offset:281721*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281721*0 + 3*211*FLEN/8, x4, x1, x2)

inst_93908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffe00000000; valaddr_reg:x3; val_offset:281724*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281724*0 + 3*212*FLEN/8, x4, x1, x2)

inst_93909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffff00000000; valaddr_reg:x3; val_offset:281727*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281727*0 + 3*213*FLEN/8, x4, x1, x2)

inst_93910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffff80000000; valaddr_reg:x3; val_offset:281730*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281730*0 + 3*214*FLEN/8, x4, x1, x2)

inst_93911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffc0000000; valaddr_reg:x3; val_offset:281733*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281733*0 + 3*215*FLEN/8, x4, x1, x2)

inst_93912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffe0000000; valaddr_reg:x3; val_offset:281736*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281736*0 + 3*216*FLEN/8, x4, x1, x2)

inst_93913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffff0000000; valaddr_reg:x3; val_offset:281739*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281739*0 + 3*217*FLEN/8, x4, x1, x2)

inst_93914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffff8000000; valaddr_reg:x3; val_offset:281742*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281742*0 + 3*218*FLEN/8, x4, x1, x2)

inst_93915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffc000000; valaddr_reg:x3; val_offset:281745*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281745*0 + 3*219*FLEN/8, x4, x1, x2)

inst_93916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffe000000; valaddr_reg:x3; val_offset:281748*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281748*0 + 3*220*FLEN/8, x4, x1, x2)

inst_93917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffff000000; valaddr_reg:x3; val_offset:281751*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281751*0 + 3*221*FLEN/8, x4, x1, x2)

inst_93918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffff800000; valaddr_reg:x3; val_offset:281754*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281754*0 + 3*222*FLEN/8, x4, x1, x2)

inst_93919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffc00000; valaddr_reg:x3; val_offset:281757*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281757*0 + 3*223*FLEN/8, x4, x1, x2)

inst_93920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffe00000; valaddr_reg:x3; val_offset:281760*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281760*0 + 3*224*FLEN/8, x4, x1, x2)

inst_93921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffff00000; valaddr_reg:x3; val_offset:281763*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281763*0 + 3*225*FLEN/8, x4, x1, x2)

inst_93922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffff80000; valaddr_reg:x3; val_offset:281766*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281766*0 + 3*226*FLEN/8, x4, x1, x2)

inst_93923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffc0000; valaddr_reg:x3; val_offset:281769*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281769*0 + 3*227*FLEN/8, x4, x1, x2)

inst_93924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffe0000; valaddr_reg:x3; val_offset:281772*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281772*0 + 3*228*FLEN/8, x4, x1, x2)

inst_93925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffff0000; valaddr_reg:x3; val_offset:281775*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281775*0 + 3*229*FLEN/8, x4, x1, x2)

inst_93926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffff8000; valaddr_reg:x3; val_offset:281778*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281778*0 + 3*230*FLEN/8, x4, x1, x2)

inst_93927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffc000; valaddr_reg:x3; val_offset:281781*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281781*0 + 3*231*FLEN/8, x4, x1, x2)

inst_93928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffe000; valaddr_reg:x3; val_offset:281784*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281784*0 + 3*232*FLEN/8, x4, x1, x2)

inst_93929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffff000; valaddr_reg:x3; val_offset:281787*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281787*0 + 3*233*FLEN/8, x4, x1, x2)

inst_93930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffff800; valaddr_reg:x3; val_offset:281790*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281790*0 + 3*234*FLEN/8, x4, x1, x2)

inst_93931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffffc00; valaddr_reg:x3; val_offset:281793*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281793*0 + 3*235*FLEN/8, x4, x1, x2)

inst_93932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffffe00; valaddr_reg:x3; val_offset:281796*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281796*0 + 3*236*FLEN/8, x4, x1, x2)

inst_93933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffff00; valaddr_reg:x3; val_offset:281799*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281799*0 + 3*237*FLEN/8, x4, x1, x2)

inst_93934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffff80; valaddr_reg:x3; val_offset:281802*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281802*0 + 3*238*FLEN/8, x4, x1, x2)

inst_93935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffffc0; valaddr_reg:x3; val_offset:281805*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281805*0 + 3*239*FLEN/8, x4, x1, x2)

inst_93936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffffe0; valaddr_reg:x3; val_offset:281808*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281808*0 + 3*240*FLEN/8, x4, x1, x2)

inst_93937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffffff0; valaddr_reg:x3; val_offset:281811*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281811*0 + 3*241*FLEN/8, x4, x1, x2)

inst_93938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffffff8; valaddr_reg:x3; val_offset:281814*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281814*0 + 3*242*FLEN/8, x4, x1, x2)

inst_93939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffffffc; valaddr_reg:x3; val_offset:281817*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281817*0 + 3*243*FLEN/8, x4, x1, x2)

inst_93940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23ffffffffffffe; valaddr_reg:x3; val_offset:281820*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281820*0 + 3*244*FLEN/8, x4, x1, x2)

inst_93941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd82919691b59c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad82919691b59c; op2val:0x0;
op3val:0x23fffffffffffff; valaddr_reg:x3; val_offset:281823*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281823*0 + 3*245*FLEN/8, x4, x1, x2)

inst_93942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:281826*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281826*0 + 3*246*FLEN/8, x4, x1, x2)

inst_93943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:281829*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281829*0 + 3*247*FLEN/8, x4, x1, x2)

inst_93944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:281832*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281832*0 + 3*248*FLEN/8, x4, x1, x2)

inst_93945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:281835*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281835*0 + 3*249*FLEN/8, x4, x1, x2)

inst_93946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:281838*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281838*0 + 3*250*FLEN/8, x4, x1, x2)

inst_93947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:281841*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281841*0 + 3*251*FLEN/8, x4, x1, x2)

inst_93948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:281844*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281844*0 + 3*252*FLEN/8, x4, x1, x2)

inst_93949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:281847*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281847*0 + 3*253*FLEN/8, x4, x1, x2)

inst_93950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:281850*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281850*0 + 3*254*FLEN/8, x4, x1, x2)

inst_93951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:281853*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281853*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_93952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:281856*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281856*0 + 3*256*FLEN/8, x4, x1, x2)

inst_93953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:281859*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281859*0 + 3*257*FLEN/8, x4, x1, x2)

inst_93954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:281862*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281862*0 + 3*258*FLEN/8, x4, x1, x2)

inst_93955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:281865*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281865*0 + 3*259*FLEN/8, x4, x1, x2)

inst_93956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:281868*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281868*0 + 3*260*FLEN/8, x4, x1, x2)

inst_93957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:281871*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281871*0 + 3*261*FLEN/8, x4, x1, x2)

inst_93958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:281874*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281874*0 + 3*262*FLEN/8, x4, x1, x2)

inst_93959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:281877*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281877*0 + 3*263*FLEN/8, x4, x1, x2)

inst_93960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:281880*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281880*0 + 3*264*FLEN/8, x4, x1, x2)

inst_93961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:281883*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281883*0 + 3*265*FLEN/8, x4, x1, x2)

inst_93962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:281886*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281886*0 + 3*266*FLEN/8, x4, x1, x2)

inst_93963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:281889*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281889*0 + 3*267*FLEN/8, x4, x1, x2)

inst_93964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000000000; valaddr_reg:x3; val_offset:281892*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281892*0 + 3*268*FLEN/8, x4, x1, x2)

inst_93965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000000001; valaddr_reg:x3; val_offset:281895*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281895*0 + 3*269*FLEN/8, x4, x1, x2)

inst_93966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000000003; valaddr_reg:x3; val_offset:281898*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281898*0 + 3*270*FLEN/8, x4, x1, x2)

inst_93967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000000007; valaddr_reg:x3; val_offset:281901*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281901*0 + 3*271*FLEN/8, x4, x1, x2)

inst_93968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000000000f; valaddr_reg:x3; val_offset:281904*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281904*0 + 3*272*FLEN/8, x4, x1, x2)

inst_93969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000000001f; valaddr_reg:x3; val_offset:281907*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281907*0 + 3*273*FLEN/8, x4, x1, x2)

inst_93970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000000003f; valaddr_reg:x3; val_offset:281910*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281910*0 + 3*274*FLEN/8, x4, x1, x2)

inst_93971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000000007f; valaddr_reg:x3; val_offset:281913*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281913*0 + 3*275*FLEN/8, x4, x1, x2)

inst_93972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000000000ff; valaddr_reg:x3; val_offset:281916*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281916*0 + 3*276*FLEN/8, x4, x1, x2)

inst_93973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000000001ff; valaddr_reg:x3; val_offset:281919*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281919*0 + 3*277*FLEN/8, x4, x1, x2)

inst_93974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000000003ff; valaddr_reg:x3; val_offset:281922*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281922*0 + 3*278*FLEN/8, x4, x1, x2)

inst_93975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000000007ff; valaddr_reg:x3; val_offset:281925*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281925*0 + 3*279*FLEN/8, x4, x1, x2)

inst_93976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000000fff; valaddr_reg:x3; val_offset:281928*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281928*0 + 3*280*FLEN/8, x4, x1, x2)

inst_93977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000001fff; valaddr_reg:x3; val_offset:281931*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281931*0 + 3*281*FLEN/8, x4, x1, x2)

inst_93978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000003fff; valaddr_reg:x3; val_offset:281934*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281934*0 + 3*282*FLEN/8, x4, x1, x2)

inst_93979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000007fff; valaddr_reg:x3; val_offset:281937*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281937*0 + 3*283*FLEN/8, x4, x1, x2)

inst_93980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000000ffff; valaddr_reg:x3; val_offset:281940*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281940*0 + 3*284*FLEN/8, x4, x1, x2)

inst_93981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000001ffff; valaddr_reg:x3; val_offset:281943*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281943*0 + 3*285*FLEN/8, x4, x1, x2)

inst_93982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000003ffff; valaddr_reg:x3; val_offset:281946*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281946*0 + 3*286*FLEN/8, x4, x1, x2)

inst_93983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000007ffff; valaddr_reg:x3; val_offset:281949*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281949*0 + 3*287*FLEN/8, x4, x1, x2)

inst_93984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000000fffff; valaddr_reg:x3; val_offset:281952*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281952*0 + 3*288*FLEN/8, x4, x1, x2)

inst_93985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000001fffff; valaddr_reg:x3; val_offset:281955*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281955*0 + 3*289*FLEN/8, x4, x1, x2)

inst_93986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000003fffff; valaddr_reg:x3; val_offset:281958*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281958*0 + 3*290*FLEN/8, x4, x1, x2)

inst_93987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000007fffff; valaddr_reg:x3; val_offset:281961*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281961*0 + 3*291*FLEN/8, x4, x1, x2)

inst_93988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000000ffffff; valaddr_reg:x3; val_offset:281964*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281964*0 + 3*292*FLEN/8, x4, x1, x2)

inst_93989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000001ffffff; valaddr_reg:x3; val_offset:281967*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281967*0 + 3*293*FLEN/8, x4, x1, x2)

inst_93990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000003ffffff; valaddr_reg:x3; val_offset:281970*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281970*0 + 3*294*FLEN/8, x4, x1, x2)

inst_93991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000007ffffff; valaddr_reg:x3; val_offset:281973*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281973*0 + 3*295*FLEN/8, x4, x1, x2)

inst_93992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000000fffffff; valaddr_reg:x3; val_offset:281976*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281976*0 + 3*296*FLEN/8, x4, x1, x2)

inst_93993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000001fffffff; valaddr_reg:x3; val_offset:281979*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281979*0 + 3*297*FLEN/8, x4, x1, x2)

inst_93994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000003fffffff; valaddr_reg:x3; val_offset:281982*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281982*0 + 3*298*FLEN/8, x4, x1, x2)

inst_93995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000007fffffff; valaddr_reg:x3; val_offset:281985*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281985*0 + 3*299*FLEN/8, x4, x1, x2)

inst_93996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400000ffffffff; valaddr_reg:x3; val_offset:281988*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281988*0 + 3*300*FLEN/8, x4, x1, x2)

inst_93997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400001ffffffff; valaddr_reg:x3; val_offset:281991*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281991*0 + 3*301*FLEN/8, x4, x1, x2)

inst_93998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400003ffffffff; valaddr_reg:x3; val_offset:281994*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281994*0 + 3*302*FLEN/8, x4, x1, x2)

inst_93999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400007ffffffff; valaddr_reg:x3; val_offset:281997*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281997*0 + 3*303*FLEN/8, x4, x1, x2)

inst_94000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340000fffffffff; valaddr_reg:x3; val_offset:282000*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282000*0 + 3*304*FLEN/8, x4, x1, x2)

inst_94001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340001fffffffff; valaddr_reg:x3; val_offset:282003*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282003*0 + 3*305*FLEN/8, x4, x1, x2)

inst_94002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340003fffffffff; valaddr_reg:x3; val_offset:282006*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282006*0 + 3*306*FLEN/8, x4, x1, x2)

inst_94003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340007fffffffff; valaddr_reg:x3; val_offset:282009*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282009*0 + 3*307*FLEN/8, x4, x1, x2)

inst_94004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834000ffffffffff; valaddr_reg:x3; val_offset:282012*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282012*0 + 3*308*FLEN/8, x4, x1, x2)

inst_94005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834001ffffffffff; valaddr_reg:x3; val_offset:282015*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282015*0 + 3*309*FLEN/8, x4, x1, x2)

inst_94006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834003ffffffffff; valaddr_reg:x3; val_offset:282018*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282018*0 + 3*310*FLEN/8, x4, x1, x2)

inst_94007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834007ffffffffff; valaddr_reg:x3; val_offset:282021*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282021*0 + 3*311*FLEN/8, x4, x1, x2)

inst_94008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83400fffffffffff; valaddr_reg:x3; val_offset:282024*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282024*0 + 3*312*FLEN/8, x4, x1, x2)

inst_94009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83401fffffffffff; valaddr_reg:x3; val_offset:282027*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282027*0 + 3*313*FLEN/8, x4, x1, x2)

inst_94010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83403fffffffffff; valaddr_reg:x3; val_offset:282030*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282030*0 + 3*314*FLEN/8, x4, x1, x2)

inst_94011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x83407fffffffffff; valaddr_reg:x3; val_offset:282033*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282033*0 + 3*315*FLEN/8, x4, x1, x2)

inst_94012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8340ffffffffffff; valaddr_reg:x3; val_offset:282036*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282036*0 + 3*316*FLEN/8, x4, x1, x2)

inst_94013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8341ffffffffffff; valaddr_reg:x3; val_offset:282039*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282039*0 + 3*317*FLEN/8, x4, x1, x2)

inst_94014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8343ffffffffffff; valaddr_reg:x3; val_offset:282042*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282042*0 + 3*318*FLEN/8, x4, x1, x2)

inst_94015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8347ffffffffffff; valaddr_reg:x3; val_offset:282045*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282045*0 + 3*319*FLEN/8, x4, x1, x2)

inst_94016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x8348000000000000; valaddr_reg:x3; val_offset:282048*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282048*0 + 3*320*FLEN/8, x4, x1, x2)

inst_94017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834c000000000000; valaddr_reg:x3; val_offset:282051*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282051*0 + 3*321*FLEN/8, x4, x1, x2)

inst_94018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834e000000000000; valaddr_reg:x3; val_offset:282054*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282054*0 + 3*322*FLEN/8, x4, x1, x2)

inst_94019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834f000000000000; valaddr_reg:x3; val_offset:282057*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282057*0 + 3*323*FLEN/8, x4, x1, x2)

inst_94020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834f800000000000; valaddr_reg:x3; val_offset:282060*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282060*0 + 3*324*FLEN/8, x4, x1, x2)

inst_94021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fc00000000000; valaddr_reg:x3; val_offset:282063*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282063*0 + 3*325*FLEN/8, x4, x1, x2)

inst_94022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fe00000000000; valaddr_reg:x3; val_offset:282066*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282066*0 + 3*326*FLEN/8, x4, x1, x2)

inst_94023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ff00000000000; valaddr_reg:x3; val_offset:282069*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282069*0 + 3*327*FLEN/8, x4, x1, x2)

inst_94024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ff80000000000; valaddr_reg:x3; val_offset:282072*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282072*0 + 3*328*FLEN/8, x4, x1, x2)

inst_94025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffc0000000000; valaddr_reg:x3; val_offset:282075*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282075*0 + 3*329*FLEN/8, x4, x1, x2)

inst_94026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffe0000000000; valaddr_reg:x3; val_offset:282078*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282078*0 + 3*330*FLEN/8, x4, x1, x2)

inst_94027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fff0000000000; valaddr_reg:x3; val_offset:282081*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282081*0 + 3*331*FLEN/8, x4, x1, x2)

inst_94028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fff8000000000; valaddr_reg:x3; val_offset:282084*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282084*0 + 3*332*FLEN/8, x4, x1, x2)

inst_94029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffc000000000; valaddr_reg:x3; val_offset:282087*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282087*0 + 3*333*FLEN/8, x4, x1, x2)

inst_94030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffe000000000; valaddr_reg:x3; val_offset:282090*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282090*0 + 3*334*FLEN/8, x4, x1, x2)

inst_94031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffff000000000; valaddr_reg:x3; val_offset:282093*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282093*0 + 3*335*FLEN/8, x4, x1, x2)

inst_94032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffff800000000; valaddr_reg:x3; val_offset:282096*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282096*0 + 3*336*FLEN/8, x4, x1, x2)

inst_94033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffc00000000; valaddr_reg:x3; val_offset:282099*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282099*0 + 3*337*FLEN/8, x4, x1, x2)

inst_94034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffe00000000; valaddr_reg:x3; val_offset:282102*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282102*0 + 3*338*FLEN/8, x4, x1, x2)

inst_94035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffff00000000; valaddr_reg:x3; val_offset:282105*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282105*0 + 3*339*FLEN/8, x4, x1, x2)

inst_94036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffff80000000; valaddr_reg:x3; val_offset:282108*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282108*0 + 3*340*FLEN/8, x4, x1, x2)

inst_94037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffc0000000; valaddr_reg:x3; val_offset:282111*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282111*0 + 3*341*FLEN/8, x4, x1, x2)

inst_94038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffe0000000; valaddr_reg:x3; val_offset:282114*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282114*0 + 3*342*FLEN/8, x4, x1, x2)

inst_94039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffff0000000; valaddr_reg:x3; val_offset:282117*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282117*0 + 3*343*FLEN/8, x4, x1, x2)

inst_94040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffff8000000; valaddr_reg:x3; val_offset:282120*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282120*0 + 3*344*FLEN/8, x4, x1, x2)

inst_94041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffc000000; valaddr_reg:x3; val_offset:282123*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282123*0 + 3*345*FLEN/8, x4, x1, x2)

inst_94042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffe000000; valaddr_reg:x3; val_offset:282126*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282126*0 + 3*346*FLEN/8, x4, x1, x2)

inst_94043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffff000000; valaddr_reg:x3; val_offset:282129*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282129*0 + 3*347*FLEN/8, x4, x1, x2)

inst_94044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffff800000; valaddr_reg:x3; val_offset:282132*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282132*0 + 3*348*FLEN/8, x4, x1, x2)

inst_94045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffc00000; valaddr_reg:x3; val_offset:282135*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282135*0 + 3*349*FLEN/8, x4, x1, x2)

inst_94046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffe00000; valaddr_reg:x3; val_offset:282138*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282138*0 + 3*350*FLEN/8, x4, x1, x2)

inst_94047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffff00000; valaddr_reg:x3; val_offset:282141*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282141*0 + 3*351*FLEN/8, x4, x1, x2)

inst_94048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffff80000; valaddr_reg:x3; val_offset:282144*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282144*0 + 3*352*FLEN/8, x4, x1, x2)

inst_94049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffc0000; valaddr_reg:x3; val_offset:282147*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282147*0 + 3*353*FLEN/8, x4, x1, x2)

inst_94050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffe0000; valaddr_reg:x3; val_offset:282150*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282150*0 + 3*354*FLEN/8, x4, x1, x2)

inst_94051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffff0000; valaddr_reg:x3; val_offset:282153*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282153*0 + 3*355*FLEN/8, x4, x1, x2)

inst_94052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffff8000; valaddr_reg:x3; val_offset:282156*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282156*0 + 3*356*FLEN/8, x4, x1, x2)

inst_94053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffc000; valaddr_reg:x3; val_offset:282159*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282159*0 + 3*357*FLEN/8, x4, x1, x2)

inst_94054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffe000; valaddr_reg:x3; val_offset:282162*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282162*0 + 3*358*FLEN/8, x4, x1, x2)

inst_94055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffff000; valaddr_reg:x3; val_offset:282165*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282165*0 + 3*359*FLEN/8, x4, x1, x2)

inst_94056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffff800; valaddr_reg:x3; val_offset:282168*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282168*0 + 3*360*FLEN/8, x4, x1, x2)

inst_94057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffffc00; valaddr_reg:x3; val_offset:282171*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282171*0 + 3*361*FLEN/8, x4, x1, x2)

inst_94058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffffe00; valaddr_reg:x3; val_offset:282174*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282174*0 + 3*362*FLEN/8, x4, x1, x2)

inst_94059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffff00; valaddr_reg:x3; val_offset:282177*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282177*0 + 3*363*FLEN/8, x4, x1, x2)

inst_94060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffff80; valaddr_reg:x3; val_offset:282180*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282180*0 + 3*364*FLEN/8, x4, x1, x2)

inst_94061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffffc0; valaddr_reg:x3; val_offset:282183*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282183*0 + 3*365*FLEN/8, x4, x1, x2)

inst_94062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffffe0; valaddr_reg:x3; val_offset:282186*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282186*0 + 3*366*FLEN/8, x4, x1, x2)

inst_94063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffffff0; valaddr_reg:x3; val_offset:282189*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282189*0 + 3*367*FLEN/8, x4, x1, x2)

inst_94064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffffff8; valaddr_reg:x3; val_offset:282192*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282192*0 + 3*368*FLEN/8, x4, x1, x2)

inst_94065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffffffc; valaddr_reg:x3; val_offset:282195*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282195*0 + 3*369*FLEN/8, x4, x1, x2)

inst_94066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834ffffffffffffe; valaddr_reg:x3; val_offset:282198*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282198*0 + 3*370*FLEN/8, x4, x1, x2)

inst_94067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8364e650dcd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8364e650dcd6; op2val:0x8000;
op3val:0x834fffffffffffff; valaddr_reg:x3; val_offset:282201*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282201*0 + 3*371*FLEN/8, x4, x1, x2)

inst_94068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:282204*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282204*0 + 3*372*FLEN/8, x4, x1, x2)

inst_94069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:282207*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282207*0 + 3*373*FLEN/8, x4, x1, x2)

inst_94070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:282210*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282210*0 + 3*374*FLEN/8, x4, x1, x2)

inst_94071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:282213*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282213*0 + 3*375*FLEN/8, x4, x1, x2)

inst_94072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:282216*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282216*0 + 3*376*FLEN/8, x4, x1, x2)

inst_94073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:282219*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282219*0 + 3*377*FLEN/8, x4, x1, x2)

inst_94074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:282222*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282222*0 + 3*378*FLEN/8, x4, x1, x2)

inst_94075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:282225*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282225*0 + 3*379*FLEN/8, x4, x1, x2)

inst_94076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:282228*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282228*0 + 3*380*FLEN/8, x4, x1, x2)

inst_94077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:282231*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282231*0 + 3*381*FLEN/8, x4, x1, x2)

inst_94078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:282234*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282234*0 + 3*382*FLEN/8, x4, x1, x2)

inst_94079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:282237*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282237*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_94080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:282240*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282240*0 + 3*384*FLEN/8, x4, x1, x2)

inst_94081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:282243*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282243*0 + 3*385*FLEN/8, x4, x1, x2)

inst_94082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:282246*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282246*0 + 3*386*FLEN/8, x4, x1, x2)

inst_94083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:282249*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282249*0 + 3*387*FLEN/8, x4, x1, x2)

inst_94084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:282252*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282252*0 + 3*388*FLEN/8, x4, x1, x2)

inst_94085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:282255*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282255*0 + 3*389*FLEN/8, x4, x1, x2)

inst_94086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:282258*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282258*0 + 3*390*FLEN/8, x4, x1, x2)

inst_94087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:282261*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282261*0 + 3*391*FLEN/8, x4, x1, x2)

inst_94088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:282264*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282264*0 + 3*392*FLEN/8, x4, x1, x2)

inst_94089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:282267*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282267*0 + 3*393*FLEN/8, x4, x1, x2)

inst_94090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:282270*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282270*0 + 3*394*FLEN/8, x4, x1, x2)

inst_94091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:282273*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282273*0 + 3*395*FLEN/8, x4, x1, x2)

inst_94092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:282276*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282276*0 + 3*396*FLEN/8, x4, x1, x2)

inst_94093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:282279*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282279*0 + 3*397*FLEN/8, x4, x1, x2)

inst_94094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:282282*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282282*0 + 3*398*FLEN/8, x4, x1, x2)

inst_94095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:282285*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282285*0 + 3*399*FLEN/8, x4, x1, x2)

inst_94096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:282288*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282288*0 + 3*400*FLEN/8, x4, x1, x2)

inst_94097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:282291*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282291*0 + 3*401*FLEN/8, x4, x1, x2)

inst_94098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:282294*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282294*0 + 3*402*FLEN/8, x4, x1, x2)

inst_94099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:282297*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282297*0 + 3*403*FLEN/8, x4, x1, x2)

inst_94100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:282300*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282300*0 + 3*404*FLEN/8, x4, x1, x2)

inst_94101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:282303*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282303*0 + 3*405*FLEN/8, x4, x1, x2)

inst_94102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:282306*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282306*0 + 3*406*FLEN/8, x4, x1, x2)

inst_94103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:282309*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282309*0 + 3*407*FLEN/8, x4, x1, x2)

inst_94104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:282312*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282312*0 + 3*408*FLEN/8, x4, x1, x2)

inst_94105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:282315*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282315*0 + 3*409*FLEN/8, x4, x1, x2)

inst_94106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:282318*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282318*0 + 3*410*FLEN/8, x4, x1, x2)

inst_94107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:282321*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282321*0 + 3*411*FLEN/8, x4, x1, x2)

inst_94108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:282324*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282324*0 + 3*412*FLEN/8, x4, x1, x2)

inst_94109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:282327*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282327*0 + 3*413*FLEN/8, x4, x1, x2)

inst_94110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:282330*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282330*0 + 3*414*FLEN/8, x4, x1, x2)

inst_94111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:282333*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282333*0 + 3*415*FLEN/8, x4, x1, x2)

inst_94112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:282336*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282336*0 + 3*416*FLEN/8, x4, x1, x2)

inst_94113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:282339*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282339*0 + 3*417*FLEN/8, x4, x1, x2)

inst_94114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:282342*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282342*0 + 3*418*FLEN/8, x4, x1, x2)

inst_94115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:282345*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282345*0 + 3*419*FLEN/8, x4, x1, x2)

inst_94116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:282348*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282348*0 + 3*420*FLEN/8, x4, x1, x2)

inst_94117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:282351*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282351*0 + 3*421*FLEN/8, x4, x1, x2)

inst_94118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:282354*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282354*0 + 3*422*FLEN/8, x4, x1, x2)

inst_94119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:282357*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282357*0 + 3*423*FLEN/8, x4, x1, x2)

inst_94120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:282360*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282360*0 + 3*424*FLEN/8, x4, x1, x2)

inst_94121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:282363*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282363*0 + 3*425*FLEN/8, x4, x1, x2)

inst_94122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:282366*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282366*0 + 3*426*FLEN/8, x4, x1, x2)

inst_94123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:282369*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282369*0 + 3*427*FLEN/8, x4, x1, x2)

inst_94124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:282372*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282372*0 + 3*428*FLEN/8, x4, x1, x2)

inst_94125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:282375*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282375*0 + 3*429*FLEN/8, x4, x1, x2)

inst_94126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:282378*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282378*0 + 3*430*FLEN/8, x4, x1, x2)

inst_94127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:282381*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282381*0 + 3*431*FLEN/8, x4, x1, x2)

inst_94128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:282384*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282384*0 + 3*432*FLEN/8, x4, x1, x2)

inst_94129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:282387*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282387*0 + 3*433*FLEN/8, x4, x1, x2)

inst_94130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:282390*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282390*0 + 3*434*FLEN/8, x4, x1, x2)

inst_94131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:282393*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282393*0 + 3*435*FLEN/8, x4, x1, x2)

inst_94132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:282396*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282396*0 + 3*436*FLEN/8, x4, x1, x2)

inst_94133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:282399*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282399*0 + 3*437*FLEN/8, x4, x1, x2)

inst_94134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:282402*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282402*0 + 3*438*FLEN/8, x4, x1, x2)

inst_94135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:282405*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282405*0 + 3*439*FLEN/8, x4, x1, x2)

inst_94136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:282408*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282408*0 + 3*440*FLEN/8, x4, x1, x2)

inst_94137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:282411*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282411*0 + 3*441*FLEN/8, x4, x1, x2)

inst_94138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:282414*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282414*0 + 3*442*FLEN/8, x4, x1, x2)

inst_94139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:282417*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282417*0 + 3*443*FLEN/8, x4, x1, x2)

inst_94140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:282420*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282420*0 + 3*444*FLEN/8, x4, x1, x2)

inst_94141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:282423*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282423*0 + 3*445*FLEN/8, x4, x1, x2)

inst_94142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:282426*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282426*0 + 3*446*FLEN/8, x4, x1, x2)

inst_94143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:282429*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282429*0 + 3*447*FLEN/8, x4, x1, x2)

inst_94144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:282432*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282432*0 + 3*448*FLEN/8, x4, x1, x2)

inst_94145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:282435*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282435*0 + 3*449*FLEN/8, x4, x1, x2)

inst_94146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:282438*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282438*0 + 3*450*FLEN/8, x4, x1, x2)

inst_94147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:282441*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282441*0 + 3*451*FLEN/8, x4, x1, x2)

inst_94148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:282444*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282444*0 + 3*452*FLEN/8, x4, x1, x2)

inst_94149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:282447*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282447*0 + 3*453*FLEN/8, x4, x1, x2)

inst_94150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:282450*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282450*0 + 3*454*FLEN/8, x4, x1, x2)

inst_94151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:282453*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282453*0 + 3*455*FLEN/8, x4, x1, x2)

inst_94152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:282456*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282456*0 + 3*456*FLEN/8, x4, x1, x2)

inst_94153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:282459*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282459*0 + 3*457*FLEN/8, x4, x1, x2)

inst_94154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:282462*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282462*0 + 3*458*FLEN/8, x4, x1, x2)

inst_94155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:282465*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282465*0 + 3*459*FLEN/8, x4, x1, x2)

inst_94156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:282468*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282468*0 + 3*460*FLEN/8, x4, x1, x2)

inst_94157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:282471*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282471*0 + 3*461*FLEN/8, x4, x1, x2)

inst_94158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:282474*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282474*0 + 3*462*FLEN/8, x4, x1, x2)

inst_94159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:282477*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282477*0 + 3*463*FLEN/8, x4, x1, x2)

inst_94160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:282480*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282480*0 + 3*464*FLEN/8, x4, x1, x2)

inst_94161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:282483*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282483*0 + 3*465*FLEN/8, x4, x1, x2)

inst_94162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:282486*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282486*0 + 3*466*FLEN/8, x4, x1, x2)

inst_94163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:282489*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282489*0 + 3*467*FLEN/8, x4, x1, x2)

inst_94164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffe0000000; valaddr_reg:x3; val_offset:282492*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282492*0 + 3*468*FLEN/8, x4, x1, x2)

inst_94165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffff0000000; valaddr_reg:x3; val_offset:282495*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282495*0 + 3*469*FLEN/8, x4, x1, x2)

inst_94166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffff8000000; valaddr_reg:x3; val_offset:282498*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282498*0 + 3*470*FLEN/8, x4, x1, x2)

inst_94167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffc000000; valaddr_reg:x3; val_offset:282501*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282501*0 + 3*471*FLEN/8, x4, x1, x2)

inst_94168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffe000000; valaddr_reg:x3; val_offset:282504*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282504*0 + 3*472*FLEN/8, x4, x1, x2)

inst_94169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffff000000; valaddr_reg:x3; val_offset:282507*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282507*0 + 3*473*FLEN/8, x4, x1, x2)

inst_94170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffff800000; valaddr_reg:x3; val_offset:282510*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282510*0 + 3*474*FLEN/8, x4, x1, x2)

inst_94171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffc00000; valaddr_reg:x3; val_offset:282513*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282513*0 + 3*475*FLEN/8, x4, x1, x2)

inst_94172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffe00000; valaddr_reg:x3; val_offset:282516*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282516*0 + 3*476*FLEN/8, x4, x1, x2)

inst_94173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffff00000; valaddr_reg:x3; val_offset:282519*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282519*0 + 3*477*FLEN/8, x4, x1, x2)

inst_94174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffff80000; valaddr_reg:x3; val_offset:282522*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282522*0 + 3*478*FLEN/8, x4, x1, x2)

inst_94175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffc0000; valaddr_reg:x3; val_offset:282525*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282525*0 + 3*479*FLEN/8, x4, x1, x2)

inst_94176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffe0000; valaddr_reg:x3; val_offset:282528*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282528*0 + 3*480*FLEN/8, x4, x1, x2)

inst_94177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffff0000; valaddr_reg:x3; val_offset:282531*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282531*0 + 3*481*FLEN/8, x4, x1, x2)

inst_94178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffff8000; valaddr_reg:x3; val_offset:282534*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282534*0 + 3*482*FLEN/8, x4, x1, x2)

inst_94179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffc000; valaddr_reg:x3; val_offset:282537*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282537*0 + 3*483*FLEN/8, x4, x1, x2)

inst_94180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffe000; valaddr_reg:x3; val_offset:282540*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282540*0 + 3*484*FLEN/8, x4, x1, x2)

inst_94181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffff000; valaddr_reg:x3; val_offset:282543*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282543*0 + 3*485*FLEN/8, x4, x1, x2)

inst_94182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffff800; valaddr_reg:x3; val_offset:282546*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282546*0 + 3*486*FLEN/8, x4, x1, x2)

inst_94183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffffc00; valaddr_reg:x3; val_offset:282549*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282549*0 + 3*487*FLEN/8, x4, x1, x2)

inst_94184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffffe00; valaddr_reg:x3; val_offset:282552*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282552*0 + 3*488*FLEN/8, x4, x1, x2)

inst_94185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffff00; valaddr_reg:x3; val_offset:282555*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282555*0 + 3*489*FLEN/8, x4, x1, x2)

inst_94186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffff80; valaddr_reg:x3; val_offset:282558*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282558*0 + 3*490*FLEN/8, x4, x1, x2)

inst_94187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffffc0; valaddr_reg:x3; val_offset:282561*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282561*0 + 3*491*FLEN/8, x4, x1, x2)

inst_94188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffffe0; valaddr_reg:x3; val_offset:282564*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282564*0 + 3*492*FLEN/8, x4, x1, x2)

inst_94189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffffff0; valaddr_reg:x3; val_offset:282567*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282567*0 + 3*493*FLEN/8, x4, x1, x2)

inst_94190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffffff8; valaddr_reg:x3; val_offset:282570*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282570*0 + 3*494*FLEN/8, x4, x1, x2)

inst_94191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffffffc; valaddr_reg:x3; val_offset:282573*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282573*0 + 3*495*FLEN/8, x4, x1, x2)

inst_94192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833ffffffffffffe; valaddr_reg:x3; val_offset:282576*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282576*0 + 3*496*FLEN/8, x4, x1, x2)

inst_94193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9d3b1c500be3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9d3b1c500be3; op2val:0x8000;
op3val:0x833fffffffffffff; valaddr_reg:x3; val_offset:282579*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282579*0 + 3*497*FLEN/8, x4, x1, x2)

inst_94194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000000000; valaddr_reg:x3; val_offset:282582*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282582*0 + 3*498*FLEN/8, x4, x1, x2)

inst_94195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000000001; valaddr_reg:x3; val_offset:282585*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282585*0 + 3*499*FLEN/8, x4, x1, x2)

inst_94196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000000003; valaddr_reg:x3; val_offset:282588*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282588*0 + 3*500*FLEN/8, x4, x1, x2)

inst_94197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000000007; valaddr_reg:x3; val_offset:282591*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282591*0 + 3*501*FLEN/8, x4, x1, x2)

inst_94198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000000000f; valaddr_reg:x3; val_offset:282594*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282594*0 + 3*502*FLEN/8, x4, x1, x2)

inst_94199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000000001f; valaddr_reg:x3; val_offset:282597*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282597*0 + 3*503*FLEN/8, x4, x1, x2)

inst_94200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000000003f; valaddr_reg:x3; val_offset:282600*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282600*0 + 3*504*FLEN/8, x4, x1, x2)

inst_94201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000000007f; valaddr_reg:x3; val_offset:282603*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282603*0 + 3*505*FLEN/8, x4, x1, x2)

inst_94202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000000000ff; valaddr_reg:x3; val_offset:282606*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282606*0 + 3*506*FLEN/8, x4, x1, x2)

inst_94203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000000001ff; valaddr_reg:x3; val_offset:282609*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282609*0 + 3*507*FLEN/8, x4, x1, x2)

inst_94204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000000003ff; valaddr_reg:x3; val_offset:282612*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282612*0 + 3*508*FLEN/8, x4, x1, x2)

inst_94205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000000007ff; valaddr_reg:x3; val_offset:282615*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282615*0 + 3*509*FLEN/8, x4, x1, x2)

inst_94206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000000fff; valaddr_reg:x3; val_offset:282618*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282618*0 + 3*510*FLEN/8, x4, x1, x2)

inst_94207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000001fff; valaddr_reg:x3; val_offset:282621*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282621*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_94208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000003fff; valaddr_reg:x3; val_offset:282624*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282624*0 + 3*512*FLEN/8, x4, x1, x2)

inst_94209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000007fff; valaddr_reg:x3; val_offset:282627*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282627*0 + 3*513*FLEN/8, x4, x1, x2)

inst_94210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000000ffff; valaddr_reg:x3; val_offset:282630*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282630*0 + 3*514*FLEN/8, x4, x1, x2)

inst_94211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000001ffff; valaddr_reg:x3; val_offset:282633*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282633*0 + 3*515*FLEN/8, x4, x1, x2)

inst_94212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000003ffff; valaddr_reg:x3; val_offset:282636*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282636*0 + 3*516*FLEN/8, x4, x1, x2)

inst_94213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000007ffff; valaddr_reg:x3; val_offset:282639*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282639*0 + 3*517*FLEN/8, x4, x1, x2)

inst_94214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000000fffff; valaddr_reg:x3; val_offset:282642*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282642*0 + 3*518*FLEN/8, x4, x1, x2)

inst_94215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000001fffff; valaddr_reg:x3; val_offset:282645*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282645*0 + 3*519*FLEN/8, x4, x1, x2)

inst_94216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000003fffff; valaddr_reg:x3; val_offset:282648*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282648*0 + 3*520*FLEN/8, x4, x1, x2)

inst_94217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000007fffff; valaddr_reg:x3; val_offset:282651*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282651*0 + 3*521*FLEN/8, x4, x1, x2)

inst_94218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000000ffffff; valaddr_reg:x3; val_offset:282654*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282654*0 + 3*522*FLEN/8, x4, x1, x2)

inst_94219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000001ffffff; valaddr_reg:x3; val_offset:282657*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282657*0 + 3*523*FLEN/8, x4, x1, x2)

inst_94220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000003ffffff; valaddr_reg:x3; val_offset:282660*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282660*0 + 3*524*FLEN/8, x4, x1, x2)

inst_94221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000007ffffff; valaddr_reg:x3; val_offset:282663*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282663*0 + 3*525*FLEN/8, x4, x1, x2)

inst_94222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000000fffffff; valaddr_reg:x3; val_offset:282666*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282666*0 + 3*526*FLEN/8, x4, x1, x2)

inst_94223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000001fffffff; valaddr_reg:x3; val_offset:282669*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282669*0 + 3*527*FLEN/8, x4, x1, x2)

inst_94224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000003fffffff; valaddr_reg:x3; val_offset:282672*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282672*0 + 3*528*FLEN/8, x4, x1, x2)

inst_94225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000007fffffff; valaddr_reg:x3; val_offset:282675*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282675*0 + 3*529*FLEN/8, x4, x1, x2)

inst_94226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900000ffffffff; valaddr_reg:x3; val_offset:282678*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282678*0 + 3*530*FLEN/8, x4, x1, x2)

inst_94227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900001ffffffff; valaddr_reg:x3; val_offset:282681*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282681*0 + 3*531*FLEN/8, x4, x1, x2)

inst_94228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900003ffffffff; valaddr_reg:x3; val_offset:282684*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282684*0 + 3*532*FLEN/8, x4, x1, x2)

inst_94229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900007ffffffff; valaddr_reg:x3; val_offset:282687*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282687*0 + 3*533*FLEN/8, x4, x1, x2)

inst_94230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90000fffffffff; valaddr_reg:x3; val_offset:282690*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282690*0 + 3*534*FLEN/8, x4, x1, x2)

inst_94231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90001fffffffff; valaddr_reg:x3; val_offset:282693*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282693*0 + 3*535*FLEN/8, x4, x1, x2)

inst_94232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90003fffffffff; valaddr_reg:x3; val_offset:282696*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282696*0 + 3*536*FLEN/8, x4, x1, x2)

inst_94233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90007fffffffff; valaddr_reg:x3; val_offset:282699*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282699*0 + 3*537*FLEN/8, x4, x1, x2)

inst_94234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9000ffffffffff; valaddr_reg:x3; val_offset:282702*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282702*0 + 3*538*FLEN/8, x4, x1, x2)

inst_94235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9001ffffffffff; valaddr_reg:x3; val_offset:282705*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282705*0 + 3*539*FLEN/8, x4, x1, x2)

inst_94236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9003ffffffffff; valaddr_reg:x3; val_offset:282708*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282708*0 + 3*540*FLEN/8, x4, x1, x2)

inst_94237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9007ffffffffff; valaddr_reg:x3; val_offset:282711*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282711*0 + 3*541*FLEN/8, x4, x1, x2)

inst_94238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e900fffffffffff; valaddr_reg:x3; val_offset:282714*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282714*0 + 3*542*FLEN/8, x4, x1, x2)

inst_94239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e901fffffffffff; valaddr_reg:x3; val_offset:282717*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282717*0 + 3*543*FLEN/8, x4, x1, x2)

inst_94240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e903fffffffffff; valaddr_reg:x3; val_offset:282720*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282720*0 + 3*544*FLEN/8, x4, x1, x2)

inst_94241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e907fffffffffff; valaddr_reg:x3; val_offset:282723*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282723*0 + 3*545*FLEN/8, x4, x1, x2)

inst_94242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e90ffffffffffff; valaddr_reg:x3; val_offset:282726*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282726*0 + 3*546*FLEN/8, x4, x1, x2)

inst_94243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e91ffffffffffff; valaddr_reg:x3; val_offset:282729*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282729*0 + 3*547*FLEN/8, x4, x1, x2)

inst_94244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e93ffffffffffff; valaddr_reg:x3; val_offset:282732*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282732*0 + 3*548*FLEN/8, x4, x1, x2)

inst_94245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e97ffffffffffff; valaddr_reg:x3; val_offset:282735*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282735*0 + 3*549*FLEN/8, x4, x1, x2)

inst_94246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e98000000000000; valaddr_reg:x3; val_offset:282738*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282738*0 + 3*550*FLEN/8, x4, x1, x2)

inst_94247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9c000000000000; valaddr_reg:x3; val_offset:282741*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282741*0 + 3*551*FLEN/8, x4, x1, x2)

inst_94248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9e000000000000; valaddr_reg:x3; val_offset:282744*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282744*0 + 3*552*FLEN/8, x4, x1, x2)

inst_94249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9f000000000000; valaddr_reg:x3; val_offset:282747*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282747*0 + 3*553*FLEN/8, x4, x1, x2)

inst_94250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9f800000000000; valaddr_reg:x3; val_offset:282750*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282750*0 + 3*554*FLEN/8, x4, x1, x2)

inst_94251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fc00000000000; valaddr_reg:x3; val_offset:282753*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282753*0 + 3*555*FLEN/8, x4, x1, x2)

inst_94252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fe00000000000; valaddr_reg:x3; val_offset:282756*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282756*0 + 3*556*FLEN/8, x4, x1, x2)

inst_94253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ff00000000000; valaddr_reg:x3; val_offset:282759*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282759*0 + 3*557*FLEN/8, x4, x1, x2)

inst_94254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ff80000000000; valaddr_reg:x3; val_offset:282762*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282762*0 + 3*558*FLEN/8, x4, x1, x2)

inst_94255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffc0000000000; valaddr_reg:x3; val_offset:282765*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282765*0 + 3*559*FLEN/8, x4, x1, x2)

inst_94256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffe0000000000; valaddr_reg:x3; val_offset:282768*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282768*0 + 3*560*FLEN/8, x4, x1, x2)

inst_94257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fff0000000000; valaddr_reg:x3; val_offset:282771*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282771*0 + 3*561*FLEN/8, x4, x1, x2)

inst_94258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fff8000000000; valaddr_reg:x3; val_offset:282774*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282774*0 + 3*562*FLEN/8, x4, x1, x2)

inst_94259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffc000000000; valaddr_reg:x3; val_offset:282777*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282777*0 + 3*563*FLEN/8, x4, x1, x2)

inst_94260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffe000000000; valaddr_reg:x3; val_offset:282780*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282780*0 + 3*564*FLEN/8, x4, x1, x2)

inst_94261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffff000000000; valaddr_reg:x3; val_offset:282783*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282783*0 + 3*565*FLEN/8, x4, x1, x2)

inst_94262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffff800000000; valaddr_reg:x3; val_offset:282786*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282786*0 + 3*566*FLEN/8, x4, x1, x2)

inst_94263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffc00000000; valaddr_reg:x3; val_offset:282789*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282789*0 + 3*567*FLEN/8, x4, x1, x2)

inst_94264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffe00000000; valaddr_reg:x3; val_offset:282792*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282792*0 + 3*568*FLEN/8, x4, x1, x2)

inst_94265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffff00000000; valaddr_reg:x3; val_offset:282795*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282795*0 + 3*569*FLEN/8, x4, x1, x2)

inst_94266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffff80000000; valaddr_reg:x3; val_offset:282798*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282798*0 + 3*570*FLEN/8, x4, x1, x2)

inst_94267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffc0000000; valaddr_reg:x3; val_offset:282801*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282801*0 + 3*571*FLEN/8, x4, x1, x2)

inst_94268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffe0000000; valaddr_reg:x3; val_offset:282804*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282804*0 + 3*572*FLEN/8, x4, x1, x2)

inst_94269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffff0000000; valaddr_reg:x3; val_offset:282807*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282807*0 + 3*573*FLEN/8, x4, x1, x2)

inst_94270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffff8000000; valaddr_reg:x3; val_offset:282810*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282810*0 + 3*574*FLEN/8, x4, x1, x2)

inst_94271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffc000000; valaddr_reg:x3; val_offset:282813*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282813*0 + 3*575*FLEN/8, x4, x1, x2)

inst_94272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffe000000; valaddr_reg:x3; val_offset:282816*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282816*0 + 3*576*FLEN/8, x4, x1, x2)

inst_94273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffff000000; valaddr_reg:x3; val_offset:282819*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282819*0 + 3*577*FLEN/8, x4, x1, x2)

inst_94274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffff800000; valaddr_reg:x3; val_offset:282822*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282822*0 + 3*578*FLEN/8, x4, x1, x2)

inst_94275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffc00000; valaddr_reg:x3; val_offset:282825*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282825*0 + 3*579*FLEN/8, x4, x1, x2)

inst_94276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffe00000; valaddr_reg:x3; val_offset:282828*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282828*0 + 3*580*FLEN/8, x4, x1, x2)

inst_94277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffff00000; valaddr_reg:x3; val_offset:282831*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282831*0 + 3*581*FLEN/8, x4, x1, x2)

inst_94278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffff80000; valaddr_reg:x3; val_offset:282834*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282834*0 + 3*582*FLEN/8, x4, x1, x2)

inst_94279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffc0000; valaddr_reg:x3; val_offset:282837*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282837*0 + 3*583*FLEN/8, x4, x1, x2)

inst_94280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffe0000; valaddr_reg:x3; val_offset:282840*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282840*0 + 3*584*FLEN/8, x4, x1, x2)

inst_94281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffff0000; valaddr_reg:x3; val_offset:282843*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282843*0 + 3*585*FLEN/8, x4, x1, x2)

inst_94282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffff8000; valaddr_reg:x3; val_offset:282846*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282846*0 + 3*586*FLEN/8, x4, x1, x2)

inst_94283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffc000; valaddr_reg:x3; val_offset:282849*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282849*0 + 3*587*FLEN/8, x4, x1, x2)

inst_94284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffe000; valaddr_reg:x3; val_offset:282852*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282852*0 + 3*588*FLEN/8, x4, x1, x2)

inst_94285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffff000; valaddr_reg:x3; val_offset:282855*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282855*0 + 3*589*FLEN/8, x4, x1, x2)

inst_94286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffff800; valaddr_reg:x3; val_offset:282858*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282858*0 + 3*590*FLEN/8, x4, x1, x2)

inst_94287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffffc00; valaddr_reg:x3; val_offset:282861*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282861*0 + 3*591*FLEN/8, x4, x1, x2)

inst_94288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffffe00; valaddr_reg:x3; val_offset:282864*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282864*0 + 3*592*FLEN/8, x4, x1, x2)

inst_94289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffff00; valaddr_reg:x3; val_offset:282867*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282867*0 + 3*593*FLEN/8, x4, x1, x2)

inst_94290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffff80; valaddr_reg:x3; val_offset:282870*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282870*0 + 3*594*FLEN/8, x4, x1, x2)

inst_94291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffffc0; valaddr_reg:x3; val_offset:282873*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282873*0 + 3*595*FLEN/8, x4, x1, x2)

inst_94292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffffe0; valaddr_reg:x3; val_offset:282876*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282876*0 + 3*596*FLEN/8, x4, x1, x2)

inst_94293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffffff0; valaddr_reg:x3; val_offset:282879*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282879*0 + 3*597*FLEN/8, x4, x1, x2)

inst_94294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffffff8; valaddr_reg:x3; val_offset:282882*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282882*0 + 3*598*FLEN/8, x4, x1, x2)

inst_94295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffffffc; valaddr_reg:x3; val_offset:282885*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282885*0 + 3*599*FLEN/8, x4, x1, x2)

inst_94296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9ffffffffffffe; valaddr_reg:x3; val_offset:282888*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282888*0 + 3*600*FLEN/8, x4, x1, x2)

inst_94297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3e9fffffffffffff; valaddr_reg:x3; val_offset:282891*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282891*0 + 3*601*FLEN/8, x4, x1, x2)

inst_94298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:282894*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282894*0 + 3*602*FLEN/8, x4, x1, x2)

inst_94299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:282897*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282897*0 + 3*603*FLEN/8, x4, x1, x2)

inst_94300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:282900*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282900*0 + 3*604*FLEN/8, x4, x1, x2)

inst_94301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:282903*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282903*0 + 3*605*FLEN/8, x4, x1, x2)

inst_94302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:282906*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282906*0 + 3*606*FLEN/8, x4, x1, x2)

inst_94303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:282909*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282909*0 + 3*607*FLEN/8, x4, x1, x2)

inst_94304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:282912*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282912*0 + 3*608*FLEN/8, x4, x1, x2)

inst_94305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:282915*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282915*0 + 3*609*FLEN/8, x4, x1, x2)

inst_94306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:282918*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282918*0 + 3*610*FLEN/8, x4, x1, x2)

inst_94307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:282921*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282921*0 + 3*611*FLEN/8, x4, x1, x2)

inst_94308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:282924*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282924*0 + 3*612*FLEN/8, x4, x1, x2)

inst_94309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:282927*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282927*0 + 3*613*FLEN/8, x4, x1, x2)

inst_94310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:282930*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282930*0 + 3*614*FLEN/8, x4, x1, x2)

inst_94311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:282933*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282933*0 + 3*615*FLEN/8, x4, x1, x2)

inst_94312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:282936*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282936*0 + 3*616*FLEN/8, x4, x1, x2)

inst_94313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:282939*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282939*0 + 3*617*FLEN/8, x4, x1, x2)

inst_94314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:282942*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282942*0 + 3*618*FLEN/8, x4, x1, x2)

inst_94315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:282945*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282945*0 + 3*619*FLEN/8, x4, x1, x2)

inst_94316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:282948*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282948*0 + 3*620*FLEN/8, x4, x1, x2)

inst_94317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:282951*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282951*0 + 3*621*FLEN/8, x4, x1, x2)

inst_94318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:282954*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282954*0 + 3*622*FLEN/8, x4, x1, x2)

inst_94319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda325b5831cd1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1468936a4b22d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada325b5831cd1; op2val:0x2031468936a4b22d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:282957*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282957*0 + 3*623*FLEN/8, x4, x1, x2)

inst_94320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:282960*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282960*0 + 3*624*FLEN/8, x4, x1, x2)

inst_94321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:282963*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282963*0 + 3*625*FLEN/8, x4, x1, x2)

inst_94322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:282966*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282966*0 + 3*626*FLEN/8, x4, x1, x2)

inst_94323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:282969*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282969*0 + 3*627*FLEN/8, x4, x1, x2)

inst_94324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:282972*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282972*0 + 3*628*FLEN/8, x4, x1, x2)

inst_94325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:282975*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282975*0 + 3*629*FLEN/8, x4, x1, x2)

inst_94326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:282978*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282978*0 + 3*630*FLEN/8, x4, x1, x2)

inst_94327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:282981*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282981*0 + 3*631*FLEN/8, x4, x1, x2)

inst_94328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:282984*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282984*0 + 3*632*FLEN/8, x4, x1, x2)

inst_94329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:282987*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282987*0 + 3*633*FLEN/8, x4, x1, x2)

inst_94330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:282990*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282990*0 + 3*634*FLEN/8, x4, x1, x2)

inst_94331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:282993*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282993*0 + 3*635*FLEN/8, x4, x1, x2)

inst_94332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:282996*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282996*0 + 3*636*FLEN/8, x4, x1, x2)

inst_94333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:282999*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282999*0 + 3*637*FLEN/8, x4, x1, x2)

inst_94334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:283002*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283002*0 + 3*638*FLEN/8, x4, x1, x2)

inst_94335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:283005*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283005*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_94336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:283008*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283008*0 + 3*640*FLEN/8, x4, x1, x2)

inst_94337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:283011*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283011*0 + 3*641*FLEN/8, x4, x1, x2)

inst_94338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:283014*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283014*0 + 3*642*FLEN/8, x4, x1, x2)

inst_94339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:283017*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283017*0 + 3*643*FLEN/8, x4, x1, x2)

inst_94340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:283020*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283020*0 + 3*644*FLEN/8, x4, x1, x2)

inst_94341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:283023*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283023*0 + 3*645*FLEN/8, x4, x1, x2)

inst_94342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000000000; valaddr_reg:x3; val_offset:283026*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283026*0 + 3*646*FLEN/8, x4, x1, x2)

inst_94343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000000001; valaddr_reg:x3; val_offset:283029*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283029*0 + 3*647*FLEN/8, x4, x1, x2)

inst_94344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000000003; valaddr_reg:x3; val_offset:283032*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283032*0 + 3*648*FLEN/8, x4, x1, x2)

inst_94345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000000007; valaddr_reg:x3; val_offset:283035*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283035*0 + 3*649*FLEN/8, x4, x1, x2)

inst_94346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000000000f; valaddr_reg:x3; val_offset:283038*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283038*0 + 3*650*FLEN/8, x4, x1, x2)

inst_94347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000000001f; valaddr_reg:x3; val_offset:283041*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283041*0 + 3*651*FLEN/8, x4, x1, x2)

inst_94348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000000003f; valaddr_reg:x3; val_offset:283044*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283044*0 + 3*652*FLEN/8, x4, x1, x2)

inst_94349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000000007f; valaddr_reg:x3; val_offset:283047*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283047*0 + 3*653*FLEN/8, x4, x1, x2)

inst_94350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000000000ff; valaddr_reg:x3; val_offset:283050*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283050*0 + 3*654*FLEN/8, x4, x1, x2)

inst_94351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000000001ff; valaddr_reg:x3; val_offset:283053*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283053*0 + 3*655*FLEN/8, x4, x1, x2)

inst_94352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000000003ff; valaddr_reg:x3; val_offset:283056*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283056*0 + 3*656*FLEN/8, x4, x1, x2)

inst_94353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000000007ff; valaddr_reg:x3; val_offset:283059*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283059*0 + 3*657*FLEN/8, x4, x1, x2)

inst_94354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000000fff; valaddr_reg:x3; val_offset:283062*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283062*0 + 3*658*FLEN/8, x4, x1, x2)

inst_94355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000001fff; valaddr_reg:x3; val_offset:283065*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283065*0 + 3*659*FLEN/8, x4, x1, x2)

inst_94356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000003fff; valaddr_reg:x3; val_offset:283068*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283068*0 + 3*660*FLEN/8, x4, x1, x2)

inst_94357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000007fff; valaddr_reg:x3; val_offset:283071*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283071*0 + 3*661*FLEN/8, x4, x1, x2)

inst_94358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000000ffff; valaddr_reg:x3; val_offset:283074*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283074*0 + 3*662*FLEN/8, x4, x1, x2)

inst_94359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000001ffff; valaddr_reg:x3; val_offset:283077*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283077*0 + 3*663*FLEN/8, x4, x1, x2)

inst_94360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000003ffff; valaddr_reg:x3; val_offset:283080*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283080*0 + 3*664*FLEN/8, x4, x1, x2)

inst_94361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000007ffff; valaddr_reg:x3; val_offset:283083*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283083*0 + 3*665*FLEN/8, x4, x1, x2)

inst_94362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000000fffff; valaddr_reg:x3; val_offset:283086*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283086*0 + 3*666*FLEN/8, x4, x1, x2)

inst_94363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000001fffff; valaddr_reg:x3; val_offset:283089*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283089*0 + 3*667*FLEN/8, x4, x1, x2)

inst_94364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000003fffff; valaddr_reg:x3; val_offset:283092*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283092*0 + 3*668*FLEN/8, x4, x1, x2)

inst_94365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000007fffff; valaddr_reg:x3; val_offset:283095*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283095*0 + 3*669*FLEN/8, x4, x1, x2)

inst_94366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000000ffffff; valaddr_reg:x3; val_offset:283098*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283098*0 + 3*670*FLEN/8, x4, x1, x2)

inst_94367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000001ffffff; valaddr_reg:x3; val_offset:283101*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283101*0 + 3*671*FLEN/8, x4, x1, x2)

inst_94368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000003ffffff; valaddr_reg:x3; val_offset:283104*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283104*0 + 3*672*FLEN/8, x4, x1, x2)

inst_94369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000007ffffff; valaddr_reg:x3; val_offset:283107*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283107*0 + 3*673*FLEN/8, x4, x1, x2)

inst_94370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000000fffffff; valaddr_reg:x3; val_offset:283110*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283110*0 + 3*674*FLEN/8, x4, x1, x2)

inst_94371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000001fffffff; valaddr_reg:x3; val_offset:283113*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283113*0 + 3*675*FLEN/8, x4, x1, x2)

inst_94372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000003fffffff; valaddr_reg:x3; val_offset:283116*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283116*0 + 3*676*FLEN/8, x4, x1, x2)

inst_94373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000007fffffff; valaddr_reg:x3; val_offset:283119*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283119*0 + 3*677*FLEN/8, x4, x1, x2)

inst_94374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000000ffffffff; valaddr_reg:x3; val_offset:283122*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283122*0 + 3*678*FLEN/8, x4, x1, x2)

inst_94375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000001ffffffff; valaddr_reg:x3; val_offset:283125*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283125*0 + 3*679*FLEN/8, x4, x1, x2)

inst_94376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000003ffffffff; valaddr_reg:x3; val_offset:283128*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283128*0 + 3*680*FLEN/8, x4, x1, x2)

inst_94377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000007ffffffff; valaddr_reg:x3; val_offset:283131*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283131*0 + 3*681*FLEN/8, x4, x1, x2)

inst_94378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200000fffffffff; valaddr_reg:x3; val_offset:283134*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283134*0 + 3*682*FLEN/8, x4, x1, x2)

inst_94379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200001fffffffff; valaddr_reg:x3; val_offset:283137*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283137*0 + 3*683*FLEN/8, x4, x1, x2)

inst_94380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200003fffffffff; valaddr_reg:x3; val_offset:283140*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283140*0 + 3*684*FLEN/8, x4, x1, x2)

inst_94381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200007fffffffff; valaddr_reg:x3; val_offset:283143*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283143*0 + 3*685*FLEN/8, x4, x1, x2)

inst_94382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20000ffffffffff; valaddr_reg:x3; val_offset:283146*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283146*0 + 3*686*FLEN/8, x4, x1, x2)

inst_94383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20001ffffffffff; valaddr_reg:x3; val_offset:283149*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283149*0 + 3*687*FLEN/8, x4, x1, x2)

inst_94384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20003ffffffffff; valaddr_reg:x3; val_offset:283152*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283152*0 + 3*688*FLEN/8, x4, x1, x2)

inst_94385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20007ffffffffff; valaddr_reg:x3; val_offset:283155*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283155*0 + 3*689*FLEN/8, x4, x1, x2)

inst_94386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2000fffffffffff; valaddr_reg:x3; val_offset:283158*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283158*0 + 3*690*FLEN/8, x4, x1, x2)

inst_94387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2001fffffffffff; valaddr_reg:x3; val_offset:283161*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283161*0 + 3*691*FLEN/8, x4, x1, x2)

inst_94388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2003fffffffffff; valaddr_reg:x3; val_offset:283164*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283164*0 + 3*692*FLEN/8, x4, x1, x2)

inst_94389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x2007fffffffffff; valaddr_reg:x3; val_offset:283167*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283167*0 + 3*693*FLEN/8, x4, x1, x2)

inst_94390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x200ffffffffffff; valaddr_reg:x3; val_offset:283170*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283170*0 + 3*694*FLEN/8, x4, x1, x2)

inst_94391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x201ffffffffffff; valaddr_reg:x3; val_offset:283173*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283173*0 + 3*695*FLEN/8, x4, x1, x2)

inst_94392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x203ffffffffffff; valaddr_reg:x3; val_offset:283176*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283176*0 + 3*696*FLEN/8, x4, x1, x2)

inst_94393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x207ffffffffffff; valaddr_reg:x3; val_offset:283179*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283179*0 + 3*697*FLEN/8, x4, x1, x2)

inst_94394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x208000000000000; valaddr_reg:x3; val_offset:283182*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283182*0 + 3*698*FLEN/8, x4, x1, x2)

inst_94395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20c000000000000; valaddr_reg:x3; val_offset:283185*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283185*0 + 3*699*FLEN/8, x4, x1, x2)

inst_94396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20e000000000000; valaddr_reg:x3; val_offset:283188*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283188*0 + 3*700*FLEN/8, x4, x1, x2)

inst_94397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20f000000000000; valaddr_reg:x3; val_offset:283191*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283191*0 + 3*701*FLEN/8, x4, x1, x2)

inst_94398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20f800000000000; valaddr_reg:x3; val_offset:283194*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283194*0 + 3*702*FLEN/8, x4, x1, x2)

inst_94399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fc00000000000; valaddr_reg:x3; val_offset:283197*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283197*0 + 3*703*FLEN/8, x4, x1, x2)

inst_94400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fe00000000000; valaddr_reg:x3; val_offset:283200*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283200*0 + 3*704*FLEN/8, x4, x1, x2)

inst_94401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ff00000000000; valaddr_reg:x3; val_offset:283203*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283203*0 + 3*705*FLEN/8, x4, x1, x2)

inst_94402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ff80000000000; valaddr_reg:x3; val_offset:283206*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283206*0 + 3*706*FLEN/8, x4, x1, x2)

inst_94403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffc0000000000; valaddr_reg:x3; val_offset:283209*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283209*0 + 3*707*FLEN/8, x4, x1, x2)

inst_94404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffe0000000000; valaddr_reg:x3; val_offset:283212*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283212*0 + 3*708*FLEN/8, x4, x1, x2)

inst_94405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fff0000000000; valaddr_reg:x3; val_offset:283215*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283215*0 + 3*709*FLEN/8, x4, x1, x2)

inst_94406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fff8000000000; valaddr_reg:x3; val_offset:283218*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283218*0 + 3*710*FLEN/8, x4, x1, x2)

inst_94407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffc000000000; valaddr_reg:x3; val_offset:283221*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283221*0 + 3*711*FLEN/8, x4, x1, x2)

inst_94408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffe000000000; valaddr_reg:x3; val_offset:283224*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283224*0 + 3*712*FLEN/8, x4, x1, x2)

inst_94409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffff000000000; valaddr_reg:x3; val_offset:283227*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283227*0 + 3*713*FLEN/8, x4, x1, x2)

inst_94410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffff800000000; valaddr_reg:x3; val_offset:283230*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283230*0 + 3*714*FLEN/8, x4, x1, x2)

inst_94411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffc00000000; valaddr_reg:x3; val_offset:283233*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283233*0 + 3*715*FLEN/8, x4, x1, x2)

inst_94412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffe00000000; valaddr_reg:x3; val_offset:283236*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283236*0 + 3*716*FLEN/8, x4, x1, x2)

inst_94413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffff00000000; valaddr_reg:x3; val_offset:283239*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283239*0 + 3*717*FLEN/8, x4, x1, x2)

inst_94414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffff80000000; valaddr_reg:x3; val_offset:283242*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283242*0 + 3*718*FLEN/8, x4, x1, x2)

inst_94415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffc0000000; valaddr_reg:x3; val_offset:283245*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283245*0 + 3*719*FLEN/8, x4, x1, x2)

inst_94416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffe0000000; valaddr_reg:x3; val_offset:283248*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283248*0 + 3*720*FLEN/8, x4, x1, x2)

inst_94417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffff0000000; valaddr_reg:x3; val_offset:283251*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283251*0 + 3*721*FLEN/8, x4, x1, x2)

inst_94418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffff8000000; valaddr_reg:x3; val_offset:283254*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283254*0 + 3*722*FLEN/8, x4, x1, x2)

inst_94419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffc000000; valaddr_reg:x3; val_offset:283257*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283257*0 + 3*723*FLEN/8, x4, x1, x2)

inst_94420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffe000000; valaddr_reg:x3; val_offset:283260*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283260*0 + 3*724*FLEN/8, x4, x1, x2)

inst_94421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffff000000; valaddr_reg:x3; val_offset:283263*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283263*0 + 3*725*FLEN/8, x4, x1, x2)

inst_94422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffff800000; valaddr_reg:x3; val_offset:283266*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283266*0 + 3*726*FLEN/8, x4, x1, x2)

inst_94423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffc00000; valaddr_reg:x3; val_offset:283269*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283269*0 + 3*727*FLEN/8, x4, x1, x2)

inst_94424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffe00000; valaddr_reg:x3; val_offset:283272*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283272*0 + 3*728*FLEN/8, x4, x1, x2)

inst_94425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffff00000; valaddr_reg:x3; val_offset:283275*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283275*0 + 3*729*FLEN/8, x4, x1, x2)

inst_94426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffff80000; valaddr_reg:x3; val_offset:283278*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283278*0 + 3*730*FLEN/8, x4, x1, x2)

inst_94427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffc0000; valaddr_reg:x3; val_offset:283281*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283281*0 + 3*731*FLEN/8, x4, x1, x2)

inst_94428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffe0000; valaddr_reg:x3; val_offset:283284*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283284*0 + 3*732*FLEN/8, x4, x1, x2)

inst_94429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffff0000; valaddr_reg:x3; val_offset:283287*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283287*0 + 3*733*FLEN/8, x4, x1, x2)

inst_94430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffff8000; valaddr_reg:x3; val_offset:283290*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283290*0 + 3*734*FLEN/8, x4, x1, x2)

inst_94431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffc000; valaddr_reg:x3; val_offset:283293*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283293*0 + 3*735*FLEN/8, x4, x1, x2)

inst_94432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffe000; valaddr_reg:x3; val_offset:283296*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283296*0 + 3*736*FLEN/8, x4, x1, x2)

inst_94433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffff000; valaddr_reg:x3; val_offset:283299*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283299*0 + 3*737*FLEN/8, x4, x1, x2)

inst_94434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffff800; valaddr_reg:x3; val_offset:283302*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283302*0 + 3*738*FLEN/8, x4, x1, x2)

inst_94435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffffc00; valaddr_reg:x3; val_offset:283305*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283305*0 + 3*739*FLEN/8, x4, x1, x2)

inst_94436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffffe00; valaddr_reg:x3; val_offset:283308*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283308*0 + 3*740*FLEN/8, x4, x1, x2)

inst_94437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffff00; valaddr_reg:x3; val_offset:283311*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283311*0 + 3*741*FLEN/8, x4, x1, x2)

inst_94438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffff80; valaddr_reg:x3; val_offset:283314*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283314*0 + 3*742*FLEN/8, x4, x1, x2)

inst_94439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffffc0; valaddr_reg:x3; val_offset:283317*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283317*0 + 3*743*FLEN/8, x4, x1, x2)

inst_94440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffffe0; valaddr_reg:x3; val_offset:283320*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283320*0 + 3*744*FLEN/8, x4, x1, x2)

inst_94441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffffff0; valaddr_reg:x3; val_offset:283323*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283323*0 + 3*745*FLEN/8, x4, x1, x2)

inst_94442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffffff8; valaddr_reg:x3; val_offset:283326*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283326*0 + 3*746*FLEN/8, x4, x1, x2)

inst_94443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffffffc; valaddr_reg:x3; val_offset:283329*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283329*0 + 3*747*FLEN/8, x4, x1, x2)

inst_94444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20ffffffffffffe; valaddr_reg:x3; val_offset:283332*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283332*0 + 3*748*FLEN/8, x4, x1, x2)

inst_94445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda5f138160164 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada5f138160164; op2val:0x0;
op3val:0x20fffffffffffff; valaddr_reg:x3; val_offset:283335*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283335*0 + 3*749*FLEN/8, x4, x1, x2)

inst_94446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:283338*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283338*0 + 3*750*FLEN/8, x4, x1, x2)

inst_94447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:283341*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283341*0 + 3*751*FLEN/8, x4, x1, x2)

inst_94448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:283344*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283344*0 + 3*752*FLEN/8, x4, x1, x2)

inst_94449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:283347*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283347*0 + 3*753*FLEN/8, x4, x1, x2)

inst_94450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:283350*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283350*0 + 3*754*FLEN/8, x4, x1, x2)

inst_94451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:283353*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283353*0 + 3*755*FLEN/8, x4, x1, x2)

inst_94452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:283356*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283356*0 + 3*756*FLEN/8, x4, x1, x2)

inst_94453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:283359*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283359*0 + 3*757*FLEN/8, x4, x1, x2)

inst_94454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:283362*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283362*0 + 3*758*FLEN/8, x4, x1, x2)

inst_94455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:283365*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283365*0 + 3*759*FLEN/8, x4, x1, x2)

inst_94456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:283368*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283368*0 + 3*760*FLEN/8, x4, x1, x2)

inst_94457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:283371*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283371*0 + 3*761*FLEN/8, x4, x1, x2)

inst_94458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:283374*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283374*0 + 3*762*FLEN/8, x4, x1, x2)

inst_94459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:283377*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283377*0 + 3*763*FLEN/8, x4, x1, x2)

inst_94460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:283380*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283380*0 + 3*764*FLEN/8, x4, x1, x2)

inst_94461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:283383*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283383*0 + 3*765*FLEN/8, x4, x1, x2)

inst_94462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:283386*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283386*0 + 3*766*FLEN/8, x4, x1, x2)

inst_94463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdaf0a5af76fc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadaf0a5af76fc2; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:283389*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283389*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967360,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967361,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967363,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967367,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967375,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967391,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967423,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967487,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967615,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967871,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957968383,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957969407,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957971455,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957975551,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957983743,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958000127,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958032895,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958098431,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958229503,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958491647,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986959015935,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986960064511,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986962161663,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986966355967,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986974744575,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986991521791,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987025076223,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987092185087,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987226402815,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987494838271,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625988031709183,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625989105451007,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625991252934655,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625995547901951,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626004137836543,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626021317705727,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626055677444095,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626124396920831,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626261835874303,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626536713781247,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157627086469595135,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157628185981222911,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157630385004478463,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157634783050989567,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157643579144011775,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157661171330056191,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157696355702145023,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157766724446322687,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157907461934678015,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158188936911388671,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158751886864809983,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652607,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652608,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161003686678495232,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161566636631916544,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161848111608627200,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161988849096982528,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162059217841160192,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162094402213249024,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162111994399293440,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162120790492315648,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162125188538826752,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162127387562082304,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162128487073710080,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129036829523968,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129311707430912,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129449146384384,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129517865861120,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129552225599488,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129569405468672,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129577995403264,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129582290370560,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129584437854208,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129585511596032,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586048466944,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586316902400,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586451120128,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586518228992,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586551783424,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586568560640,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586576949248,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586581143552,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586583240704,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584289280,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584813568,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585075712,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585206784,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585272320,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585305088,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585321472,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585329664,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585333760,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585335808,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585336832,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337344,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337600,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337728,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337792,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337824,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337840,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337848,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337852,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337854,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337855,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967360,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967361,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967363,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967367,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967375,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967391,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967423,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967487,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967615,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967871,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957968383,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957969407,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957971455,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957975551,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957983743,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958000127,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958032895,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958098431,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958229503,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958491647,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986959015935,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986960064511,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986962161663,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986966355967,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986974744575,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986991521791,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987025076223,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987092185087,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987226402815,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987494838271,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625988031709183,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625989105451007,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625991252934655,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625995547901951,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626004137836543,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626021317705727,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626055677444095,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626124396920831,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626261835874303,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626536713781247,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157627086469595135,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157628185981222911,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157630385004478463,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157634783050989567,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157643579144011775,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157661171330056191,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157696355702145023,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157766724446322687,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157907461934678015,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158188936911388671,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158751886864809983,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652607,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652608,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161003686678495232,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161566636631916544,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161848111608627200,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161988849096982528,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162059217841160192,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162094402213249024,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162111994399293440,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162120790492315648,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162125188538826752,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162127387562082304,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162128487073710080,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129036829523968,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129311707430912,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129449146384384,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129517865861120,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129552225599488,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129569405468672,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129577995403264,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129582290370560,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129584437854208,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129585511596032,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586048466944,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586316902400,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586451120128,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586518228992,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586551783424,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586568560640,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586576949248,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586581143552,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586583240704,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584289280,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584813568,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585075712,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585206784,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585272320,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585305088,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585321472,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585329664,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585333760,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585335808,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585336832,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337344,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337600,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337728,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337792,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337824,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337840,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337848,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337852,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337854,64,FLEN)
NAN_BOXED(6894310166382097820,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337855,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041600,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041601,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041603,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041607,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041615,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041631,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041663,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041727,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041855,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478042111,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478042623,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478043647,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478045695,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478049791,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478057983,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478074367,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478107135,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478172671,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478303743,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478565887,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217479090175,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217480138751,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217482235903,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217486430207,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217494818815,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217511596031,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217545150463,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217612259327,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217746477055,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559218014912511,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559218551783423,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559219625525247,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559221773008895,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559226067976191,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559234657910783,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559251837779967,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559286197518335,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559354916995071,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559492355948543,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559767233855487,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457560316989669375,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457561416501297151,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457563615524552703,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457568013571063807,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457576809664086015,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457594401850130431,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457629586222219263,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457699954966396927,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457840692454752255,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9458122167431462911,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9458685117384884223,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9459811017291726847,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9459811017291726848,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9460936917198569472,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461499867151990784,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461781342128701440,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461922079617056768,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461992448361234432,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462027632733323264,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462045224919367680,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462054021012389888,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462058419058900992,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462060618082156544,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462061717593784320,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062267349598208,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062542227505152,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062679666458624,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062748385935360,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062782745673728,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062799925542912,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062808515477504,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062812810444800,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062814957928448,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816031670272,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816568541184,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816836976640,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816971194368,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817038303232,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817071857664,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817088634880,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817097023488,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817101217792,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817103314944,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104363520,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104887808,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105149952,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105281024,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105346560,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105379328,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105395712,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105403904,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105408000,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105410048,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411072,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411584,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411840,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411968,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412032,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412064,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412080,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412088,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412092,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412094,64,FLEN)
NAN_BOXED(6894311073958124758,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412095,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216941170688,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217209606144,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217343823872,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217410932736,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217444487168,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217461264384,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217469652992,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217473847296,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217475944448,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217476993024,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477517312,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477779456,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477910528,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477976064,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478008832,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478025216,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478033408,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478037504,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478039552,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478040576,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041088,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041344,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041472,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041536,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041568,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041584,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041592,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041596,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041598,64,FLEN)
NAN_BOXED(6894339481777736675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041599,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866496,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866497,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866499,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866503,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866511,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866527,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866559,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866623,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997866751,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997867007,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997867519,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997868543,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997870591,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997874687,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997882879,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997899263,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997932031,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226997997567,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226998128639,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226998390783,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226998915071,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103226999963647,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227002060799,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227006255103,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227014643711,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227031420927,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227064975359,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227132084223,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227266301951,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103227534737407,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103228071608319,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103229145350143,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103231292833791,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103235587801087,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103244177735679,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103261357604863,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103295717343231,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103364436819967,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103501875773439,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508103776753680383,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508104326509494271,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508105426021122047,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508107625044377599,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508112023090888703,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508120819183910911,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508138411369955327,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508173595742044159,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508243964486221823,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508384701974577151,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4508666176951287807,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4509229126904709119,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4510355026811551743,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4510355026811551744,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4511480926718394368,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512043876671815680,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512325351648526336,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512466089136881664,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512536457881059328,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512571642253148160,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512589234439192576,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512598030532214784,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512602428578725888,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512604627601981440,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512605727113609216,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606276869423104,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606551747330048,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606689186283520,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606757905760256,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606792265498624,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606809445367808,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606818035302400,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606822330269696,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606824477753344,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606825551495168,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826088366080,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826356801536,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826491019264,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826558128128,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826591682560,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826608459776,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826616848384,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826621042688,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826623139840,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826624188416,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826624712704,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826624974848,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625105920,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625171456,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625204224,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625220608,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625228800,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625232896,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625234944,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625235968,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236480,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236736,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236864,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236928,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236960,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236976,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236984,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236988,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236990,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4512606826625236991,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894345986928483537,64,FLEN)
NAN_BOXED(2319712838213743149,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855872,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855873,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855875,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855879,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855887,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855903,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855935,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855999,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856127,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856383,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856895,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075857919,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075859967,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075864063,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075872255,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075888639,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075921407,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075986943,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076118015,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076380159,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076904447,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188077953023,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188080050175,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188084244479,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188092633087,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188109410303,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188142964735,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188210073599,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188344291327,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188612726783,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115189149597695,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115190223339519,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115192370823167,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115196665790463,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115205255725055,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115222435594239,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115256795332607,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115325514809343,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115462953762815,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115737831669759,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144116287587483647,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144117387099111423,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144119586122366975,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144123984168878079,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144132780261900287,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144150372447944703,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144185556820033535,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144255925564211199,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144396663052566527,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144678138029277183,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(145241087982698495,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541119,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541120,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(147492887796383744,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148055837749805056,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148337312726515712,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148478050214871040,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148548418959048704,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148583603331137536,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148601195517181952,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148609991610204160,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148614389656715264,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148616588679970816,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148617688191598592,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618237947412480,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618512825319424,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618650264272896,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618718983749632,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618753343488000,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618770523357184,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618779113291776,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618783408259072,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618785555742720,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618786629484544,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787166355456,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787434790912,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787569008640,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787636117504,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787669671936,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787686449152,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787694837760,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787699032064,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787701129216,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702177792,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702702080,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702964224,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703095296,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703160832,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703193600,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703209984,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703218176,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703222272,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703224320,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225344,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225856,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226112,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226240,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226304,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226336,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226352,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226360,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226364,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226366,64,FLEN)
NAN_BOXED(6894349060020765028,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226367,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894359063584796610,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
