
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_58368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000003ffffff; valaddr_reg:x3; val_offset:175104*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175104*0 + 3*0*FLEN/8, x4, x1, x2)

inst_58369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000007ffffff; valaddr_reg:x3; val_offset:175107*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175107*0 + 3*1*FLEN/8, x4, x1, x2)

inst_58370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000fffffff; valaddr_reg:x3; val_offset:175110*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175110*0 + 3*2*FLEN/8, x4, x1, x2)

inst_58371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000001fffffff; valaddr_reg:x3; val_offset:175113*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175113*0 + 3*3*FLEN/8, x4, x1, x2)

inst_58372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000003fffffff; valaddr_reg:x3; val_offset:175116*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175116*0 + 3*4*FLEN/8, x4, x1, x2)

inst_58373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000007fffffff; valaddr_reg:x3; val_offset:175119*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175119*0 + 3*5*FLEN/8, x4, x1, x2)

inst_58374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000ffffffff; valaddr_reg:x3; val_offset:175122*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175122*0 + 3*6*FLEN/8, x4, x1, x2)

inst_58375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00001ffffffff; valaddr_reg:x3; val_offset:175125*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175125*0 + 3*7*FLEN/8, x4, x1, x2)

inst_58376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00003ffffffff; valaddr_reg:x3; val_offset:175128*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175128*0 + 3*8*FLEN/8, x4, x1, x2)

inst_58377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00007ffffffff; valaddr_reg:x3; val_offset:175131*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175131*0 + 3*9*FLEN/8, x4, x1, x2)

inst_58378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000fffffffff; valaddr_reg:x3; val_offset:175134*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175134*0 + 3*10*FLEN/8, x4, x1, x2)

inst_58379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0001fffffffff; valaddr_reg:x3; val_offset:175137*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175137*0 + 3*11*FLEN/8, x4, x1, x2)

inst_58380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0003fffffffff; valaddr_reg:x3; val_offset:175140*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175140*0 + 3*12*FLEN/8, x4, x1, x2)

inst_58381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0007fffffffff; valaddr_reg:x3; val_offset:175143*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175143*0 + 3*13*FLEN/8, x4, x1, x2)

inst_58382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000ffffffffff; valaddr_reg:x3; val_offset:175146*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175146*0 + 3*14*FLEN/8, x4, x1, x2)

inst_58383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b001ffffffffff; valaddr_reg:x3; val_offset:175149*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175149*0 + 3*15*FLEN/8, x4, x1, x2)

inst_58384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b003ffffffffff; valaddr_reg:x3; val_offset:175152*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175152*0 + 3*16*FLEN/8, x4, x1, x2)

inst_58385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b007ffffffffff; valaddr_reg:x3; val_offset:175155*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175155*0 + 3*17*FLEN/8, x4, x1, x2)

inst_58386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00fffffffffff; valaddr_reg:x3; val_offset:175158*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175158*0 + 3*18*FLEN/8, x4, x1, x2)

inst_58387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b01fffffffffff; valaddr_reg:x3; val_offset:175161*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175161*0 + 3*19*FLEN/8, x4, x1, x2)

inst_58388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b03fffffffffff; valaddr_reg:x3; val_offset:175164*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175164*0 + 3*20*FLEN/8, x4, x1, x2)

inst_58389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b07fffffffffff; valaddr_reg:x3; val_offset:175167*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175167*0 + 3*21*FLEN/8, x4, x1, x2)

inst_58390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0ffffffffffff; valaddr_reg:x3; val_offset:175170*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175170*0 + 3*22*FLEN/8, x4, x1, x2)

inst_58391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b1ffffffffffff; valaddr_reg:x3; val_offset:175173*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175173*0 + 3*23*FLEN/8, x4, x1, x2)

inst_58392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b3ffffffffffff; valaddr_reg:x3; val_offset:175176*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175176*0 + 3*24*FLEN/8, x4, x1, x2)

inst_58393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b7ffffffffffff; valaddr_reg:x3; val_offset:175179*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175179*0 + 3*25*FLEN/8, x4, x1, x2)

inst_58394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b8000000000000; valaddr_reg:x3; val_offset:175182*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175182*0 + 3*26*FLEN/8, x4, x1, x2)

inst_58395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bc000000000000; valaddr_reg:x3; val_offset:175185*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175185*0 + 3*27*FLEN/8, x4, x1, x2)

inst_58396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1be000000000000; valaddr_reg:x3; val_offset:175188*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175188*0 + 3*28*FLEN/8, x4, x1, x2)

inst_58397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bf000000000000; valaddr_reg:x3; val_offset:175191*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175191*0 + 3*29*FLEN/8, x4, x1, x2)

inst_58398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bf800000000000; valaddr_reg:x3; val_offset:175194*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175194*0 + 3*30*FLEN/8, x4, x1, x2)

inst_58399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfc00000000000; valaddr_reg:x3; val_offset:175197*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175197*0 + 3*31*FLEN/8, x4, x1, x2)

inst_58400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfe00000000000; valaddr_reg:x3; val_offset:175200*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175200*0 + 3*32*FLEN/8, x4, x1, x2)

inst_58401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bff00000000000; valaddr_reg:x3; val_offset:175203*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175203*0 + 3*33*FLEN/8, x4, x1, x2)

inst_58402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bff80000000000; valaddr_reg:x3; val_offset:175206*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175206*0 + 3*34*FLEN/8, x4, x1, x2)

inst_58403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffc0000000000; valaddr_reg:x3; val_offset:175209*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175209*0 + 3*35*FLEN/8, x4, x1, x2)

inst_58404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffe0000000000; valaddr_reg:x3; val_offset:175212*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175212*0 + 3*36*FLEN/8, x4, x1, x2)

inst_58405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfff0000000000; valaddr_reg:x3; val_offset:175215*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175215*0 + 3*37*FLEN/8, x4, x1, x2)

inst_58406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfff8000000000; valaddr_reg:x3; val_offset:175218*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175218*0 + 3*38*FLEN/8, x4, x1, x2)

inst_58407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffc000000000; valaddr_reg:x3; val_offset:175221*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175221*0 + 3*39*FLEN/8, x4, x1, x2)

inst_58408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffe000000000; valaddr_reg:x3; val_offset:175224*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175224*0 + 3*40*FLEN/8, x4, x1, x2)

inst_58409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffff000000000; valaddr_reg:x3; val_offset:175227*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175227*0 + 3*41*FLEN/8, x4, x1, x2)

inst_58410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffff800000000; valaddr_reg:x3; val_offset:175230*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175230*0 + 3*42*FLEN/8, x4, x1, x2)

inst_58411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffc00000000; valaddr_reg:x3; val_offset:175233*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175233*0 + 3*43*FLEN/8, x4, x1, x2)

inst_58412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffe00000000; valaddr_reg:x3; val_offset:175236*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175236*0 + 3*44*FLEN/8, x4, x1, x2)

inst_58413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffff00000000; valaddr_reg:x3; val_offset:175239*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175239*0 + 3*45*FLEN/8, x4, x1, x2)

inst_58414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffff80000000; valaddr_reg:x3; val_offset:175242*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175242*0 + 3*46*FLEN/8, x4, x1, x2)

inst_58415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffc0000000; valaddr_reg:x3; val_offset:175245*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175245*0 + 3*47*FLEN/8, x4, x1, x2)

inst_58416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffe0000000; valaddr_reg:x3; val_offset:175248*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175248*0 + 3*48*FLEN/8, x4, x1, x2)

inst_58417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffff0000000; valaddr_reg:x3; val_offset:175251*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175251*0 + 3*49*FLEN/8, x4, x1, x2)

inst_58418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffff8000000; valaddr_reg:x3; val_offset:175254*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175254*0 + 3*50*FLEN/8, x4, x1, x2)

inst_58419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffc000000; valaddr_reg:x3; val_offset:175257*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175257*0 + 3*51*FLEN/8, x4, x1, x2)

inst_58420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffe000000; valaddr_reg:x3; val_offset:175260*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175260*0 + 3*52*FLEN/8, x4, x1, x2)

inst_58421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffff000000; valaddr_reg:x3; val_offset:175263*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175263*0 + 3*53*FLEN/8, x4, x1, x2)

inst_58422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffff800000; valaddr_reg:x3; val_offset:175266*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175266*0 + 3*54*FLEN/8, x4, x1, x2)

inst_58423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffc00000; valaddr_reg:x3; val_offset:175269*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175269*0 + 3*55*FLEN/8, x4, x1, x2)

inst_58424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffe00000; valaddr_reg:x3; val_offset:175272*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175272*0 + 3*56*FLEN/8, x4, x1, x2)

inst_58425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffff00000; valaddr_reg:x3; val_offset:175275*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175275*0 + 3*57*FLEN/8, x4, x1, x2)

inst_58426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffff80000; valaddr_reg:x3; val_offset:175278*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175278*0 + 3*58*FLEN/8, x4, x1, x2)

inst_58427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffc0000; valaddr_reg:x3; val_offset:175281*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175281*0 + 3*59*FLEN/8, x4, x1, x2)

inst_58428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffe0000; valaddr_reg:x3; val_offset:175284*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175284*0 + 3*60*FLEN/8, x4, x1, x2)

inst_58429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffff0000; valaddr_reg:x3; val_offset:175287*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175287*0 + 3*61*FLEN/8, x4, x1, x2)

inst_58430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffff8000; valaddr_reg:x3; val_offset:175290*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175290*0 + 3*62*FLEN/8, x4, x1, x2)

inst_58431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffc000; valaddr_reg:x3; val_offset:175293*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175293*0 + 3*63*FLEN/8, x4, x1, x2)

inst_58432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffe000; valaddr_reg:x3; val_offset:175296*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175296*0 + 3*64*FLEN/8, x4, x1, x2)

inst_58433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffff000; valaddr_reg:x3; val_offset:175299*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175299*0 + 3*65*FLEN/8, x4, x1, x2)

inst_58434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffff800; valaddr_reg:x3; val_offset:175302*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175302*0 + 3*66*FLEN/8, x4, x1, x2)

inst_58435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffffc00; valaddr_reg:x3; val_offset:175305*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175305*0 + 3*67*FLEN/8, x4, x1, x2)

inst_58436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffffe00; valaddr_reg:x3; val_offset:175308*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175308*0 + 3*68*FLEN/8, x4, x1, x2)

inst_58437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffff00; valaddr_reg:x3; val_offset:175311*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175311*0 + 3*69*FLEN/8, x4, x1, x2)

inst_58438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffff80; valaddr_reg:x3; val_offset:175314*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175314*0 + 3*70*FLEN/8, x4, x1, x2)

inst_58439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffffc0; valaddr_reg:x3; val_offset:175317*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175317*0 + 3*71*FLEN/8, x4, x1, x2)

inst_58440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffffe0; valaddr_reg:x3; val_offset:175320*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175320*0 + 3*72*FLEN/8, x4, x1, x2)

inst_58441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffffff0; valaddr_reg:x3; val_offset:175323*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175323*0 + 3*73*FLEN/8, x4, x1, x2)

inst_58442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffffff8; valaddr_reg:x3; val_offset:175326*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175326*0 + 3*74*FLEN/8, x4, x1, x2)

inst_58443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffffffc; valaddr_reg:x3; val_offset:175329*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175329*0 + 3*75*FLEN/8, x4, x1, x2)

inst_58444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bffffffffffffe; valaddr_reg:x3; val_offset:175332*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175332*0 + 3*76*FLEN/8, x4, x1, x2)

inst_58445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1bfffffffffffff; valaddr_reg:x3; val_offset:175335*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175335*0 + 3*77*FLEN/8, x4, x1, x2)

inst_58446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:175338*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175338*0 + 3*78*FLEN/8, x4, x1, x2)

inst_58447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:175341*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175341*0 + 3*79*FLEN/8, x4, x1, x2)

inst_58448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:175344*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175344*0 + 3*80*FLEN/8, x4, x1, x2)

inst_58449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:175347*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175347*0 + 3*81*FLEN/8, x4, x1, x2)

inst_58450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:175350*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175350*0 + 3*82*FLEN/8, x4, x1, x2)

inst_58451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:175353*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175353*0 + 3*83*FLEN/8, x4, x1, x2)

inst_58452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:175356*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175356*0 + 3*84*FLEN/8, x4, x1, x2)

inst_58453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:175359*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175359*0 + 3*85*FLEN/8, x4, x1, x2)

inst_58454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:175362*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175362*0 + 3*86*FLEN/8, x4, x1, x2)

inst_58455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:175365*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175365*0 + 3*87*FLEN/8, x4, x1, x2)

inst_58456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:175368*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175368*0 + 3*88*FLEN/8, x4, x1, x2)

inst_58457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:175371*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175371*0 + 3*89*FLEN/8, x4, x1, x2)

inst_58458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:175374*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175374*0 + 3*90*FLEN/8, x4, x1, x2)

inst_58459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:175377*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175377*0 + 3*91*FLEN/8, x4, x1, x2)

inst_58460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:175380*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175380*0 + 3*92*FLEN/8, x4, x1, x2)

inst_58461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:175383*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175383*0 + 3*93*FLEN/8, x4, x1, x2)

inst_58462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:175386*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175386*0 + 3*94*FLEN/8, x4, x1, x2)

inst_58463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:175389*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175389*0 + 3*95*FLEN/8, x4, x1, x2)

inst_58464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:175392*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175392*0 + 3*96*FLEN/8, x4, x1, x2)

inst_58465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:175395*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175395*0 + 3*97*FLEN/8, x4, x1, x2)

inst_58466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:175398*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175398*0 + 3*98*FLEN/8, x4, x1, x2)

inst_58467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:175401*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175401*0 + 3*99*FLEN/8, x4, x1, x2)

inst_58468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000000000; valaddr_reg:x3; val_offset:175404*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175404*0 + 3*100*FLEN/8, x4, x1, x2)

inst_58469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000000001; valaddr_reg:x3; val_offset:175407*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175407*0 + 3*101*FLEN/8, x4, x1, x2)

inst_58470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000000003; valaddr_reg:x3; val_offset:175410*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175410*0 + 3*102*FLEN/8, x4, x1, x2)

inst_58471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000000007; valaddr_reg:x3; val_offset:175413*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175413*0 + 3*103*FLEN/8, x4, x1, x2)

inst_58472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000000000f; valaddr_reg:x3; val_offset:175416*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175416*0 + 3*104*FLEN/8, x4, x1, x2)

inst_58473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000000001f; valaddr_reg:x3; val_offset:175419*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175419*0 + 3*105*FLEN/8, x4, x1, x2)

inst_58474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000000003f; valaddr_reg:x3; val_offset:175422*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175422*0 + 3*106*FLEN/8, x4, x1, x2)

inst_58475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000000007f; valaddr_reg:x3; val_offset:175425*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175425*0 + 3*107*FLEN/8, x4, x1, x2)

inst_58476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000000000ff; valaddr_reg:x3; val_offset:175428*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175428*0 + 3*108*FLEN/8, x4, x1, x2)

inst_58477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000000001ff; valaddr_reg:x3; val_offset:175431*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175431*0 + 3*109*FLEN/8, x4, x1, x2)

inst_58478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000000003ff; valaddr_reg:x3; val_offset:175434*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175434*0 + 3*110*FLEN/8, x4, x1, x2)

inst_58479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000000007ff; valaddr_reg:x3; val_offset:175437*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175437*0 + 3*111*FLEN/8, x4, x1, x2)

inst_58480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000000fff; valaddr_reg:x3; val_offset:175440*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175440*0 + 3*112*FLEN/8, x4, x1, x2)

inst_58481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000001fff; valaddr_reg:x3; val_offset:175443*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175443*0 + 3*113*FLEN/8, x4, x1, x2)

inst_58482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000003fff; valaddr_reg:x3; val_offset:175446*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175446*0 + 3*114*FLEN/8, x4, x1, x2)

inst_58483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000007fff; valaddr_reg:x3; val_offset:175449*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175449*0 + 3*115*FLEN/8, x4, x1, x2)

inst_58484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000000ffff; valaddr_reg:x3; val_offset:175452*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175452*0 + 3*116*FLEN/8, x4, x1, x2)

inst_58485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000001ffff; valaddr_reg:x3; val_offset:175455*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175455*0 + 3*117*FLEN/8, x4, x1, x2)

inst_58486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000003ffff; valaddr_reg:x3; val_offset:175458*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175458*0 + 3*118*FLEN/8, x4, x1, x2)

inst_58487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000007ffff; valaddr_reg:x3; val_offset:175461*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175461*0 + 3*119*FLEN/8, x4, x1, x2)

inst_58488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000000fffff; valaddr_reg:x3; val_offset:175464*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175464*0 + 3*120*FLEN/8, x4, x1, x2)

inst_58489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000001fffff; valaddr_reg:x3; val_offset:175467*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175467*0 + 3*121*FLEN/8, x4, x1, x2)

inst_58490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000003fffff; valaddr_reg:x3; val_offset:175470*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175470*0 + 3*122*FLEN/8, x4, x1, x2)

inst_58491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000007fffff; valaddr_reg:x3; val_offset:175473*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175473*0 + 3*123*FLEN/8, x4, x1, x2)

inst_58492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000000ffffff; valaddr_reg:x3; val_offset:175476*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175476*0 + 3*124*FLEN/8, x4, x1, x2)

inst_58493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000001ffffff; valaddr_reg:x3; val_offset:175479*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175479*0 + 3*125*FLEN/8, x4, x1, x2)

inst_58494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000003ffffff; valaddr_reg:x3; val_offset:175482*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175482*0 + 3*126*FLEN/8, x4, x1, x2)

inst_58495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000007ffffff; valaddr_reg:x3; val_offset:175485*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175485*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_58496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000000fffffff; valaddr_reg:x3; val_offset:175488*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175488*0 + 3*128*FLEN/8, x4, x1, x2)

inst_58497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000001fffffff; valaddr_reg:x3; val_offset:175491*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175491*0 + 3*129*FLEN/8, x4, x1, x2)

inst_58498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000003fffffff; valaddr_reg:x3; val_offset:175494*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175494*0 + 3*130*FLEN/8, x4, x1, x2)

inst_58499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000007fffffff; valaddr_reg:x3; val_offset:175497*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175497*0 + 3*131*FLEN/8, x4, x1, x2)

inst_58500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00000ffffffff; valaddr_reg:x3; val_offset:175500*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175500*0 + 3*132*FLEN/8, x4, x1, x2)

inst_58501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00001ffffffff; valaddr_reg:x3; val_offset:175503*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175503*0 + 3*133*FLEN/8, x4, x1, x2)

inst_58502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00003ffffffff; valaddr_reg:x3; val_offset:175506*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175506*0 + 3*134*FLEN/8, x4, x1, x2)

inst_58503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00007ffffffff; valaddr_reg:x3; val_offset:175509*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175509*0 + 3*135*FLEN/8, x4, x1, x2)

inst_58504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0000fffffffff; valaddr_reg:x3; val_offset:175512*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175512*0 + 3*136*FLEN/8, x4, x1, x2)

inst_58505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0001fffffffff; valaddr_reg:x3; val_offset:175515*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175515*0 + 3*137*FLEN/8, x4, x1, x2)

inst_58506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0003fffffffff; valaddr_reg:x3; val_offset:175518*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175518*0 + 3*138*FLEN/8, x4, x1, x2)

inst_58507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0007fffffffff; valaddr_reg:x3; val_offset:175521*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175521*0 + 3*139*FLEN/8, x4, x1, x2)

inst_58508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f000ffffffffff; valaddr_reg:x3; val_offset:175524*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175524*0 + 3*140*FLEN/8, x4, x1, x2)

inst_58509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f001ffffffffff; valaddr_reg:x3; val_offset:175527*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175527*0 + 3*141*FLEN/8, x4, x1, x2)

inst_58510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f003ffffffffff; valaddr_reg:x3; val_offset:175530*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175530*0 + 3*142*FLEN/8, x4, x1, x2)

inst_58511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f007ffffffffff; valaddr_reg:x3; val_offset:175533*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175533*0 + 3*143*FLEN/8, x4, x1, x2)

inst_58512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f00fffffffffff; valaddr_reg:x3; val_offset:175536*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175536*0 + 3*144*FLEN/8, x4, x1, x2)

inst_58513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f01fffffffffff; valaddr_reg:x3; val_offset:175539*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175539*0 + 3*145*FLEN/8, x4, x1, x2)

inst_58514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f03fffffffffff; valaddr_reg:x3; val_offset:175542*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175542*0 + 3*146*FLEN/8, x4, x1, x2)

inst_58515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f07fffffffffff; valaddr_reg:x3; val_offset:175545*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175545*0 + 3*147*FLEN/8, x4, x1, x2)

inst_58516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f0ffffffffffff; valaddr_reg:x3; val_offset:175548*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175548*0 + 3*148*FLEN/8, x4, x1, x2)

inst_58517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f1ffffffffffff; valaddr_reg:x3; val_offset:175551*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175551*0 + 3*149*FLEN/8, x4, x1, x2)

inst_58518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f3ffffffffffff; valaddr_reg:x3; val_offset:175554*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175554*0 + 3*150*FLEN/8, x4, x1, x2)

inst_58519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f7ffffffffffff; valaddr_reg:x3; val_offset:175557*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175557*0 + 3*151*FLEN/8, x4, x1, x2)

inst_58520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2f8000000000000; valaddr_reg:x3; val_offset:175560*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175560*0 + 3*152*FLEN/8, x4, x1, x2)

inst_58521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fc000000000000; valaddr_reg:x3; val_offset:175563*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175563*0 + 3*153*FLEN/8, x4, x1, x2)

inst_58522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fe000000000000; valaddr_reg:x3; val_offset:175566*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175566*0 + 3*154*FLEN/8, x4, x1, x2)

inst_58523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ff000000000000; valaddr_reg:x3; val_offset:175569*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175569*0 + 3*155*FLEN/8, x4, x1, x2)

inst_58524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ff800000000000; valaddr_reg:x3; val_offset:175572*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175572*0 + 3*156*FLEN/8, x4, x1, x2)

inst_58525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffc00000000000; valaddr_reg:x3; val_offset:175575*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175575*0 + 3*157*FLEN/8, x4, x1, x2)

inst_58526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffe00000000000; valaddr_reg:x3; val_offset:175578*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175578*0 + 3*158*FLEN/8, x4, x1, x2)

inst_58527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fff00000000000; valaddr_reg:x3; val_offset:175581*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175581*0 + 3*159*FLEN/8, x4, x1, x2)

inst_58528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fff80000000000; valaddr_reg:x3; val_offset:175584*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175584*0 + 3*160*FLEN/8, x4, x1, x2)

inst_58529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffc0000000000; valaddr_reg:x3; val_offset:175587*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175587*0 + 3*161*FLEN/8, x4, x1, x2)

inst_58530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffe0000000000; valaddr_reg:x3; val_offset:175590*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175590*0 + 3*162*FLEN/8, x4, x1, x2)

inst_58531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffff0000000000; valaddr_reg:x3; val_offset:175593*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175593*0 + 3*163*FLEN/8, x4, x1, x2)

inst_58532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffff8000000000; valaddr_reg:x3; val_offset:175596*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175596*0 + 3*164*FLEN/8, x4, x1, x2)

inst_58533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffc000000000; valaddr_reg:x3; val_offset:175599*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175599*0 + 3*165*FLEN/8, x4, x1, x2)

inst_58534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffe000000000; valaddr_reg:x3; val_offset:175602*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175602*0 + 3*166*FLEN/8, x4, x1, x2)

inst_58535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffff000000000; valaddr_reg:x3; val_offset:175605*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175605*0 + 3*167*FLEN/8, x4, x1, x2)

inst_58536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffff800000000; valaddr_reg:x3; val_offset:175608*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175608*0 + 3*168*FLEN/8, x4, x1, x2)

inst_58537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffc00000000; valaddr_reg:x3; val_offset:175611*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175611*0 + 3*169*FLEN/8, x4, x1, x2)

inst_58538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffe00000000; valaddr_reg:x3; val_offset:175614*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175614*0 + 3*170*FLEN/8, x4, x1, x2)

inst_58539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffff00000000; valaddr_reg:x3; val_offset:175617*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175617*0 + 3*171*FLEN/8, x4, x1, x2)

inst_58540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffff80000000; valaddr_reg:x3; val_offset:175620*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175620*0 + 3*172*FLEN/8, x4, x1, x2)

inst_58541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffc0000000; valaddr_reg:x3; val_offset:175623*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175623*0 + 3*173*FLEN/8, x4, x1, x2)

inst_58542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffe0000000; valaddr_reg:x3; val_offset:175626*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175626*0 + 3*174*FLEN/8, x4, x1, x2)

inst_58543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffff0000000; valaddr_reg:x3; val_offset:175629*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175629*0 + 3*175*FLEN/8, x4, x1, x2)

inst_58544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffff8000000; valaddr_reg:x3; val_offset:175632*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175632*0 + 3*176*FLEN/8, x4, x1, x2)

inst_58545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffc000000; valaddr_reg:x3; val_offset:175635*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175635*0 + 3*177*FLEN/8, x4, x1, x2)

inst_58546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffe000000; valaddr_reg:x3; val_offset:175638*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175638*0 + 3*178*FLEN/8, x4, x1, x2)

inst_58547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffff000000; valaddr_reg:x3; val_offset:175641*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175641*0 + 3*179*FLEN/8, x4, x1, x2)

inst_58548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffff800000; valaddr_reg:x3; val_offset:175644*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175644*0 + 3*180*FLEN/8, x4, x1, x2)

inst_58549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffc00000; valaddr_reg:x3; val_offset:175647*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175647*0 + 3*181*FLEN/8, x4, x1, x2)

inst_58550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffe00000; valaddr_reg:x3; val_offset:175650*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175650*0 + 3*182*FLEN/8, x4, x1, x2)

inst_58551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffff00000; valaddr_reg:x3; val_offset:175653*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175653*0 + 3*183*FLEN/8, x4, x1, x2)

inst_58552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffff80000; valaddr_reg:x3; val_offset:175656*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175656*0 + 3*184*FLEN/8, x4, x1, x2)

inst_58553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffc0000; valaddr_reg:x3; val_offset:175659*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175659*0 + 3*185*FLEN/8, x4, x1, x2)

inst_58554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffe0000; valaddr_reg:x3; val_offset:175662*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175662*0 + 3*186*FLEN/8, x4, x1, x2)

inst_58555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffff0000; valaddr_reg:x3; val_offset:175665*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175665*0 + 3*187*FLEN/8, x4, x1, x2)

inst_58556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffff8000; valaddr_reg:x3; val_offset:175668*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175668*0 + 3*188*FLEN/8, x4, x1, x2)

inst_58557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffc000; valaddr_reg:x3; val_offset:175671*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175671*0 + 3*189*FLEN/8, x4, x1, x2)

inst_58558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffe000; valaddr_reg:x3; val_offset:175674*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175674*0 + 3*190*FLEN/8, x4, x1, x2)

inst_58559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffff000; valaddr_reg:x3; val_offset:175677*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175677*0 + 3*191*FLEN/8, x4, x1, x2)

inst_58560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffff800; valaddr_reg:x3; val_offset:175680*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175680*0 + 3*192*FLEN/8, x4, x1, x2)

inst_58561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffffc00; valaddr_reg:x3; val_offset:175683*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175683*0 + 3*193*FLEN/8, x4, x1, x2)

inst_58562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffffe00; valaddr_reg:x3; val_offset:175686*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175686*0 + 3*194*FLEN/8, x4, x1, x2)

inst_58563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffff00; valaddr_reg:x3; val_offset:175689*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175689*0 + 3*195*FLEN/8, x4, x1, x2)

inst_58564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffff80; valaddr_reg:x3; val_offset:175692*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175692*0 + 3*196*FLEN/8, x4, x1, x2)

inst_58565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffffc0; valaddr_reg:x3; val_offset:175695*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175695*0 + 3*197*FLEN/8, x4, x1, x2)

inst_58566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffffe0; valaddr_reg:x3; val_offset:175698*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175698*0 + 3*198*FLEN/8, x4, x1, x2)

inst_58567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffffff0; valaddr_reg:x3; val_offset:175701*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175701*0 + 3*199*FLEN/8, x4, x1, x2)

inst_58568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffffff8; valaddr_reg:x3; val_offset:175704*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175704*0 + 3*200*FLEN/8, x4, x1, x2)

inst_58569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffffffc; valaddr_reg:x3; val_offset:175707*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175707*0 + 3*201*FLEN/8, x4, x1, x2)

inst_58570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2fffffffffffffe; valaddr_reg:x3; val_offset:175710*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175710*0 + 3*202*FLEN/8, x4, x1, x2)

inst_58571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ccbc99143c20 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ccbc99143c20; op2val:0x0;
op3val:0x2ffffffffffffff; valaddr_reg:x3; val_offset:175713*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175713*0 + 3*203*FLEN/8, x4, x1, x2)

inst_58572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:175716*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175716*0 + 3*204*FLEN/8, x4, x1, x2)

inst_58573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:175719*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175719*0 + 3*205*FLEN/8, x4, x1, x2)

inst_58574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:175722*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175722*0 + 3*206*FLEN/8, x4, x1, x2)

inst_58575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:175725*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175725*0 + 3*207*FLEN/8, x4, x1, x2)

inst_58576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:175728*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175728*0 + 3*208*FLEN/8, x4, x1, x2)

inst_58577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:175731*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175731*0 + 3*209*FLEN/8, x4, x1, x2)

inst_58578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:175734*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175734*0 + 3*210*FLEN/8, x4, x1, x2)

inst_58579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:175737*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175737*0 + 3*211*FLEN/8, x4, x1, x2)

inst_58580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:175740*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175740*0 + 3*212*FLEN/8, x4, x1, x2)

inst_58581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:175743*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175743*0 + 3*213*FLEN/8, x4, x1, x2)

inst_58582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:175746*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175746*0 + 3*214*FLEN/8, x4, x1, x2)

inst_58583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:175749*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175749*0 + 3*215*FLEN/8, x4, x1, x2)

inst_58584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:175752*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175752*0 + 3*216*FLEN/8, x4, x1, x2)

inst_58585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:175755*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175755*0 + 3*217*FLEN/8, x4, x1, x2)

inst_58586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:175758*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175758*0 + 3*218*FLEN/8, x4, x1, x2)

inst_58587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:175761*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175761*0 + 3*219*FLEN/8, x4, x1, x2)

inst_58588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:175764*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175764*0 + 3*220*FLEN/8, x4, x1, x2)

inst_58589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:175767*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175767*0 + 3*221*FLEN/8, x4, x1, x2)

inst_58590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:175770*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175770*0 + 3*222*FLEN/8, x4, x1, x2)

inst_58591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:175773*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175773*0 + 3*223*FLEN/8, x4, x1, x2)

inst_58592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:175776*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175776*0 + 3*224*FLEN/8, x4, x1, x2)

inst_58593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:175779*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175779*0 + 3*225*FLEN/8, x4, x1, x2)

inst_58594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000000000; valaddr_reg:x3; val_offset:175782*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175782*0 + 3*226*FLEN/8, x4, x1, x2)

inst_58595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000000001; valaddr_reg:x3; val_offset:175785*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175785*0 + 3*227*FLEN/8, x4, x1, x2)

inst_58596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000000003; valaddr_reg:x3; val_offset:175788*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175788*0 + 3*228*FLEN/8, x4, x1, x2)

inst_58597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000000007; valaddr_reg:x3; val_offset:175791*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175791*0 + 3*229*FLEN/8, x4, x1, x2)

inst_58598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000000000f; valaddr_reg:x3; val_offset:175794*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175794*0 + 3*230*FLEN/8, x4, x1, x2)

inst_58599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000000001f; valaddr_reg:x3; val_offset:175797*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175797*0 + 3*231*FLEN/8, x4, x1, x2)

inst_58600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000000003f; valaddr_reg:x3; val_offset:175800*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175800*0 + 3*232*FLEN/8, x4, x1, x2)

inst_58601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000000007f; valaddr_reg:x3; val_offset:175803*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175803*0 + 3*233*FLEN/8, x4, x1, x2)

inst_58602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000000000ff; valaddr_reg:x3; val_offset:175806*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175806*0 + 3*234*FLEN/8, x4, x1, x2)

inst_58603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000000001ff; valaddr_reg:x3; val_offset:175809*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175809*0 + 3*235*FLEN/8, x4, x1, x2)

inst_58604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000000003ff; valaddr_reg:x3; val_offset:175812*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175812*0 + 3*236*FLEN/8, x4, x1, x2)

inst_58605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000000007ff; valaddr_reg:x3; val_offset:175815*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175815*0 + 3*237*FLEN/8, x4, x1, x2)

inst_58606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000000fff; valaddr_reg:x3; val_offset:175818*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175818*0 + 3*238*FLEN/8, x4, x1, x2)

inst_58607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000001fff; valaddr_reg:x3; val_offset:175821*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175821*0 + 3*239*FLEN/8, x4, x1, x2)

inst_58608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000003fff; valaddr_reg:x3; val_offset:175824*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175824*0 + 3*240*FLEN/8, x4, x1, x2)

inst_58609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000007fff; valaddr_reg:x3; val_offset:175827*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175827*0 + 3*241*FLEN/8, x4, x1, x2)

inst_58610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000000ffff; valaddr_reg:x3; val_offset:175830*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175830*0 + 3*242*FLEN/8, x4, x1, x2)

inst_58611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000001ffff; valaddr_reg:x3; val_offset:175833*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175833*0 + 3*243*FLEN/8, x4, x1, x2)

inst_58612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000003ffff; valaddr_reg:x3; val_offset:175836*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175836*0 + 3*244*FLEN/8, x4, x1, x2)

inst_58613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000007ffff; valaddr_reg:x3; val_offset:175839*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175839*0 + 3*245*FLEN/8, x4, x1, x2)

inst_58614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000000fffff; valaddr_reg:x3; val_offset:175842*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175842*0 + 3*246*FLEN/8, x4, x1, x2)

inst_58615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000001fffff; valaddr_reg:x3; val_offset:175845*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175845*0 + 3*247*FLEN/8, x4, x1, x2)

inst_58616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000003fffff; valaddr_reg:x3; val_offset:175848*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175848*0 + 3*248*FLEN/8, x4, x1, x2)

inst_58617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000007fffff; valaddr_reg:x3; val_offset:175851*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175851*0 + 3*249*FLEN/8, x4, x1, x2)

inst_58618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000000ffffff; valaddr_reg:x3; val_offset:175854*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175854*0 + 3*250*FLEN/8, x4, x1, x2)

inst_58619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000001ffffff; valaddr_reg:x3; val_offset:175857*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175857*0 + 3*251*FLEN/8, x4, x1, x2)

inst_58620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000003ffffff; valaddr_reg:x3; val_offset:175860*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175860*0 + 3*252*FLEN/8, x4, x1, x2)

inst_58621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000007ffffff; valaddr_reg:x3; val_offset:175863*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175863*0 + 3*253*FLEN/8, x4, x1, x2)

inst_58622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000000fffffff; valaddr_reg:x3; val_offset:175866*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175866*0 + 3*254*FLEN/8, x4, x1, x2)

inst_58623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000001fffffff; valaddr_reg:x3; val_offset:175869*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175869*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_58624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000003fffffff; valaddr_reg:x3; val_offset:175872*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175872*0 + 3*256*FLEN/8, x4, x1, x2)

inst_58625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000007fffffff; valaddr_reg:x3; val_offset:175875*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175875*0 + 3*257*FLEN/8, x4, x1, x2)

inst_58626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700000ffffffff; valaddr_reg:x3; val_offset:175878*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175878*0 + 3*258*FLEN/8, x4, x1, x2)

inst_58627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700001ffffffff; valaddr_reg:x3; val_offset:175881*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175881*0 + 3*259*FLEN/8, x4, x1, x2)

inst_58628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700003ffffffff; valaddr_reg:x3; val_offset:175884*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175884*0 + 3*260*FLEN/8, x4, x1, x2)

inst_58629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700007ffffffff; valaddr_reg:x3; val_offset:175887*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175887*0 + 3*261*FLEN/8, x4, x1, x2)

inst_58630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070000fffffffff; valaddr_reg:x3; val_offset:175890*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175890*0 + 3*262*FLEN/8, x4, x1, x2)

inst_58631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070001fffffffff; valaddr_reg:x3; val_offset:175893*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175893*0 + 3*263*FLEN/8, x4, x1, x2)

inst_58632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070003fffffffff; valaddr_reg:x3; val_offset:175896*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175896*0 + 3*264*FLEN/8, x4, x1, x2)

inst_58633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070007fffffffff; valaddr_reg:x3; val_offset:175899*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175899*0 + 3*265*FLEN/8, x4, x1, x2)

inst_58634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807000ffffffffff; valaddr_reg:x3; val_offset:175902*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175902*0 + 3*266*FLEN/8, x4, x1, x2)

inst_58635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807001ffffffffff; valaddr_reg:x3; val_offset:175905*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175905*0 + 3*267*FLEN/8, x4, x1, x2)

inst_58636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807003ffffffffff; valaddr_reg:x3; val_offset:175908*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175908*0 + 3*268*FLEN/8, x4, x1, x2)

inst_58637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807007ffffffffff; valaddr_reg:x3; val_offset:175911*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175911*0 + 3*269*FLEN/8, x4, x1, x2)

inst_58638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80700fffffffffff; valaddr_reg:x3; val_offset:175914*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175914*0 + 3*270*FLEN/8, x4, x1, x2)

inst_58639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80701fffffffffff; valaddr_reg:x3; val_offset:175917*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175917*0 + 3*271*FLEN/8, x4, x1, x2)

inst_58640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80703fffffffffff; valaddr_reg:x3; val_offset:175920*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175920*0 + 3*272*FLEN/8, x4, x1, x2)

inst_58641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x80707fffffffffff; valaddr_reg:x3; val_offset:175923*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175923*0 + 3*273*FLEN/8, x4, x1, x2)

inst_58642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8070ffffffffffff; valaddr_reg:x3; val_offset:175926*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175926*0 + 3*274*FLEN/8, x4, x1, x2)

inst_58643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8071ffffffffffff; valaddr_reg:x3; val_offset:175929*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175929*0 + 3*275*FLEN/8, x4, x1, x2)

inst_58644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8073ffffffffffff; valaddr_reg:x3; val_offset:175932*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175932*0 + 3*276*FLEN/8, x4, x1, x2)

inst_58645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8077ffffffffffff; valaddr_reg:x3; val_offset:175935*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175935*0 + 3*277*FLEN/8, x4, x1, x2)

inst_58646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x8078000000000000; valaddr_reg:x3; val_offset:175938*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175938*0 + 3*278*FLEN/8, x4, x1, x2)

inst_58647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807c000000000000; valaddr_reg:x3; val_offset:175941*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175941*0 + 3*279*FLEN/8, x4, x1, x2)

inst_58648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807e000000000000; valaddr_reg:x3; val_offset:175944*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175944*0 + 3*280*FLEN/8, x4, x1, x2)

inst_58649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807f000000000000; valaddr_reg:x3; val_offset:175947*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175947*0 + 3*281*FLEN/8, x4, x1, x2)

inst_58650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807f800000000000; valaddr_reg:x3; val_offset:175950*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175950*0 + 3*282*FLEN/8, x4, x1, x2)

inst_58651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fc00000000000; valaddr_reg:x3; val_offset:175953*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175953*0 + 3*283*FLEN/8, x4, x1, x2)

inst_58652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fe00000000000; valaddr_reg:x3; val_offset:175956*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175956*0 + 3*284*FLEN/8, x4, x1, x2)

inst_58653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ff00000000000; valaddr_reg:x3; val_offset:175959*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175959*0 + 3*285*FLEN/8, x4, x1, x2)

inst_58654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ff80000000000; valaddr_reg:x3; val_offset:175962*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175962*0 + 3*286*FLEN/8, x4, x1, x2)

inst_58655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffc0000000000; valaddr_reg:x3; val_offset:175965*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175965*0 + 3*287*FLEN/8, x4, x1, x2)

inst_58656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffe0000000000; valaddr_reg:x3; val_offset:175968*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175968*0 + 3*288*FLEN/8, x4, x1, x2)

inst_58657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fff0000000000; valaddr_reg:x3; val_offset:175971*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175971*0 + 3*289*FLEN/8, x4, x1, x2)

inst_58658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fff8000000000; valaddr_reg:x3; val_offset:175974*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175974*0 + 3*290*FLEN/8, x4, x1, x2)

inst_58659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffc000000000; valaddr_reg:x3; val_offset:175977*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175977*0 + 3*291*FLEN/8, x4, x1, x2)

inst_58660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffe000000000; valaddr_reg:x3; val_offset:175980*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175980*0 + 3*292*FLEN/8, x4, x1, x2)

inst_58661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffff000000000; valaddr_reg:x3; val_offset:175983*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175983*0 + 3*293*FLEN/8, x4, x1, x2)

inst_58662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffff800000000; valaddr_reg:x3; val_offset:175986*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175986*0 + 3*294*FLEN/8, x4, x1, x2)

inst_58663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffc00000000; valaddr_reg:x3; val_offset:175989*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175989*0 + 3*295*FLEN/8, x4, x1, x2)

inst_58664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffe00000000; valaddr_reg:x3; val_offset:175992*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175992*0 + 3*296*FLEN/8, x4, x1, x2)

inst_58665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffff00000000; valaddr_reg:x3; val_offset:175995*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175995*0 + 3*297*FLEN/8, x4, x1, x2)

inst_58666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffff80000000; valaddr_reg:x3; val_offset:175998*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175998*0 + 3*298*FLEN/8, x4, x1, x2)

inst_58667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffc0000000; valaddr_reg:x3; val_offset:176001*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176001*0 + 3*299*FLEN/8, x4, x1, x2)

inst_58668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffe0000000; valaddr_reg:x3; val_offset:176004*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176004*0 + 3*300*FLEN/8, x4, x1, x2)

inst_58669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffff0000000; valaddr_reg:x3; val_offset:176007*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176007*0 + 3*301*FLEN/8, x4, x1, x2)

inst_58670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffff8000000; valaddr_reg:x3; val_offset:176010*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176010*0 + 3*302*FLEN/8, x4, x1, x2)

inst_58671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffc000000; valaddr_reg:x3; val_offset:176013*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176013*0 + 3*303*FLEN/8, x4, x1, x2)

inst_58672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffe000000; valaddr_reg:x3; val_offset:176016*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176016*0 + 3*304*FLEN/8, x4, x1, x2)

inst_58673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffff000000; valaddr_reg:x3; val_offset:176019*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176019*0 + 3*305*FLEN/8, x4, x1, x2)

inst_58674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffff800000; valaddr_reg:x3; val_offset:176022*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176022*0 + 3*306*FLEN/8, x4, x1, x2)

inst_58675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffc00000; valaddr_reg:x3; val_offset:176025*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176025*0 + 3*307*FLEN/8, x4, x1, x2)

inst_58676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffe00000; valaddr_reg:x3; val_offset:176028*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176028*0 + 3*308*FLEN/8, x4, x1, x2)

inst_58677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffff00000; valaddr_reg:x3; val_offset:176031*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176031*0 + 3*309*FLEN/8, x4, x1, x2)

inst_58678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffff80000; valaddr_reg:x3; val_offset:176034*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176034*0 + 3*310*FLEN/8, x4, x1, x2)

inst_58679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffc0000; valaddr_reg:x3; val_offset:176037*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176037*0 + 3*311*FLEN/8, x4, x1, x2)

inst_58680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffe0000; valaddr_reg:x3; val_offset:176040*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176040*0 + 3*312*FLEN/8, x4, x1, x2)

inst_58681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffff0000; valaddr_reg:x3; val_offset:176043*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176043*0 + 3*313*FLEN/8, x4, x1, x2)

inst_58682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffff8000; valaddr_reg:x3; val_offset:176046*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176046*0 + 3*314*FLEN/8, x4, x1, x2)

inst_58683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffc000; valaddr_reg:x3; val_offset:176049*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176049*0 + 3*315*FLEN/8, x4, x1, x2)

inst_58684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffe000; valaddr_reg:x3; val_offset:176052*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176052*0 + 3*316*FLEN/8, x4, x1, x2)

inst_58685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffff000; valaddr_reg:x3; val_offset:176055*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176055*0 + 3*317*FLEN/8, x4, x1, x2)

inst_58686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffff800; valaddr_reg:x3; val_offset:176058*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176058*0 + 3*318*FLEN/8, x4, x1, x2)

inst_58687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffffc00; valaddr_reg:x3; val_offset:176061*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176061*0 + 3*319*FLEN/8, x4, x1, x2)

inst_58688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffffe00; valaddr_reg:x3; val_offset:176064*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176064*0 + 3*320*FLEN/8, x4, x1, x2)

inst_58689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffff00; valaddr_reg:x3; val_offset:176067*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176067*0 + 3*321*FLEN/8, x4, x1, x2)

inst_58690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffff80; valaddr_reg:x3; val_offset:176070*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176070*0 + 3*322*FLEN/8, x4, x1, x2)

inst_58691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffffc0; valaddr_reg:x3; val_offset:176073*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176073*0 + 3*323*FLEN/8, x4, x1, x2)

inst_58692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffffe0; valaddr_reg:x3; val_offset:176076*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176076*0 + 3*324*FLEN/8, x4, x1, x2)

inst_58693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffffff0; valaddr_reg:x3; val_offset:176079*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176079*0 + 3*325*FLEN/8, x4, x1, x2)

inst_58694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffffff8; valaddr_reg:x3; val_offset:176082*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176082*0 + 3*326*FLEN/8, x4, x1, x2)

inst_58695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffffffc; valaddr_reg:x3; val_offset:176085*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176085*0 + 3*327*FLEN/8, x4, x1, x2)

inst_58696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807ffffffffffffe; valaddr_reg:x3; val_offset:176088*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176088*0 + 3*328*FLEN/8, x4, x1, x2)

inst_58697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d465e4d25757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d465e4d25757; op2val:0x8000;
op3val:0x807fffffffffffff; valaddr_reg:x3; val_offset:176091*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176091*0 + 3*329*FLEN/8, x4, x1, x2)

inst_58698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:176094*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176094*0 + 3*330*FLEN/8, x4, x1, x2)

inst_58699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:176097*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176097*0 + 3*331*FLEN/8, x4, x1, x2)

inst_58700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:176100*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176100*0 + 3*332*FLEN/8, x4, x1, x2)

inst_58701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:176103*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176103*0 + 3*333*FLEN/8, x4, x1, x2)

inst_58702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:176106*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176106*0 + 3*334*FLEN/8, x4, x1, x2)

inst_58703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:176109*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176109*0 + 3*335*FLEN/8, x4, x1, x2)

inst_58704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:176112*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176112*0 + 3*336*FLEN/8, x4, x1, x2)

inst_58705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:176115*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176115*0 + 3*337*FLEN/8, x4, x1, x2)

inst_58706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:176118*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176118*0 + 3*338*FLEN/8, x4, x1, x2)

inst_58707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:176121*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176121*0 + 3*339*FLEN/8, x4, x1, x2)

inst_58708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:176124*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176124*0 + 3*340*FLEN/8, x4, x1, x2)

inst_58709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:176127*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176127*0 + 3*341*FLEN/8, x4, x1, x2)

inst_58710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:176130*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176130*0 + 3*342*FLEN/8, x4, x1, x2)

inst_58711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:176133*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176133*0 + 3*343*FLEN/8, x4, x1, x2)

inst_58712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:176136*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176136*0 + 3*344*FLEN/8, x4, x1, x2)

inst_58713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:176139*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176139*0 + 3*345*FLEN/8, x4, x1, x2)

inst_58714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:176142*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176142*0 + 3*346*FLEN/8, x4, x1, x2)

inst_58715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:176145*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176145*0 + 3*347*FLEN/8, x4, x1, x2)

inst_58716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:176148*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176148*0 + 3*348*FLEN/8, x4, x1, x2)

inst_58717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:176151*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176151*0 + 3*349*FLEN/8, x4, x1, x2)

inst_58718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:176154*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176154*0 + 3*350*FLEN/8, x4, x1, x2)

inst_58719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:176157*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176157*0 + 3*351*FLEN/8, x4, x1, x2)

inst_58720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:176160*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176160*0 + 3*352*FLEN/8, x4, x1, x2)

inst_58721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:176163*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176163*0 + 3*353*FLEN/8, x4, x1, x2)

inst_58722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:176166*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176166*0 + 3*354*FLEN/8, x4, x1, x2)

inst_58723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:176169*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176169*0 + 3*355*FLEN/8, x4, x1, x2)

inst_58724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:176172*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176172*0 + 3*356*FLEN/8, x4, x1, x2)

inst_58725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:176175*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176175*0 + 3*357*FLEN/8, x4, x1, x2)

inst_58726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:176178*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176178*0 + 3*358*FLEN/8, x4, x1, x2)

inst_58727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:176181*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176181*0 + 3*359*FLEN/8, x4, x1, x2)

inst_58728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:176184*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176184*0 + 3*360*FLEN/8, x4, x1, x2)

inst_58729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:176187*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176187*0 + 3*361*FLEN/8, x4, x1, x2)

inst_58730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:176190*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176190*0 + 3*362*FLEN/8, x4, x1, x2)

inst_58731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:176193*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176193*0 + 3*363*FLEN/8, x4, x1, x2)

inst_58732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:176196*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176196*0 + 3*364*FLEN/8, x4, x1, x2)

inst_58733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:176199*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176199*0 + 3*365*FLEN/8, x4, x1, x2)

inst_58734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:176202*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176202*0 + 3*366*FLEN/8, x4, x1, x2)

inst_58735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:176205*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176205*0 + 3*367*FLEN/8, x4, x1, x2)

inst_58736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:176208*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176208*0 + 3*368*FLEN/8, x4, x1, x2)

inst_58737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:176211*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176211*0 + 3*369*FLEN/8, x4, x1, x2)

inst_58738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:176214*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176214*0 + 3*370*FLEN/8, x4, x1, x2)

inst_58739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:176217*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176217*0 + 3*371*FLEN/8, x4, x1, x2)

inst_58740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:176220*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176220*0 + 3*372*FLEN/8, x4, x1, x2)

inst_58741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:176223*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176223*0 + 3*373*FLEN/8, x4, x1, x2)

inst_58742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:176226*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176226*0 + 3*374*FLEN/8, x4, x1, x2)

inst_58743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:176229*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176229*0 + 3*375*FLEN/8, x4, x1, x2)

inst_58744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:176232*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176232*0 + 3*376*FLEN/8, x4, x1, x2)

inst_58745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:176235*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176235*0 + 3*377*FLEN/8, x4, x1, x2)

inst_58746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:176238*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176238*0 + 3*378*FLEN/8, x4, x1, x2)

inst_58747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:176241*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176241*0 + 3*379*FLEN/8, x4, x1, x2)

inst_58748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:176244*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176244*0 + 3*380*FLEN/8, x4, x1, x2)

inst_58749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:176247*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176247*0 + 3*381*FLEN/8, x4, x1, x2)

inst_58750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:176250*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176250*0 + 3*382*FLEN/8, x4, x1, x2)

inst_58751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:176253*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176253*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_58752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:176256*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176256*0 + 3*384*FLEN/8, x4, x1, x2)

inst_58753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:176259*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176259*0 + 3*385*FLEN/8, x4, x1, x2)

inst_58754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:176262*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176262*0 + 3*386*FLEN/8, x4, x1, x2)

inst_58755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:176265*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176265*0 + 3*387*FLEN/8, x4, x1, x2)

inst_58756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:176268*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176268*0 + 3*388*FLEN/8, x4, x1, x2)

inst_58757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:176271*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176271*0 + 3*389*FLEN/8, x4, x1, x2)

inst_58758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:176274*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176274*0 + 3*390*FLEN/8, x4, x1, x2)

inst_58759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:176277*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176277*0 + 3*391*FLEN/8, x4, x1, x2)

inst_58760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:176280*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176280*0 + 3*392*FLEN/8, x4, x1, x2)

inst_58761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:176283*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176283*0 + 3*393*FLEN/8, x4, x1, x2)

inst_58762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:176286*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176286*0 + 3*394*FLEN/8, x4, x1, x2)

inst_58763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:176289*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176289*0 + 3*395*FLEN/8, x4, x1, x2)

inst_58764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:176292*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176292*0 + 3*396*FLEN/8, x4, x1, x2)

inst_58765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:176295*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176295*0 + 3*397*FLEN/8, x4, x1, x2)

inst_58766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:176298*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176298*0 + 3*398*FLEN/8, x4, x1, x2)

inst_58767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:176301*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176301*0 + 3*399*FLEN/8, x4, x1, x2)

inst_58768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:176304*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176304*0 + 3*400*FLEN/8, x4, x1, x2)

inst_58769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:176307*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176307*0 + 3*401*FLEN/8, x4, x1, x2)

inst_58770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:176310*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176310*0 + 3*402*FLEN/8, x4, x1, x2)

inst_58771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:176313*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176313*0 + 3*403*FLEN/8, x4, x1, x2)

inst_58772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:176316*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176316*0 + 3*404*FLEN/8, x4, x1, x2)

inst_58773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:176319*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176319*0 + 3*405*FLEN/8, x4, x1, x2)

inst_58774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:176322*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176322*0 + 3*406*FLEN/8, x4, x1, x2)

inst_58775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:176325*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176325*0 + 3*407*FLEN/8, x4, x1, x2)

inst_58776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:176328*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176328*0 + 3*408*FLEN/8, x4, x1, x2)

inst_58777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:176331*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176331*0 + 3*409*FLEN/8, x4, x1, x2)

inst_58778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:176334*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176334*0 + 3*410*FLEN/8, x4, x1, x2)

inst_58779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:176337*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176337*0 + 3*411*FLEN/8, x4, x1, x2)

inst_58780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:176340*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176340*0 + 3*412*FLEN/8, x4, x1, x2)

inst_58781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:176343*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176343*0 + 3*413*FLEN/8, x4, x1, x2)

inst_58782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:176346*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176346*0 + 3*414*FLEN/8, x4, x1, x2)

inst_58783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:176349*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176349*0 + 3*415*FLEN/8, x4, x1, x2)

inst_58784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:176352*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176352*0 + 3*416*FLEN/8, x4, x1, x2)

inst_58785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:176355*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176355*0 + 3*417*FLEN/8, x4, x1, x2)

inst_58786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:176358*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176358*0 + 3*418*FLEN/8, x4, x1, x2)

inst_58787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:176361*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176361*0 + 3*419*FLEN/8, x4, x1, x2)

inst_58788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:176364*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176364*0 + 3*420*FLEN/8, x4, x1, x2)

inst_58789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:176367*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176367*0 + 3*421*FLEN/8, x4, x1, x2)

inst_58790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:176370*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176370*0 + 3*422*FLEN/8, x4, x1, x2)

inst_58791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:176373*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176373*0 + 3*423*FLEN/8, x4, x1, x2)

inst_58792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:176376*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176376*0 + 3*424*FLEN/8, x4, x1, x2)

inst_58793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:176379*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176379*0 + 3*425*FLEN/8, x4, x1, x2)

inst_58794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:176382*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176382*0 + 3*426*FLEN/8, x4, x1, x2)

inst_58795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:176385*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176385*0 + 3*427*FLEN/8, x4, x1, x2)

inst_58796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:176388*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176388*0 + 3*428*FLEN/8, x4, x1, x2)

inst_58797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:176391*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176391*0 + 3*429*FLEN/8, x4, x1, x2)

inst_58798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:176394*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176394*0 + 3*430*FLEN/8, x4, x1, x2)

inst_58799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:176397*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176397*0 + 3*431*FLEN/8, x4, x1, x2)

inst_58800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:176400*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176400*0 + 3*432*FLEN/8, x4, x1, x2)

inst_58801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:176403*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176403*0 + 3*433*FLEN/8, x4, x1, x2)

inst_58802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:176406*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176406*0 + 3*434*FLEN/8, x4, x1, x2)

inst_58803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:176409*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176409*0 + 3*435*FLEN/8, x4, x1, x2)

inst_58804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:176412*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176412*0 + 3*436*FLEN/8, x4, x1, x2)

inst_58805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:176415*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176415*0 + 3*437*FLEN/8, x4, x1, x2)

inst_58806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:176418*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176418*0 + 3*438*FLEN/8, x4, x1, x2)

inst_58807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:176421*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176421*0 + 3*439*FLEN/8, x4, x1, x2)

inst_58808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:176424*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176424*0 + 3*440*FLEN/8, x4, x1, x2)

inst_58809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:176427*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176427*0 + 3*441*FLEN/8, x4, x1, x2)

inst_58810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:176430*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176430*0 + 3*442*FLEN/8, x4, x1, x2)

inst_58811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:176433*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176433*0 + 3*443*FLEN/8, x4, x1, x2)

inst_58812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:176436*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176436*0 + 3*444*FLEN/8, x4, x1, x2)

inst_58813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:176439*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176439*0 + 3*445*FLEN/8, x4, x1, x2)

inst_58814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:176442*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176442*0 + 3*446*FLEN/8, x4, x1, x2)

inst_58815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:176445*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176445*0 + 3*447*FLEN/8, x4, x1, x2)

inst_58816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:176448*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176448*0 + 3*448*FLEN/8, x4, x1, x2)

inst_58817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:176451*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176451*0 + 3*449*FLEN/8, x4, x1, x2)

inst_58818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:176454*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176454*0 + 3*450*FLEN/8, x4, x1, x2)

inst_58819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:176457*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176457*0 + 3*451*FLEN/8, x4, x1, x2)

inst_58820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:176460*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176460*0 + 3*452*FLEN/8, x4, x1, x2)

inst_58821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:176463*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176463*0 + 3*453*FLEN/8, x4, x1, x2)

inst_58822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:176466*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176466*0 + 3*454*FLEN/8, x4, x1, x2)

inst_58823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1d846c2f26837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1d846c2f26837; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:176469*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176469*0 + 3*455*FLEN/8, x4, x1, x2)

inst_58824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:176472*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176472*0 + 3*456*FLEN/8, x4, x1, x2)

inst_58825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:176475*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176475*0 + 3*457*FLEN/8, x4, x1, x2)

inst_58826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:176478*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176478*0 + 3*458*FLEN/8, x4, x1, x2)

inst_58827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:176481*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176481*0 + 3*459*FLEN/8, x4, x1, x2)

inst_58828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:176484*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176484*0 + 3*460*FLEN/8, x4, x1, x2)

inst_58829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:176487*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176487*0 + 3*461*FLEN/8, x4, x1, x2)

inst_58830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:176490*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176490*0 + 3*462*FLEN/8, x4, x1, x2)

inst_58831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:176493*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176493*0 + 3*463*FLEN/8, x4, x1, x2)

inst_58832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:176496*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176496*0 + 3*464*FLEN/8, x4, x1, x2)

inst_58833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:176499*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176499*0 + 3*465*FLEN/8, x4, x1, x2)

inst_58834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:176502*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176502*0 + 3*466*FLEN/8, x4, x1, x2)

inst_58835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:176505*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176505*0 + 3*467*FLEN/8, x4, x1, x2)

inst_58836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:176508*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176508*0 + 3*468*FLEN/8, x4, x1, x2)

inst_58837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:176511*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176511*0 + 3*469*FLEN/8, x4, x1, x2)

inst_58838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:176514*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176514*0 + 3*470*FLEN/8, x4, x1, x2)

inst_58839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:176517*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176517*0 + 3*471*FLEN/8, x4, x1, x2)

inst_58840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:176520*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176520*0 + 3*472*FLEN/8, x4, x1, x2)

inst_58841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:176523*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176523*0 + 3*473*FLEN/8, x4, x1, x2)

inst_58842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:176526*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176526*0 + 3*474*FLEN/8, x4, x1, x2)

inst_58843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:176529*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176529*0 + 3*475*FLEN/8, x4, x1, x2)

inst_58844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:176532*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176532*0 + 3*476*FLEN/8, x4, x1, x2)

inst_58845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:176535*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176535*0 + 3*477*FLEN/8, x4, x1, x2)

inst_58846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:176538*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176538*0 + 3*478*FLEN/8, x4, x1, x2)

inst_58847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:176541*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176541*0 + 3*479*FLEN/8, x4, x1, x2)

inst_58848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:176544*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176544*0 + 3*480*FLEN/8, x4, x1, x2)

inst_58849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:176547*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176547*0 + 3*481*FLEN/8, x4, x1, x2)

inst_58850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:176550*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176550*0 + 3*482*FLEN/8, x4, x1, x2)

inst_58851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:176553*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176553*0 + 3*483*FLEN/8, x4, x1, x2)

inst_58852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:176556*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176556*0 + 3*484*FLEN/8, x4, x1, x2)

inst_58853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:176559*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176559*0 + 3*485*FLEN/8, x4, x1, x2)

inst_58854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:176562*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176562*0 + 3*486*FLEN/8, x4, x1, x2)

inst_58855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:176565*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176565*0 + 3*487*FLEN/8, x4, x1, x2)

inst_58856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:176568*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176568*0 + 3*488*FLEN/8, x4, x1, x2)

inst_58857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:176571*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176571*0 + 3*489*FLEN/8, x4, x1, x2)

inst_58858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:176574*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176574*0 + 3*490*FLEN/8, x4, x1, x2)

inst_58859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:176577*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176577*0 + 3*491*FLEN/8, x4, x1, x2)

inst_58860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:176580*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176580*0 + 3*492*FLEN/8, x4, x1, x2)

inst_58861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:176583*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176583*0 + 3*493*FLEN/8, x4, x1, x2)

inst_58862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:176586*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176586*0 + 3*494*FLEN/8, x4, x1, x2)

inst_58863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:176589*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176589*0 + 3*495*FLEN/8, x4, x1, x2)

inst_58864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:176592*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176592*0 + 3*496*FLEN/8, x4, x1, x2)

inst_58865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:176595*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176595*0 + 3*497*FLEN/8, x4, x1, x2)

inst_58866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:176598*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176598*0 + 3*498*FLEN/8, x4, x1, x2)

inst_58867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:176601*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176601*0 + 3*499*FLEN/8, x4, x1, x2)

inst_58868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:176604*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176604*0 + 3*500*FLEN/8, x4, x1, x2)

inst_58869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:176607*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176607*0 + 3*501*FLEN/8, x4, x1, x2)

inst_58870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:176610*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176610*0 + 3*502*FLEN/8, x4, x1, x2)

inst_58871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:176613*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176613*0 + 3*503*FLEN/8, x4, x1, x2)

inst_58872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:176616*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176616*0 + 3*504*FLEN/8, x4, x1, x2)

inst_58873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:176619*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176619*0 + 3*505*FLEN/8, x4, x1, x2)

inst_58874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:176622*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176622*0 + 3*506*FLEN/8, x4, x1, x2)

inst_58875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:176625*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176625*0 + 3*507*FLEN/8, x4, x1, x2)

inst_58876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:176628*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176628*0 + 3*508*FLEN/8, x4, x1, x2)

inst_58877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:176631*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176631*0 + 3*509*FLEN/8, x4, x1, x2)

inst_58878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:176634*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176634*0 + 3*510*FLEN/8, x4, x1, x2)

inst_58879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:176637*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176637*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_58880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:176640*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176640*0 + 3*512*FLEN/8, x4, x1, x2)

inst_58881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:176643*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176643*0 + 3*513*FLEN/8, x4, x1, x2)

inst_58882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:176646*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176646*0 + 3*514*FLEN/8, x4, x1, x2)

inst_58883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:176649*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176649*0 + 3*515*FLEN/8, x4, x1, x2)

inst_58884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:176652*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176652*0 + 3*516*FLEN/8, x4, x1, x2)

inst_58885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:176655*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176655*0 + 3*517*FLEN/8, x4, x1, x2)

inst_58886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:176658*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176658*0 + 3*518*FLEN/8, x4, x1, x2)

inst_58887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:176661*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176661*0 + 3*519*FLEN/8, x4, x1, x2)

inst_58888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:176664*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176664*0 + 3*520*FLEN/8, x4, x1, x2)

inst_58889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:176667*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176667*0 + 3*521*FLEN/8, x4, x1, x2)

inst_58890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:176670*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176670*0 + 3*522*FLEN/8, x4, x1, x2)

inst_58891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:176673*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176673*0 + 3*523*FLEN/8, x4, x1, x2)

inst_58892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:176676*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176676*0 + 3*524*FLEN/8, x4, x1, x2)

inst_58893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:176679*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176679*0 + 3*525*FLEN/8, x4, x1, x2)

inst_58894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:176682*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176682*0 + 3*526*FLEN/8, x4, x1, x2)

inst_58895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:176685*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176685*0 + 3*527*FLEN/8, x4, x1, x2)

inst_58896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:176688*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176688*0 + 3*528*FLEN/8, x4, x1, x2)

inst_58897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:176691*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176691*0 + 3*529*FLEN/8, x4, x1, x2)

inst_58898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:176694*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176694*0 + 3*530*FLEN/8, x4, x1, x2)

inst_58899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:176697*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176697*0 + 3*531*FLEN/8, x4, x1, x2)

inst_58900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:176700*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176700*0 + 3*532*FLEN/8, x4, x1, x2)

inst_58901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:176703*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176703*0 + 3*533*FLEN/8, x4, x1, x2)

inst_58902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:176706*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176706*0 + 3*534*FLEN/8, x4, x1, x2)

inst_58903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:176709*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176709*0 + 3*535*FLEN/8, x4, x1, x2)

inst_58904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:176712*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176712*0 + 3*536*FLEN/8, x4, x1, x2)

inst_58905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:176715*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176715*0 + 3*537*FLEN/8, x4, x1, x2)

inst_58906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:176718*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176718*0 + 3*538*FLEN/8, x4, x1, x2)

inst_58907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:176721*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176721*0 + 3*539*FLEN/8, x4, x1, x2)

inst_58908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:176724*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176724*0 + 3*540*FLEN/8, x4, x1, x2)

inst_58909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:176727*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176727*0 + 3*541*FLEN/8, x4, x1, x2)

inst_58910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:176730*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176730*0 + 3*542*FLEN/8, x4, x1, x2)

inst_58911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:176733*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176733*0 + 3*543*FLEN/8, x4, x1, x2)

inst_58912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:176736*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176736*0 + 3*544*FLEN/8, x4, x1, x2)

inst_58913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:176739*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176739*0 + 3*545*FLEN/8, x4, x1, x2)

inst_58914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:176742*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176742*0 + 3*546*FLEN/8, x4, x1, x2)

inst_58915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:176745*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176745*0 + 3*547*FLEN/8, x4, x1, x2)

inst_58916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:176748*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176748*0 + 3*548*FLEN/8, x4, x1, x2)

inst_58917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:176751*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176751*0 + 3*549*FLEN/8, x4, x1, x2)

inst_58918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:176754*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176754*0 + 3*550*FLEN/8, x4, x1, x2)

inst_58919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:176757*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176757*0 + 3*551*FLEN/8, x4, x1, x2)

inst_58920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:176760*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176760*0 + 3*552*FLEN/8, x4, x1, x2)

inst_58921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:176763*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176763*0 + 3*553*FLEN/8, x4, x1, x2)

inst_58922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:176766*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176766*0 + 3*554*FLEN/8, x4, x1, x2)

inst_58923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:176769*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176769*0 + 3*555*FLEN/8, x4, x1, x2)

inst_58924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:176772*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176772*0 + 3*556*FLEN/8, x4, x1, x2)

inst_58925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:176775*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176775*0 + 3*557*FLEN/8, x4, x1, x2)

inst_58926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:176778*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176778*0 + 3*558*FLEN/8, x4, x1, x2)

inst_58927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:176781*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176781*0 + 3*559*FLEN/8, x4, x1, x2)

inst_58928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:176784*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176784*0 + 3*560*FLEN/8, x4, x1, x2)

inst_58929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:176787*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176787*0 + 3*561*FLEN/8, x4, x1, x2)

inst_58930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:176790*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176790*0 + 3*562*FLEN/8, x4, x1, x2)

inst_58931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:176793*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176793*0 + 3*563*FLEN/8, x4, x1, x2)

inst_58932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:176796*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176796*0 + 3*564*FLEN/8, x4, x1, x2)

inst_58933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:176799*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176799*0 + 3*565*FLEN/8, x4, x1, x2)

inst_58934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:176802*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176802*0 + 3*566*FLEN/8, x4, x1, x2)

inst_58935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:176805*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176805*0 + 3*567*FLEN/8, x4, x1, x2)

inst_58936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:176808*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176808*0 + 3*568*FLEN/8, x4, x1, x2)

inst_58937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:176811*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176811*0 + 3*569*FLEN/8, x4, x1, x2)

inst_58938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:176814*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176814*0 + 3*570*FLEN/8, x4, x1, x2)

inst_58939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:176817*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176817*0 + 3*571*FLEN/8, x4, x1, x2)

inst_58940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:176820*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176820*0 + 3*572*FLEN/8, x4, x1, x2)

inst_58941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:176823*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176823*0 + 3*573*FLEN/8, x4, x1, x2)

inst_58942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:176826*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176826*0 + 3*574*FLEN/8, x4, x1, x2)

inst_58943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:176829*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176829*0 + 3*575*FLEN/8, x4, x1, x2)

inst_58944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:176832*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176832*0 + 3*576*FLEN/8, x4, x1, x2)

inst_58945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:176835*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176835*0 + 3*577*FLEN/8, x4, x1, x2)

inst_58946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:176838*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176838*0 + 3*578*FLEN/8, x4, x1, x2)

inst_58947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:176841*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176841*0 + 3*579*FLEN/8, x4, x1, x2)

inst_58948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:176844*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176844*0 + 3*580*FLEN/8, x4, x1, x2)

inst_58949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e66490041aeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e66490041aeb; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:176847*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176847*0 + 3*581*FLEN/8, x4, x1, x2)

inst_58950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:176850*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176850*0 + 3*582*FLEN/8, x4, x1, x2)

inst_58951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:176853*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176853*0 + 3*583*FLEN/8, x4, x1, x2)

inst_58952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:176856*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176856*0 + 3*584*FLEN/8, x4, x1, x2)

inst_58953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:176859*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176859*0 + 3*585*FLEN/8, x4, x1, x2)

inst_58954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:176862*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176862*0 + 3*586*FLEN/8, x4, x1, x2)

inst_58955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:176865*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176865*0 + 3*587*FLEN/8, x4, x1, x2)

inst_58956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:176868*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176868*0 + 3*588*FLEN/8, x4, x1, x2)

inst_58957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:176871*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176871*0 + 3*589*FLEN/8, x4, x1, x2)

inst_58958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:176874*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176874*0 + 3*590*FLEN/8, x4, x1, x2)

inst_58959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:176877*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176877*0 + 3*591*FLEN/8, x4, x1, x2)

inst_58960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:176880*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176880*0 + 3*592*FLEN/8, x4, x1, x2)

inst_58961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:176883*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176883*0 + 3*593*FLEN/8, x4, x1, x2)

inst_58962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:176886*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176886*0 + 3*594*FLEN/8, x4, x1, x2)

inst_58963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:176889*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176889*0 + 3*595*FLEN/8, x4, x1, x2)

inst_58964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:176892*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176892*0 + 3*596*FLEN/8, x4, x1, x2)

inst_58965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:176895*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176895*0 + 3*597*FLEN/8, x4, x1, x2)

inst_58966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:176898*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176898*0 + 3*598*FLEN/8, x4, x1, x2)

inst_58967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:176901*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176901*0 + 3*599*FLEN/8, x4, x1, x2)

inst_58968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:176904*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176904*0 + 3*600*FLEN/8, x4, x1, x2)

inst_58969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:176907*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176907*0 + 3*601*FLEN/8, x4, x1, x2)

inst_58970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:176910*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176910*0 + 3*602*FLEN/8, x4, x1, x2)

inst_58971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:176913*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176913*0 + 3*603*FLEN/8, x4, x1, x2)

inst_58972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000000000; valaddr_reg:x3; val_offset:176916*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176916*0 + 3*604*FLEN/8, x4, x1, x2)

inst_58973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000000001; valaddr_reg:x3; val_offset:176919*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176919*0 + 3*605*FLEN/8, x4, x1, x2)

inst_58974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000000003; valaddr_reg:x3; val_offset:176922*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176922*0 + 3*606*FLEN/8, x4, x1, x2)

inst_58975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000000007; valaddr_reg:x3; val_offset:176925*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176925*0 + 3*607*FLEN/8, x4, x1, x2)

inst_58976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000000000f; valaddr_reg:x3; val_offset:176928*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176928*0 + 3*608*FLEN/8, x4, x1, x2)

inst_58977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000000001f; valaddr_reg:x3; val_offset:176931*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176931*0 + 3*609*FLEN/8, x4, x1, x2)

inst_58978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000000003f; valaddr_reg:x3; val_offset:176934*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176934*0 + 3*610*FLEN/8, x4, x1, x2)

inst_58979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000000007f; valaddr_reg:x3; val_offset:176937*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176937*0 + 3*611*FLEN/8, x4, x1, x2)

inst_58980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000000000ff; valaddr_reg:x3; val_offset:176940*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176940*0 + 3*612*FLEN/8, x4, x1, x2)

inst_58981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000000001ff; valaddr_reg:x3; val_offset:176943*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176943*0 + 3*613*FLEN/8, x4, x1, x2)

inst_58982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000000003ff; valaddr_reg:x3; val_offset:176946*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176946*0 + 3*614*FLEN/8, x4, x1, x2)

inst_58983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000000007ff; valaddr_reg:x3; val_offset:176949*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176949*0 + 3*615*FLEN/8, x4, x1, x2)

inst_58984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000000fff; valaddr_reg:x3; val_offset:176952*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176952*0 + 3*616*FLEN/8, x4, x1, x2)

inst_58985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000001fff; valaddr_reg:x3; val_offset:176955*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176955*0 + 3*617*FLEN/8, x4, x1, x2)

inst_58986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000003fff; valaddr_reg:x3; val_offset:176958*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176958*0 + 3*618*FLEN/8, x4, x1, x2)

inst_58987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000007fff; valaddr_reg:x3; val_offset:176961*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176961*0 + 3*619*FLEN/8, x4, x1, x2)

inst_58988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000000ffff; valaddr_reg:x3; val_offset:176964*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176964*0 + 3*620*FLEN/8, x4, x1, x2)

inst_58989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000001ffff; valaddr_reg:x3; val_offset:176967*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176967*0 + 3*621*FLEN/8, x4, x1, x2)

inst_58990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000003ffff; valaddr_reg:x3; val_offset:176970*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176970*0 + 3*622*FLEN/8, x4, x1, x2)

inst_58991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000007ffff; valaddr_reg:x3; val_offset:176973*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176973*0 + 3*623*FLEN/8, x4, x1, x2)

inst_58992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000000fffff; valaddr_reg:x3; val_offset:176976*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176976*0 + 3*624*FLEN/8, x4, x1, x2)

inst_58993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000001fffff; valaddr_reg:x3; val_offset:176979*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176979*0 + 3*625*FLEN/8, x4, x1, x2)

inst_58994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000003fffff; valaddr_reg:x3; val_offset:176982*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176982*0 + 3*626*FLEN/8, x4, x1, x2)

inst_58995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000007fffff; valaddr_reg:x3; val_offset:176985*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176985*0 + 3*627*FLEN/8, x4, x1, x2)

inst_58996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000000ffffff; valaddr_reg:x3; val_offset:176988*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176988*0 + 3*628*FLEN/8, x4, x1, x2)

inst_58997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000001ffffff; valaddr_reg:x3; val_offset:176991*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176991*0 + 3*629*FLEN/8, x4, x1, x2)

inst_58998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000003ffffff; valaddr_reg:x3; val_offset:176994*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176994*0 + 3*630*FLEN/8, x4, x1, x2)

inst_58999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000007ffffff; valaddr_reg:x3; val_offset:176997*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176997*0 + 3*631*FLEN/8, x4, x1, x2)

inst_59000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000000fffffff; valaddr_reg:x3; val_offset:177000*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177000*0 + 3*632*FLEN/8, x4, x1, x2)

inst_59001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000001fffffff; valaddr_reg:x3; val_offset:177003*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177003*0 + 3*633*FLEN/8, x4, x1, x2)

inst_59002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000003fffffff; valaddr_reg:x3; val_offset:177006*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177006*0 + 3*634*FLEN/8, x4, x1, x2)

inst_59003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000007fffffff; valaddr_reg:x3; val_offset:177009*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177009*0 + 3*635*FLEN/8, x4, x1, x2)

inst_59004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900000ffffffff; valaddr_reg:x3; val_offset:177012*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177012*0 + 3*636*FLEN/8, x4, x1, x2)

inst_59005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900001ffffffff; valaddr_reg:x3; val_offset:177015*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177015*0 + 3*637*FLEN/8, x4, x1, x2)

inst_59006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900003ffffffff; valaddr_reg:x3; val_offset:177018*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177018*0 + 3*638*FLEN/8, x4, x1, x2)

inst_59007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900007ffffffff; valaddr_reg:x3; val_offset:177021*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177021*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_59008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90000fffffffff; valaddr_reg:x3; val_offset:177024*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177024*0 + 3*640*FLEN/8, x4, x1, x2)

inst_59009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90001fffffffff; valaddr_reg:x3; val_offset:177027*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177027*0 + 3*641*FLEN/8, x4, x1, x2)

inst_59010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90003fffffffff; valaddr_reg:x3; val_offset:177030*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177030*0 + 3*642*FLEN/8, x4, x1, x2)

inst_59011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90007fffffffff; valaddr_reg:x3; val_offset:177033*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177033*0 + 3*643*FLEN/8, x4, x1, x2)

inst_59012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9000ffffffffff; valaddr_reg:x3; val_offset:177036*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177036*0 + 3*644*FLEN/8, x4, x1, x2)

inst_59013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9001ffffffffff; valaddr_reg:x3; val_offset:177039*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177039*0 + 3*645*FLEN/8, x4, x1, x2)

inst_59014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9003ffffffffff; valaddr_reg:x3; val_offset:177042*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177042*0 + 3*646*FLEN/8, x4, x1, x2)

inst_59015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9007ffffffffff; valaddr_reg:x3; val_offset:177045*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177045*0 + 3*647*FLEN/8, x4, x1, x2)

inst_59016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf900fffffffffff; valaddr_reg:x3; val_offset:177048*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177048*0 + 3*648*FLEN/8, x4, x1, x2)

inst_59017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf901fffffffffff; valaddr_reg:x3; val_offset:177051*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177051*0 + 3*649*FLEN/8, x4, x1, x2)

inst_59018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf903fffffffffff; valaddr_reg:x3; val_offset:177054*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177054*0 + 3*650*FLEN/8, x4, x1, x2)

inst_59019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf907fffffffffff; valaddr_reg:x3; val_offset:177057*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177057*0 + 3*651*FLEN/8, x4, x1, x2)

inst_59020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf90ffffffffffff; valaddr_reg:x3; val_offset:177060*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177060*0 + 3*652*FLEN/8, x4, x1, x2)

inst_59021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf91ffffffffffff; valaddr_reg:x3; val_offset:177063*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177063*0 + 3*653*FLEN/8, x4, x1, x2)

inst_59022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf93ffffffffffff; valaddr_reg:x3; val_offset:177066*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177066*0 + 3*654*FLEN/8, x4, x1, x2)

inst_59023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf97ffffffffffff; valaddr_reg:x3; val_offset:177069*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177069*0 + 3*655*FLEN/8, x4, x1, x2)

inst_59024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf98000000000000; valaddr_reg:x3; val_offset:177072*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177072*0 + 3*656*FLEN/8, x4, x1, x2)

inst_59025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9c000000000000; valaddr_reg:x3; val_offset:177075*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177075*0 + 3*657*FLEN/8, x4, x1, x2)

inst_59026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9e000000000000; valaddr_reg:x3; val_offset:177078*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177078*0 + 3*658*FLEN/8, x4, x1, x2)

inst_59027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9f000000000000; valaddr_reg:x3; val_offset:177081*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177081*0 + 3*659*FLEN/8, x4, x1, x2)

inst_59028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9f800000000000; valaddr_reg:x3; val_offset:177084*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177084*0 + 3*660*FLEN/8, x4, x1, x2)

inst_59029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fc00000000000; valaddr_reg:x3; val_offset:177087*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177087*0 + 3*661*FLEN/8, x4, x1, x2)

inst_59030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fe00000000000; valaddr_reg:x3; val_offset:177090*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177090*0 + 3*662*FLEN/8, x4, x1, x2)

inst_59031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ff00000000000; valaddr_reg:x3; val_offset:177093*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177093*0 + 3*663*FLEN/8, x4, x1, x2)

inst_59032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ff80000000000; valaddr_reg:x3; val_offset:177096*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177096*0 + 3*664*FLEN/8, x4, x1, x2)

inst_59033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffc0000000000; valaddr_reg:x3; val_offset:177099*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177099*0 + 3*665*FLEN/8, x4, x1, x2)

inst_59034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffe0000000000; valaddr_reg:x3; val_offset:177102*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177102*0 + 3*666*FLEN/8, x4, x1, x2)

inst_59035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fff0000000000; valaddr_reg:x3; val_offset:177105*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177105*0 + 3*667*FLEN/8, x4, x1, x2)

inst_59036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fff8000000000; valaddr_reg:x3; val_offset:177108*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177108*0 + 3*668*FLEN/8, x4, x1, x2)

inst_59037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffc000000000; valaddr_reg:x3; val_offset:177111*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177111*0 + 3*669*FLEN/8, x4, x1, x2)

inst_59038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffe000000000; valaddr_reg:x3; val_offset:177114*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177114*0 + 3*670*FLEN/8, x4, x1, x2)

inst_59039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffff000000000; valaddr_reg:x3; val_offset:177117*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177117*0 + 3*671*FLEN/8, x4, x1, x2)

inst_59040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffff800000000; valaddr_reg:x3; val_offset:177120*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177120*0 + 3*672*FLEN/8, x4, x1, x2)

inst_59041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffc00000000; valaddr_reg:x3; val_offset:177123*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177123*0 + 3*673*FLEN/8, x4, x1, x2)

inst_59042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffe00000000; valaddr_reg:x3; val_offset:177126*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177126*0 + 3*674*FLEN/8, x4, x1, x2)

inst_59043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffff00000000; valaddr_reg:x3; val_offset:177129*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177129*0 + 3*675*FLEN/8, x4, x1, x2)

inst_59044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffff80000000; valaddr_reg:x3; val_offset:177132*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177132*0 + 3*676*FLEN/8, x4, x1, x2)

inst_59045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffc0000000; valaddr_reg:x3; val_offset:177135*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177135*0 + 3*677*FLEN/8, x4, x1, x2)

inst_59046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffe0000000; valaddr_reg:x3; val_offset:177138*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177138*0 + 3*678*FLEN/8, x4, x1, x2)

inst_59047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffff0000000; valaddr_reg:x3; val_offset:177141*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177141*0 + 3*679*FLEN/8, x4, x1, x2)

inst_59048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffff8000000; valaddr_reg:x3; val_offset:177144*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177144*0 + 3*680*FLEN/8, x4, x1, x2)

inst_59049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffc000000; valaddr_reg:x3; val_offset:177147*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177147*0 + 3*681*FLEN/8, x4, x1, x2)

inst_59050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffe000000; valaddr_reg:x3; val_offset:177150*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177150*0 + 3*682*FLEN/8, x4, x1, x2)

inst_59051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffff000000; valaddr_reg:x3; val_offset:177153*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177153*0 + 3*683*FLEN/8, x4, x1, x2)

inst_59052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffff800000; valaddr_reg:x3; val_offset:177156*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177156*0 + 3*684*FLEN/8, x4, x1, x2)

inst_59053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffc00000; valaddr_reg:x3; val_offset:177159*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177159*0 + 3*685*FLEN/8, x4, x1, x2)

inst_59054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffe00000; valaddr_reg:x3; val_offset:177162*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177162*0 + 3*686*FLEN/8, x4, x1, x2)

inst_59055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffff00000; valaddr_reg:x3; val_offset:177165*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177165*0 + 3*687*FLEN/8, x4, x1, x2)

inst_59056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffff80000; valaddr_reg:x3; val_offset:177168*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177168*0 + 3*688*FLEN/8, x4, x1, x2)

inst_59057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffc0000; valaddr_reg:x3; val_offset:177171*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177171*0 + 3*689*FLEN/8, x4, x1, x2)

inst_59058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffe0000; valaddr_reg:x3; val_offset:177174*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177174*0 + 3*690*FLEN/8, x4, x1, x2)

inst_59059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffff0000; valaddr_reg:x3; val_offset:177177*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177177*0 + 3*691*FLEN/8, x4, x1, x2)

inst_59060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffff8000; valaddr_reg:x3; val_offset:177180*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177180*0 + 3*692*FLEN/8, x4, x1, x2)

inst_59061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffc000; valaddr_reg:x3; val_offset:177183*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177183*0 + 3*693*FLEN/8, x4, x1, x2)

inst_59062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffe000; valaddr_reg:x3; val_offset:177186*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177186*0 + 3*694*FLEN/8, x4, x1, x2)

inst_59063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffff000; valaddr_reg:x3; val_offset:177189*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177189*0 + 3*695*FLEN/8, x4, x1, x2)

inst_59064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffff800; valaddr_reg:x3; val_offset:177192*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177192*0 + 3*696*FLEN/8, x4, x1, x2)

inst_59065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffffc00; valaddr_reg:x3; val_offset:177195*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177195*0 + 3*697*FLEN/8, x4, x1, x2)

inst_59066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffffe00; valaddr_reg:x3; val_offset:177198*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177198*0 + 3*698*FLEN/8, x4, x1, x2)

inst_59067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffff00; valaddr_reg:x3; val_offset:177201*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177201*0 + 3*699*FLEN/8, x4, x1, x2)

inst_59068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffff80; valaddr_reg:x3; val_offset:177204*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177204*0 + 3*700*FLEN/8, x4, x1, x2)

inst_59069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffffc0; valaddr_reg:x3; val_offset:177207*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177207*0 + 3*701*FLEN/8, x4, x1, x2)

inst_59070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffffe0; valaddr_reg:x3; val_offset:177210*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177210*0 + 3*702*FLEN/8, x4, x1, x2)

inst_59071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffffff0; valaddr_reg:x3; val_offset:177213*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177213*0 + 3*703*FLEN/8, x4, x1, x2)

inst_59072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffffff8; valaddr_reg:x3; val_offset:177216*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177216*0 + 3*704*FLEN/8, x4, x1, x2)

inst_59073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffffffc; valaddr_reg:x3; val_offset:177219*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177219*0 + 3*705*FLEN/8, x4, x1, x2)

inst_59074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9ffffffffffffe; valaddr_reg:x3; val_offset:177222*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177222*0 + 3*706*FLEN/8, x4, x1, x2)

inst_59075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc8cf7ce306551 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x9fcc8cf7ce306551;
op3val:0xbf9fffffffffffff; valaddr_reg:x3; val_offset:177225*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177225*0 + 3*707*FLEN/8, x4, x1, x2)

inst_59076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000000000; valaddr_reg:x3; val_offset:177228*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177228*0 + 3*708*FLEN/8, x4, x1, x2)

inst_59077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000000001; valaddr_reg:x3; val_offset:177231*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177231*0 + 3*709*FLEN/8, x4, x1, x2)

inst_59078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000000003; valaddr_reg:x3; val_offset:177234*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177234*0 + 3*710*FLEN/8, x4, x1, x2)

inst_59079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000000007; valaddr_reg:x3; val_offset:177237*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177237*0 + 3*711*FLEN/8, x4, x1, x2)

inst_59080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000000000f; valaddr_reg:x3; val_offset:177240*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177240*0 + 3*712*FLEN/8, x4, x1, x2)

inst_59081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000000001f; valaddr_reg:x3; val_offset:177243*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177243*0 + 3*713*FLEN/8, x4, x1, x2)

inst_59082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000000003f; valaddr_reg:x3; val_offset:177246*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177246*0 + 3*714*FLEN/8, x4, x1, x2)

inst_59083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000000007f; valaddr_reg:x3; val_offset:177249*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177249*0 + 3*715*FLEN/8, x4, x1, x2)

inst_59084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000000000ff; valaddr_reg:x3; val_offset:177252*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177252*0 + 3*716*FLEN/8, x4, x1, x2)

inst_59085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000000001ff; valaddr_reg:x3; val_offset:177255*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177255*0 + 3*717*FLEN/8, x4, x1, x2)

inst_59086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000000003ff; valaddr_reg:x3; val_offset:177258*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177258*0 + 3*718*FLEN/8, x4, x1, x2)

inst_59087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000000007ff; valaddr_reg:x3; val_offset:177261*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177261*0 + 3*719*FLEN/8, x4, x1, x2)

inst_59088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000000fff; valaddr_reg:x3; val_offset:177264*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177264*0 + 3*720*FLEN/8, x4, x1, x2)

inst_59089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000001fff; valaddr_reg:x3; val_offset:177267*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177267*0 + 3*721*FLEN/8, x4, x1, x2)

inst_59090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000003fff; valaddr_reg:x3; val_offset:177270*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177270*0 + 3*722*FLEN/8, x4, x1, x2)

inst_59091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000007fff; valaddr_reg:x3; val_offset:177273*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177273*0 + 3*723*FLEN/8, x4, x1, x2)

inst_59092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000000ffff; valaddr_reg:x3; val_offset:177276*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177276*0 + 3*724*FLEN/8, x4, x1, x2)

inst_59093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000001ffff; valaddr_reg:x3; val_offset:177279*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177279*0 + 3*725*FLEN/8, x4, x1, x2)

inst_59094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000003ffff; valaddr_reg:x3; val_offset:177282*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177282*0 + 3*726*FLEN/8, x4, x1, x2)

inst_59095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000007ffff; valaddr_reg:x3; val_offset:177285*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177285*0 + 3*727*FLEN/8, x4, x1, x2)

inst_59096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000000fffff; valaddr_reg:x3; val_offset:177288*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177288*0 + 3*728*FLEN/8, x4, x1, x2)

inst_59097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000001fffff; valaddr_reg:x3; val_offset:177291*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177291*0 + 3*729*FLEN/8, x4, x1, x2)

inst_59098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000003fffff; valaddr_reg:x3; val_offset:177294*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177294*0 + 3*730*FLEN/8, x4, x1, x2)

inst_59099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000007fffff; valaddr_reg:x3; val_offset:177297*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177297*0 + 3*731*FLEN/8, x4, x1, x2)

inst_59100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000000ffffff; valaddr_reg:x3; val_offset:177300*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177300*0 + 3*732*FLEN/8, x4, x1, x2)

inst_59101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000001ffffff; valaddr_reg:x3; val_offset:177303*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177303*0 + 3*733*FLEN/8, x4, x1, x2)

inst_59102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000003ffffff; valaddr_reg:x3; val_offset:177306*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177306*0 + 3*734*FLEN/8, x4, x1, x2)

inst_59103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000007ffffff; valaddr_reg:x3; val_offset:177309*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177309*0 + 3*735*FLEN/8, x4, x1, x2)

inst_59104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000000fffffff; valaddr_reg:x3; val_offset:177312*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177312*0 + 3*736*FLEN/8, x4, x1, x2)

inst_59105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000001fffffff; valaddr_reg:x3; val_offset:177315*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177315*0 + 3*737*FLEN/8, x4, x1, x2)

inst_59106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000003fffffff; valaddr_reg:x3; val_offset:177318*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177318*0 + 3*738*FLEN/8, x4, x1, x2)

inst_59107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000007fffffff; valaddr_reg:x3; val_offset:177321*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177321*0 + 3*739*FLEN/8, x4, x1, x2)

inst_59108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800000ffffffff; valaddr_reg:x3; val_offset:177324*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177324*0 + 3*740*FLEN/8, x4, x1, x2)

inst_59109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800001ffffffff; valaddr_reg:x3; val_offset:177327*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177327*0 + 3*741*FLEN/8, x4, x1, x2)

inst_59110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800003ffffffff; valaddr_reg:x3; val_offset:177330*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177330*0 + 3*742*FLEN/8, x4, x1, x2)

inst_59111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800007ffffffff; valaddr_reg:x3; val_offset:177333*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177333*0 + 3*743*FLEN/8, x4, x1, x2)

inst_59112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80000fffffffff; valaddr_reg:x3; val_offset:177336*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177336*0 + 3*744*FLEN/8, x4, x1, x2)

inst_59113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80001fffffffff; valaddr_reg:x3; val_offset:177339*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177339*0 + 3*745*FLEN/8, x4, x1, x2)

inst_59114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80003fffffffff; valaddr_reg:x3; val_offset:177342*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177342*0 + 3*746*FLEN/8, x4, x1, x2)

inst_59115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80007fffffffff; valaddr_reg:x3; val_offset:177345*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177345*0 + 3*747*FLEN/8, x4, x1, x2)

inst_59116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8000ffffffffff; valaddr_reg:x3; val_offset:177348*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177348*0 + 3*748*FLEN/8, x4, x1, x2)

inst_59117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8001ffffffffff; valaddr_reg:x3; val_offset:177351*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177351*0 + 3*749*FLEN/8, x4, x1, x2)

inst_59118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8003ffffffffff; valaddr_reg:x3; val_offset:177354*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177354*0 + 3*750*FLEN/8, x4, x1, x2)

inst_59119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8007ffffffffff; valaddr_reg:x3; val_offset:177357*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177357*0 + 3*751*FLEN/8, x4, x1, x2)

inst_59120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a800fffffffffff; valaddr_reg:x3; val_offset:177360*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177360*0 + 3*752*FLEN/8, x4, x1, x2)

inst_59121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a801fffffffffff; valaddr_reg:x3; val_offset:177363*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177363*0 + 3*753*FLEN/8, x4, x1, x2)

inst_59122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a803fffffffffff; valaddr_reg:x3; val_offset:177366*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177366*0 + 3*754*FLEN/8, x4, x1, x2)

inst_59123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a807fffffffffff; valaddr_reg:x3; val_offset:177369*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177369*0 + 3*755*FLEN/8, x4, x1, x2)

inst_59124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a80ffffffffffff; valaddr_reg:x3; val_offset:177372*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177372*0 + 3*756*FLEN/8, x4, x1, x2)

inst_59125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a81ffffffffffff; valaddr_reg:x3; val_offset:177375*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177375*0 + 3*757*FLEN/8, x4, x1, x2)

inst_59126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a83ffffffffffff; valaddr_reg:x3; val_offset:177378*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177378*0 + 3*758*FLEN/8, x4, x1, x2)

inst_59127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a87ffffffffffff; valaddr_reg:x3; val_offset:177381*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177381*0 + 3*759*FLEN/8, x4, x1, x2)

inst_59128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a88000000000000; valaddr_reg:x3; val_offset:177384*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177384*0 + 3*760*FLEN/8, x4, x1, x2)

inst_59129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8c000000000000; valaddr_reg:x3; val_offset:177387*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177387*0 + 3*761*FLEN/8, x4, x1, x2)

inst_59130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8e000000000000; valaddr_reg:x3; val_offset:177390*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177390*0 + 3*762*FLEN/8, x4, x1, x2)

inst_59131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8f000000000000; valaddr_reg:x3; val_offset:177393*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177393*0 + 3*763*FLEN/8, x4, x1, x2)

inst_59132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8f800000000000; valaddr_reg:x3; val_offset:177396*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177396*0 + 3*764*FLEN/8, x4, x1, x2)

inst_59133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8fc00000000000; valaddr_reg:x3; val_offset:177399*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177399*0 + 3*765*FLEN/8, x4, x1, x2)

inst_59134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8fe00000000000; valaddr_reg:x3; val_offset:177402*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177402*0 + 3*766*FLEN/8, x4, x1, x2)

inst_59135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f1657383ce9e and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc88edb953701c and fs3 == 0 and fe3 == 0x3a8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f1657383ce9e; op2val:0x203c88edb953701c;
op3val:0x3a8ff00000000000; valaddr_reg:x3; val_offset:177405*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177405*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190006112255,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190073221119,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190207438847,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190475874303,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597191012745215,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597192086487039,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597194233970687,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597198528937983,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597207118872575,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597224298741759,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597258658480127,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597327377956863,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597464816910335,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597739694817279,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121598289450631167,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121599388962258943,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121601587985514495,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121605986032025599,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121614782125047807,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121632374311092223,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121667558683181055,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121737927427358719,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121878664915714047,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122160139892424703,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122723089845846015,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688639,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688640,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(124974889659531264,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125537839612952576,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125819314589663232,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125960052078018560,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126030420822196224,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126065605194285056,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126083197380329472,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126091993473351680,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126096391519862784,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126098590543118336,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126099690054746112,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100239810560000,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100514688466944,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100652127420416,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100720846897152,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100755206635520,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100772386504704,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100780976439296,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100785271406592,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100787418890240,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100788492632064,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789029502976,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789297938432,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789432156160,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789499265024,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789532819456,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789549596672,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789557985280,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789562179584,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789564276736,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565325312,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565849600,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566111744,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566242816,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566308352,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566341120,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566357504,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566365696,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566369792,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566371840,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566372864,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373376,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373632,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373760,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373824,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373856,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373872,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373880,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373884,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373886,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373887,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413312,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413313,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413315,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413319,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413327,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413343,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413375,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413439,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413567,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413823,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486414335,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486415359,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486417407,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486421503,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486429695,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486446079,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486478847,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486544383,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486675455,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486937599,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182487461887,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182488510463,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182490607615,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182494801919,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182503190527,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182519967743,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182553522175,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182620631039,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182754848767,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183023284223,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183560155135,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669184633896959,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669186781380607,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669191076347903,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669199666282495,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669216846151679,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669251205890047,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669319925366783,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669457364320255,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669732242227199,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211670281998041087,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211671381509668863,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211673580532924415,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211677978579435519,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211686774672457727,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211704366858502143,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211739551230590975,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211809919974768639,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211950657463123967,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212232132439834623,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212795082393255935,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098559,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098560,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215046882206941184,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215609832160362496,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215891307137073152,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216032044625428480,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216102413369606144,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216137597741694976,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216155189927739392,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216163986020761600,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216168384067272704,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216170583090528256,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216171682602156032,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172232357969920,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172507235876864,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172644674830336,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172713394307072,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172747754045440,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172764933914624,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172773523849216,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172777818816512,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172779966300160,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781040041984,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781576912896,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781845348352,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781979566080,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782046674944,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782080229376,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782097006592,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782105395200,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782109589504,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782111686656,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782112735232,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113259520,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113521664,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113652736,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113718272,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113751040,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113767424,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113775616,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113779712,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113781760,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113782784,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783296,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783552,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783680,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783744,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783776,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783792,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783800,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783804,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783806,64,FLEN)
NAN_BOXED(6891014015247727648,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783807,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369280,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369281,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369283,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369287,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369295,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369311,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369343,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369407,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369535,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369791,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246370303,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246371327,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246373375,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246377471,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246385663,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246402047,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246434815,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246500351,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246631423,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246893567,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234247417855,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234248466431,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234250563583,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234254757887,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234263146495,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234279923711,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234313478143,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234380587007,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234514804735,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234783240191,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897235320111103,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897236393852927,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897238541336575,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897242836303871,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897251426238463,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897268606107647,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897302965846015,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897371685322751,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897509124276223,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897784002183167,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254898333757997055,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254899433269624831,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254901632292880383,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254906030339391487,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254914826432413695,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254932418618458111,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254967602990546943,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255037971734724607,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255178709223079935,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255460184199790591,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9256023134153211903,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054527,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054528,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258274933966897152,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258837883920318464,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259119358897029120,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259260096385384448,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259330465129562112,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259365649501650944,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259383241687695360,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259392037780717568,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259396435827228672,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259398634850484224,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259399734362112000,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400284117925888,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400558995832832,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400696434786304,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400765154263040,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400799514001408,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400816693870592,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400825283805184,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400829578772480,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400831726256128,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400832799997952,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833336868864,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833605304320,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833739522048,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833806630912,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833840185344,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833856962560,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833865351168,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833869545472,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833871642624,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833872691200,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873215488,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873477632,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873608704,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873674240,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873707008,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873723392,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873731584,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873735680,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873737728,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873738752,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739264,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739520,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739648,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739712,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739744,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739760,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739768,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739772,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739774,64,FLEN)
NAN_BOXED(6891022438949345111,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739775,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6891026703283546167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747776,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747777,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747779,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747783,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747791,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747807,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747839,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747903,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748031,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748287,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748799,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132749823,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132751871,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132755967,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132764159,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132780543,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132813311,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132878847,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133009919,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133272063,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133796351,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579134844927,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579136942079,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579141136383,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579149524991,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579166302207,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579199856639,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579266965503,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579401183231,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579669618687,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201580206489599,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201581280231423,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201583427715071,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201587722682367,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201596312616959,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201613492486143,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201647852224511,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201716571701247,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201854010654719,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202128888561663,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202678644375551,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252203778156003327,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252205977179258879,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252210375225769983,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252219171318792191,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252236763504836607,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252271947876925439,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252342316621103103,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252483054109458431,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252764529086169087,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(253327479039590399,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433023,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433024,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255579278853275648,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256142228806696960,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256423703783407616,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256564441271762944,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256634810015940608,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256669994388029440,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256687586574073856,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256696382667096064,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256700780713607168,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256702979736862720,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704079248490496,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704629004304384,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704903882211328,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705041321164800,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705110040641536,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705144400379904,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705161580249088,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705170170183680,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705174465150976,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705176612634624,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705177686376448,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178223247360,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178491682816,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178625900544,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178693009408,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178726563840,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178743341056,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178751729664,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178755923968,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178758021120,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759069696,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759593984,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759856128,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759987200,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760052736,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760085504,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760101888,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760110080,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760114176,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760116224,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117248,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117760,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118016,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118144,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118208,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118240,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118256,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118264,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118268,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118270,64,FLEN)
NAN_BOXED(6891042224440875755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118271,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570240,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570241,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570243,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570247,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570255,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570271,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570303,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570367,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570495,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890570751,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890571263,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890572287,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890574335,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890578431,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890586623,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890603007,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890635775,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890701311,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857890832383,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857891094527,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857891618815,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857892667391,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857894764543,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857898958847,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857907347455,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857924124671,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532857957679103,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532858024787967,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532858159005695,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532858427441151,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532858964312063,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532860038053887,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532862185537535,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532866480504831,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532875070439423,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532892250308607,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532926610046975,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803532995329523711,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803533132768477183,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803533407646384127,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803533957402198015,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803535056913825791,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803537255937081343,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803541653983592447,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803550450076614655,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803568042262659071,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803603226634747903,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803673595378925567,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13803814332867280895,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13804095807843991551,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13804658757797412863,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13805784657704255487,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13805784657704255488,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13806910557611098112,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13807473507564519424,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13807754982541230080,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13807895720029585408,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13807966088773763072,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808001273145851904,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808018865331896320,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808027661424918528,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808032059471429632,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808034258494685184,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808035358006312960,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808035907762126848,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036182640033792,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036320078987264,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036388798464000,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036423158202368,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036440338071552,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036448928006144,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036453222973440,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036455370457088,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036456444198912,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036456981069824,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457249505280,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457383723008,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457450831872,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457484386304,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457501163520,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457509552128,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457513746432,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457515843584,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457516892160,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517416448,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517678592,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517809664,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517875200,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517907968,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517924352,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517932544,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517936640,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517938688,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517939712,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940224,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940480,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940608,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940672,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940704,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940720,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940728,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940732,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940734,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(11514733343223604561,64,FLEN)
NAN_BOXED(13808036457517940735,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784256,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784257,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784259,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784263,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784271,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784287,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784319,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784383,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784511,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218784767,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218785279,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218786303,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218788351,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218792447,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218800639,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218817023,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218849791,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251218915327,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251219046399,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251219308543,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251219832831,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251220881407,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251222978559,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251227172863,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251235561471,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251252338687,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251285893119,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251353001983,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251487219711,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369251755655167,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369252292526079,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369253366267903,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369255513751551,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369259808718847,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369268398653439,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369285578522623,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369319938260991,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369388657737727,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369526096691199,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215369800974598143,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215370350730412031,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215371450242039807,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215373649265295359,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215378047311806463,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215386843404828671,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215404435590873087,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215439619962961919,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215509988707139583,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215650726195494911,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4215932201172205567,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4216495151125626879,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4217621051032469503,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4217621051032469504,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4218746950939312128,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4219309900892733440,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4219591375869444096,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4219732113357799424,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4219802482101977088,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4219837666474065920,64,FLEN)
NAN_BOXED(6891054322885578398,64,FLEN)
NAN_BOXED(2322882062414213148,64,FLEN)
NAN_BOXED(4219855258660110336,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
