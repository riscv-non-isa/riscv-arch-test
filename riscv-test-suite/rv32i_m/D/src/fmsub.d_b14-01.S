
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==f28, rs2==f28, rs3==f28, rd==f28,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x108 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f28; op2:f28; op3:f28; dest:f28; op1val:0x5f8132d8f91b7583; op2val:0x5f8132d8f91b7583;
op3val:0x5f8132d8f91b7583; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f28, f28, f28, f28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rd == rs2 == rs3 != rs1, rs1==f10, rs2==f22, rs3==f22, rd==f22,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f10; op2:f22; op3:f22; dest:f22; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x5fab1e2d5b3584f7; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f22, f10, f22, f22, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==f25, rs2==f26, rs3==f25, rd==f25,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f25; op2:f26; op3:f25; dest:f25; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x5f8132d8f91b7583; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f25, f25, f26, f25, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f16, rs2==f14, rs3==f15, rd==f4,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f16; op2:f14; op3:f15; dest:f4; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f5999f2a1278c2f; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f4, f16, f14, f15, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f29, rs2==f2, rs3==f29, rd==f3,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f29; op2:f2; op3:f29; dest:f3; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x5f8132d8f91b7583; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f3, f29, f2, f29, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f8, rs2==f8, rs3==f8, rd==f30,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f8; op2:f8; op3:f8; dest:f30; op1val:0x5f8132d8f91b7583; op2val:0x5f8132d8f91b7583;
op3val:0x5f8132d8f91b7583; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f30, f8, f8, f8, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f7, rs2==f30, rs3==f30, rd==f6,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f7; op2:f30; op3:f30; dest:f6; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x5fab1e2d5b3584f7; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f6, f7, f30, f30, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f19, rs2==f9, rs3==f17, rd==f9,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f19; op2:f9; op3:f17; dest:f9; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f9999f2a1278c2f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f9, f19, f9, f17, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==f5, rs2==f5, rs3==f3, rd==f5,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f5; op2:f5; op3:f3; dest:f5; op1val:0x5f8132d8f91b7583; op2val:0x5f8132d8f91b7583;
op3val:0x3fa999f2a1278c2f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f5, f5, f5, f3, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f4, rs2==f4, rs3==f26, rd==f19,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f4; op2:f4; op3:f26; dest:f19; op1val:0x5f8132d8f91b7583; op2val:0x5f8132d8f91b7583;
op3val:0x3fb999f2a1278c2f; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f19, f4, f4, f26, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f27, rs2==f16, rs3==f5, rd==f27,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f27; op2:f16; op3:f5; dest:f27; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fc999f2a1278c2f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f27, f27, f16, f5, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f20, rs2==f18, rs3==f24, rd==f24,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f20; op2:f18; op3:f24; dest:f24; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fd999f2a1278c2f; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f24, f20, f18, f24, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f1, rs2==f20, rs3==f16, rd==f12,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f1; op2:f20; op3:f16; dest:f12; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fe999f2a1278c2f; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f12, f1, f20, f16, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f22, rs2==f6, rs3==f27, rd==f18,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f22; op2:f6; op3:f27; dest:f18; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3ff999f2a1278c2f; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f18, f22, f6, f27, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f18, rs2==f24, rs3==f12, rd==f0,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x400 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f18; op2:f24; op3:f12; dest:f0; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x400999f2a1278c2f; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f0, f18, f24, f12, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f6, rs2==f13, rs3==f10, rd==f2,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x401 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f6; op2:f13; op3:f10; dest:f2; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x401999f2a1278c2f; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f2, f6, f13, f10, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f9, rs2==f10, rs3==f0, rd==f15,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x402 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f9; op2:f10; op3:f0; dest:f15; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x402999f2a1278c2f; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f15, f9, f10, f0, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f12, rs2==f15, rs3==f11, rd==f20,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x403 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f12; op2:f15; op3:f11; dest:f20; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x403999f2a1278c2f; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f20, f12, f15, f11, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f31, rs2==f12, rs3==f4, rd==f21,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x404 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f31; op2:f12; op3:f4; dest:f21; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x404999f2a1278c2f; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f21, f31, f12, f4, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f11, rs2==f29, rs3==f31, rd==f13,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x405 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f11; op2:f29; op3:f31; dest:f13; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x405999f2a1278c2f; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f13, f11, f29, f31, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f24, rs2==f17, rs3==f23, rd==f14,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x406 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f24; op2:f17; op3:f23; dest:f14; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x406999f2a1278c2f; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f14, f24, f17, f23, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f21, rs2==f27, rs3==f19, rd==f1,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x407 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f21; op2:f27; op3:f19; dest:f1; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x407999f2a1278c2f; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f1, f21, f27, f19, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f23, rs2==f11, rs3==f1, rd==f7,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x408 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f23; op2:f11; op3:f1; dest:f7; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x408999f2a1278c2f; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f7, f23, f11, f1, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f3, rs2==f23, rs3==f6, rd==f10,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x409 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f3; op2:f23; op3:f6; dest:f10; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x409999f2a1278c2f; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f10, f3, f23, f6, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f17, rs2==f21, rs3==f7, rd==f8,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x40a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f17; op2:f21; op3:f7; dest:f8; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x40a999f2a1278c2f; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f8, f17, f21, f7, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f26, rs2==f19, rs3==f18, rd==f23,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x40b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f26; op2:f19; op3:f18; dest:f23; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x40b999f2a1278c2f; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f23, f26, f19, f18, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f30, rs2==f31, rs3==f2, rd==f29,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x40c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f31; op3:f2; dest:f29; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x40c999f2a1278c2f; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f29, f30, f31, f2, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f14, rs2==f0, rs3==f13, rd==f31,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x40d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f14; op2:f0; op3:f13; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x40d999f2a1278c2f; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f14, f0, f13, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f0, rs2==f25, rs3==f14, rd==f17,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x40e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f0; op2:f25; op3:f14; dest:f17; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x40e999f2a1278c2f; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f17, f0, f25, f14, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f13, rs2==f3, rs3==f21, rd==f11,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x40f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f13; op2:f3; op3:f21; dest:f11; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x40f999f2a1278c2f; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f11, f13, f3, f21, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f2, rs2==f7, rs3==f9, rd==f16,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x410 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f2; op2:f7; op3:f9; dest:f16; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x410999f2a1278c2f; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f16, f2, f7, f9, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f15, rs2==f1, rs3==f20, rd==f26,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x411 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f15; op2:f1; op3:f20; dest:f26; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x411999f2a1278c2f; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f26, f15, f1, f20, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x412 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x412999f2a1278c2f; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x413 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x413999f2a1278c2f; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x414 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x414999f2a1278c2f; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x415 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x415999f2a1278c2f; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x416 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x416999f2a1278c2f; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x417 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x417999f2a1278c2f; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x418 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x418999f2a1278c2f; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x419 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x419999f2a1278c2f; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x41a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x41a999f2a1278c2f; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x41b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x41b999f2a1278c2f; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x41c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x41c999f2a1278c2f; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x41d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x41d999f2a1278c2f; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x41e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x41e999f2a1278c2f; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x41f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x41f999f2a1278c2f; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x420 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x420999f2a1278c2f; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x421 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x421999f2a1278c2f; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x422 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x422999f2a1278c2f; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x423 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x423999f2a1278c2f; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x424 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x424999f2a1278c2f; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x425 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x425999f2a1278c2f; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x426 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x426999f2a1278c2f; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x427 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x427999f2a1278c2f; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x428 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x428999f2a1278c2f; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x429 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x429999f2a1278c2f; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x42a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x42a999f2a1278c2f; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x42b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x42b999f2a1278c2f; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x42c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x42c999f2a1278c2f; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x42d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x42d999f2a1278c2f; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x42e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x42e999f2a1278c2f; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x42f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x42f999f2a1278c2f; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x430 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x430999f2a1278c2f; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x431 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x431999f2a1278c2f; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x432 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x432999f2a1278c2f; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x433 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x433999f2a1278c2f; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x434 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x434999f2a1278c2f; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x435 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x435999f2a1278c2f; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x436 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x436999f2a1278c2f; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x437 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x437999f2a1278c2f; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x438 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x438999f2a1278c2f; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x439 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x439999f2a1278c2f; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x43a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x43a999f2a1278c2f; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x43b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x43b999f2a1278c2f; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x43c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x43c999f2a1278c2f; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x43d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x43d999f2a1278c2f; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x43e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x43e999f2a1278c2f; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x43f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x43f999f2a1278c2f; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x440 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x440999f2a1278c2f; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x441 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x441999f2a1278c2f; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x442 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x442999f2a1278c2f; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x443 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x443999f2a1278c2f; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x444 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x444999f2a1278c2f; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x445 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x445999f2a1278c2f; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x446 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x446999f2a1278c2f; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x447 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x447999f2a1278c2f; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x448 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x448999f2a1278c2f; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x449 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x449999f2a1278c2f; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x44a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x44a999f2a1278c2f; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x44b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x44b999f2a1278c2f; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x44c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x44c999f2a1278c2f; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x44d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x44d999f2a1278c2f; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x44e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x44e999f2a1278c2f; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x44f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x44f999f2a1278c2f; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x450 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x450999f2a1278c2f; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x451 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x451999f2a1278c2f; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x452 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x452999f2a1278c2f; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x453 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x453999f2a1278c2f; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x454 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x454999f2a1278c2f; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x455 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x455999f2a1278c2f; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x456 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x456999f2a1278c2f; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x457 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x457999f2a1278c2f; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x458 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x458999f2a1278c2f; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x459 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x459999f2a1278c2f; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x45a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x45a999f2a1278c2f; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x45b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x45b999f2a1278c2f; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x45c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x45c999f2a1278c2f; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x45d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x45d999f2a1278c2f; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x45e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x45e999f2a1278c2f; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x45f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x45f999f2a1278c2f; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x460 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x460999f2a1278c2f; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x461 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x461999f2a1278c2f; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x462 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x462999f2a1278c2f; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x463999f2a1278c2f; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x464 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x464999f2a1278c2f; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x465 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x465999f2a1278c2f; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x466 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x466999f2a1278c2f; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x467 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x467999f2a1278c2f; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x468 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x468999f2a1278c2f; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x469 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x469999f2a1278c2f; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x46a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x46a999f2a1278c2f; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x46b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x46b999f2a1278c2f; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x46c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x46c999f2a1278c2f; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x46d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x46d999f2a1278c2f; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x46e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x46e999f2a1278c2f; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x46f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x46f999f2a1278c2f; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x470 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x470999f2a1278c2f; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x471 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x471999f2a1278c2f; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x472 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x472999f2a1278c2f; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x473 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x473999f2a1278c2f; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x474 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x474999f2a1278c2f; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x475 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x475999f2a1278c2f; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x476 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x476999f2a1278c2f; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x477 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x477999f2a1278c2f; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x478 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x478999f2a1278c2f; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x479 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x479999f2a1278c2f; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x47a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x47a999f2a1278c2f; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x47b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x47b999f2a1278c2f; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x47c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x47c999f2a1278c2f; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x47d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x47d999f2a1278c2f; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x47e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x47e999f2a1278c2f; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x47f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x47f999f2a1278c2f; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x480 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x480999f2a1278c2f; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x481 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x481999f2a1278c2f; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x482 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x482999f2a1278c2f; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x483 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x483999f2a1278c2f; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x484 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x484999f2a1278c2f; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x485 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x485999f2a1278c2f; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x486 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x486999f2a1278c2f; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x487 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x487999f2a1278c2f; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x488 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x488999f2a1278c2f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x489 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x489999f2a1278c2f; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x48a and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x48a999f2a1278c2f; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x48b and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x48b999f2a1278c2f; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x48c and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x48c999f2a1278c2f; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x48d and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x48d999f2a1278c2f; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x48e and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x48e999f2a1278c2f; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x48f and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x48f999f2a1278c2f; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x490 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x490999f2a1278c2f; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x509 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x509999f2a1278c2f; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x108 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x108999f2a1278c2f; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f3999f2a1278c2f; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f4999f2a1278c2f; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f6999f2a1278c2f; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f7999f2a1278c2f; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f8999f2a1278c2f; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3f9999f2a1278c2f; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fa999f2a1278c2f; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fb999f2a1278c2f; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fc999f2a1278c2f; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x999f2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x3fd999f2a1278c2f; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4564848964681567279,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4582863363191049263,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(4587366962818419759,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(4591870562445790255,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4596374162073160751,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4600877761700531247,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4605381361327901743,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4609884960955272239,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4614388560582642735,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4618892160210013231,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4623395759837383727,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4627899359464754223,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4632402959092124719,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4636906558719495215,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4641410158346865711,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4645913757974236207,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4650417357601606703,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4654920957228977199,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4659424556856347695,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4663928156483718191,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4668431756111088687,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4672935355738459183,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4677438955365829679,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4681942554993200175,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4686446154620570671,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4690949754247941167,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4695453353875311663,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4699956953502682159,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4704460553130052655,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4708964152757423151,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4713467752384793647,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4717971352012164143,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4722474951639534639,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4726978551266905135,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4731482150894275631,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4735985750521646127,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4740489350149016623,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4744992949776387119,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4749496549403757615,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4754000149031128111,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4758503748658498607,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4763007348285869103,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4767510947913239599,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4772014547540610095,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4776518147167980591,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4781021746795351087,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4785525346422721583,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4790028946050092079,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4794532545677462575,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4799036145304833071,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4803539744932203567,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4808043344559574063,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4812546944186944559,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4817050543814315055,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4821554143441685551,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4826057743069056047,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4830561342696426543,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4835064942323797039,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4839568541951167535,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4844072141578538031,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4848575741205908527,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4853079340833279023,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4857582940460649519,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4862086540088020015,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4866590139715390511,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4871093739342761007,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4875597338970131503,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4880100938597501999,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4884604538224872495,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4889108137852242991,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4893611737479613487,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4898115337106983983,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4902618936734354479,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4907122536361724975,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4911626135989095471,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4916129735616465967,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4920633335243836463,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4925136934871206959,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4929640534498577455,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4934144134125947951,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4938647733753318447,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4943151333380688943,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4947654933008059439,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4952158532635429935,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4956662132262800431,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4961165731890170927,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4965669331517541423,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4970172931144911919,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4974676530772282415,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4979180130399652911,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4983683730027023407,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4988187329654393903,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4992690929281764399,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4997194528909134895,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5001698128536505391,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5006201728163875887,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5010705327791246383,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5015208927418616879,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5019712527045987375,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5024216126673357871,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5028719726300728367,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5033223325928098863,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5037726925555469359,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5042230525182839855,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5046734124810210351,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5051237724437580847,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5055741324064951343,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5060244923692321839,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5064748523319692335,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5069252122947062831,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5073755722574433327,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5078259322201803823,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5082762921829174319,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5087266521456544815,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5091770121083915311,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5096273720711285807,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5100777320338656303,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5105280919966026799,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5109784519593397295,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5114288119220767791,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5118791718848138287,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5123295318475508783,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5127798918102879279,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5132302517730249775,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5136806117357620271,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5141309716984990767,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5145813316612361263,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5150316916239731759,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5154820515867102255,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5159324115494472751,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5163827715121843247,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5168331314749213743,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5172834914376584239,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5177338514003954735,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5181842113631325231,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5186345713258695727,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5190849312886066223,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5195352912513436719,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5199856512140807215,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5204360111768177711,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5208863711395548207,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5213367311022918703,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5217870910650289199,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5222374510277659695,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5226878109905030191,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5231381709532400687,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5235885309159771183,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5240388908787141679,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5244892508414512175,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5249396108041882671,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5253899707669253167,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5258403307296623663,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5262906906923994159,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(5807842461835824175,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(1191652843781065775,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4555841765426826287,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4560345365054196783,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4569352564308937775,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4573856163936308271,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4578359763563678767,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4582863363191049263,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4587366962818419759,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4591870562445790255,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4596374162073160751,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(4600877761700531247,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 86*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
