
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f11, rd==f19,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x059 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f9; op2:f9; op3:f11; dest:f19; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed;
op3val:0x592f4abd475417f; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f19, f9, f9, f11, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f10, rs2==f24, rs3==f10, rd==f31,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f10; op2:f24; op3:f10; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x5fae97d52f73d2ed; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f10, f24, f10, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rs3 == rd, rs1==f8, rs2==f8, rs3==f8, rd==f8,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f8; op2:f8; op3:f8; dest:f8; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed;
op3val:0x5fae97d52f73d2ed; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f8, f8, f8, f8, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==f16, rs2==f31, rs3==f16, rd==f16,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f16; op2:f31; op3:f16; dest:f16; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x5fae97d52f73d2ed; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f16, f16, f31, f16, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==f7, rs2==f7, rs3==f7, rd==f13,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f7; op2:f7; op3:f7; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed;
op3val:0x5fae97d52f73d2ed; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f13, f7, f7, f7, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f29, rs2==f1, rs3==f25, rd==f1,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f29; op2:f1; op3:f25; dest:f1; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f72f4abd475417f; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f1, f29, f1, f25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f17, rs2==f17, rs3==f15, rd==f17,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f17; op2:f17; op3:f15; dest:f17; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed;
op3val:0x3f82f4abd475417f; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f17, f17, f17, f15, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f21, rs2==f29, rs3==f29, rd==f24,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f21; op2:f29; op3:f29; dest:f24; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x5fae549a4f656ebe; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f24, f21, f29, f29, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f11, rs2==f6, rs3==f5, rd==f5,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f11; op2:f6; op3:f5; dest:f5; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fa2f4abd475417f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f5, f11, f6, f5, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f27, rs2==f15, rs3==f12, rd==f27,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f27; op2:f15; op3:f12; dest:f27; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fb2f4abd475417f; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f27, f27, f15, f12, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f3, rs2==f23, rs3==f30, rd==f0,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f3; op2:f23; op3:f30; dest:f0; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fc2f4abd475417f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f0, f3, f23, f30, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rd == rs2 == rs3 != rs1, rs1==f13, rs2==f28, rs3==f28, rd==f28,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f13; op2:f28; op3:f28; dest:f28; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x5fae549a4f656ebe; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f28, f13, f28, f28, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f24, rs2==f11, rs3==f17, rd==f7,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f24; op2:f11; op3:f17; dest:f7; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fe2f4abd475417f; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f7, f24, f11, f17, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f30, rs2==f20, rs3==f9, rd==f26,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f20; op3:f9; dest:f26; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3ff2f4abd475417f; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f26, f30, f20, f9, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f25, rs2==f4, rs3==f14, rd==f29,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x400 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f25; op2:f4; op3:f14; dest:f29; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4002f4abd475417f; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f29, f25, f4, f14, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f23, rs2==f10, rs3==f22, rd==f14,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x401 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f23; op2:f10; op3:f22; dest:f14; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4012f4abd475417f; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f14, f23, f10, f22, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f14, rs2==f0, rs3==f24, rd==f18,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x402 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f14; op2:f0; op3:f24; dest:f18; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4022f4abd475417f; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f18, f14, f0, f24, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f20, rs2==f3, rs3==f23, rd==f25,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x403 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f20; op2:f3; op3:f23; dest:f25; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4032f4abd475417f; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f25, f20, f3, f23, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f26, rs2==f21, rs3==f6, rd==f20,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x404 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f26; op2:f21; op3:f6; dest:f20; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4042f4abd475417f; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f20, f26, f21, f6, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f28, rs2==f18, rs3==f0, rd==f10,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x405 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f28; op2:f18; op3:f0; dest:f10; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4052f4abd475417f; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f10, f28, f18, f0, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f12, rs2==f27, rs3==f13, rd==f30,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x406 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f12; op2:f27; op3:f13; dest:f30; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4062f4abd475417f; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f30, f12, f27, f13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f0, rs2==f12, rs3==f19, rd==f4,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x407 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f0; op2:f12; op3:f19; dest:f4; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4072f4abd475417f; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f4, f0, f12, f19, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f2, rs2==f26, rs3==f20, rd==f9,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x408 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f2; op2:f26; op3:f20; dest:f9; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4082f4abd475417f; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f9, f2, f26, f20, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f19, rs2==f25, rs3==f21, rd==f22,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x409 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f19; op2:f25; op3:f21; dest:f22; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4092f4abd475417f; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f22, f19, f25, f21, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f4, rs2==f16, rs3==f31, rd==f2,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f4; op2:f16; op3:f31; dest:f2; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x40a2f4abd475417f; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f2, f4, f16, f31, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f1, rs2==f22, rs3==f4, rd==f6,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f1; op2:f22; op3:f4; dest:f6; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x40b2f4abd475417f; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f6, f1, f22, f4, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f5, rs2==f19, rs3==f27, rd==f15,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f5; op2:f19; op3:f27; dest:f15; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x40c2f4abd475417f; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f15, f5, f19, f27, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f15, rs2==f14, rs3==f2, rd==f12,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f15; op2:f14; op3:f2; dest:f12; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x40d2f4abd475417f; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f12, f15, f14, f2, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f31, rs2==f30, rs3==f18, rd==f21,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f31; op2:f30; op3:f18; dest:f21; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x40e2f4abd475417f; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f21, f31, f30, f18, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f22, rs2==f2, rs3==f1, rd==f23,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f22; op2:f2; op3:f1; dest:f23; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x40f2f4abd475417f; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f23, f22, f2, f1, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f18, rs2==f13, rs3==f3, rd==f11,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x410 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f18; op2:f13; op3:f3; dest:f11; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4102f4abd475417f; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f11, f18, f13, f3, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f6, rs2==f5, rs3==f26, rd==f3,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x411 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f6; op2:f5; op3:f26; dest:f3; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4112f4abd475417f; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f3, f6, f5, f26, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x412 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4122f4abd475417f; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x413 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4132f4abd475417f; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x414 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4142f4abd475417f; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x415 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4152f4abd475417f; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x416 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4162f4abd475417f; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x417 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4172f4abd475417f; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x418 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4182f4abd475417f; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x419 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4192f4abd475417f; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x41a2f4abd475417f; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x41b2f4abd475417f; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x41c2f4abd475417f; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x41d2f4abd475417f; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x41e2f4abd475417f; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x41f2f4abd475417f; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x420 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4202f4abd475417f; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x421 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4212f4abd475417f; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x422 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4222f4abd475417f; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x423 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4232f4abd475417f; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x424 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4242f4abd475417f; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x425 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4252f4abd475417f; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x426 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4262f4abd475417f; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x427 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4272f4abd475417f; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x428 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4282f4abd475417f; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x429 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4292f4abd475417f; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x42a2f4abd475417f; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x42b2f4abd475417f; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x42c2f4abd475417f; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x42d2f4abd475417f; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x42e2f4abd475417f; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x42f2f4abd475417f; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x430 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4302f4abd475417f; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x431 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4312f4abd475417f; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x432 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4322f4abd475417f; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x433 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4332f4abd475417f; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x434 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4342f4abd475417f; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x435 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4352f4abd475417f; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x436 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4362f4abd475417f; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x437 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4372f4abd475417f; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x438 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4382f4abd475417f; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x439 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4392f4abd475417f; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x43a2f4abd475417f; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x43b2f4abd475417f; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x43c2f4abd475417f; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x43d2f4abd475417f; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x43e2f4abd475417f; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x43f2f4abd475417f; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x440 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4402f4abd475417f; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x441 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4412f4abd475417f; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x442 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4422f4abd475417f; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x443 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4432f4abd475417f; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x444 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4442f4abd475417f; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x445 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4452f4abd475417f; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x446 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4462f4abd475417f; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x447 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4472f4abd475417f; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x448 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4482f4abd475417f; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x449 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4492f4abd475417f; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x44a2f4abd475417f; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x44b2f4abd475417f; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x44c2f4abd475417f; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x44d2f4abd475417f; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x44e2f4abd475417f; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x44f2f4abd475417f; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x450 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4502f4abd475417f; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x451 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4512f4abd475417f; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x452 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4522f4abd475417f; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x453 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4532f4abd475417f; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x454 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4542f4abd475417f; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x455 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4552f4abd475417f; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x456 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4562f4abd475417f; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x457 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4572f4abd475417f; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x458 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4582f4abd475417f; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x459 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4592f4abd475417f; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x45a2f4abd475417f; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x45b2f4abd475417f; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x45c2f4abd475417f; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x45d2f4abd475417f; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x45e2f4abd475417f; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x45f2f4abd475417f; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x460 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4602f4abd475417f; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x461 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4612f4abd475417f; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x462 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4622f4abd475417f; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x463 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4632f4abd475417f; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x464 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4642f4abd475417f; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x465 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4652f4abd475417f; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x466 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4662f4abd475417f; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x467 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4672f4abd475417f; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x468 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4682f4abd475417f; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x469 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4692f4abd475417f; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x46a2f4abd475417f; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x46b2f4abd475417f; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x46c2f4abd475417f; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x46d2f4abd475417f; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x46e2f4abd475417f; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x46f2f4abd475417f; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x470 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4702f4abd475417f; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x471 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4712f4abd475417f; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x472 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4722f4abd475417f; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x473 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4732f4abd475417f; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x474 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4742f4abd475417f; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x475 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4752f4abd475417f; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x476 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4762f4abd475417f; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x477 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4772f4abd475417f; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x478 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4782f4abd475417f; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x479 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4792f4abd475417f; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x47a2f4abd475417f; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x47b2f4abd475417f; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x47c2f4abd475417f; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x47d2f4abd475417f; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x47e2f4abd475417f; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x47f2f4abd475417f; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x480 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4802f4abd475417f; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x481 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4812f4abd475417f; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x482 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4822f4abd475417f; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x483 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4832f4abd475417f; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x484 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4842f4abd475417f; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x485 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4852f4abd475417f; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x486 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4862f4abd475417f; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x487 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4872f4abd475417f; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x488 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4882f4abd475417f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x489 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4892f4abd475417f; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48a and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x48a2f4abd475417f; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48b and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x48b2f4abd475417f; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48c and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x48c2f4abd475417f; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48d and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x48d2f4abd475417f; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48e and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x48e2f4abd475417f; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48f and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x48f2f4abd475417f; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x490 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x4902f4abd475417f; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x602 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x6022f4abd475417f; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x059 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x592f4abd475417f; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f32f4abd475417f; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f42f4abd475417f; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f52f4abd475417f; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f62f4abd475417f; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f72f4abd475417f; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f82f4abd475417f; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3f92f4abd475417f; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fa2f4abd475417f; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fb2f4abd475417f; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2f4abd475417f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0x3fd2f4abd475417f; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(401652335630434687,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4571985590575513983,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(4576489190202884479,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4585496389457625471,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4589999989084995967,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4594503588712366463,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4603510787967107455,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4608014387594477951,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4612517987221848447,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4617021586849218943,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4621525186476589439,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4626028786103959935,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4630532385731330431,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4635035985358700927,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4639539584986071423,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4644043184613441919,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4648546784240812415,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4653050383868182911,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4657553983495553407,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4662057583122923903,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4666561182750294399,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4671064782377664895,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4675568382005035391,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4680071981632405887,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4684575581259776383,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4689079180887146879,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4693582780514517375,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4698086380141887871,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4702589979769258367,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4707093579396628863,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4711597179023999359,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4716100778651369855,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4720604378278740351,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4725107977906110847,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4729611577533481343,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4734115177160851839,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4738618776788222335,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4743122376415592831,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4747625976042963327,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4752129575670333823,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4756633175297704319,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4761136774925074815,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4765640374552445311,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4770143974179815807,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4774647573807186303,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4779151173434556799,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4783654773061927295,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4788158372689297791,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4792661972316668287,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4797165571944038783,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4801669171571409279,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4806172771198779775,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4810676370826150271,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4815179970453520767,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4819683570080891263,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4824187169708261759,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4828690769335632255,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4833194368963002751,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4837697968590373247,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4842201568217743743,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4846705167845114239,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4851208767472484735,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4855712367099855231,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4860215966727225727,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4864719566354596223,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4869223165981966719,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4873726765609337215,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4878230365236707711,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4882733964864078207,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4887237564491448703,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4891741164118819199,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4896244763746189695,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4900748363373560191,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4905251963000930687,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4909755562628301183,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4914259162255671679,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4918762761883042175,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4923266361510412671,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4927769961137783167,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4932273560765153663,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4936777160392524159,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4941280760019894655,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4945784359647265151,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4950287959274635647,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4954791558902006143,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4959295158529376639,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4963798758156747135,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4968302357784117631,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4972805957411488127,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4977309557038858623,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4981813156666229119,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4986316756293599615,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4990820355920970111,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4995323955548340607,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4999827555175711103,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5004331154803081599,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5008834754430452095,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5013338354057822591,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5017841953685193087,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5022345553312563583,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5026849152939934079,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5031352752567304575,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5035856352194675071,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5040359951822045567,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5044863551449416063,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5049367151076786559,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5053870750704157055,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5058374350331527551,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5062877949958898047,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5067381549586268543,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5071885149213639039,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5076388748841009535,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5080892348468380031,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5085395948095750527,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5089899547723121023,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5094403147350491519,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5098906746977862015,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5103410346605232511,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5107913946232603007,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5112417545859973503,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5116921145487343999,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5121424745114714495,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5125928344742084991,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5130431944369455487,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5134935543996825983,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5139439143624196479,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5143942743251566975,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5148446342878937471,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5152949942506307967,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5157453542133678463,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5161957141761048959,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5166460741388419455,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5170964341015789951,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5175467940643160447,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5179971540270530943,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5184475139897901439,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5188978739525271935,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5193482339152642431,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5197985938780012927,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5202489538407383423,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5206993138034753919,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5211496737662124415,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5216000337289494911,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5220503936916865407,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5225007536544235903,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5229511136171606399,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5234014735798976895,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5238518335426347391,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5243021935053717887,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5247525534681088383,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5252029134308458879,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5256532733935829375,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(5261036333563199871,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(6927368195690283391,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(401652335630434687,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4553971192066031999,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4558474791693402495,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4562978391320772991,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4567481990948143487,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4571985590575513983,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4576489190202884479,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4580992789830254975,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4585496389457625471,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4589999989084995967,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(6894541101284552382,64,FLEN)
NAN_BOXED(4599007188339736959,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 86*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
