
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b17 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b17)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==f11, rs2==f11, rs3==f11, rd==f11,fs1 == 0 and fe1 == 0x5f2 and fm1 == 0xcd462b6d554ff and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x8e80a6ca28041 and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x67057390b9773 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f11; op2:f11; op3:f11; dest:f11; op1val:0x5f2cd462b6d554ff; op2val:0x5f2cd462b6d554ff;
op3val:0x5f2cd462b6d554ff; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f11, f11, f11, f11, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rd == rs2 == rs3 != rs1, rs1==f9, rs2==f19, rs3==f19, rd==f19,fs1 == 0 and fe1 == 0x5f3 and fm1 == 0xea0625aeb847f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0eb1fe944dafc and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x031398a626e75 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f9; op2:f19; op3:f19; dest:f19; op1val:0x5f3ea0625aeb847f; op2val:0x5fa0eb1fe944dafc;
op3val:0x5fa0eb1fe944dafc; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f19, f9, f19, f19, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==f16, rs2==f17, rs3==f16, rd==f16,fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xf3381366daa33 and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x4579ad17dc3e2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f16; op2:f17; op3:f16; dest:f16; op1val:0x5f54dcede7752c7f; op2val:0x5f8f3381366daa33;
op3val:0x5f54dcede7752c7f; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f16, f16, f17, f16, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f6, rs2==f14, rs3==f3, rd==f28,fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x551579cd90e3f and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x24b13b2db3adf and fs3 == 0 and fe3 == 0x7eb and fm3 == 0x85f8a1a087a3c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f6; op2:f14; op3:f3; dest:f28; op1val:0x5f5551579cd90e3f; op2val:0x5f524b13b2db3adf;
op3val:0x7eb85f8a1a087a3c; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f28, f6, f14, f3, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f2, rs2==f4, rs3==f2, rd==f6,fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xd071ef258365f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabe96758f2a09 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x842abe8ab8f07 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f2; op2:f4; op3:f2; dest:f6; op1val:0x5f5d071ef258365f; op2val:0x5faabe96758f2a09;
op3val:0x5f5d071ef258365f; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f6, f2, f4, f2, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f30, rs2==f30, rs3==f30, rd==f15,fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x409de9a05b77f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x2bccdcc2ad897 and fs3 == 0 and fe3 == 0x7ee and fm3 == 0x7779022ffc65b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f30; op3:f30; dest:f15; op1val:0x5f6409de9a05b77f; op2val:0x5f6409de9a05b77f;
op3val:0x5f6409de9a05b77f; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f15, f30, f30, f30, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f12, rs2==f10, rs3==f10, rd==f21,fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x643f753bef22f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6821b2764a929 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xf5282163218cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f12; op2:f10; op3:f10; dest:f21; op1val:0x5f6643f753bef22f; op2val:0x5fa6821b2764a929;
op3val:0x5fa6821b2764a929; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f21, f12, f10, f10, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f28, rs2==f13, rs3==f8, rd==f13,fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xe19152f3266af and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x31c5c2101663f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x1f9912db74f8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f28; op2:f13; op3:f8; dest:f13; op1val:0x5f6e19152f3266af; op2val:0x5f931c5c2101663f;
op3val:0x7f11f9912db74f8f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f13, f28, f13, f8, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==f27, rs2==f27, rs3==f21, rd==f27,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x07d72d5d390a7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xed40ea1c96a68 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xfc5c4970046b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f27; op2:f27; op3:f21; dest:f27; op1val:0x5f707d72d5d390a7; op2val:0x5f707d72d5d390a7;
op3val:0x7f2fc5c4970046b3; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f27, f27, f27, f21, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f23, rs2==f23, rs3==f17, rd==f14,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x05fc74a94c67c and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x2bed753218d46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f23; op2:f23; op3:f17; dest:f14; op1val:0x5f725131186c166f; op2val:0x5f725131186c166f;
op3val:0x7f22bed753218d46; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f14, f23, f23, f17, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f10, rs2==f22, rs3==f12, rd==f10,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x1175939fbdd3f and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x6c2da93955bf2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f10; op2:f22; op3:f12; dest:f10; op1val:0x5f754ed51bc74baf; op2val:0x5f51175939fbdd3f;
op3val:0x7ed6c2da93955bf2; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f10, f10, f22, f12, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f14, rs2==f25, rs3==f4, rd==f4,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd24fb6bdbd8af and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x7f9f3258d489d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f14; op2:f25; op3:f4; dest:f4; op1val:0x5f7a5356adec5cbf; op2val:0x5fad24fb6bdbd8af;
op3val:0x7f37f9f3258d489d; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f4, f14, f25, f4, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f31, rs2==f5, rs3==f0, rd==f2,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb5c56d6b2c837 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0759f6f56b8c0 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xc257ab5b89fd2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f31; op2:f5; op3:f0; dest:f2; op1val:0x5f7b5c56d6b2c837; op2val:0x5fa0759f6f56b8c0;
op3val:0x7f2c257ab5b89fd2; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f2, f31, f5, f0, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f21, rs2==f1, rs3==f29, rd==f22,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbd7ce681c543f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xccb502aebad05 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x90dbb61598ffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f21; op2:f1; op3:f29; dest:f22; op1val:0x5f7bd7ce681c543f; op2val:0x5faccb502aebad05;
op3val:0x7f390dbb61598ffc; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f22, f21, f1, f29, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f17, rs2==f20, rs3==f6, rd==f31,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc823d880083bf and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb8b73fc8fea5b and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x88a20fb162d83 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f17; op2:f20; op3:f6; dest:f31; op1val:0x5f7c823d880083bf; op2val:0x5f8b8b73fc8fea5b;
op3val:0x7f188a20fb162d83; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f17, f20, f6, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f18, rs2==f12, rs3==f20, rd==f0,fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xef2a4f7c7db7f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x54ae0bf2a236d and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x497a6bb7bf610 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f18; op2:f12; op3:f20; dest:f0; op1val:0x5f7ef2a4f7c7db7f; op2val:0x5f954ae0bf2a236d;
op3val:0x7f2497a6bb7bf610; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f0, f18, f12, f20, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f29, rs2==f0, rs3==f22, rd==f17,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd263e3c3e5fcb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f29; op2:f0; op3:f22; dest:f17; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7;
op3val:0x7f3d263e3c3e5fcb; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f17, f29, f0, f22, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f5, rs2==f8, rs3==f1, rd==f20,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x153045947810b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1a3304314bd3d and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x318e69cd8a447 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f5; op2:f8; op3:f1; dest:f20; op1val:0x5f8153045947810b; op2val:0x5fa1a3304314bd3d;
op3val:0x7f3318e69cd8a447; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f20, f5, f8, f1, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f3, rs2==f21, rs3==f28, rd==f7,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1cee2cf81f5c7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8d300de77b552 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xba12d7def3a09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f3; op2:f21; op3:f28; dest:f7; op1val:0x5f81cee2cf81f5c7; op2val:0x5fa8d300de77b552;
op3val:0x7f3ba12d7def3a09; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f7, f3, f21, f28, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f13, rs2==f9, rs3==f5, rd==f18,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x46970482fa4d3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8834cdb2b7fe3 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xf45a9c0068395 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f13; op2:f9; op3:f5; dest:f18; op1val:0x5f846970482fa4d3; op2val:0x5fa8834cdb2b7fe3;
op3val:0x7f3f45a9c0068395; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f18, f13, f9, f5, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f1, rs2==f15, rs3==f9, rd==f23,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x46e9bf4155d7b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0e04cdbcecdfb and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x58d0aa1855dbc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f1; op2:f15; op3:f9; dest:f23; op1val:0x5f846e9bf4155d7b; op2val:0x5fa0e04cdbcecdfb;
op3val:0x7f358d0aa1855dbc; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f23, f1, f15, f9, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f7, rs2==f26, rs3==f24, rd==f25,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x5181b18b5230b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x75b4f2bfa2cac and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xecb086ea14ef4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f7; op2:f26; op3:f24; dest:f25; op1val:0x5f85181b18b5230b; op2val:0x5fa75b4f2bfa2cac;
op3val:0x7f3ecb086ea14ef4; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f25, f7, f26, f24, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f19, rs2==f24, rs3==f18, rd==f8,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x56cd20ae4ecf3 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xee6dc228b09a7 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x4b0967329acc3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f19; op2:f24; op3:f18; dest:f8; op1val:0x5f856cd20ae4ecf3; op2val:0x5f8ee6dc228b09a7;
op3val:0x7f24b0967329acc3; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f8, f19, f24, f18, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f20, rs2==f2, rs3==f14, rd==f1,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x60ffd67bcec83 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x945c6c109c016 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x16c997b7a634d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f20; op2:f2; op3:f14; dest:f1; op1val:0x5f860ffd67bcec83; op2val:0x5fa945c6c109c016;
op3val:0x7f416c997b7a634d; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f1, f20, f2, f14, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f24, rs2==f16, rs3==f27, rd==f30,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x18fc26b87eae6 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x84e65b4bd2c89 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f24; op2:f16; op3:f27; dest:f30; op1val:0x5f86251b45dfbd3b; op2val:0x5fa18fc26b87eae6;
op3val:0x7f384e65b4bd2c89; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f30, f24, f16, f27, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f8, rs2==f6, rs3==f31, rd==f26,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6aedbc8cfe5cb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2b3e748b91f6f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xa83c3605eeafe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f8; op2:f6; op3:f31; dest:f26; op1val:0x5f86aedbc8cfe5cb; op2val:0x5fa2b3e748b91f6f;
op3val:0x7f3a83c3605eeafe; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f26, f8, f6, f31, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f22, rs2==f29, rs3==f15, rd==f9,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6cdc754c86703 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xbb0574c4cc8c3 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x3bb4a2db0c4d6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f22; op2:f29; op3:f15; dest:f9; op1val:0x5f86cdc754c86703; op2val:0x5f9bb0574c4cc8c3;
op3val:0x7f33bb4a2db0c4d6; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f9, f22, f29, f15, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f25, rs2==f3, rs3==f7, rd==f12,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7cbc6ca11d457 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfc2ea66e5019e and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x79e5a478bcc8d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f25; op2:f3; op3:f7; dest:f12; op1val:0x5f87cbc6ca11d457; op2val:0x5fafc2ea66e5019e;
op3val:0x7f479e5a478bcc8d; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f12, f25, f3, f7, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f4, rs2==f28, rs3==f25, rd==f29,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84ca278742ceb and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc14dba4a1f611 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x552e4d86c955a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f4; op2:f28; op3:f25; dest:f29; op1val:0x5f884ca278742ceb; op2val:0x5f9c14dba4a1f611;
op3val:0x7f3552e4d86c955a; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f29, f4, f28, f25, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f0, rs2==f7, rs3==f23, rd==f24,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8d8e137e0ab2b and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xabb8bbe03b7df and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x4c1d6e321fb09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f0; op2:f7; op3:f23; dest:f24; op1val:0x5f88d8e137e0ab2b; op2val:0x5f7abb8bbe03b7df;
op3val:0x7f14c1d6e321fb09; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f24, f0, f7, f23, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f26, rs2==f31, rs3==f13, rd==f5,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9b58d2db8786f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x4f9b4267d3677 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x0da15ab456074 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f26; op2:f31; op3:f13; dest:f5; op1val:0x5f89b58d2db8786f; op2val:0x5f94f9b4267d3677;
op3val:0x7f30da15ab456074; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f5, f26, f31, f13, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f15, rs2==f18, rs3==f26, rd==f3,fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa19db08e903fb and fs2 == 0 and fe2 == 0x5f2 and fm2 == 0xfbfd7fab4eeff and fs3 == 0 and fe3 == 0x7ec and fm3 == 0x9e586ae34221e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f15; op2:f18; op3:f26; dest:f3; op1val:0x5f8a19db08e903fb; op2val:0x5f2fbfd7fab4eeff;
op3val:0x7ec9e586ae34221e; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f3, f15, f18, f26, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa5666b92c9353 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x592a957961553 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x1c168fe970bd8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a5666b92c9353; op2val:0x5fa592a957961553;
op3val:0x7f41c168fe970bd8; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa720f32c400b7 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x239dca92ff1cf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xe1ff427365458 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a720f32c400b7; op2val:0x5f9239dca92ff1cf;
op3val:0x7f2e1ff427365458; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabce33873116b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xa962fc3cbb55f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x636f5effd12df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abce33873116b; op2val:0x5f8a962fc3cbb55f;
op3val:0x7f2636f5effd12df; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xac37e5f72f2b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3617941ba03e8 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x0359909ec19bc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ac37e5f72f2b7; op2val:0x5fa3617941ba03e8;
op3val:0x7f40359909ec19bc; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb9876f8130c3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xb03f53dce8bcd and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x767f824c9009a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb9876f8130c3; op2val:0x5f9b03f53dce8bcd;
op3val:0x7f3767f824c9009a; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc60647c381e87 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc0659af8369fd and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x8d9f987438cd7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c60647c381e87; op2val:0x5f9c0659af8369fd;
op3val:0x7f38d9f987438cd7; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc91ade861e02b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4c090881f6fe3 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x286f7cdc54134 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c91ade861e02b; op2val:0x5fa4c090881f6fe3;
op3val:0x7f4286f7cdc54134; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdd5b61587fd27 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xd8d08ead45f1f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xb8d2afe306604 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8dd5b61587fd27; op2val:0x5f8d8d08ead45f1f;
op3val:0x7f2b8d2afe306604; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf121a7be6521b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x98455e99dfdb1 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8c6a2c8f6974f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f121a7be6521b; op2val:0x5fa98455e99dfdb1;
op3val:0x7f48c6a2c8f6974f; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfc58dd60fc47b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7fc88823ccc91 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7d0b937bacce2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fc58dd60fc47b; op2val:0x5fa7fc88823ccc91;
op3val:0x7f47d0b937bacce2; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x009c15369fd69 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xbdaeddf112cfb and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xbebe996ec313e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9009c15369fd69; op2val:0x5f8bdaeddf112cfb;
op3val:0x7f2bebe996ec313e; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x037df25b16113 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe87555a840377 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xef1f0560c2e8d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9037df25b16113; op2val:0x5f9e87555a840377;
op3val:0x7f3ef1f0560c2e8d; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0530d08f17f5b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xfb5355e167379 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x02ce59bf18a74 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90530d08f17f5b; op2val:0x5f9fb5355e167379;
op3val:0x7f402ce59bf18a74; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaef92dbc63746 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb81986ebb75b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x5faaef92dbc63746;
op3val:0x7f4b81986ebb75b2; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x8fe8ae58338bf and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x9ca813f6e03a1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x5f58fe8ae58338bf;
op3val:0x7ef9ca813f6e03a1; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa86a1651b8f6d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb7e2962ee9dc9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x5faa86a1651b8f6d;
op3val:0x7f4b7e2962ee9dc9; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0eeee9e62e9b9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6a8199da501dc and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7fa6fff730ed6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90eeee9e62e9b9; op2val:0x5fa6a8199da501dc;
op3val:0x7f47fa6fff730ed6; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x112000aeb4c63 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc812c292ea556 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xe695050e3d10e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9112000aeb4c63; op2val:0x5fac812c292ea556;
op3val:0x7f4e695050e3d10e; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11f2665e52fc1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd362c3c55baac and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf426e10817182 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911f2665e52fc1; op2val:0x5fad362c3c55baac;
op3val:0x7f4f426e10817182; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1386e108c661f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x32ba6165fce3f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x4a1fd1cfdd2a7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91386e108c661f; op2val:0x5f732ba6165fce3f;
op3val:0x7f14a1fd1cfdd2a7; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1776e1d2f84f1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6c5583d2d8f82 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8dba6378f60c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91776e1d2f84f1; op2val:0x5fa6c5583d2d8f82;
op3val:0x7f48dba6378f60c4; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x17c87a27d34af and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2be5dcb079904 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x47c25e32f1122 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f917c87a27d34af; op2val:0x5fa2be5dcb079904;
op3val:0x7f447c25e32f1122; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19d4ad7c76167 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4af6ee0e0bc86 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6c5c001455b65 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919d4ad7c76167; op2val:0x5fa4af6ee0e0bc86;
op3val:0x7f46c5c001455b65; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1f868e0b71f1b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf77d273035d94 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x1abef8e7bee8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91f868e0b71f1b; op2val:0x5faf77d273035d94;
op3val:0x7f51abef8e7bee8e; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2c8882902a979 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc99ac0cd3b3ca and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0c9aaec49bc4c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92c8882902a979; op2val:0x5fac99ac0cd3b3ca;
op3val:0x7f50c9aaec49bc4c; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2f2dacc08696f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xffcb8d02339d9 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x2f0e9e05867a1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92f2dacc08696f; op2val:0x5f9ffcb8d02339d9;
op3val:0x7f42f0e9e05867a1; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3613a61f77f37 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x565b7f0cebd9f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x9ead12cd7d704 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f93613a61f77f37; op2val:0x5f9565b7f0cebd9f;
op3val:0x7f39ead12cd7d704; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3ab263197fe7f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xf896b45c47573 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x36243aab911ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f93ab263197fe7f; op2val:0x5f8f896b45c47573;
op3val:0x7f336243aab911ee; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3dcff67566087 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe0ea69d310766 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x2a8478c9dcc6b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f93dcff67566087; op2val:0x5fae0ea69d310766;
op3val:0x7f52a8478c9dcc6b; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3f4908263c63b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6296d3932c17a and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xba3f19f0658e7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f93f4908263c63b; op2val:0x5fa6296d3932c17a;
op3val:0x7f4ba3f19f0658e7; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x445637e5783c3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1bba5e50e71c and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x12c1c8d9dd383 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9445637e5783c3; op2val:0x5fab1bba5e50e71c;
op3val:0x7f512c1c8d9dd383; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49bad4bf8d1a9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe5243a8e9dcc7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x386ecf606b2bc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949bad4bf8d1a9; op2val:0x5f9e5243a8e9dcc7;
op3val:0x7f4386ecf606b2bc; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d474b38149bf and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x02b9579f55c5b and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x50d3246689cde and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d474b38149bf; op2val:0x5f802b9579f55c5b;
op3val:0x7f250d3246689cde; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x518e14dba799f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xc74ef4423e96b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x2c2dd137c36cc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9518e14dba799f; op2val:0x5f8c74ef4423e96b;
op3val:0x7f32c2dd137c36cc; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c73bb8e94b2b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2a34571e1ab07 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x95e5f66a60af9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c73bb8e94b2b; op2val:0x5f92a34571e1ab07;
op3val:0x7f395e5f66a60af9; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x601a2a750c857 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc3c90ab59cc1f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x36b14e092d5ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9601a2a750c857; op2val:0x5fac3c90ab59cc1f;
op3val:0x7f536b14e092d5ca; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x1b34b397f2a6f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x9216983dd17d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b764b4a3fc09; op2val:0x5f81b34b397f2a6f;
op3val:0x7f29216983dd17d0; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6bb39a08936b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x504dcbdc51a65 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xddca40d1038ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96bb39a08936b7; op2val:0x5fa504dcbdc51a65;
op3val:0x7f4ddca40d1038ea; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0e89a794b74d2 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8221b9068e363 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96d61e5e11a237; op2val:0x5fa0e89a794b74d2;
op3val:0x7f48221b9068e363; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7c88779524935 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x670e856ce1b48 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0adc7abeb7d2e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97c88779524935; op2val:0x5fa670e856ce1b48;
op3val:0x7f50adc7abeb7d2e; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x22dd5567c07b9 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xbde7204854c2b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x5f922dd5567c07b9;
op3val:0x7f3bde7204854c2b; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8bd5a02bf2a55 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xaf054e65e9fad and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x4d3a6e87651f7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98bd5a02bf2a55; op2val:0x5f9af054e65e9fad;
op3val:0x7f44d3a6e87651f7; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8fd99bfbb97c5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3a25a98541333 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xeaabbc8d16c1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98fd99bfbb97c5; op2val:0x5f93a25a98541333;
op3val:0x7f3eaabbc8d16c1b; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xf57237ddcb451 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8a647c169738d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f992b176af6d495; op2val:0x5f9f57237ddcb451;
op3val:0x7f48a647c169738d; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x98fd08ab70511 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x90f0d1eecae4a and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x40460d1409d77 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f998fd08ab70511; op2val:0x5fa90f0d1eecae4a;
op3val:0x7f540460d1409d77; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9ab5479609cdf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x39926185b639f and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf7127c5e7a364 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99ab5479609cdf; op2val:0x5fa39926185b639f;
op3val:0x7f4f7127c5e7a364; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9b91e4d1678bb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x60b89491a6a27 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x1b88ad2b7359f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99b91e4d1678bb; op2val:0x5fa60b89491a6a27;
op3val:0x7f51b88ad2b7359f; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9efa662b0261b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb8f52527c8b37 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6565e0bc30c0c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99efa662b0261b; op2val:0x5fab8f52527c8b37;
op3val:0x7f56565e0bc30c0c; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2057f7463cff and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xe3b25f522e53f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x8ae9d178b979e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2057f7463cff; op2val:0x5f7e3b25f522e53f;
op3val:0x7f28ae9d178b979e; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaa290fc84ffa3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x026a2990b0a7f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xae2e1c19da3f0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aa290fc84ffa3; op2val:0x5f9026a2990b0a7f;
op3val:0x7f3ae2e1c19da3f0; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaaaf2dfcf7ca9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x242628c135d65 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xe6ef6a62c52c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aaaf2dfcf7ca9; op2val:0x5fa242628c135d65;
op3val:0x7f4e6ef6a62c52c8; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb4511d7990669 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xcbc315eca5f3f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x87ccf78033459 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b4511d7990669; op2val:0x5f6cbc315eca5f3f;
op3val:0x7f187ccf78033459; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc4ee0c5be65d1 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xcc5765acd3c57 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x973b2f7f83545 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c4ee0c5be65d1; op2val:0x5f9cc5765acd3c57;
op3val:0x7f4973b2f7f83545; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x40ccb2b303daf and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x209eb1720d07f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x5f940ccb2b303daf;
op3val:0x7f4209eb1720d07f; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x95351e6b0b955 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6f5e740ba85ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x5f995351e6b0b955;
op3val:0x7f46f5e740ba85ae; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xca57966fc21ff and fs3 == 0 and fe3 == 0x7f0 and fm3 == 0xa3f9d918ac622 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x5f5ca57966fc21ff;
op3val:0x7f0a3f9d918ac622; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x13bdffd461269 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xfa686f41f0955 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x5f913bdffd461269;
op3val:0x7f3fa686f41f0955; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6a24a79e3255 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x28bc82f697c4d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x10c31b07b0778 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6a24a79e3255; op2val:0x5f928bc82f697c4d;
op3val:0x7f410c31b07b0778; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xcced59b67d14f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xb9689bad06ffb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x5f8cced59b67d14f;
op3val:0x7f3b9689bad06ffb; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0206ee24c395 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf89488e214d07 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xe8efdb2a8062c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0206ee24c395; op2val:0x5faf89488e214d07;
op3val:0x7f5e8efdb2a8062c; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf02c0f95b62b9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xde5026c152607 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xcf86cefdd20fa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f02c0f95b62b9; op2val:0x5f9de5026c152607;
op3val:0x7f4cf86cefdd20fa; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf09035681be6d and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x6d5a59350bdcb and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x62566df09ee83 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f09035681be6d; op2val:0x5f96d5a59350bdcb;
op3val:0x7f462566df09ee83; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf81d438e79e89 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4b9b2bfabd6ff and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x467fb355e56d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f81d438e79e89; op2val:0x5fa4b9b2bfabd6ff;
op3val:0x7f5467fb355e56d4; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf886e2fe6ac5f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7dd5590fd9313 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x78429bcad1ba4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f886e2fe6ac5f; op2val:0x5fa7dd5590fd9313;
op3val:0x7f578429bcad1ba4; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf9196c3c02c3d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb9ad2076fbbdc and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb3b930d7baa17 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f9196c3c02c3d; op2val:0x5fab9ad2076fbbdc;
op3val:0x7f5b3b930d7baa17; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x00bb60f1c696b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x97081394ff7c0 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x9832009ebf04c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa00bb60f1c696b; op2val:0x5fa97081394ff7c0;
op3val:0x7f59832009ebf04c; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0125698e86242 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf6d2bfc0c98c8 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf9130e4aa238e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0125698e86242; op2val:0x5faf6d2bfc0c98c8;
op3val:0x7f5f9130e4aa238e; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2d91b4369c450 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x30c18b3a944c6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02b48f992cb49; op2val:0x5fa2d91b4369c450;
op3val:0x7f530c18b3a944c6; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03aaf26d74a36 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe46ac54a58195 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xeb5b7f3d472bf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03aaf26d74a36; op2val:0x5fae46ac54a58195;
op3val:0x7f5eb5b7f3d472bf; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x04507a06e8587 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8e9007ca7a085 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x954792e778097 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa04507a06e8587; op2val:0x5fa8e9007ca7a085;
op3val:0x7f5954792e778097; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x048b19826524f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x830a4319a6f37 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x89e8b949a12b6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa048b19826524f; op2val:0x5f9830a4319a6f37;
op3val:0x7f489e8b949a12b6; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05438a864ff48 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7d4f90e5ccfbd and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x8526b8e228fad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05438a864ff48; op2val:0x5fa7d4f90e5ccfbd;
op3val:0x7f58526b8e228fad; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf95a713b177ca and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x023725e97dbc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x5faf95a713b177ca;
op3val:0x7f6023725e97dbc0; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe7a9ce363cccf and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf5185d364abd4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x5fae7a9ce363cccf;
op3val:0x7f5f5185d364abd4; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0be093ea29884 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x790b8fbbe558d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8a89d2e141e22 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0be093ea29884; op2val:0x5f9790b8fbbe558d;
op3val:0x7f48a89d2e141e22; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13b37e2291279 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3f3a0272551ac and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x57cb237a2f470 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa13b37e2291279; op2val:0x5fa3f3a0272551ac;
op3val:0x7f557cb237a2f470; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1448bcfae2b22 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb877e6e317fa2 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xdb5e6bcd7e6b0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1448bcfae2b22; op2val:0x5fab877e6e317fa2;
op3val:0x7f5db5e6bcd7e6b0; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1534040096d03 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe0d828b86622a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0455cbbe23f06 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1534040096d03; op2val:0x5fae0d828b86622a;
op3val:0x7f60455cbbe23f06; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a782d36f4f6 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x377075764a44b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x52ffe91369924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa16a782d36f4f6; op2val:0x5f8377075764a44b;
op3val:0x7f352ffe91369924; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xee0d506b2167d and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0d667250d9eb3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa172fde92f86c8; op2val:0x5faee0d506b2167d;
op3val:0x7f60d667250d9eb3; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x152f739c1f1c1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x307fc9460b457 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x5fa152f739c1f1c1;
op3val:0x7f5307fc9460b457; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x2279337555ac7 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x40387ec279246 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x5f72279337555ac7;
op3val:0x7f240387ec279246; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd05a5fee9b2b0 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x043a1557d3940 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1eedb9271f525; op2val:0x5fad05a5fee9b2b0;
op3val:0x7f6043a1557d3940; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x23d6f3e37b4f1 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x994568f0e642b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd2918c381f69c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa23d6f3e37b4f1; op2val:0x5f8994568f0e642b;
op3val:0x7f3d2918c381f69c; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x243d79e337b38 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xca2a9a90e32e7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x05834f4c71168 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa243d79e337b38; op2val:0x5f8ca2a9a90e32e7;
op3val:0x7f405834f4c71168; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2528fb338cf74 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3eb8b3b7f528d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6cfc6b4ce6d80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2528fb338cf74; op2val:0x5f93eb8b3b7f528d;
op3val:0x7f46cfc6b4ce6d80; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x26d548336aab0 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x48f4a954751bd and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7adb0acec331e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa26d548336aab0; op2val:0x5f948f4a954751bd;
op3val:0x7f47adb0acec331e; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2870c773af305 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x31220085e40c2 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6155bd365bbff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2870c773af305; op2val:0x5fa31220085e40c2;
op3val:0x7f56155bd365bbff; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2cd75d7e4d070 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc3d4499ff58c3 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x097c714a29230 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2cd75d7e4d070; op2val:0x5fac3d4499ff58c3;
op3val:0x7f6097c714a29230; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2fb5c72500d57 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x930bcbd2d6035 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xde29271e14d4a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2fb5c72500d57; op2val:0x5f9930bcbd2d6035;
op3val:0x7f4de29271e14d4a; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c808570336 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb669f507e33a4 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x04abd1e31e6fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c808570336; op2val:0x5fab669f507e33a4;
op3val:0x7f604abd1e31e6fd; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x324293ee39f7d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc36952ef44a5a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0e04a591773fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa324293ee39f7d; op2val:0x5fac36952ef44a5a;
op3val:0x7f60e04a591773fd; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x334e9260607a0 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaea8e11056b0f and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x027c59ccce767 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa334e9260607a0; op2val:0x5faaea8e11056b0f;
op3val:0x7f6027c59ccce767; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x353d32b1e3fb0 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe89afcadc456f and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x271bf056df83f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa353d32b1e3fb0; op2val:0x5fae89afcadc456f;
op3val:0x7f6271bf056df83f; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x38262f6f599e6 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xdb5e85647ec13 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x21d10d57b324c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa38262f6f599e6; op2val:0x5f8db5e85647ec13;
op3val:0x7f421d10d57b324c; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3af9a9e598175 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9055ab3b464b5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xec8f8109d9636 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3af9a9e598175; op2val:0x5fa9055ab3b464b5;
op3val:0x7f5ec8f8109d9636; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0fd97d0ca1907 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x511c9e1607861 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3d750eeace47f; op2val:0x5fa0fd97d0ca1907;
op3val:0x7f5511c9e1607861; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x60b0632528095 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb8b8bebefd1e9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3fe60f0bd0a72; op2val:0x5f960b0632528095;
op3val:0x7f4b8b8bebefd1e9; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x414b2a3e47216 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3614d00f80d8b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x852b24273e6f9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa414b2a3e47216; op2val:0x5fa3614d00f80d8b;
op3val:0x7f5852b24273e6f9; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x422ea209fd4bd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x44789671d8cc1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x985ac84733a24 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa422ea209fd4bd; op2val:0x5fa44789671d8cc1;
op3val:0x7f5985ac84733a24; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x29cd1fe017e0f and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7a6f6855e7290 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x5f929cd1fe017e0f;
op3val:0x7f47a6f6855e7290; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c285c929de04 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4264cf0154662 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xa24d90caf05e6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c285c929de04; op2val:0x5fa4264cf0154662;
op3val:0x7f5a24d90caf05e6; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc0d628f70dc65 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x233912172fa8b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x5f9c0d628f70dc65;
op3val:0x7f5233912172fa8b; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d9d98184b9d9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x93d38c0d6fe63 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x072162eb26885 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d9d98184b9d9; op2val:0x5fa93d38c0d6fe63;
op3val:0x7f6072162eb26885; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x497462d5b0458 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xad9da3f1d9a6e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x5fa497462d5b0458;
op3val:0x7f5ad9da3f1d9a6e; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd98614508c9 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x44919c1beab5f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xa745317b9d2f2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd98614508c9; op2val:0x5f644919c1beab5f;
op3val:0x7f1a745317b9d2f2; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51c6792bf1bb8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x669bd8c53f9f9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xd9292ea289924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51c6792bf1bb8; op2val:0x5fa669bd8c53f9f9;
op3val:0x7f5d9292ea289924; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x094dd69773d7b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x5f2cba3543edf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x5f9094dd69773d7b;
op3val:0x7f45f2cba3543edf; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x574031c0ee5b5 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x7788b8d3bac8f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xf7865ace13c42 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa574031c0ee5b5; op2val:0x5f77788b8d3bac8f;
op3val:0x7f2f7865ace13c42; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59522cc62b803 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xace72798455d6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x214698b5515cc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59522cc62b803; op2val:0x5faace72798455d6;
op3val:0x7f6214698b5515cc; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x595634ef3eec0 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x7fb2260b115e9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x02cc253a3bbd7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa595634ef3eec0; op2val:0x5f97fb2260b115e9;
op3val:0x7f502cc253a3bbd7; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b39db9b4e7ac and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16e333b543801 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x7a44feeac425f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b39db9b4e7ac; op2val:0x5fa16e333b543801;
op3val:0x7f57a44feeac425f; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5df7455c91c2a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9509d7b71e92e and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x14dad2a8f1d49 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5df7455c91c2a; op2val:0x5fa9509d7b71e92e;
op3val:0x7f614dad2a8f1d49; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6c2153e00d1a1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdf7523fde6c5d and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x54fc7d2ea0c85 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6c2153e00d1a1; op2val:0x5fadf7523fde6c5d;
op3val:0x7f654fc7d2ea0c85; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6d479d3fc4771 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa14821a399792 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x29b449a461e81 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6d479d3fc4771; op2val:0x5faa14821a399792;
op3val:0x7f629b449a461e81; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6dfd78772ca12 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x55e7184fd3b64 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xe8cd03f0552bb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6dfd78772ca12; op2val:0x5fa55e7184fd3b64;
op3val:0x7f5e8cd03f0552bb; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f2eb668c42a0 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x645543b126259 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xff1741439153e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6f2eb668c42a0; op2val:0x5f9645543b126259;
op3val:0x7f4ff1741439153e; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x700b33fd6ee45 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x482567721754b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd7c420f3c2287 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa700b33fd6ee45; op2val:0x5f8482567721754b;
op3val:0x7f3d7c420f3c2287; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x716db1f3511f7 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xd481499755d4b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x520b8de5139c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa716db1f3511f7; op2val:0x5f8d481499755d4b;
op3val:0x7f4520b8de5139c0; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73702c4295ebb and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x5ad9a8441acdf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xf7416a0bf0cd4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73702c4295ebb; op2val:0x5f75ad9a8441acdf;
op3val:0x7f2f7416a0bf0cd4; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xe830fb501fc6b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6512e85520cf5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x5f8e830fb501fc6b;
op3val:0x7f46512e85520cf5; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcbbac03deb701 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x515d18d6f961b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x5facbbac03deb701;
op3val:0x7f6515d18d6f961b; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x79341c032efa9 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x5932a24c0014f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xfca1d510b8400 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa79341c032efa9; op2val:0x5f85932a24c0014f;
op3val:0x7f3fca1d510b8400; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xff18e844c5b43 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x822da8c278e7e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x5f8ff18e844c5b43;
op3val:0x7f4822da8c278e7e; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x83f7d2b210b05 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xab1349fae80cf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x439dcbf8c7e90 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa83f7d2b210b05; op2val:0x5f6ab1349fae80cf;
op3val:0x7f2439dcbf8c7e90; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86499331191c4 and fs2 == 0 and fe2 == 0x5f2 and fm2 == 0x140b6c88868ff and fs3 == 0 and fe3 == 0x7ed and fm3 == 0xa4d8bd5170836 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86499331191c4; op2val:0x5f2140b6c88868ff;
op3val:0x7eda4d8bd5170836; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90a064114beb1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb14a0c4b66d3b and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x5309956dd980f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90a064114beb1; op2val:0x5fab14a0c4b66d3b;
op3val:0x7f65309956dd980f; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90be1a88a62f5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x5b3be3b6f1597 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0fc7b71f249eb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90be1a88a62f5; op2val:0x5f95b3be3b6f1597;
op3val:0x7f50fc7b71f249eb; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x92f39602ed989 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa7d13a52ed5ec and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4d8ce8c5034f3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa92f39602ed989; op2val:0x5faa7d13a52ed5ec;
op3val:0x7f64d8ce8c5034f3; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9383ffc96dd3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa831ef4800484 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4e50aa89a669f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9383ffc96dd3f; op2val:0x5faa831ef4800484;
op3val:0x7f64e50aa89a669f; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x98ccfd23440fa and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x981d2bf67b45e and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x45daa46e74e8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa98ccfd23440fa; op2val:0x5fa981d2bf67b45e;
op3val:0x7f645daa46e74e8f; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9afd0179d1bae and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xbb4fcc32d8c25 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x63d9f6ba408d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9afd0179d1bae; op2val:0x5f9bb4fcc32d8c25;
op3val:0x7f563d9f6ba408d7; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9d7713018baf1 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xe39ef9237c697 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x868c355de399d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9d7713018baf1; op2val:0x5f7e39ef9237c697;
op3val:0x7f3868c355de399d; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x09903331c0e00 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xadc175295763d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x5fa09903331c0e00;
op3val:0x7f5adc175295763d; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1726431ab40b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x35ff2ac0a5f02 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf97f2998aa004 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1726431ab40b; op2val:0x5fa35ff2ac0a5f02;
op3val:0x7f5f97f2998aa004; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa416babd18ecb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc5b9547c0fb71 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x74462bc04cea1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa416babd18ecb; op2val:0x5fac5b9547c0fb71;
op3val:0x7f674462bc04cea1; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x57324a8c267f6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x1cdd84848288a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa8fa703a4078c; op2val:0x5fa57324a8c267f6;
op3val:0x7f61cdd84848288a; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab4fd6611517f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa2c7cf77ff3b5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x5d82f0b402329 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab4fd6611517f; op2val:0x5f9a2c7cf77ff3b5;
op3val:0x7f55d82f0b402329; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacd7053aa42a2 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1ce794bb05231 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xdd4278f85eba8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacd7053aa42a2; op2val:0x5fa1ce794bb05231;
op3val:0x7f5dd4278f85eba8; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae72a87c61e34 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7e0bf1ff29f2c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4131969ee9626 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae72a87c61e34; op2val:0x5fa7e0bf1ff29f2c;
op3val:0x7f64131969ee9626; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb61e0247cb923 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x89c3334d5f5bb and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x50f111142c704 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab61e0247cb923; op2val:0x5fa89c3334d5f5bb;
op3val:0x7f650f111142c704; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbc4dccb7ac380 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf292aaf1ebcd7 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xb0a6f2a5cb1a7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabc4dccb7ac380; op2val:0x5faf292aaf1ebcd7;
op3val:0x7f6b0a6f2a5cb1a7; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbe452c99bfb01 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcca2a15201aa9 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x917fe69179ec2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabe452c99bfb01; op2val:0x5facca2a15201aa9;
op3val:0x7f6917fe69179ec2; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc046064309427 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x39bd6a090d93f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x12b0a583b7525 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac046064309427; op2val:0x5f939bd6a090d93f;
op3val:0x7f512b0a583b7525; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc1e74ff66f075 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x369cba5cc20af and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x10f0c5a71c6e6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac1e74ff66f075; op2val:0x5f6369cba5cc20af;
op3val:0x7f210f0c5a71c6e6; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc52697f28d5d4 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x47df70c06ea5f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x222fe8255911d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac52697f28d5d4; op2val:0x5f647df70c06ea5f;
op3val:0x7f2222fe8255911d; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd87e65450c45 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xf52fb02db735f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xc3c877ab128af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd87e65450c45; op2val:0x5f5f52fb02db735f;
op3val:0x7f1c3c877ab128af; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9b930ceb054c0 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x73b022eb9f911 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x5fa9b930ceb054c0;
op3val:0x7f673b022eb9f911; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd22aa76e3f8bc and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x042d6f1e7510f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xd9c60de35bafe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad22aa76e3f8bc; op2val:0x5f6042d6f1e7510f;
op3val:0x7f1d9c60de35bafe; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd26cfda272030 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb428ab449c4c7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8d55dc860d59c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad26cfda272030; op2val:0x5f8b428ab449c4c7;
op3val:0x7f48d55dc860d59c; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf08b5da67e1b1 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc58a2910050f8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x5faf08b5da67e1b1;
op3val:0x7f6c58a2910050f8; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd93edf4f6c627 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf1421cf676cc1 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xcb9ea3a4a12c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad93edf4f6c627; op2val:0x5faf1421cf676cc1;
op3val:0x7f6cb9ea3a4a12c4; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9a2688750f46 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xd4c176f2c9031 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb1a16b4d1ccf1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad9a2688750f46; op2val:0x5f9d4c176f2c9031;
op3val:0x7f5b1a16b4d1ccf1; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe60134aa9369f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x62ccc22df8107 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x50c93237036af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae60134aa9369f; op2val:0x5f862ccc22df8107;
op3val:0x7f450c93237036af; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea0b252eae7e0 and fs2 == 0 and fe2 == 0x5f3 and fm2 == 0x76274c472f77f and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x661bc1043803c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea0b252eae7e0; op2val:0x5f376274c472f77f;
op3val:0x7ef661bc1043803c; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb39a20d91a7d and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xe83058dcce2cf and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd461511de086e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb39a20d91a7d; op2val:0x5f7e83058dcce2cf;
op3val:0x7f3d461511de086e; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb8f7360e493b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x24789c982401c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x18cb9bc413615 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb8f7360e493b; op2val:0x5fa24789c982401c;
op3val:0x7f618cb9bc413615; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeca5a039a6eb7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x23fbd09d7e9b6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x18f26e7da4557 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeca5a039a6eb7; op2val:0x5fa23fbd09d7e9b6;
op3val:0x7f618f26e7da4557; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd185a4345fd91 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc3ade5fbf7e0d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf0c672a2bf4a4; op2val:0x5fad185a4345fd91;
op3val:0x7f6c3ade5fbf7e0d; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x17be9a133f3af and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x10563b5565e47 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x5f817be9a133f3af;
op3val:0x7f410563b5565e47; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x173ba796d85b8 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0fdda3426ce98 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x5fa173ba796d85b8;
op3val:0x7f60fdda3426ce98; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf3811fe85e90c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x987aaa2c7bb6a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x8e8291370b1c7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf3811fe85e90c; op2val:0x5fa987aaa2c7bb6a;
op3val:0x7f68e8291370b1c7; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf5bc627909931 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x15f8b7f786fc2 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x106626cd9429d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf5bc627909931; op2val:0x5fa15f8b7f786fc2;
op3val:0x7f6106626cd9429d; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6629b45c9248 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9daacd1054eee and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x95e62233da829 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6629b45c9248; op2val:0x5fa9daacd1054eee;
op3val:0x7f695e62233da829; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf715337b3d172 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2ea49f5cfd6b1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x295f42bea2cf6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf715337b3d172; op2val:0x5f92ea49f5cfd6b1;
op3val:0x7f5295f42bea2cf6; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf84445890ef61 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa4a2387765198 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x9e47c6417daf5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf84445890ef61; op2val:0x5faa4a2387765198;
op3val:0x7f69e47c6417daf5; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf9a59e3f349b5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x38aa27d9f85c9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x34c8f7c770922 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf9a59e3f349b5; op2val:0x5f938aa27d9f85c9;
op3val:0x7f534c8f7c770922; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf9efe9258e03a and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xaf1e2f94bd10d and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xaa0348d646536 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf9efe9258e03a; op2val:0x5f9af1e2f94bd10d;
op3val:0x7f5aa0348d646536; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x5f2 and fm1 == 0xcd462b6d554ff and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x8e80a6ca28041 and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x67057390b9773 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f2cd462b6d554ff; op2val:0x5f98e80a6ca28041;
op3val:0x7ed67057390b9773; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0xea0625aeb847f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0eb1fe944dafc and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x031398a626e75 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f3ea0625aeb847f; op2val:0x5fa0eb1fe944dafc;
op3val:0x7ef031398a626e75; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xf3381366daa33 and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x4579ad17dc3e2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0x5f8f3381366daa33;
op3val:0x7ef4579ad17dc3e2; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xd071ef258365f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabe96758f2a09 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x842abe8ab8f07 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5d071ef258365f; op2val:0x5faabe96758f2a09;
op3val:0x7f1842abe8ab8f07; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x409de9a05b77f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x2bccdcc2ad897 and fs3 == 0 and fe3 == 0x7ee and fm3 == 0x7779022ffc65b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6409de9a05b77f; op2val:0x5f72bccdcc2ad897;
op3val:0x7ee7779022ffc65b; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x643f753bef22f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6821b2764a929 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xf5282163218cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6643f753bef22f; op2val:0x5fa6821b2764a929;
op3val:0x7f1f5282163218cf; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xe19152f3266af and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x31c5c2101663f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x1f9912db74f8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6e19152f3266af; op2val:0x5f931c5c2101663f;
op3val:0x7f11f9912db74f8f; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x07d72d5d390a7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xed40ea1c96a68 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xfc5c4970046b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f707d72d5d390a7; op2val:0x5faed40ea1c96a68;
op3val:0x7f2fc5c4970046b3; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x05fc74a94c67c and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x2bed753218d46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x5fa05fc74a94c67c;
op3val:0x7f22bed753218d46; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x1175939fbdd3f and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x6c2da93955bf2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x5f51175939fbdd3f;
op3val:0x7ed6c2da93955bf2; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd24fb6bdbd8af and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x7f9f3258d489d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a5356adec5cbf; op2val:0x5fad24fb6bdbd8af;
op3val:0x7f37f9f3258d489d; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6858089853017740543,64,FLEN)
NAN_BOXED(6858089853017740543,64,FLEN)
NAN_BOXED(6858089853017740543,64,FLEN)
NAN_BOXED(6863099226451838079,64,FLEN)
NAN_BOXED(6890765952166976252,64,FLEN)
NAN_BOXED(6890765952166976252,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(6869486243359034943,64,FLEN)
NAN_BOXED(6868634929670601439,64,FLEN)
NAN_BOXED(9131153291240569404,64,FLEN)
NAN_BOXED(6871656435933525599,64,FLEN)
NAN_BOXED(6893531733070653961,64,FLEN)
NAN_BOXED(6871656435933525599,64,FLEN)
NAN_BOXED(6873629782945675135,64,FLEN)
NAN_BOXED(6873629782945675135,64,FLEN)
NAN_BOXED(6873629782945675135,64,FLEN)
NAN_BOXED(6874256610768646703,64,FLEN)
NAN_BOXED(6892339332873759017,64,FLEN)
NAN_BOXED(6892339332873759017,64,FLEN)
NAN_BOXED(6876461259818165935,64,FLEN)
NAN_BOXED(6886879437195929151,64,FLEN)
NAN_BOXED(9156373919353491343,64,FLEN)
NAN_BOXED(6877134563161903271,64,FLEN)
NAN_BOXED(6877134563161903271,64,FLEN)
NAN_BOXED(9164761214859888307,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(9161094424046964038,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(9139706737829698546,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(6894207266839058607,64,FLEN)
NAN_BOXED(9167070389238319261,64,FLEN)
NAN_BOXED(6880194383777548343,64,FLEN)
NAN_BOXED(6890636757505063104,64,FLEN)
NAN_BOXED(9163740550757130194,64,FLEN)
NAN_BOXED(6880330137248486463,64,FLEN)
NAN_BOXED(6894108674775297285,64,FLEN)
NAN_BOXED(9167373614932660220,64,FLEN)
NAN_BOXED(6880517531501626303,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(9158221716514024835,64,FLEN)
NAN_BOXED(6881204071014325119,64,FLEN)
NAN_BOXED(6887493534273381229,64,FLEN)
NAN_BOXED(9161614284344260112,64,FLEN)
NAN_BOXED(6881837613072479619,64,FLEN)
NAN_BOXED(6893636834773271799,64,FLEN)
NAN_BOXED(9168526465136746443,64,FLEN)
NAN_BOXED(6881872983741661451,64,FLEN)
NAN_BOXED(6890968332532759869,64,FLEN)
NAN_BOXED(9165697045382079559,64,FLEN)
NAN_BOXED(6882009179138160071,64,FLEN)
NAN_BOXED(6892991230376392018,64,FLEN)
NAN_BOXED(9168098683201206793,64,FLEN)
NAN_BOXED(6882742061497296083,64,FLEN)
NAN_BOXED(6892903595808358371,64,FLEN)
NAN_BOXED(9169123961723061141,64,FLEN)
NAN_BOXED(6882747746622987643,64,FLEN)
NAN_BOXED(6890754050586758651,64,FLEN)
NAN_BOXED(9166387693381574076,64,FLEN)
NAN_BOXED(6882934110163378955,64,FLEN)
NAN_BOXED(6892578150312193196,64,FLEN)
NAN_BOXED(9168989128449150708,64,FLEN)
NAN_BOXED(6883027254887378163,64,FLEN)
NAN_BOXED(6885694713442797991,64,FLEN)
NAN_BOXED(9161641702202125507,64,FLEN)
NAN_BOXED(6883206661523958915,64,FLEN)
NAN_BOXED(6893117424611737622,64,FLEN)
NAN_BOXED(9169729722760454989,64,FLEN)
NAN_BOXED(6883229879549017403,64,FLEN)
NAN_BOXED(6890946970044066534,64,FLEN)
NAN_BOXED(9167163240243604617,64,FLEN)
NAN_BOXED(6883381339472520651,64,FLEN)
NAN_BOXED(6891268185769189231,64,FLEN)
NAN_BOXED(9167784866624760574,64,FLEN)
NAN_BOXED(6883415336486987523,64,FLEN)
NAN_BOXED(6889293943982049475,64,FLEN)
NAN_BOXED(9165875593897624790,64,FLEN)
NAN_BOXED(6883694610113221719,64,FLEN)
NAN_BOXED(6894943866531938718,64,FLEN)
NAN_BOXED(9171473276747893901,64,FLEN)
NAN_BOXED(6883836291125095659,64,FLEN)
NAN_BOXED(6889404463562487313,64,FLEN)
NAN_BOXED(9166323759419528538,64,FLEN)
NAN_BOXED(6883990492252515115,64,FLEN)
NAN_BOXED(6880017589624616927,64,FLEN)
NAN_BOXED(9157157071028878089,64,FLEN)
NAN_BOXED(6884233123374594159,64,FLEN)
NAN_BOXED(6887404282291500663,64,FLEN)
NAN_BOXED(9165065028301578356,64,FLEN)
NAN_BOXED(6884343408927245307,64,FLEN)
NAN_BOXED(6858911691853590271,64,FLEN)
NAN_BOXED(9136085685708792350,64,FLEN)
NAN_BOXED(6884409979582583635,64,FLEN)
NAN_BOXED(6892076060776994131,64,FLEN)
NAN_BOXED(9169822972995111896,64,FLEN)
NAN_BOXED(6884440389991006391,64,FLEN)
NAN_BOXED(6886630400096989647,64,FLEN)
NAN_BOXED(9164297425235891288,64,FLEN)
NAN_BOXED(6884522664479887723,64,FLEN)
NAN_BOXED(6884480112281761119,64,FLEN)
NAN_BOXED(9162070921853080287,64,FLEN)
NAN_BOXED(6884529927923888823,64,FLEN)
NAN_BOXED(6891459028228637672,64,FLEN)
NAN_BOXED(9169387772739066300,64,FLEN)
NAN_BOXED(6884800446708396227,64,FLEN)
NAN_BOXED(6889104406832122829,64,FLEN)
NAN_BOXED(9166909882002636954,64,FLEN)
NAN_BOXED(6884983915039694471,64,FLEN)
NAN_BOXED(6889388512236497405,64,FLEN)
NAN_BOXED(9167316707252079831,64,FLEN)
NAN_BOXED(6885038106456743979,64,FLEN)
NAN_BOXED(6891845056775286755,64,FLEN)
NAN_BOXED(9170040190147051828,64,FLEN)
NAN_BOXED(6885394383341354279,64,FLEN)
NAN_BOXED(6885314474758397727,64,FLEN)
NAN_BOXED(9163573082608133636,64,FLEN)
NAN_BOXED(6885742260229919259,64,FLEN)
NAN_BOXED(6893186209193786801,64,FLEN)
NAN_BOXED(9171799043598620495,64,FLEN)
NAN_BOXED(6885939568245195899,64,FLEN)
NAN_BOXED(6892755417944607889,64,FLEN)
NAN_BOXED(9171528660085820642,64,FLEN)
NAN_BOXED(6886014556182281577,64,FLEN)
NAN_BOXED(6884837170550484219,64,FLEN)
NAN_BOXED(9163677255307374910,64,FLEN)
NAN_BOXED(6886065261799104787,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(9169031905910992525,64,FLEN)
NAN_BOXED(6886095145699213147,64,FLEN)
NAN_BOXED(6890425195716572025,64,FLEN)
NAN_BOXED(9169378206001760884,64,FLEN)
NAN_BOXED(6886099199197346285,64,FLEN)
NAN_BOXED(6893585593675429702,64,FLEN)
NAN_BOXED(9172567557762938290,64,FLEN)
NAN_BOXED(6886147388657033791,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(9149566774443639713,64,FLEN)
NAN_BOXED(6886167994903142631,64,FLEN)
NAN_BOXED(6893470207388127085,64,FLEN)
NAN_BOXED(9172563782288711113,64,FLEN)
NAN_BOXED(6886266538876398009,64,FLEN)
NAN_BOXED(6892381107709608412,64,FLEN)
NAN_BOXED(9171574525097348822,64,FLEN)
NAN_BOXED(6886305096618691683,64,FLEN)
NAN_BOXED(6894027156266853718,64,FLEN)
NAN_BOXED(9173385284675686670,64,FLEN)
NAN_BOXED(6886319555004936129,64,FLEN)
NAN_BOXED(6894226168192809644,64,FLEN)
NAN_BOXED(9173624006467744130,64,FLEN)
NAN_BOXED(6886347350601393695,64,FLEN)
NAN_BOXED(6877889048264822335,64,FLEN)
NAN_BOXED(9157122050836255399,64,FLEN)
NAN_BOXED(6886416620045960433,64,FLEN)
NAN_BOXED(6892413262511312770,64,FLEN)
NAN_BOXED(9171822148083212484,64,FLEN)
NAN_BOXED(6886422227214742703,64,FLEN)
NAN_BOXED(6891279689877788932,64,FLEN)
NAN_BOXED(9170591243400319266,64,FLEN)
NAN_BOXED(6886458249999507815,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(9171235119632309093,64,FLEN)
NAN_BOXED(6886558434556583707,64,FLEN)
NAN_BOXED(6894861300283956628,64,FLEN)
NAN_BOXED(9174302961306431118,64,FLEN)
NAN_BOXED(6886787267332057465,64,FLEN)
NAN_BOXED(6894054093826012106,64,FLEN)
NAN_BOXED(9174054176899578956,64,FLEN)
NAN_BOXED(6886833801742805359,64,FLEN)
NAN_BOXED(6890503825596299737,64,FLEN)
NAN_BOXED(9170156678561687457,64,FLEN)
NAN_BOXED(6886955158559227703,64,FLEN)
NAN_BOXED(6887523045826543007,64,FLEN)
NAN_BOXED(9167616700610762500,64,FLEN)
NAN_BOXED(6887036435708771967,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(9165777709395677678,64,FLEN)
NAN_BOXED(6887091244688105607,64,FLEN)
NAN_BOXED(6894464188315404134,64,FLEN)
NAN_BOXED(9174580416162417771,64,FLEN)
NAN_BOXED(6887117156679665211,64,FLEN)
NAN_BOXED(6892241828824924538,64,FLEN)
NAN_BOXED(9172605324220586215,64,FLEN)
NAN_BOXED(6887206023780074435,64,FLEN)
NAN_BOXED(6893634141880903452,64,FLEN)
NAN_BOXED(9174162417077048195,64,FLEN)
NAN_BOXED(6887300898762576297,64,FLEN)
NAN_BOXED(6890034930473622727,64,FLEN)
NAN_BOXED(9170321618554499772,64,FLEN)
NAN_BOXED(6887363327849220543,64,FLEN)
NAN_BOXED(6881548151618362459,64,FLEN)
NAN_BOXED(9161743526535929054,64,FLEN)
NAN_BOXED(6887438561083816351,64,FLEN)
NAN_BOXED(6885006501331855723,64,FLEN)
NAN_BOXED(9165602446422849228,64,FLEN)
NAN_BOXED(6887630264452336427,64,FLEN)
NAN_BOXED(6886746298861595399,64,FLEN)
NAN_BOXED(9167462280326417145,64,FLEN)
NAN_BOXED(6887694478213171287,64,FLEN)
NAN_BOXED(6893951721645132831,64,FLEN)
NAN_BOXED(9174794603295069642,64,FLEN)
NAN_BOXED(6887894323265010697,64,FLEN)
NAN_BOXED(6881978841267382895,64,FLEN)
NAN_BOXED(9162891653929572304,64,FLEN)
NAN_BOXED(6887898536290629303,64,FLEN)
NAN_BOXED(6891920150883539557,64,FLEN)
NAN_BOXED(9173230613175482602,64,FLEN)
NAN_BOXED(6887928106025329207,64,FLEN)
NAN_BOXED(6890763180034454738,64,FLEN)
NAN_BOXED(9171618142922269539,64,FLEN)
NAN_BOXED(6888194639268038965,64,FLEN)
NAN_BOXED(6892320422928194376,64,FLEN)
NAN_BOXED(9174023514048134446,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(6886617174505162681,64,FLEN)
NAN_BOXED(9168166047726259243,64,FLEN)
NAN_BOXED(6888463824353962581,64,FLEN)
NAN_BOXED(6889082827449474989,64,FLEN)
NAN_BOXED(9170687455051272695,64,FLEN)
NAN_BOXED(6888534466851739589,64,FLEN)
NAN_BOXED(6887026765166023475,64,FLEN)
NAN_BOXED(9168953614877682715,64,FLEN)
NAN_BOXED(6888584484618687637,64,FLEN)
NAN_BOXED(6890321764847236177,64,FLEN)
NAN_BOXED(9171763468257817485,64,FLEN)
NAN_BOXED(6888695230883104017,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(9174963154734587255,64,FLEN)
NAN_BOXED(6888725484341861599,64,FLEN)
NAN_BOXED(6891520243703440287,64,FLEN)
NAN_BOXED(9173675381614945124,64,FLEN)
NAN_BOXED(6888740644833360059,64,FLEN)
NAN_BOXED(6892208964002015783,64,FLEN)
NAN_BOXED(9174316822310630815,64,FLEN)
NAN_BOXED(6888800602939205147,64,FLEN)
NAN_BOXED(6893761238354660151,64,FLEN)
NAN_BOXED(9175616252738210828,64,FLEN)
NAN_BOXED(6888854142199414015,64,FLEN)
NAN_BOXED(6881002314881230143,64,FLEN)
NAN_BOXED(9162765431613396894,64,FLEN)
NAN_BOXED(6888997323612159907,64,FLEN)
NAN_BOXED(6886046310043683455,64,FLEN)
NAN_BOXED(9167889450709918704,64,FLEN)
NAN_BOXED(6889006540130319529,64,FLEN)
NAN_BOXED(6891143370854587749,64,FLEN)
NAN_BOXED(9173391496629211848,64,FLEN)
NAN_BOXED(6889175997927196265,64,FLEN)
NAN_BOXED(6876077651317645119,64,FLEN)
NAN_BOXED(9158207072771454041,64,FLEN)
NAN_BOXED(6889468257267246545,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(9171989328618337605,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(6887143796898807215,64,FLEN)
NAN_BOXED(9169902696589742207,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(6888628716267682133,64,FLEN)
NAN_BOXED(9171288064758810030,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(9154199138568160802,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(9169230464901122389,64,FLEN)
NAN_BOXED(6889779710610256469,64,FLEN)
NAN_BOXED(6886720472108072013,64,FLEN)
NAN_BOXED(9169623723856824184,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(9168086984731684859,64,FLEN)
NAN_BOXED(6890228183688594325,64,FLEN)
NAN_BOXED(6894880499242716423,64,FLEN)
NAN_BOXED(9177930310902875692,64,FLEN)
NAN_BOXED(6890228982740640441,64,FLEN)
NAN_BOXED(6889914803512747527,64,FLEN)
NAN_BOXED(9172979687811260666,64,FLEN)
NAN_BOXED(6890235864841043565,64,FLEN)
NAN_BOXED(6887927587227614667,64,FLEN)
NAN_BOXED(9171058814945455747,64,FLEN)
NAN_BOXED(6890368703387901577,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(9175072669490370260,64,FLEN)
NAN_BOXED(6890375961731574879,64,FLEN)
NAN_BOXED(6892721114288329491,64,FLEN)
NAN_BOXED(9175948080584661924,64,FLEN)
NAN_BOXED(6890386031615421501,64,FLEN)
NAN_BOXED(6893773881479248860,64,FLEN)
NAN_BOXED(9176994168469957143,64,FLEN)
NAN_BOXED(6890520306442332523,64,FLEN)
NAN_BOXED(6893164404981888960,64,FLEN)
NAN_BOXED(9176509889372745804,64,FLEN)
NAN_BOXED(6890527593018712642,64,FLEN)
NAN_BOXED(6894849590207224008,64,FLEN)
NAN_BOXED(9178214204785173390,64,FLEN)
NAN_BOXED(6890555022301645641,64,FLEN)
NAN_BOXED(6891309090948629584,64,FLEN)
NAN_BOXED(9174690166116795590,64,FLEN)
NAN_BOXED(6890571953822190134,64,FLEN)
NAN_BOXED(6894525785519260053,64,FLEN)
NAN_BOXED(9177972892302078655,64,FLEN)
NAN_BOXED(6890583328935544199,64,FLEN)
NAN_BOXED(6893015417991176325,64,FLEN)
NAN_BOXED(9176458595191455895,64,FLEN)
NAN_BOXED(6890587357475918415,64,FLEN)
NAN_BOXED(6888309111828148023,64,FLEN)
NAN_BOXED(9171754963470783158,64,FLEN)
NAN_BOXED(6890600032196951880,64,FLEN)
NAN_BOXED(6892711920866742205,64,FLEN)
NAN_BOXED(9176174862666993581,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(6894894099349993418,64,FLEN)
NAN_BOXED(9178375014701325248,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(6894582893799263439,64,FLEN)
NAN_BOXED(9178144200823450580,64,FLEN)
NAN_BOXED(6890716376791685252,64,FLEN)
NAN_BOXED(6888133279258400141,64,FLEN)
NAN_BOXED(9171766034176417314,64,FLEN)
NAN_BOXED(6890854016057152121,64,FLEN)
NAN_BOXED(6891619723984064940,64,FLEN)
NAN_BOXED(9175376920716702832,64,FLEN)
NAN_BOXED(6890864272129010466,64,FLEN)
NAN_BOXED(6893752631705042850,64,FLEN)
NAN_BOXED(9177691618266310320,64,FLEN)
NAN_BOXED(6890880440270941443,64,FLEN)
NAN_BOXED(6894462933888557610,64,FLEN)
NAN_BOXED(9178412305172545286,64,FLEN)
NAN_BOXED(6890905969240765686,64,FLEN)
NAN_BOXED(6882475528966939723,64,FLEN)
NAN_BOXED(9166285386986985764,64,FLEN)
NAN_BOXED(6890915339718067912,64,FLEN)
NAN_BOXED(6894695285095798397,64,FLEN)
NAN_BOXED(9178571779072695987,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(6890880126632980929,64,FLEN)
NAN_BOXED(9174685647286350935,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(9161451424295916102,64,FLEN)
NAN_BOXED(6891051531675759909,64,FLEN)
NAN_BOXED(6894172815078568624,64,FLEN)
NAN_BOXED(9178410400784136512,64,FLEN)
NAN_BOXED(6891137927824782577,64,FLEN)
NAN_BOXED(6884196604900697131,64,FLEN)
NAN_BOXED(9168529602732226204,64,FLEN)
NAN_BOXED(6891144973181483832,64,FLEN)
NAN_BOXED(6885056779912098535,64,FLEN)
NAN_BOXED(9169425825794560360,64,FLEN)
NAN_BOXED(6891161156970925940,64,FLEN)
NAN_BOXED(6887107238410801805,64,FLEN)
NAN_BOXED(9171246143530495360,64,FLEN)
NAN_BOXED(6891190589576358576,64,FLEN)
NAN_BOXED(6887287280651162045,64,FLEN)
NAN_BOXED(9171490140490314526,64,FLEN)
NAN_BOXED(6891218867439989509,64,FLEN)
NAN_BOXED(6891371783595638978,64,FLEN)
NAN_BOXED(9175544774946831359,64,FLEN)
NAN_BOXED(6891296285847244912,64,FLEN)
NAN_BOXED(6893952494448105667,64,FLEN)
NAN_BOXED(9178502921881555504,64,FLEN)
NAN_BOXED(6891346754303692119,64,FLEN)
NAN_BOXED(6888590692225736757,64,FLEN)
NAN_BOXED(9173237134627261770,64,FLEN)
NAN_BOXED(6891359311010136886,64,FLEN)
NAN_BOXED(6893716489056957348,64,FLEN)
NAN_BOXED(9178418216696932093,64,FLEN)
NAN_BOXED(6891391614374354813,64,FLEN)
NAN_BOXED(6893945143963175514,64,FLEN)
NAN_BOXED(9178582650507981821,64,FLEN)
NAN_BOXED(6891410030776944544,64,FLEN)
NAN_BOXED(6893580075535788815,64,FLEN)
NAN_BOXED(9178379770273785703,64,FLEN)
NAN_BOXED(6891444021233598384,64,FLEN)
NAN_BOXED(6894599467666523503,64,FLEN)
NAN_BOXED(9179024055778277439,64,FLEN)
NAN_BOXED(6891495216368687590,64,FLEN)
NAN_BOXED(6885359414803950611,64,FLEN)
NAN_BOXED(9169923749418054220,64,FLEN)
NAN_BOXED(6891544933423481205,64,FLEN)
NAN_BOXED(6893046591787394229,64,FLEN)
NAN_BOXED(9177994058383857206,64,FLEN)
NAN_BOXED(6891588597408654463,64,FLEN)
NAN_BOXED(6890786258361653511,64,FLEN)
NAN_BOXED(9175259374604548193,64,FLEN)
NAN_BOXED(6891631547116227186,64,FLEN)
NAN_BOXED(6887704801351729301,64,FLEN)
NAN_BOXED(9172578499145224681,64,FLEN)
NAN_BOXED(6891656087270093334,64,FLEN)
NAN_BOXED(6891458838163623307,64,FLEN)
NAN_BOXED(9176175166339933945,64,FLEN)
NAN_BOXED(6891671718748738749,64,FLEN)
NAN_BOXED(6891711985249782977,64,FLEN)
NAN_BOXED(9176512691747109412,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(6886739205926518287,64,FLEN)
NAN_BOXED(9171482743893029520,64,FLEN)
NAN_BOXED(6891847209645104644,64,FLEN)
NAN_BOXED(6891675441670997602,64,FLEN)
NAN_BOXED(9176687705360106982,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(6889396246934510693,64,FLEN)
NAN_BOXED(9174452089331579531,64,FLEN)
NAN_BOXED(6891872857987791321,64,FLEN)
NAN_BOXED(6893108018630032995,64,FLEN)
NAN_BOXED(9178461480179361925,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(9176886722105809518,64,FLEN)
NAN_BOXED(6891876976320383177,64,FLEN)
NAN_BOXED(6873699306247727967,64,FLEN)
NAN_BOXED(9158760692440486642,64,FLEN)
NAN_BOXED(6891946035929619384,64,FLEN)
NAN_BOXED(6892312542561171961,64,FLEN)
NAN_BOXED(9177652775342348580,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(6886167508927593851,64,FLEN)
NAN_BOXED(9171003172642373343,64,FLEN)
NAN_BOXED(6892042361464874421,64,FLEN)
NAN_BOXED(6879099496597007503,64,FLEN)
NAN_BOXED(9164676144809720898,64,FLEN)
NAN_BOXED(6892078781450860547,64,FLEN)
NAN_BOXED(6893549170704274902,64,FLEN)
NAN_BOXED(9178921434076222924,64,FLEN)
NAN_BOXED(6892079058519322304,64,FLEN)
NAN_BOXED(6888250280156141033,64,FLEN)
NAN_BOXED(9173881654092217303,64,FLEN)
NAN_BOXED(6892112294767290284,64,FLEN)
NAN_BOXED(6890910071171332097,64,FLEN)
NAN_BOXED(9175983429004313183,64,FLEN)
NAN_BOXED(6892160495508855850,64,FLEN)
NAN_BOXED(6893129341978405166,64,FLEN)
NAN_BOXED(9178702921696484681,64,FLEN)
NAN_BOXED(6892409676227465633,64,FLEN)
NAN_BOXED(6894438537205017693,64,FLEN)
NAN_BOXED(9179831135120264325,64,FLEN)
NAN_BOXED(6892429899449780081,64,FLEN)
NAN_BOXED(6893344728662251410,64,FLEN)
NAN_BOXED(9179069709482860161,64,FLEN)
NAN_BOXED(6892442396520532498,64,FLEN)
NAN_BOXED(6892018646415915876,64,FLEN)
NAN_BOXED(9177927916666049211,64,FLEN)
NAN_BOXED(6892463372588827296,64,FLEN)
NAN_BOXED(6887768908180382297,64,FLEN)
NAN_BOXED(9173816446834775358,64,FLEN)
NAN_BOXED(6892478524584029765,64,FLEN)
NAN_BOXED(6882769438406440267,64,FLEN)
NAN_BOXED(9168621039561482887,64,FLEN)
NAN_BOXED(6892502885091054071,64,FLEN)
NAN_BOXED(6885238658630507851,64,FLEN)
NAN_BOXED(9170772194585819584,64,FLEN)
NAN_BOXED(6892538239734341307,64,FLEN)
NAN_BOXED(6878594885033766111,64,FLEN)
NAN_BOXED(9164671407257226452,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(6885584983780621419,64,FLEN)
NAN_BOXED(9171106951433686261,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(9179767405229872667,64,FLEN)
NAN_BOXED(6892639665320554409,64,FLEN)
NAN_BOXED(6883069414720143695,64,FLEN)
NAN_BOXED(9169269593612190720,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(6885987949680024387,64,FLEN)
NAN_BOXED(9171618963189632638,64,FLEN)
NAN_BOXED(6892829036517591813,64,FLEN)
NAN_BOXED(6875502620709912783,64,FLEN)
NAN_BOXED(9161511162247675536,64,FLEN)
NAN_BOXED(6892869838840107460,64,FLEN)
NAN_BOXED(6854831261627214079,64,FLEN)
NAN_BOXED(9140703656672692278,64,FLEN)
NAN_BOXED(6893051726645214897,64,FLEN)
NAN_BOXED(6893626335348288827,64,FLEN)
NAN_BOXED(9179796850610116623,64,FLEN)
NAN_BOXED(6893053768490443509,64,FLEN)
NAN_BOXED(6887608834755335575,64,FLEN)
NAN_BOXED(9174110048076581355,64,FLEN)
NAN_BOXED(6893092628140579209,64,FLEN)
NAN_BOXED(6893459702973126124,64,FLEN)
NAN_BOXED(9179700322116842739,64,FLEN)
NAN_BOXED(6893102552139095359,64,FLEN)
NAN_BOXED(6893466348618253444,64,FLEN)
NAN_BOXED(9179713774429038239,64,FLEN)
NAN_BOXED(6893195528880013562,64,FLEN)
NAN_BOXED(6893183446821614686,64,FLEN)
NAN_BOXED(9179564926403301007,64,FLEN)
NAN_BOXED(6893234012951485358,64,FLEN)
NAN_BOXED(6889299052692605989,64,FLEN)
NAN_BOXED(9175589045728970967,64,FLEN)
NAN_BOXED(6893277585805458161,64,FLEN)
NAN_BOXED(6881000981781792407,64,FLEN)
NAN_BOXED(9167192229681183133,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(6890675668898287104,64,FLEN)
NAN_BOXED(9176889183448692285,64,FLEN)
NAN_BOXED(6893347632745985035,64,FLEN)
NAN_BOXED(6891457350680076034,64,FLEN)
NAN_BOXED(9178221633818238980,64,FLEN)
NAN_BOXED(6893394110343909067,64,FLEN)
NAN_BOXED(6893985826309471089,64,FLEN)
NAN_BOXED(9180381556269960865,64,FLEN)
NAN_BOXED(6893480127127357324,64,FLEN)
NAN_BOXED(6892041406047741942,64,FLEN)
NAN_BOXED(9178843844367100042,64,FLEN)
NAN_BOXED(6893521180076102015,64,FLEN)
NAN_BOXED(6888867495256519605,64,FLEN)
NAN_BOXED(9175477512401068841,64,FLEN)
NAN_BOXED(6893548061967663778,64,FLEN)
NAN_BOXED(6891015925209780785,64,FLEN)
NAN_BOXED(9177724882027670440,64,FLEN)
NAN_BOXED(6893576349496516148,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(9179482940360267302,64,FLEN)
NAN_BOXED(6893711269933398307,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(9179759981443073796,64,FLEN)
NAN_BOXED(6893820107206345600,64,FLEN)
NAN_BOXED(6894774817830911191,64,FLEN)
NAN_BOXED(9181443737893253543,64,FLEN)
NAN_BOXED(6893854698841570049,64,FLEN)
NAN_BOXED(6894107411689249449,64,FLEN)
NAN_BOXED(9180895696823754434,64,FLEN)
NAN_BOXED(6893889941641663527,64,FLEN)
NAN_BOXED(6887019601298774335,64,FLEN)
NAN_BOXED(9174161239360369957,64,FLEN)
NAN_BOXED(6893918617447362677,64,FLEN)
NAN_BOXED(6873453779678404783,64,FLEN)
NAN_BOXED(9160619662779729638,64,FLEN)
NAN_BOXED(6893975742655813076,64,FLEN)
NAN_BOXED(6873757431286393439,64,FLEN)
NAN_BOXED(9160923068528693533,64,FLEN)
NAN_BOXED(6894123166973889605,64,FLEN)
NAN_BOXED(6872302794428871519,64,FLEN)
NAN_BOXED(9159262294741428399,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(6893244323944486080,64,FLEN)
NAN_BOXED(9180371245977958673,64,FLEN)
NAN_BOXED(6894204720108533948,64,FLEN)
NAN_BOXED(6872566522316280079,64,FLEN)
NAN_BOXED(9159649157000313598,64,FLEN)
NAN_BOXED(6894209278734180400,64,FLEN)
NAN_BOXED(6884669618863588551,64,FLEN)
NAN_BOXED(9171815239910479260,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(6894739131673862577,64,FLEN)
NAN_BOXED(9181811195542262008,64,FLEN)
NAN_BOXED(6894329254800442919,64,FLEN)
NAN_BOXED(6894751689973656769,64,FLEN)
NAN_BOXED(9181918155953017540,64,FLEN)
NAN_BOXED(6894336094862905158,64,FLEN)
NAN_BOXED(6889746668479877169,64,FLEN)
NAN_BOXED(9176957350522768625,64,FLEN)
NAN_BOXED(6894553715524056735,64,FLEN)
NAN_BOXED(6883238335752405255,64,FLEN)
NAN_BOXED(9170750042304165551,64,FLEN)
NAN_BOXED(6894624767306557408,64,FLEN)
NAN_BOXED(6861060810973837183,64,FLEN)
NAN_BOXED(9148607153404346428,64,FLEN)
NAN_BOXED(6894645554108242557,64,FLEN)
NAN_BOXED(6881081340545786575,64,FLEN)
NAN_BOXED(9168561472704219246,64,FLEN)
NAN_BOXED(6894651451454146875,64,FLEN)
NAN_BOXED(6891149036947128348,64,FLEN)
NAN_BOXED(9178772244913010197,64,FLEN)
NAN_BOXED(6894670567507127991,64,FLEN)
NAN_BOXED(6891140460976794038,64,FLEN)
NAN_BOXED(9178774912819152215,64,FLEN)
NAN_BOXED(6894743191756207268,64,FLEN)
NAN_BOXED(6894193380528881041,64,FLEN)
NAN_BOXED(9181778467065134605,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(6881917948960961455,64,FLEN)
NAN_BOXED(9169616242105278023,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(6890916149591901624,64,FLEN)
NAN_BOXED(9178615154200727192,64,FLEN)
NAN_BOXED(6894791204463307020,64,FLEN)
NAN_BOXED(6893189871612443498,64,FLEN)
NAN_BOXED(9180843103512211911,64,FLEN)
NAN_BOXED(6894830461152958769,64,FLEN)
NAN_BOXED(6890893957597261762,64,FLEN)
NAN_BOXED(9178624535360520861,64,FLEN)
NAN_BOXED(6894841883833176648,64,FLEN)
NAN_BOXED(6893281140443270894,64,FLEN)
NAN_BOXED(9180973090962516009,64,FLEN)
NAN_BOXED(6894854156758274418,64,FLEN)
NAN_BOXED(6886824383580460721,64,FLEN)
NAN_BOXED(9174560266848447734,64,FLEN)
NAN_BOXED(6894874983606054753,64,FLEN)
NAN_BOXED(6893403696100954520,64,FLEN)
NAN_BOXED(9181120538277829365,64,FLEN)
NAN_BOXED(6894899265394657717,64,FLEN)
NAN_BOXED(6887000685676561865,64,FLEN)
NAN_BOXED(9174761045036042530,64,FLEN)
NAN_BOXED(6894904370741698618,64,FLEN)
NAN_BOXED(6889084537163993357,64,FLEN)
NAN_BOXED(9176823338291717430,64,FLEN)
NAN_BOXED(6858089853017740543,64,FLEN)
NAN_BOXED(6888510761533079617,64,FLEN)
NAN_BOXED(9139616013716526963,64,FLEN)
NAN_BOXED(6863099226451838079,64,FLEN)
NAN_BOXED(6890765952166976252,64,FLEN)
NAN_BOXED(9146864966394080885,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(9148033065547580386,64,FLEN)
NAN_BOXED(6871656435933525599,64,FLEN)
NAN_BOXED(6893531733070653961,64,FLEN)
NAN_BOXED(9158143148368301831,64,FLEN)
NAN_BOXED(6873629782945675135,64,FLEN)
NAN_BOXED(6877767173027846295,64,FLEN)
NAN_BOXED(9144409029345265243,64,FLEN)
NAN_BOXED(6874256610768646703,64,FLEN)
NAN_BOXED(6892339332873759017,64,FLEN)
NAN_BOXED(9160130885766486223,64,FLEN)
NAN_BOXED(6876461259818165935,64,FLEN)
NAN_BOXED(6886879437195929151,64,FLEN)
NAN_BOXED(9156373919353491343,64,FLEN)
NAN_BOXED(6877134563161903271,64,FLEN)
NAN_BOXED(6894681238859770472,64,FLEN)
NAN_BOXED(9164761214859888307,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(6890612739431253628,64,FLEN)
NAN_BOXED(9161094424046964038,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(9139706737829698546,64,FLEN)
NAN_BOXED(6879903012512095423,64,FLEN)
NAN_BOXED(6894207266839058607,64,FLEN)
NAN_BOXED(9167070389238319261,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 166*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
