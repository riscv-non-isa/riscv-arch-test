
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f2, rs2==f22, rs3==f2, rd==f12,fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xda206db2e93ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f2; op2:f22; op3:f2; dest:f12; op1val:0x7f5da206db2e93ff; op2val:0x8000;
op3val:0x7f5da206db2e93ff; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f12, f2, f22, f2, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==f19, rs2==f19, rs3==f19, rd==f22,fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x3183ef4678c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f19; op2:f19; op3:f19; dest:f22; op1val:0x7f73183ef4678c7f; op2val:0x7f73183ef4678c7f;
op3val:0x7f73183ef4678c7f; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f22, f19, f19, f19, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==f8, rs2==f8, rs3==f7, rd==f8,fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xebd44f999c67f and fs2 == 1 and fe2 == 0x406 and fm2 == 0x0a7fbad7d2e03 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f8; op2:f8; op3:f7; dest:f8; op1val:0x7f7ebd44f999c67f; op2val:0x7f7ebd44f999c67f;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f8, f8, f8, f7, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f16, rs2==f18, rs3==f6, rd==f16,fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x77705c9d459bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f16; op2:f18; op3:f6; dest:f16; op1val:0x7f877705c9d459bf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f16, f16, f18, f6, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f18, rs2==f0, rs3==f0, rd==f10,fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xaeb807b25f33f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f18; op2:f0; op3:f0; dest:f10; op1val:0x7f8aeb807b25f33f; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f10, f18, f0, f0, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f17, rs2==f11, rs3==f11, rd==f11,fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xaf7d1e8a8527f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f17; op2:f11; op3:f11; dest:f11; op1val:0x7f8af7d1e8a8527f; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f11, f17, f11, f11, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f26, rs2==f1, rs3==f26, rd==f26,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x488beb031b1bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f26; op2:f1; op3:f26; dest:f26; op1val:0x7f9488beb031b1bf; op2val:0x8000;
op3val:0x7f9488beb031b1bf; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f26, f26, f1, f26, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f11, rs2==f24, rs3==f21, rd==f24,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f11; op2:f24; op3:f21; dest:f24; op1val:0x7f96b7004b70b43f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f24, f11, f24, f21, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f21, rs2==f6, rs3==f9, rd==f9,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xb913b7c55ffdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f21; op2:f6; op3:f9; dest:f9; op1val:0x7f9b913b7c55ffdf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f9, f21, f6, f9, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f13, rs2==f20, rs3==f18, rd==f23,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xfc18b696ac21f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f13; op2:f20; op3:f18; dest:f23; op1val:0x7f9fc18b696ac21f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f23, f13, f20, f18, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==f30, rs2==f30, rs3==f30, rd==f30,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x010befcbab41f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f30; op3:f30; dest:f30; op1val:0x7fa010befcbab41f; op2val:0x7fa010befcbab41f;
op3val:0x7fa010befcbab41f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f30, f30, f30, f30, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f15, rs2==f15, rs3==f24, rd==f2,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x5ba25feb674df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f15; op2:f15; op3:f24; dest:f2; op1val:0x7fa5ba25feb674df; op2val:0x7fa5ba25feb674df;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f2, f15, f15, f24, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f29, rs2==f10, rs3==f5, rd==f13,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x6a01466b8215f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f29; op2:f10; op3:f5; dest:f13; op1val:0x7fa6a01466b8215f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f13, f29, f10, f5, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f28, rs2==f5, rs3==f17, rd==f21,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x70268582df3ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f28; op2:f5; op3:f17; dest:f21; op1val:0x7fa70268582df3ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f21, f28, f5, f17, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f22, rs2==f25, rs3==f29, rd==f27,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x7144ec23fce9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f22; op2:f25; op3:f29; dest:f27; op1val:0x7fa7144ec23fce9f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f27, f22, f25, f29, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f14, rs2==f4, rs3==f8, rd==f29,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x990aaf06a508f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x406fce4599663 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f14; op2:f4; op3:f8; dest:f29; op1val:0x7fa990aaf06a508f; op2val:0xc03406fce4599663;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f29, f14, f4, f8, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f31, rs2==f16, rs3==f14, rd==f19,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc1325f19d9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f31; op2:f16; op3:f14; dest:f19; op1val:0x7fac1325f19d9f5f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f19, f31, f16, f14, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f5, rs2==f13, rs3==f1, rd==f25,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xec2df688bcd4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f5; op2:f13; op3:f1; dest:f25; op1val:0x7faec2df688bcd4f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f25, f5, f13, f1, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f27, rs2==f23, rs3==f12, rd==f28,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf03ec3d1c1d8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f27; op2:f23; op3:f12; dest:f28; op1val:0x7faf03ec3d1c1d8f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f28, f27, f23, f12, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f7, rs2==f31, rs3==f3, rd==f0,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x03ef3cf6c8e37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f7; op2:f31; op3:f3; dest:f0; op1val:0x7fb03ef3cf6c8e37; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f0, f7, f31, f3, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f10, rs2==f2, rs3==f20, rd==f17,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0645d4519cddf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f10; op2:f2; op3:f20; dest:f17; op1val:0x7fb0645d4519cddf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f17, f10, f2, f20, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f23, rs2==f28, rs3==f10, rd==f31,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0c67fd361123f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f23; op2:f28; op3:f10; dest:f31; op1val:0x7fb0c67fd361123f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f23, f28, f10, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f0, rs2==f26, rs3==f16, rd==f18,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16ce13b7494bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f0; op2:f26; op3:f16; dest:f18; op1val:0x7fb16ce13b7494bf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f18, f0, f26, f16, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f1, rs2==f12, rs3==f13, rd==f5,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x183c18f73341f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f1; op2:f12; op3:f13; dest:f5; op1val:0x7fb183c18f73341f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f5, f1, f12, f13, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f24, rs2==f17, rs3==f15, rd==f7,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x3b45a2375b697 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f24; op2:f17; op3:f15; dest:f7; op1val:0x7fb3b45a2375b697; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f7, f24, f17, f15, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f12, rs2==f14, rs3==f31, rd==f1,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x474683222afa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f12; op2:f14; op3:f31; dest:f1; op1val:0x7fb474683222afa7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f1, f12, f14, f31, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f3, rs2==f9, rs3==f28, rd==f6,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x60c7c307e31a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f3; op2:f9; op3:f28; dest:f6; op1val:0x7fb60c7c307e31a7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f6, f3, f9, f28, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f6, rs2==f21, rs3==f25, rd==f4,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6a91f2b02b477 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f6; op2:f21; op3:f25; dest:f4; op1val:0x7fb6a91f2b02b477; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f4, f6, f21, f25, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f4, rs2==f29, rs3==f27, rd==f3,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8f2c40125fbb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f4; op2:f29; op3:f27; dest:f3; op1val:0x7fb8f2c40125fbb7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f3, f4, f29, f27, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f25, rs2==f3, rs3==f23, rd==f14,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa124c133921cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f25; op2:f3; op3:f23; dest:f14; op1val:0x7fba124c133921cf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f14, f25, f3, f23, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f9, rs2==f27, rs3==f4, rd==f15,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef491a115c81f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f9; op2:f27; op3:f4; dest:f15; op1val:0x7fbef491a115c81f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f15, f9, f27, f4, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f20,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfae68c41561bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f20; op2:f3; op3:f5; dest:f11; op1val:0x7fbfae68c41561bf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f11, f20, f3, f5, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// rs2==f7,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfe78141983bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f28; op2:f7; op3:f19; dest:f25; op1val:0x7fbfe78141983bff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f25, f28, f7, f19, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// rs3==f22,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03d0e60bd2c53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f13; op2:f27; op3:f22; dest:f19; op1val:0x7fc03d0e60bd2c53; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f19, f13, f27, f22, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// rd==f20,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x099a756bd881b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f7; op2:f9; op3:f25; dest:f20; op1val:0x7fc099a756bd881b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f20, f7, f9, f25, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1676d77eb0adb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc1676d77eb0adb; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3476623b5f3d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc3476623b5f3d7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x34c47a0526ef3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc34c47a0526ef3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3f7bce331716b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc3f7bce331716b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3fe541b09258b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc3fe541b09258b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e072cb2d87d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc4e072cb2d87d3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5ab1b114777e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc5ab1b114777e7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5ed3b83d4d06f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x759bce0b80a5b and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc5ed3b83d4d06f; op2val:0xc01759bce0b80a5b;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5fe3ff80d0df7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc5fe3ff80d0df7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6daed80aff873 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc6daed80aff873; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x77fc19dd1d407 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc77fc19dd1d407; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7fc89aad95937 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc7fc89aad95937; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x86c42550ad12b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc86c42550ad12b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8755fffcef0ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc8755fffcef0ef; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9423ad1f49e07 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4452e26f23954 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc9423ad1f49e07; op2val:0xc014452e26f23954;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x943e82f8af8c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc943e82f8af8c3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb0624ba20ab53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcb0624ba20ab53; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbc63a6420b0e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcbc63a6420b0e7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc6d7820846007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcc6d7820846007; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc7c1eba75a687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcc7c1eba75a687; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xccdb65c979493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcccdb65c979493; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd1d9dedc8d4db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcd1d9dedc8d4db; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdfe8e9311623f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcdfe8e9311623f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe6ad80efba433 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fce6ad80efba433; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fce759ff97b7507; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8d90453e9cfb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fce8d90453e9cfb; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x012632d0614c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd012632d0614c9; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0288c3fc6a2e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd0288c3fc6a2e3; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd09941946801c5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x13083ccf1d8b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd13083ccf1d8b1; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x15aec43b7bf87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd15aec43b7bf87; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x15e91a9fc6f05 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7a23d42ea5fa and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd15e91a9fc6f05; op2val:0xc00d7a23d42ea5fa;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d47422b88b69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1d47422b88b69; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x23cbe38fed7af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd23cbe38fed7af; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25e6420f5c09f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd25e6420f5c09f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x27fa95459d3d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd27fa95459d3d1; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2af313c25ada5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd2af313c25ada5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2cf1d3b6ac94b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd2cf1d3b6ac94b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3315db9e9910d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3315db9e9910d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x339d1964c64f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd339d1964c64f1; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34403635e831b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd34403635e831b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34501d37fe38d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd34501d37fe38d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x347f8263d98bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd347f8263d98bd; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d1a2580ed007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3d1a2580ed007; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d7504400059d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3d7504400059d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x402cbce109a77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd402cbce109a77; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x415cc9ae1aebd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd415cc9ae1aebd; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x422135092fed7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd422135092fed7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x437a4e1419f0d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd437a4e1419f0d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd47b4bc16b5bb5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x49b173797db75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd49b173797db75; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x50aabc36dfa15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd50aabc36dfa15; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x52e5a4c6824cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd52e5a4c6824cb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x55c3845664053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd55c3845664053; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x58ca915efc253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd58ca915efc253; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5d411df1e1d2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd5d411df1e1d2f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5d8b8d100d4ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd5d8b8d100d4ad; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6191d0cb741ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6191d0cb741ad; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x62aab2512cca5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd62aab2512cca5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x675514445d7d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd675514445d7d5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x67b8733161cc9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd67b8733161cc9; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x68492c1c43473 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bcccf94ef884 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd68492c1c43473; op2val:0xc006bcccf94ef884;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6909f0cdef409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6909f0cdef409; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x717e9f21e93db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd717e9f21e93db; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x74b0a497b6245 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd74b0a497b6245; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a037fec02fad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7a037fec02fad; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7ad586f53dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7ad586f53dadd; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e3bb0bafc143 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7e3bb0bafc143; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8236520d6c6fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd8236520d6c6fb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82db2eb039623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd82db2eb039623; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x855d2065cc26b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd855d2065cc26b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x85641ad17e9cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd85641ad17e9cd; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b20864979939 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd8b20864979939; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9471495d333b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd9471495d333b3; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda1ba02a5538df; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa359c4048cb6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda359c4048cb6b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa4501af2d40bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda4501af2d40bf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7ae3286d0c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda7ae3286d0c8f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa92ce67e64f49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda92ce67e64f49; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaae953a52bc93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdaae953a52bc93; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xadd87f48bf1c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdadd87f48bf1c7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb122b80686473 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb122b80686473; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb98a4751306d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb98a4751306d7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbcc6da478919d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdbcc6da478919d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbdae10d32417d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdbdae10d32417d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbea13763b55f9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdbea13763b55f9; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0f3fc67a660f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc0f3fc67a660f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc74abdfb676c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc74abdfb676c7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcdedbb22a3043 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdcdedbb22a3043; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdd3437ca639b6b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdd7759f6f589ad; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fddd70c0ad2c58b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18cc1c53ea1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde18cc1c53ea1b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe418564c20c07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde418564c20c07; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe43fe6a95bdeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde43fe6a95bdeb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7c922b2d54e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde7c922b2d54e3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8a675e7e0ea9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde8a675e7e0ea9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0115df9f5c056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0115df9f5c056; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe02c6758f19d47; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe039904d15cfd4; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03b55a3557b05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe03b55a3557b05; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09bc54bda7ca2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe09bc54bda7ca2; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a470198b7628 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0a470198b7628; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ad13253643d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0ad13253643d4; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0bde6858f4b91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0bde6858f4b91; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0cc819625e25e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0cc819625e25e; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0df5d521424e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0df5d521424e6; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0f2b5a3d4901e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0f2b5a3d4901e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x11bbf238cf0de and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xded45bba9a050 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe11bbf238cf0de; op2val:0xbffded45bba9a050;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16a5368858d8c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe16a5368858d8c; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18cbe0d5b0ab6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe18cbe0d5b0ab6; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c6de58039298 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1c6de58039298; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1e577746908d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1e577746908d8; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x23620f06a92d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe23620f06a92d8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2375c8ebc2475 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2375c8ebc2475; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x25a6085117eb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe25a6085117eb3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x27666fc328a99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe27666fc328a99; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe28f1335426ef4; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b230d0edf6b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2b230d0edf6b7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b8ed55a15b90 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2b8ed55a15b90; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2c588e1376ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2c588e1376ac3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2d672a7e2446b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2d672a7e2446b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ea49ac2bd0e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2ea49ac2bd0e2; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f72b0267e3ba and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2f72b0267e3ba; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x30f54d50e79fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe30f54d50e79fd; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x30f9116b9506a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe30f9116b9506a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x33141c6246e99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe33141c6246e99; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x353501de56e49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe353501de56e49; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x35787ca99e0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe35787ca99e0af; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x388f2590db1b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe388f2590db1b3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x396d8c474503a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe396d8c474503a; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3aa401f0be9eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3aa401f0be9eb; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3b49de25b5810 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3b49de25b5810; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d812c3e43b86 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3d812c3e43b86; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe405e69652cae2; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x40d80b76bc040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe40d80b76bc040; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4132da9546dfd; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41d8cde4898c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x973fe22444442 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe41d8cde4898c6; op2val:0xbff973fe22444442;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe43ad2ac887783; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe450c74c9b42e4; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4733f0771afc6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4733f0771afc6; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48ac00057963a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe48ac00057963a; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x49abc8377a2f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe49abc8377a2f1; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b3842d8efcbe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4b3842d8efcbe; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ceb420df408f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4ceb420df408f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53671e4145242 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe53671e4145242; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53730eefdf77d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe53730eefdf77d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x57b12a6c8424b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe57b12a6c8424b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x57c33eb1be367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe57c33eb1be367; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1f55815c33a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5a1f55815c33a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5bcac57ab5ace; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5d2cc33a9b554 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5d2cc33a9b554; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x632d61a0c97c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe632d61a0c97c8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6568f5c6359d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6568f5c6359d5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69f56211d9e5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe69f56211d9e5b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d796ca9f3e52 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6d796ca9f3e52; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6da2613270600 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6da2613270600; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e9d2a2e46474 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6e9d2a2e46474; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fd76e25872b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6fd76e25872b5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7009b07ae3d88 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7009b07ae3d88; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x70cca2edccbd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe70cca2edccbd9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78689e886932a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe78689e886932a; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79dfa15f5403c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe79dfa15f5403c; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7b855d00f829f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7b855d00f829f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d97bc07bb6a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7d97bc07bb6a5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7db5311d3a19f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7db5311d3a19f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8436c13d47a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe8436c13d47a1b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe899f171a9297a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8b676bb4091f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe8b676bb4091f8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8d9119f4731d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe8d9119f4731d4; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x908ceac3ed748 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe908ceac3ed748; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90b3cf22a50bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe90b3cf22a50bf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x955605918543b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x435dc43ed9322 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe955605918543b; op2val:0xbff435dc43ed9322;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x967511f665f1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe967511f665f1a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99e7a144435ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe99e7a144435ef; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9a10b6e4ec167 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9a10b6e4ec167; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b8cadd13d7db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9b8cadd13d7db; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 633*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9cb2b8c8391a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3d99066f4f46d and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9cb2b8c8391a5; op2val:0xbff3d99066f4f46d;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ccdd3e7a322c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9ccdd3e7a322c; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 639*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9d11e7f58461f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9d11e7f58461f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9d4cc7f4fd130 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9d4cc7f4fd130; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 645*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed1784fa671a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9ed1784fa671a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa2350807a1251 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3969ff8665ab4 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea2350807a1251; op2val:0xbff3969ff8665ab4;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 651*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa5a1a13aed9e5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36de63f0063d9 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea5a1a13aed9e5; op2val:0xbff36de63f0063d9;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa9c883bf3c926 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea9c883bf3c926; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 657*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaac59c0e5d8ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feaac59c0e5d8ef; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feac44ace32d282; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 663*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac63c4f037629 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feac63c4f037629; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacc8bf5e07e70 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feacc8bf5e07e70; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 669*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad4cc6a4ca19e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fead4cc6a4ca19e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb537f328e16b0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb537f328e16b0; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 675*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb57a54ad9d312 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb57a54ad9d312; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb608b57d7bf4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb608b57d7bf4f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 681*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb67a2291e65ec and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb67a2291e65ec; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb8a57b94e3940 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb8a57b94e3940; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 687*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb92c1e229f6d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb92c1e229f6d8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9a0c0999e25b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28caf60cb6c7c and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb9a0c0999e25b; op2val:0xbff28caf60cb6c7c;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 693*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbb2662d13e5e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febb2662d13e5e4; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc4d8895bf826 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febc4d8895bf826; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 699*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc706f3b40e35 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febc706f3b40e35; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febedb51c79c56f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 705*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1f3c058ce942 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec1f3c058ce942; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1facf9764ac8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec1facf9764ac8; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 711*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc28c8267d9ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec28c8267d9ab4; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec306053b001eb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 717*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc51162e460b0e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec51162e460b0e; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcb0ad9f88c3fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecb0ad9f88c3fd; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 723*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcb16f8f726369 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecb16f8f726369; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca22e1b83439 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecca22e1b83439; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 729*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcea5e0336397b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecea5e0336397b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcef388d58d8ec and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecef388d58d8ec; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 735*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcf344fe49aeb9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecf344fe49aeb9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd75a819a72f1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed75a819a72f1a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 741*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd79a3e9b52e6a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed79a3e9b52e6a; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7f1c7b8efc05 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15ba43ed516c7 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed7f1c7b8efc05; op2val:0xbff15ba43ed516c7;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 747*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd9037f0cb3b4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed9037f0cb3b4e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdad12fade7910 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fedad12fade7910; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 753*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdb9ec201d5923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fedb9ec201d5923; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf05390895e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fedf05390895e61; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 759*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0ca2c7a6ffb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee0ca2c7a6ffb0; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe1991bf3efd01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee1991bf3efd01; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 765*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2f4007548540 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee2f4007548540; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe67b863f16ae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee67b863f16ae2; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:771*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 771*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xead56888da556 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feead56888da556; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed366397a0657 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feed366397a0657; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:777*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 777*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xede45ea2ac4af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feede45ea2ac4af; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xee5369ab02b92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feee5369ab02b92; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:783*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 783*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf30ae6421cda7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef30ae6421cda7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4a1d99086e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef4a1d99086e31; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:789*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 789*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf615e3d1dc570 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef615e3d1dc570; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf94cbf20a6254 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef94cbf20a6254; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:795*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 795*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfac7da9ef1ce9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefac7da9ef1ce9; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfb62fea6c5bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefb62fea6c5bdf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:801*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 801*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfdc528ede5c0d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefdc528ede5c0d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feff3c90824e08b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:807*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 807*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xda206db2e93ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f5da206db2e93ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x3183ef4678c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f73183ef4678c7f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:813*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 813*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xebd44f999c67f and fs2 == 1 and fe2 == 0x406 and fm2 == 0x0a7fbad7d2e03 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f7ebd44f999c67f; op2val:0xc060a7fbad7d2e03;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x77705c9d459bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f877705c9d459bf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:819*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 819*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xaeb807b25f33f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f8aeb807b25f33f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xaf7d1e8a8527f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f8af7d1e8a8527f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:825*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 825*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x488beb031b1bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9488beb031b1bf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f96b7004b70b43f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:831*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 831*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xb913b7c55ffdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9b913b7c55ffdf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x010befcbab41f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fa010befcbab41f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:837*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 837*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x5ba25feb674df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fa5ba25feb674df; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 840*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(9177669765981705215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9177669765981705215,64,FLEN)
NAN_BOXED(9183710723806039167,64,FLEN)
NAN_BOXED(9183710723806039167,64,FLEN)
NAN_BOXED(9183710723806039167,64,FLEN)
NAN_BOXED(9186988393825420927,64,FLEN)
NAN_BOXED(9186988393825420927,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9189444431417465279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9190416926657344319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9190430470526489215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9193123091951235519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9193123091951235519,64,FLEN)
NAN_BOXED(9193736901217006655,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9195102748882108383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9196281768627061279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9196368851560477727,64,FLEN)
NAN_BOXED(9196368851560477727,64,FLEN)
NAN_BOXED(9196368851560477727,64,FLEN)
NAN_BOXED(9197962486324032735,64,FLEN)
NAN_BOXED(9197962486324032735,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9198215298433950047,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9198323411106788351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9198343092426493599,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9199042777733288079,64,FLEN)
NAN_BOXED(13849702437303719523,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9199749192499437407,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9200505353551990095,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9200576876913630607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9200923255595896375,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9200964390471978463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9201072291027423807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9201255228315571391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9201280381053252639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9201896762883028631,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202107929491320743,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202556616107241895,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202728839908865143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9203372762178386871,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9203688906434355663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205063594701867039,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205267928358150591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205330705705876479,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205424770307140691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205526582339143707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205752833182993115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206280567286789079,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206285933791571699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206474453913006443,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206481700459718027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206730321891788755,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206953145971210215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207025853099462767,64,FLEN)
NAN_BOXED(13841630647505390171,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9207044563926846967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207287201806678131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207468432735458311,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207605631389358391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207728470309392683,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207738493333074159,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207963733533695495,64,FLEN)
NAN_BOXED(13840763619340597588,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9207965577644800195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208460617900403539,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208671817179377895,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208855700774871047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208871809484957319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208961521187001491,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209049377178965211,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209296701348733503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209415764216095795,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209427617965110535,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209453938795781371,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209881455139099849,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209905820803179235,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210029744914432453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210196055586625713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210242683744272263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210246692664536837,64,FLEN)
NAN_BOXED(13838851524281673210,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9210376308213189481,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210490975623763887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210527972068802719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210564553167459281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210616813923446181,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210651912383940939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210759941523607821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210769235235333361,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210780444245525275,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210781537048454029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210784794021828797,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210936158095069191,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210942402641003933,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210990212238318199,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211011106395500221,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211024604231040727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211048319172845325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211122703177309109,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211157661898759029,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211280345690667541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211319578220045515,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211370009608470611,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211423270701613651,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211501786079042863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211506901148292269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211577700391010733,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211597002382691493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211679079731156949,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211685908440816841,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211695853683881075,64,FLEN)
NAN_BOXED(13836954493684480132,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9211709100623066121,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211857856366547931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211914070364217925,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212007725167292333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212022158146132701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212081955304096067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212151955035965179,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212163284256658979,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212207398324585067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212207877863238093,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212308786903488825,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212472666501624755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212706362458716383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212734932949453675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212751861276033215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212811103794171023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212837402943835977,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212867943691631763,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212919563732906439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212977440763700339,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213125294822721239,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213182233999348125,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213198122840375677,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213214832025359865,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213255704280458767,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213367219234698951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213483972861505603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213577826893273963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213651640948984237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213756859391067531,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213829152574269979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213873928823507975,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213876647635566059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213938854878074083,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213954064218197673,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214383932923297878,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214413659985517895,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214428129531383764,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214430076598582021,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214536109283507362,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214545638971897384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214555135340331988,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214573635380923281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214589694541947486,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214610429502039270,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214631699551653918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214676820325888222,64,FLEN)
NAN_BOXED(13834474514109014096,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9214763219045158284,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214801060472490678,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214864970838413976,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214898613793655000,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214987302653825752,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214988658224669813,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215027158149332659,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215057972243368601,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215085100214152948,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215123710286886583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215131117036854160,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215144979238185667,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215163575484695659,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215185389695520994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215199551649473466,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215226119556332029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215226378356084842,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215263421097078425,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215300866094231113,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215305503261450415,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215359836987699635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215375120283226170,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215396454905670123,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215407852730669072,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215446837637692294,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215497225429502690,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215505583991144512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215511824342216189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215523228368804038,64,FLEN)
NAN_BOXED(13833215265778975810,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9215555414019045251,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215579554420835044,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215617452051902406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215643294750971450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215660871957062385,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215688117788277950,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215718010547814543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215832075269329474,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215832895791167357,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215907532521357899,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215908774913237863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215950287600468794,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215979660874832590,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216003986965509460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216109582601721800,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216148861190625749,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216228879731891803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216290730104798802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216293544525235712,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216310778345579636,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216332374505714357,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216335828285799816,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216349224946158553,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216483089306784554,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216508859872788540,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216537841139417759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216574287970547365,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216576312264860063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216690768881941019,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216785899686799738,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216817258477687288,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216855307123634644,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216907796136515400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216910468779233471,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216991984690418747,64,FLEN)
NAN_BOXED(13831739575710356258,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9217011710507245338,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217072359553644015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217075182857797991,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217101293822400475,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217121500291895717,64,FLEN)
NAN_BOXED(13831638094810772589,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9217123362998465068,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217128041306146335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217132087164784944,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217158797661464346,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217218416026980945,64,FLEN)
NAN_BOXED(13831564494396349108,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9217278655413017061,64,FLEN)
NAN_BOXED(13831519716251821017,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9217351696302459174,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217369088855496943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217395412933202562,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217397549693105705,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217404488864792176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217413561788965278,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217552868117976752,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217557429780861714,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217567213934329679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217575008516072940,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217613171719551296,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217622423764596440,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217630438835216987,64,FLEN)
NAN_BOXED(13831272090479324284,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9217657214256539108,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217677496640337958,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217679895016246837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217722424466457967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217776879972182338,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217777365100677832,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217787377424898740,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217795727599600107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217831693028035342,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217936797072933885,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217937630026687337,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217964788485207097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218000226822273403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218005563489179884,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218010014970130105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218153377142615834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218157757204868714,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218163772606053381,64,FLEN)
NAN_BOXED(13830936691618420423,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9218182582234725198,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218214309327173904,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218228436099488035,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218288253995146849,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218319380547829680,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218333601043512577,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218357439321376064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218419528922393314,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218496074443760982,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218537923278407255,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218549879136765103,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218557509960215442,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218640487813074343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218668453232668209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218694019630876016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218750565910733396,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218776617972604137,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218787279163382751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218829209393060877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218855007001305227,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9177669765981705215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9183710723806039167,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9186988393825420927,64,FLEN)
NAN_BOXED(13862264352435678723,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9189444431417465279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9190416926657344319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9190430470526489215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9193123091951235519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9193736901217006655,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9195102748882108383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9196368851560477727,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9197962486324032735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 50*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
