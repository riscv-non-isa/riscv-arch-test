
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_91392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030003fffffffff; valaddr_reg:x3; val_offset:274176*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274176*0 + 3*0*FLEN/8, x4, x1, x2)

inst_91393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030007fffffffff; valaddr_reg:x3; val_offset:274179*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274179*0 + 3*1*FLEN/8, x4, x1, x2)

inst_91394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000ffffffffff; valaddr_reg:x3; val_offset:274182*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274182*0 + 3*2*FLEN/8, x4, x1, x2)

inst_91395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803001ffffffffff; valaddr_reg:x3; val_offset:274185*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274185*0 + 3*3*FLEN/8, x4, x1, x2)

inst_91396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803003ffffffffff; valaddr_reg:x3; val_offset:274188*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274188*0 + 3*4*FLEN/8, x4, x1, x2)

inst_91397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803007ffffffffff; valaddr_reg:x3; val_offset:274191*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274191*0 + 3*5*FLEN/8, x4, x1, x2)

inst_91398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300fffffffffff; valaddr_reg:x3; val_offset:274194*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274194*0 + 3*6*FLEN/8, x4, x1, x2)

inst_91399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80301fffffffffff; valaddr_reg:x3; val_offset:274197*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274197*0 + 3*7*FLEN/8, x4, x1, x2)

inst_91400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80303fffffffffff; valaddr_reg:x3; val_offset:274200*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274200*0 + 3*8*FLEN/8, x4, x1, x2)

inst_91401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80307fffffffffff; valaddr_reg:x3; val_offset:274203*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274203*0 + 3*9*FLEN/8, x4, x1, x2)

inst_91402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030ffffffffffff; valaddr_reg:x3; val_offset:274206*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274206*0 + 3*10*FLEN/8, x4, x1, x2)

inst_91403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8031ffffffffffff; valaddr_reg:x3; val_offset:274209*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274209*0 + 3*11*FLEN/8, x4, x1, x2)

inst_91404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8033ffffffffffff; valaddr_reg:x3; val_offset:274212*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274212*0 + 3*12*FLEN/8, x4, x1, x2)

inst_91405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8037ffffffffffff; valaddr_reg:x3; val_offset:274215*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274215*0 + 3*13*FLEN/8, x4, x1, x2)

inst_91406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8038000000000000; valaddr_reg:x3; val_offset:274218*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274218*0 + 3*14*FLEN/8, x4, x1, x2)

inst_91407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803c000000000000; valaddr_reg:x3; val_offset:274221*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274221*0 + 3*15*FLEN/8, x4, x1, x2)

inst_91408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803e000000000000; valaddr_reg:x3; val_offset:274224*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274224*0 + 3*16*FLEN/8, x4, x1, x2)

inst_91409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803f000000000000; valaddr_reg:x3; val_offset:274227*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274227*0 + 3*17*FLEN/8, x4, x1, x2)

inst_91410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803f800000000000; valaddr_reg:x3; val_offset:274230*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274230*0 + 3*18*FLEN/8, x4, x1, x2)

inst_91411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fc00000000000; valaddr_reg:x3; val_offset:274233*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274233*0 + 3*19*FLEN/8, x4, x1, x2)

inst_91412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fe00000000000; valaddr_reg:x3; val_offset:274236*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274236*0 + 3*20*FLEN/8, x4, x1, x2)

inst_91413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ff00000000000; valaddr_reg:x3; val_offset:274239*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274239*0 + 3*21*FLEN/8, x4, x1, x2)

inst_91414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ff80000000000; valaddr_reg:x3; val_offset:274242*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274242*0 + 3*22*FLEN/8, x4, x1, x2)

inst_91415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffc0000000000; valaddr_reg:x3; val_offset:274245*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274245*0 + 3*23*FLEN/8, x4, x1, x2)

inst_91416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffe0000000000; valaddr_reg:x3; val_offset:274248*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274248*0 + 3*24*FLEN/8, x4, x1, x2)

inst_91417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fff0000000000; valaddr_reg:x3; val_offset:274251*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274251*0 + 3*25*FLEN/8, x4, x1, x2)

inst_91418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fff8000000000; valaddr_reg:x3; val_offset:274254*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274254*0 + 3*26*FLEN/8, x4, x1, x2)

inst_91419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffc000000000; valaddr_reg:x3; val_offset:274257*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274257*0 + 3*27*FLEN/8, x4, x1, x2)

inst_91420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffe000000000; valaddr_reg:x3; val_offset:274260*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274260*0 + 3*28*FLEN/8, x4, x1, x2)

inst_91421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffff000000000; valaddr_reg:x3; val_offset:274263*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274263*0 + 3*29*FLEN/8, x4, x1, x2)

inst_91422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffff800000000; valaddr_reg:x3; val_offset:274266*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274266*0 + 3*30*FLEN/8, x4, x1, x2)

inst_91423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffc00000000; valaddr_reg:x3; val_offset:274269*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274269*0 + 3*31*FLEN/8, x4, x1, x2)

inst_91424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffe00000000; valaddr_reg:x3; val_offset:274272*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274272*0 + 3*32*FLEN/8, x4, x1, x2)

inst_91425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffff00000000; valaddr_reg:x3; val_offset:274275*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274275*0 + 3*33*FLEN/8, x4, x1, x2)

inst_91426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffff80000000; valaddr_reg:x3; val_offset:274278*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274278*0 + 3*34*FLEN/8, x4, x1, x2)

inst_91427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffc0000000; valaddr_reg:x3; val_offset:274281*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274281*0 + 3*35*FLEN/8, x4, x1, x2)

inst_91428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffe0000000; valaddr_reg:x3; val_offset:274284*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274284*0 + 3*36*FLEN/8, x4, x1, x2)

inst_91429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffff0000000; valaddr_reg:x3; val_offset:274287*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274287*0 + 3*37*FLEN/8, x4, x1, x2)

inst_91430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffff8000000; valaddr_reg:x3; val_offset:274290*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274290*0 + 3*38*FLEN/8, x4, x1, x2)

inst_91431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffc000000; valaddr_reg:x3; val_offset:274293*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274293*0 + 3*39*FLEN/8, x4, x1, x2)

inst_91432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffe000000; valaddr_reg:x3; val_offset:274296*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274296*0 + 3*40*FLEN/8, x4, x1, x2)

inst_91433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffff000000; valaddr_reg:x3; val_offset:274299*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274299*0 + 3*41*FLEN/8, x4, x1, x2)

inst_91434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffff800000; valaddr_reg:x3; val_offset:274302*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274302*0 + 3*42*FLEN/8, x4, x1, x2)

inst_91435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffc00000; valaddr_reg:x3; val_offset:274305*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274305*0 + 3*43*FLEN/8, x4, x1, x2)

inst_91436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffe00000; valaddr_reg:x3; val_offset:274308*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274308*0 + 3*44*FLEN/8, x4, x1, x2)

inst_91437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffff00000; valaddr_reg:x3; val_offset:274311*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274311*0 + 3*45*FLEN/8, x4, x1, x2)

inst_91438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffff80000; valaddr_reg:x3; val_offset:274314*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274314*0 + 3*46*FLEN/8, x4, x1, x2)

inst_91439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffc0000; valaddr_reg:x3; val_offset:274317*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274317*0 + 3*47*FLEN/8, x4, x1, x2)

inst_91440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffe0000; valaddr_reg:x3; val_offset:274320*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274320*0 + 3*48*FLEN/8, x4, x1, x2)

inst_91441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffff0000; valaddr_reg:x3; val_offset:274323*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274323*0 + 3*49*FLEN/8, x4, x1, x2)

inst_91442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffff8000; valaddr_reg:x3; val_offset:274326*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274326*0 + 3*50*FLEN/8, x4, x1, x2)

inst_91443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffc000; valaddr_reg:x3; val_offset:274329*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274329*0 + 3*51*FLEN/8, x4, x1, x2)

inst_91444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffe000; valaddr_reg:x3; val_offset:274332*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274332*0 + 3*52*FLEN/8, x4, x1, x2)

inst_91445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffff000; valaddr_reg:x3; val_offset:274335*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274335*0 + 3*53*FLEN/8, x4, x1, x2)

inst_91446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffff800; valaddr_reg:x3; val_offset:274338*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274338*0 + 3*54*FLEN/8, x4, x1, x2)

inst_91447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffffc00; valaddr_reg:x3; val_offset:274341*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274341*0 + 3*55*FLEN/8, x4, x1, x2)

inst_91448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffffe00; valaddr_reg:x3; val_offset:274344*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274344*0 + 3*56*FLEN/8, x4, x1, x2)

inst_91449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffff00; valaddr_reg:x3; val_offset:274347*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274347*0 + 3*57*FLEN/8, x4, x1, x2)

inst_91450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffff80; valaddr_reg:x3; val_offset:274350*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274350*0 + 3*58*FLEN/8, x4, x1, x2)

inst_91451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffffc0; valaddr_reg:x3; val_offset:274353*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274353*0 + 3*59*FLEN/8, x4, x1, x2)

inst_91452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffffe0; valaddr_reg:x3; val_offset:274356*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274356*0 + 3*60*FLEN/8, x4, x1, x2)

inst_91453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffffff0; valaddr_reg:x3; val_offset:274359*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274359*0 + 3*61*FLEN/8, x4, x1, x2)

inst_91454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffffff8; valaddr_reg:x3; val_offset:274362*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274362*0 + 3*62*FLEN/8, x4, x1, x2)

inst_91455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffffffc; valaddr_reg:x3; val_offset:274365*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274365*0 + 3*63*FLEN/8, x4, x1, x2)

inst_91456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803ffffffffffffe; valaddr_reg:x3; val_offset:274368*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274368*0 + 3*64*FLEN/8, x4, x1, x2)

inst_91457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803fffffffffffff; valaddr_reg:x3; val_offset:274371*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274371*0 + 3*65*FLEN/8, x4, x1, x2)

inst_91458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:274374*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274374*0 + 3*66*FLEN/8, x4, x1, x2)

inst_91459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:274377*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274377*0 + 3*67*FLEN/8, x4, x1, x2)

inst_91460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:274380*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274380*0 + 3*68*FLEN/8, x4, x1, x2)

inst_91461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:274383*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274383*0 + 3*69*FLEN/8, x4, x1, x2)

inst_91462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:274386*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274386*0 + 3*70*FLEN/8, x4, x1, x2)

inst_91463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:274389*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274389*0 + 3*71*FLEN/8, x4, x1, x2)

inst_91464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:274392*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274392*0 + 3*72*FLEN/8, x4, x1, x2)

inst_91465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:274395*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274395*0 + 3*73*FLEN/8, x4, x1, x2)

inst_91466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:274398*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274398*0 + 3*74*FLEN/8, x4, x1, x2)

inst_91467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:274401*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274401*0 + 3*75*FLEN/8, x4, x1, x2)

inst_91468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:274404*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274404*0 + 3*76*FLEN/8, x4, x1, x2)

inst_91469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:274407*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274407*0 + 3*77*FLEN/8, x4, x1, x2)

inst_91470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:274410*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274410*0 + 3*78*FLEN/8, x4, x1, x2)

inst_91471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:274413*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274413*0 + 3*79*FLEN/8, x4, x1, x2)

inst_91472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:274416*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274416*0 + 3*80*FLEN/8, x4, x1, x2)

inst_91473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:274419*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274419*0 + 3*81*FLEN/8, x4, x1, x2)

inst_91474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:274422*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274422*0 + 3*82*FLEN/8, x4, x1, x2)

inst_91475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:274425*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274425*0 + 3*83*FLEN/8, x4, x1, x2)

inst_91476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:274428*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274428*0 + 3*84*FLEN/8, x4, x1, x2)

inst_91477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:274431*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274431*0 + 3*85*FLEN/8, x4, x1, x2)

inst_91478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:274434*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274434*0 + 3*86*FLEN/8, x4, x1, x2)

inst_91479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:274437*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274437*0 + 3*87*FLEN/8, x4, x1, x2)

inst_91480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000000000; valaddr_reg:x3; val_offset:274440*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274440*0 + 3*88*FLEN/8, x4, x1, x2)

inst_91481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000000001; valaddr_reg:x3; val_offset:274443*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274443*0 + 3*89*FLEN/8, x4, x1, x2)

inst_91482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000000003; valaddr_reg:x3; val_offset:274446*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274446*0 + 3*90*FLEN/8, x4, x1, x2)

inst_91483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000000007; valaddr_reg:x3; val_offset:274449*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274449*0 + 3*91*FLEN/8, x4, x1, x2)

inst_91484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000000000f; valaddr_reg:x3; val_offset:274452*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274452*0 + 3*92*FLEN/8, x4, x1, x2)

inst_91485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000000001f; valaddr_reg:x3; val_offset:274455*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274455*0 + 3*93*FLEN/8, x4, x1, x2)

inst_91486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000000003f; valaddr_reg:x3; val_offset:274458*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274458*0 + 3*94*FLEN/8, x4, x1, x2)

inst_91487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000000007f; valaddr_reg:x3; val_offset:274461*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274461*0 + 3*95*FLEN/8, x4, x1, x2)

inst_91488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000000000ff; valaddr_reg:x3; val_offset:274464*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274464*0 + 3*96*FLEN/8, x4, x1, x2)

inst_91489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000000001ff; valaddr_reg:x3; val_offset:274467*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274467*0 + 3*97*FLEN/8, x4, x1, x2)

inst_91490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000000003ff; valaddr_reg:x3; val_offset:274470*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274470*0 + 3*98*FLEN/8, x4, x1, x2)

inst_91491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000000007ff; valaddr_reg:x3; val_offset:274473*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274473*0 + 3*99*FLEN/8, x4, x1, x2)

inst_91492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000000fff; valaddr_reg:x3; val_offset:274476*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274476*0 + 3*100*FLEN/8, x4, x1, x2)

inst_91493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000001fff; valaddr_reg:x3; val_offset:274479*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274479*0 + 3*101*FLEN/8, x4, x1, x2)

inst_91494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000003fff; valaddr_reg:x3; val_offset:274482*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274482*0 + 3*102*FLEN/8, x4, x1, x2)

inst_91495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000007fff; valaddr_reg:x3; val_offset:274485*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274485*0 + 3*103*FLEN/8, x4, x1, x2)

inst_91496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000000ffff; valaddr_reg:x3; val_offset:274488*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274488*0 + 3*104*FLEN/8, x4, x1, x2)

inst_91497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000001ffff; valaddr_reg:x3; val_offset:274491*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274491*0 + 3*105*FLEN/8, x4, x1, x2)

inst_91498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000003ffff; valaddr_reg:x3; val_offset:274494*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274494*0 + 3*106*FLEN/8, x4, x1, x2)

inst_91499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000007ffff; valaddr_reg:x3; val_offset:274497*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274497*0 + 3*107*FLEN/8, x4, x1, x2)

inst_91500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000000fffff; valaddr_reg:x3; val_offset:274500*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274500*0 + 3*108*FLEN/8, x4, x1, x2)

inst_91501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000001fffff; valaddr_reg:x3; val_offset:274503*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274503*0 + 3*109*FLEN/8, x4, x1, x2)

inst_91502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000003fffff; valaddr_reg:x3; val_offset:274506*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274506*0 + 3*110*FLEN/8, x4, x1, x2)

inst_91503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000007fffff; valaddr_reg:x3; val_offset:274509*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274509*0 + 3*111*FLEN/8, x4, x1, x2)

inst_91504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000000ffffff; valaddr_reg:x3; val_offset:274512*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274512*0 + 3*112*FLEN/8, x4, x1, x2)

inst_91505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000001ffffff; valaddr_reg:x3; val_offset:274515*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274515*0 + 3*113*FLEN/8, x4, x1, x2)

inst_91506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000003ffffff; valaddr_reg:x3; val_offset:274518*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274518*0 + 3*114*FLEN/8, x4, x1, x2)

inst_91507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000007ffffff; valaddr_reg:x3; val_offset:274521*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274521*0 + 3*115*FLEN/8, x4, x1, x2)

inst_91508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000000fffffff; valaddr_reg:x3; val_offset:274524*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274524*0 + 3*116*FLEN/8, x4, x1, x2)

inst_91509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000001fffffff; valaddr_reg:x3; val_offset:274527*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274527*0 + 3*117*FLEN/8, x4, x1, x2)

inst_91510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000003fffffff; valaddr_reg:x3; val_offset:274530*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274530*0 + 3*118*FLEN/8, x4, x1, x2)

inst_91511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000007fffffff; valaddr_reg:x3; val_offset:274533*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274533*0 + 3*119*FLEN/8, x4, x1, x2)

inst_91512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00000ffffffff; valaddr_reg:x3; val_offset:274536*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274536*0 + 3*120*FLEN/8, x4, x1, x2)

inst_91513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00001ffffffff; valaddr_reg:x3; val_offset:274539*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274539*0 + 3*121*FLEN/8, x4, x1, x2)

inst_91514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00003ffffffff; valaddr_reg:x3; val_offset:274542*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274542*0 + 3*122*FLEN/8, x4, x1, x2)

inst_91515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00007ffffffff; valaddr_reg:x3; val_offset:274545*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274545*0 + 3*123*FLEN/8, x4, x1, x2)

inst_91516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0000fffffffff; valaddr_reg:x3; val_offset:274548*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274548*0 + 3*124*FLEN/8, x4, x1, x2)

inst_91517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0001fffffffff; valaddr_reg:x3; val_offset:274551*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274551*0 + 3*125*FLEN/8, x4, x1, x2)

inst_91518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0003fffffffff; valaddr_reg:x3; val_offset:274554*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274554*0 + 3*126*FLEN/8, x4, x1, x2)

inst_91519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0007fffffffff; valaddr_reg:x3; val_offset:274557*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274557*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_91520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c000ffffffffff; valaddr_reg:x3; val_offset:274560*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274560*0 + 3*128*FLEN/8, x4, x1, x2)

inst_91521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c001ffffffffff; valaddr_reg:x3; val_offset:274563*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274563*0 + 3*129*FLEN/8, x4, x1, x2)

inst_91522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c003ffffffffff; valaddr_reg:x3; val_offset:274566*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274566*0 + 3*130*FLEN/8, x4, x1, x2)

inst_91523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c007ffffffffff; valaddr_reg:x3; val_offset:274569*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274569*0 + 3*131*FLEN/8, x4, x1, x2)

inst_91524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c00fffffffffff; valaddr_reg:x3; val_offset:274572*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274572*0 + 3*132*FLEN/8, x4, x1, x2)

inst_91525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c01fffffffffff; valaddr_reg:x3; val_offset:274575*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274575*0 + 3*133*FLEN/8, x4, x1, x2)

inst_91526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c03fffffffffff; valaddr_reg:x3; val_offset:274578*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274578*0 + 3*134*FLEN/8, x4, x1, x2)

inst_91527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c07fffffffffff; valaddr_reg:x3; val_offset:274581*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274581*0 + 3*135*FLEN/8, x4, x1, x2)

inst_91528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c0ffffffffffff; valaddr_reg:x3; val_offset:274584*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274584*0 + 3*136*FLEN/8, x4, x1, x2)

inst_91529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c1ffffffffffff; valaddr_reg:x3; val_offset:274587*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274587*0 + 3*137*FLEN/8, x4, x1, x2)

inst_91530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c3ffffffffffff; valaddr_reg:x3; val_offset:274590*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274590*0 + 3*138*FLEN/8, x4, x1, x2)

inst_91531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c7ffffffffffff; valaddr_reg:x3; val_offset:274593*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274593*0 + 3*139*FLEN/8, x4, x1, x2)

inst_91532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81c8000000000000; valaddr_reg:x3; val_offset:274596*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274596*0 + 3*140*FLEN/8, x4, x1, x2)

inst_91533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cc000000000000; valaddr_reg:x3; val_offset:274599*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274599*0 + 3*141*FLEN/8, x4, x1, x2)

inst_91534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81ce000000000000; valaddr_reg:x3; val_offset:274602*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274602*0 + 3*142*FLEN/8, x4, x1, x2)

inst_91535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cf000000000000; valaddr_reg:x3; val_offset:274605*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274605*0 + 3*143*FLEN/8, x4, x1, x2)

inst_91536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cf800000000000; valaddr_reg:x3; val_offset:274608*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274608*0 + 3*144*FLEN/8, x4, x1, x2)

inst_91537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfc00000000000; valaddr_reg:x3; val_offset:274611*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274611*0 + 3*145*FLEN/8, x4, x1, x2)

inst_91538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfe00000000000; valaddr_reg:x3; val_offset:274614*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274614*0 + 3*146*FLEN/8, x4, x1, x2)

inst_91539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cff00000000000; valaddr_reg:x3; val_offset:274617*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274617*0 + 3*147*FLEN/8, x4, x1, x2)

inst_91540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cff80000000000; valaddr_reg:x3; val_offset:274620*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274620*0 + 3*148*FLEN/8, x4, x1, x2)

inst_91541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffc0000000000; valaddr_reg:x3; val_offset:274623*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274623*0 + 3*149*FLEN/8, x4, x1, x2)

inst_91542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffe0000000000; valaddr_reg:x3; val_offset:274626*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274626*0 + 3*150*FLEN/8, x4, x1, x2)

inst_91543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfff0000000000; valaddr_reg:x3; val_offset:274629*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274629*0 + 3*151*FLEN/8, x4, x1, x2)

inst_91544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfff8000000000; valaddr_reg:x3; val_offset:274632*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274632*0 + 3*152*FLEN/8, x4, x1, x2)

inst_91545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffc000000000; valaddr_reg:x3; val_offset:274635*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274635*0 + 3*153*FLEN/8, x4, x1, x2)

inst_91546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffe000000000; valaddr_reg:x3; val_offset:274638*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274638*0 + 3*154*FLEN/8, x4, x1, x2)

inst_91547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffff000000000; valaddr_reg:x3; val_offset:274641*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274641*0 + 3*155*FLEN/8, x4, x1, x2)

inst_91548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffff800000000; valaddr_reg:x3; val_offset:274644*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274644*0 + 3*156*FLEN/8, x4, x1, x2)

inst_91549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffc00000000; valaddr_reg:x3; val_offset:274647*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274647*0 + 3*157*FLEN/8, x4, x1, x2)

inst_91550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffe00000000; valaddr_reg:x3; val_offset:274650*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274650*0 + 3*158*FLEN/8, x4, x1, x2)

inst_91551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffff00000000; valaddr_reg:x3; val_offset:274653*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274653*0 + 3*159*FLEN/8, x4, x1, x2)

inst_91552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffff80000000; valaddr_reg:x3; val_offset:274656*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274656*0 + 3*160*FLEN/8, x4, x1, x2)

inst_91553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffc0000000; valaddr_reg:x3; val_offset:274659*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274659*0 + 3*161*FLEN/8, x4, x1, x2)

inst_91554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffe0000000; valaddr_reg:x3; val_offset:274662*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274662*0 + 3*162*FLEN/8, x4, x1, x2)

inst_91555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffff0000000; valaddr_reg:x3; val_offset:274665*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274665*0 + 3*163*FLEN/8, x4, x1, x2)

inst_91556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffff8000000; valaddr_reg:x3; val_offset:274668*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274668*0 + 3*164*FLEN/8, x4, x1, x2)

inst_91557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffc000000; valaddr_reg:x3; val_offset:274671*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274671*0 + 3*165*FLEN/8, x4, x1, x2)

inst_91558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffe000000; valaddr_reg:x3; val_offset:274674*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274674*0 + 3*166*FLEN/8, x4, x1, x2)

inst_91559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffff000000; valaddr_reg:x3; val_offset:274677*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274677*0 + 3*167*FLEN/8, x4, x1, x2)

inst_91560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffff800000; valaddr_reg:x3; val_offset:274680*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274680*0 + 3*168*FLEN/8, x4, x1, x2)

inst_91561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffc00000; valaddr_reg:x3; val_offset:274683*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274683*0 + 3*169*FLEN/8, x4, x1, x2)

inst_91562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffe00000; valaddr_reg:x3; val_offset:274686*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274686*0 + 3*170*FLEN/8, x4, x1, x2)

inst_91563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffff00000; valaddr_reg:x3; val_offset:274689*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274689*0 + 3*171*FLEN/8, x4, x1, x2)

inst_91564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffff80000; valaddr_reg:x3; val_offset:274692*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274692*0 + 3*172*FLEN/8, x4, x1, x2)

inst_91565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffc0000; valaddr_reg:x3; val_offset:274695*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274695*0 + 3*173*FLEN/8, x4, x1, x2)

inst_91566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffe0000; valaddr_reg:x3; val_offset:274698*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274698*0 + 3*174*FLEN/8, x4, x1, x2)

inst_91567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffff0000; valaddr_reg:x3; val_offset:274701*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274701*0 + 3*175*FLEN/8, x4, x1, x2)

inst_91568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffff8000; valaddr_reg:x3; val_offset:274704*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274704*0 + 3*176*FLEN/8, x4, x1, x2)

inst_91569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffc000; valaddr_reg:x3; val_offset:274707*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274707*0 + 3*177*FLEN/8, x4, x1, x2)

inst_91570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffe000; valaddr_reg:x3; val_offset:274710*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274710*0 + 3*178*FLEN/8, x4, x1, x2)

inst_91571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffff000; valaddr_reg:x3; val_offset:274713*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274713*0 + 3*179*FLEN/8, x4, x1, x2)

inst_91572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffff800; valaddr_reg:x3; val_offset:274716*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274716*0 + 3*180*FLEN/8, x4, x1, x2)

inst_91573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffffc00; valaddr_reg:x3; val_offset:274719*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274719*0 + 3*181*FLEN/8, x4, x1, x2)

inst_91574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffffe00; valaddr_reg:x3; val_offset:274722*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274722*0 + 3*182*FLEN/8, x4, x1, x2)

inst_91575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffff00; valaddr_reg:x3; val_offset:274725*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274725*0 + 3*183*FLEN/8, x4, x1, x2)

inst_91576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffff80; valaddr_reg:x3; val_offset:274728*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274728*0 + 3*184*FLEN/8, x4, x1, x2)

inst_91577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffffc0; valaddr_reg:x3; val_offset:274731*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274731*0 + 3*185*FLEN/8, x4, x1, x2)

inst_91578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffffe0; valaddr_reg:x3; val_offset:274734*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274734*0 + 3*186*FLEN/8, x4, x1, x2)

inst_91579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffffff0; valaddr_reg:x3; val_offset:274737*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274737*0 + 3*187*FLEN/8, x4, x1, x2)

inst_91580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffffff8; valaddr_reg:x3; val_offset:274740*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274740*0 + 3*188*FLEN/8, x4, x1, x2)

inst_91581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffffffc; valaddr_reg:x3; val_offset:274743*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274743*0 + 3*189*FLEN/8, x4, x1, x2)

inst_91582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cffffffffffffe; valaddr_reg:x3; val_offset:274746*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274746*0 + 3*190*FLEN/8, x4, x1, x2)

inst_91583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbc271ede2b0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbc271ede2b0b; op2val:0x8000;
op3val:0x81cfffffffffffff; valaddr_reg:x3; val_offset:274749*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274749*0 + 3*191*FLEN/8, x4, x1, x2)

inst_91584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:274752*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274752*0 + 3*192*FLEN/8, x4, x1, x2)

inst_91585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:274755*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274755*0 + 3*193*FLEN/8, x4, x1, x2)

inst_91586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:274758*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274758*0 + 3*194*FLEN/8, x4, x1, x2)

inst_91587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:274761*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274761*0 + 3*195*FLEN/8, x4, x1, x2)

inst_91588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:274764*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274764*0 + 3*196*FLEN/8, x4, x1, x2)

inst_91589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:274767*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274767*0 + 3*197*FLEN/8, x4, x1, x2)

inst_91590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:274770*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274770*0 + 3*198*FLEN/8, x4, x1, x2)

inst_91591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:274773*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274773*0 + 3*199*FLEN/8, x4, x1, x2)

inst_91592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:274776*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274776*0 + 3*200*FLEN/8, x4, x1, x2)

inst_91593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:274779*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274779*0 + 3*201*FLEN/8, x4, x1, x2)

inst_91594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:274782*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274782*0 + 3*202*FLEN/8, x4, x1, x2)

inst_91595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:274785*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274785*0 + 3*203*FLEN/8, x4, x1, x2)

inst_91596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:274788*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274788*0 + 3*204*FLEN/8, x4, x1, x2)

inst_91597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:274791*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274791*0 + 3*205*FLEN/8, x4, x1, x2)

inst_91598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:274794*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274794*0 + 3*206*FLEN/8, x4, x1, x2)

inst_91599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:274797*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274797*0 + 3*207*FLEN/8, x4, x1, x2)

inst_91600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:274800*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274800*0 + 3*208*FLEN/8, x4, x1, x2)

inst_91601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:274803*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274803*0 + 3*209*FLEN/8, x4, x1, x2)

inst_91602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:274806*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274806*0 + 3*210*FLEN/8, x4, x1, x2)

inst_91603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:274809*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274809*0 + 3*211*FLEN/8, x4, x1, x2)

inst_91604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:274812*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274812*0 + 3*212*FLEN/8, x4, x1, x2)

inst_91605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:274815*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274815*0 + 3*213*FLEN/8, x4, x1, x2)

inst_91606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000000000; valaddr_reg:x3; val_offset:274818*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274818*0 + 3*214*FLEN/8, x4, x1, x2)

inst_91607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000000001; valaddr_reg:x3; val_offset:274821*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274821*0 + 3*215*FLEN/8, x4, x1, x2)

inst_91608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000000003; valaddr_reg:x3; val_offset:274824*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274824*0 + 3*216*FLEN/8, x4, x1, x2)

inst_91609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000000007; valaddr_reg:x3; val_offset:274827*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274827*0 + 3*217*FLEN/8, x4, x1, x2)

inst_91610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000000000f; valaddr_reg:x3; val_offset:274830*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274830*0 + 3*218*FLEN/8, x4, x1, x2)

inst_91611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000000001f; valaddr_reg:x3; val_offset:274833*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274833*0 + 3*219*FLEN/8, x4, x1, x2)

inst_91612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000000003f; valaddr_reg:x3; val_offset:274836*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274836*0 + 3*220*FLEN/8, x4, x1, x2)

inst_91613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000000007f; valaddr_reg:x3; val_offset:274839*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274839*0 + 3*221*FLEN/8, x4, x1, x2)

inst_91614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000000000ff; valaddr_reg:x3; val_offset:274842*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274842*0 + 3*222*FLEN/8, x4, x1, x2)

inst_91615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000000001ff; valaddr_reg:x3; val_offset:274845*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274845*0 + 3*223*FLEN/8, x4, x1, x2)

inst_91616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000000003ff; valaddr_reg:x3; val_offset:274848*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274848*0 + 3*224*FLEN/8, x4, x1, x2)

inst_91617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000000007ff; valaddr_reg:x3; val_offset:274851*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274851*0 + 3*225*FLEN/8, x4, x1, x2)

inst_91618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000000fff; valaddr_reg:x3; val_offset:274854*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274854*0 + 3*226*FLEN/8, x4, x1, x2)

inst_91619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000001fff; valaddr_reg:x3; val_offset:274857*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274857*0 + 3*227*FLEN/8, x4, x1, x2)

inst_91620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000003fff; valaddr_reg:x3; val_offset:274860*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274860*0 + 3*228*FLEN/8, x4, x1, x2)

inst_91621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000007fff; valaddr_reg:x3; val_offset:274863*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274863*0 + 3*229*FLEN/8, x4, x1, x2)

inst_91622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000000ffff; valaddr_reg:x3; val_offset:274866*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274866*0 + 3*230*FLEN/8, x4, x1, x2)

inst_91623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000001ffff; valaddr_reg:x3; val_offset:274869*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274869*0 + 3*231*FLEN/8, x4, x1, x2)

inst_91624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000003ffff; valaddr_reg:x3; val_offset:274872*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274872*0 + 3*232*FLEN/8, x4, x1, x2)

inst_91625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000007ffff; valaddr_reg:x3; val_offset:274875*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274875*0 + 3*233*FLEN/8, x4, x1, x2)

inst_91626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000000fffff; valaddr_reg:x3; val_offset:274878*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274878*0 + 3*234*FLEN/8, x4, x1, x2)

inst_91627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000001fffff; valaddr_reg:x3; val_offset:274881*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274881*0 + 3*235*FLEN/8, x4, x1, x2)

inst_91628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000003fffff; valaddr_reg:x3; val_offset:274884*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274884*0 + 3*236*FLEN/8, x4, x1, x2)

inst_91629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000007fffff; valaddr_reg:x3; val_offset:274887*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274887*0 + 3*237*FLEN/8, x4, x1, x2)

inst_91630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000000ffffff; valaddr_reg:x3; val_offset:274890*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274890*0 + 3*238*FLEN/8, x4, x1, x2)

inst_91631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000001ffffff; valaddr_reg:x3; val_offset:274893*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274893*0 + 3*239*FLEN/8, x4, x1, x2)

inst_91632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000003ffffff; valaddr_reg:x3; val_offset:274896*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274896*0 + 3*240*FLEN/8, x4, x1, x2)

inst_91633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000007ffffff; valaddr_reg:x3; val_offset:274899*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274899*0 + 3*241*FLEN/8, x4, x1, x2)

inst_91634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000000fffffff; valaddr_reg:x3; val_offset:274902*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274902*0 + 3*242*FLEN/8, x4, x1, x2)

inst_91635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000001fffffff; valaddr_reg:x3; val_offset:274905*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274905*0 + 3*243*FLEN/8, x4, x1, x2)

inst_91636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000003fffffff; valaddr_reg:x3; val_offset:274908*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274908*0 + 3*244*FLEN/8, x4, x1, x2)

inst_91637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000007fffffff; valaddr_reg:x3; val_offset:274911*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274911*0 + 3*245*FLEN/8, x4, x1, x2)

inst_91638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900000ffffffff; valaddr_reg:x3; val_offset:274914*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274914*0 + 3*246*FLEN/8, x4, x1, x2)

inst_91639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900001ffffffff; valaddr_reg:x3; val_offset:274917*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274917*0 + 3*247*FLEN/8, x4, x1, x2)

inst_91640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900003ffffffff; valaddr_reg:x3; val_offset:274920*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274920*0 + 3*248*FLEN/8, x4, x1, x2)

inst_91641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900007ffffffff; valaddr_reg:x3; val_offset:274923*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274923*0 + 3*249*FLEN/8, x4, x1, x2)

inst_91642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390000fffffffff; valaddr_reg:x3; val_offset:274926*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274926*0 + 3*250*FLEN/8, x4, x1, x2)

inst_91643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390001fffffffff; valaddr_reg:x3; val_offset:274929*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274929*0 + 3*251*FLEN/8, x4, x1, x2)

inst_91644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390003fffffffff; valaddr_reg:x3; val_offset:274932*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274932*0 + 3*252*FLEN/8, x4, x1, x2)

inst_91645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390007fffffffff; valaddr_reg:x3; val_offset:274935*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274935*0 + 3*253*FLEN/8, x4, x1, x2)

inst_91646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839000ffffffffff; valaddr_reg:x3; val_offset:274938*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274938*0 + 3*254*FLEN/8, x4, x1, x2)

inst_91647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839001ffffffffff; valaddr_reg:x3; val_offset:274941*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274941*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_91648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839003ffffffffff; valaddr_reg:x3; val_offset:274944*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274944*0 + 3*256*FLEN/8, x4, x1, x2)

inst_91649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839007ffffffffff; valaddr_reg:x3; val_offset:274947*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274947*0 + 3*257*FLEN/8, x4, x1, x2)

inst_91650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83900fffffffffff; valaddr_reg:x3; val_offset:274950*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274950*0 + 3*258*FLEN/8, x4, x1, x2)

inst_91651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83901fffffffffff; valaddr_reg:x3; val_offset:274953*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274953*0 + 3*259*FLEN/8, x4, x1, x2)

inst_91652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83903fffffffffff; valaddr_reg:x3; val_offset:274956*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274956*0 + 3*260*FLEN/8, x4, x1, x2)

inst_91653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x83907fffffffffff; valaddr_reg:x3; val_offset:274959*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274959*0 + 3*261*FLEN/8, x4, x1, x2)

inst_91654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8390ffffffffffff; valaddr_reg:x3; val_offset:274962*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274962*0 + 3*262*FLEN/8, x4, x1, x2)

inst_91655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8391ffffffffffff; valaddr_reg:x3; val_offset:274965*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274965*0 + 3*263*FLEN/8, x4, x1, x2)

inst_91656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8393ffffffffffff; valaddr_reg:x3; val_offset:274968*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274968*0 + 3*264*FLEN/8, x4, x1, x2)

inst_91657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8397ffffffffffff; valaddr_reg:x3; val_offset:274971*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274971*0 + 3*265*FLEN/8, x4, x1, x2)

inst_91658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x8398000000000000; valaddr_reg:x3; val_offset:274974*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274974*0 + 3*266*FLEN/8, x4, x1, x2)

inst_91659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839c000000000000; valaddr_reg:x3; val_offset:274977*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274977*0 + 3*267*FLEN/8, x4, x1, x2)

inst_91660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839e000000000000; valaddr_reg:x3; val_offset:274980*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274980*0 + 3*268*FLEN/8, x4, x1, x2)

inst_91661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839f000000000000; valaddr_reg:x3; val_offset:274983*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274983*0 + 3*269*FLEN/8, x4, x1, x2)

inst_91662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839f800000000000; valaddr_reg:x3; val_offset:274986*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274986*0 + 3*270*FLEN/8, x4, x1, x2)

inst_91663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fc00000000000; valaddr_reg:x3; val_offset:274989*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274989*0 + 3*271*FLEN/8, x4, x1, x2)

inst_91664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fe00000000000; valaddr_reg:x3; val_offset:274992*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274992*0 + 3*272*FLEN/8, x4, x1, x2)

inst_91665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ff00000000000; valaddr_reg:x3; val_offset:274995*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274995*0 + 3*273*FLEN/8, x4, x1, x2)

inst_91666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ff80000000000; valaddr_reg:x3; val_offset:274998*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274998*0 + 3*274*FLEN/8, x4, x1, x2)

inst_91667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffc0000000000; valaddr_reg:x3; val_offset:275001*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275001*0 + 3*275*FLEN/8, x4, x1, x2)

inst_91668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffe0000000000; valaddr_reg:x3; val_offset:275004*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275004*0 + 3*276*FLEN/8, x4, x1, x2)

inst_91669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fff0000000000; valaddr_reg:x3; val_offset:275007*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275007*0 + 3*277*FLEN/8, x4, x1, x2)

inst_91670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fff8000000000; valaddr_reg:x3; val_offset:275010*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275010*0 + 3*278*FLEN/8, x4, x1, x2)

inst_91671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffc000000000; valaddr_reg:x3; val_offset:275013*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275013*0 + 3*279*FLEN/8, x4, x1, x2)

inst_91672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffe000000000; valaddr_reg:x3; val_offset:275016*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275016*0 + 3*280*FLEN/8, x4, x1, x2)

inst_91673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffff000000000; valaddr_reg:x3; val_offset:275019*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275019*0 + 3*281*FLEN/8, x4, x1, x2)

inst_91674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffff800000000; valaddr_reg:x3; val_offset:275022*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275022*0 + 3*282*FLEN/8, x4, x1, x2)

inst_91675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffc00000000; valaddr_reg:x3; val_offset:275025*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275025*0 + 3*283*FLEN/8, x4, x1, x2)

inst_91676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffe00000000; valaddr_reg:x3; val_offset:275028*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275028*0 + 3*284*FLEN/8, x4, x1, x2)

inst_91677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffff00000000; valaddr_reg:x3; val_offset:275031*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275031*0 + 3*285*FLEN/8, x4, x1, x2)

inst_91678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffff80000000; valaddr_reg:x3; val_offset:275034*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275034*0 + 3*286*FLEN/8, x4, x1, x2)

inst_91679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffc0000000; valaddr_reg:x3; val_offset:275037*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275037*0 + 3*287*FLEN/8, x4, x1, x2)

inst_91680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffe0000000; valaddr_reg:x3; val_offset:275040*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275040*0 + 3*288*FLEN/8, x4, x1, x2)

inst_91681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffff0000000; valaddr_reg:x3; val_offset:275043*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275043*0 + 3*289*FLEN/8, x4, x1, x2)

inst_91682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffff8000000; valaddr_reg:x3; val_offset:275046*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275046*0 + 3*290*FLEN/8, x4, x1, x2)

inst_91683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffc000000; valaddr_reg:x3; val_offset:275049*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275049*0 + 3*291*FLEN/8, x4, x1, x2)

inst_91684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffe000000; valaddr_reg:x3; val_offset:275052*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275052*0 + 3*292*FLEN/8, x4, x1, x2)

inst_91685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffff000000; valaddr_reg:x3; val_offset:275055*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275055*0 + 3*293*FLEN/8, x4, x1, x2)

inst_91686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffff800000; valaddr_reg:x3; val_offset:275058*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275058*0 + 3*294*FLEN/8, x4, x1, x2)

inst_91687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffc00000; valaddr_reg:x3; val_offset:275061*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275061*0 + 3*295*FLEN/8, x4, x1, x2)

inst_91688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffe00000; valaddr_reg:x3; val_offset:275064*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275064*0 + 3*296*FLEN/8, x4, x1, x2)

inst_91689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffff00000; valaddr_reg:x3; val_offset:275067*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275067*0 + 3*297*FLEN/8, x4, x1, x2)

inst_91690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffff80000; valaddr_reg:x3; val_offset:275070*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275070*0 + 3*298*FLEN/8, x4, x1, x2)

inst_91691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffc0000; valaddr_reg:x3; val_offset:275073*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275073*0 + 3*299*FLEN/8, x4, x1, x2)

inst_91692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffe0000; valaddr_reg:x3; val_offset:275076*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275076*0 + 3*300*FLEN/8, x4, x1, x2)

inst_91693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffff0000; valaddr_reg:x3; val_offset:275079*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275079*0 + 3*301*FLEN/8, x4, x1, x2)

inst_91694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffff8000; valaddr_reg:x3; val_offset:275082*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275082*0 + 3*302*FLEN/8, x4, x1, x2)

inst_91695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffc000; valaddr_reg:x3; val_offset:275085*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275085*0 + 3*303*FLEN/8, x4, x1, x2)

inst_91696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffe000; valaddr_reg:x3; val_offset:275088*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275088*0 + 3*304*FLEN/8, x4, x1, x2)

inst_91697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffff000; valaddr_reg:x3; val_offset:275091*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275091*0 + 3*305*FLEN/8, x4, x1, x2)

inst_91698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffff800; valaddr_reg:x3; val_offset:275094*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275094*0 + 3*306*FLEN/8, x4, x1, x2)

inst_91699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffffc00; valaddr_reg:x3; val_offset:275097*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275097*0 + 3*307*FLEN/8, x4, x1, x2)

inst_91700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffffe00; valaddr_reg:x3; val_offset:275100*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275100*0 + 3*308*FLEN/8, x4, x1, x2)

inst_91701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffff00; valaddr_reg:x3; val_offset:275103*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275103*0 + 3*309*FLEN/8, x4, x1, x2)

inst_91702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffff80; valaddr_reg:x3; val_offset:275106*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275106*0 + 3*310*FLEN/8, x4, x1, x2)

inst_91703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffffc0; valaddr_reg:x3; val_offset:275109*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275109*0 + 3*311*FLEN/8, x4, x1, x2)

inst_91704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffffe0; valaddr_reg:x3; val_offset:275112*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275112*0 + 3*312*FLEN/8, x4, x1, x2)

inst_91705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffffff0; valaddr_reg:x3; val_offset:275115*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275115*0 + 3*313*FLEN/8, x4, x1, x2)

inst_91706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffffff8; valaddr_reg:x3; val_offset:275118*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275118*0 + 3*314*FLEN/8, x4, x1, x2)

inst_91707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffffffc; valaddr_reg:x3; val_offset:275121*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275121*0 + 3*315*FLEN/8, x4, x1, x2)

inst_91708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839ffffffffffffe; valaddr_reg:x3; val_offset:275124*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275124*0 + 3*316*FLEN/8, x4, x1, x2)

inst_91709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc25125e63e39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc25125e63e39; op2val:0x8000;
op3val:0x839fffffffffffff; valaddr_reg:x3; val_offset:275127*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275127*0 + 3*317*FLEN/8, x4, x1, x2)

inst_91710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:275130*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275130*0 + 3*318*FLEN/8, x4, x1, x2)

inst_91711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:275133*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275133*0 + 3*319*FLEN/8, x4, x1, x2)

inst_91712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:275136*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275136*0 + 3*320*FLEN/8, x4, x1, x2)

inst_91713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:275139*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275139*0 + 3*321*FLEN/8, x4, x1, x2)

inst_91714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:275142*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275142*0 + 3*322*FLEN/8, x4, x1, x2)

inst_91715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:275145*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275145*0 + 3*323*FLEN/8, x4, x1, x2)

inst_91716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:275148*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275148*0 + 3*324*FLEN/8, x4, x1, x2)

inst_91717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:275151*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275151*0 + 3*325*FLEN/8, x4, x1, x2)

inst_91718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:275154*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275154*0 + 3*326*FLEN/8, x4, x1, x2)

inst_91719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:275157*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275157*0 + 3*327*FLEN/8, x4, x1, x2)

inst_91720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:275160*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275160*0 + 3*328*FLEN/8, x4, x1, x2)

inst_91721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:275163*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275163*0 + 3*329*FLEN/8, x4, x1, x2)

inst_91722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:275166*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275166*0 + 3*330*FLEN/8, x4, x1, x2)

inst_91723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:275169*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275169*0 + 3*331*FLEN/8, x4, x1, x2)

inst_91724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:275172*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275172*0 + 3*332*FLEN/8, x4, x1, x2)

inst_91725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:275175*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275175*0 + 3*333*FLEN/8, x4, x1, x2)

inst_91726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:275178*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275178*0 + 3*334*FLEN/8, x4, x1, x2)

inst_91727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:275181*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275181*0 + 3*335*FLEN/8, x4, x1, x2)

inst_91728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:275184*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275184*0 + 3*336*FLEN/8, x4, x1, x2)

inst_91729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:275187*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275187*0 + 3*337*FLEN/8, x4, x1, x2)

inst_91730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:275190*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275190*0 + 3*338*FLEN/8, x4, x1, x2)

inst_91731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:275193*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275193*0 + 3*339*FLEN/8, x4, x1, x2)

inst_91732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000000000; valaddr_reg:x3; val_offset:275196*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275196*0 + 3*340*FLEN/8, x4, x1, x2)

inst_91733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000000001; valaddr_reg:x3; val_offset:275199*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275199*0 + 3*341*FLEN/8, x4, x1, x2)

inst_91734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000000003; valaddr_reg:x3; val_offset:275202*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275202*0 + 3*342*FLEN/8, x4, x1, x2)

inst_91735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000000007; valaddr_reg:x3; val_offset:275205*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275205*0 + 3*343*FLEN/8, x4, x1, x2)

inst_91736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000000000f; valaddr_reg:x3; val_offset:275208*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275208*0 + 3*344*FLEN/8, x4, x1, x2)

inst_91737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000000001f; valaddr_reg:x3; val_offset:275211*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275211*0 + 3*345*FLEN/8, x4, x1, x2)

inst_91738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000000003f; valaddr_reg:x3; val_offset:275214*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275214*0 + 3*346*FLEN/8, x4, x1, x2)

inst_91739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000000007f; valaddr_reg:x3; val_offset:275217*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275217*0 + 3*347*FLEN/8, x4, x1, x2)

inst_91740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000000000ff; valaddr_reg:x3; val_offset:275220*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275220*0 + 3*348*FLEN/8, x4, x1, x2)

inst_91741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000000001ff; valaddr_reg:x3; val_offset:275223*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275223*0 + 3*349*FLEN/8, x4, x1, x2)

inst_91742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000000003ff; valaddr_reg:x3; val_offset:275226*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275226*0 + 3*350*FLEN/8, x4, x1, x2)

inst_91743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000000007ff; valaddr_reg:x3; val_offset:275229*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275229*0 + 3*351*FLEN/8, x4, x1, x2)

inst_91744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000000fff; valaddr_reg:x3; val_offset:275232*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275232*0 + 3*352*FLEN/8, x4, x1, x2)

inst_91745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000001fff; valaddr_reg:x3; val_offset:275235*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275235*0 + 3*353*FLEN/8, x4, x1, x2)

inst_91746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000003fff; valaddr_reg:x3; val_offset:275238*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275238*0 + 3*354*FLEN/8, x4, x1, x2)

inst_91747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000007fff; valaddr_reg:x3; val_offset:275241*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275241*0 + 3*355*FLEN/8, x4, x1, x2)

inst_91748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000000ffff; valaddr_reg:x3; val_offset:275244*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275244*0 + 3*356*FLEN/8, x4, x1, x2)

inst_91749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000001ffff; valaddr_reg:x3; val_offset:275247*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275247*0 + 3*357*FLEN/8, x4, x1, x2)

inst_91750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000003ffff; valaddr_reg:x3; val_offset:275250*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275250*0 + 3*358*FLEN/8, x4, x1, x2)

inst_91751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000007ffff; valaddr_reg:x3; val_offset:275253*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275253*0 + 3*359*FLEN/8, x4, x1, x2)

inst_91752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000000fffff; valaddr_reg:x3; val_offset:275256*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275256*0 + 3*360*FLEN/8, x4, x1, x2)

inst_91753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000001fffff; valaddr_reg:x3; val_offset:275259*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275259*0 + 3*361*FLEN/8, x4, x1, x2)

inst_91754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000003fffff; valaddr_reg:x3; val_offset:275262*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275262*0 + 3*362*FLEN/8, x4, x1, x2)

inst_91755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000007fffff; valaddr_reg:x3; val_offset:275265*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275265*0 + 3*363*FLEN/8, x4, x1, x2)

inst_91756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000000ffffff; valaddr_reg:x3; val_offset:275268*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275268*0 + 3*364*FLEN/8, x4, x1, x2)

inst_91757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000001ffffff; valaddr_reg:x3; val_offset:275271*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275271*0 + 3*365*FLEN/8, x4, x1, x2)

inst_91758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000003ffffff; valaddr_reg:x3; val_offset:275274*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275274*0 + 3*366*FLEN/8, x4, x1, x2)

inst_91759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000007ffffff; valaddr_reg:x3; val_offset:275277*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275277*0 + 3*367*FLEN/8, x4, x1, x2)

inst_91760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000000fffffff; valaddr_reg:x3; val_offset:275280*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275280*0 + 3*368*FLEN/8, x4, x1, x2)

inst_91761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000001fffffff; valaddr_reg:x3; val_offset:275283*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275283*0 + 3*369*FLEN/8, x4, x1, x2)

inst_91762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000003fffffff; valaddr_reg:x3; val_offset:275286*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275286*0 + 3*370*FLEN/8, x4, x1, x2)

inst_91763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000007fffffff; valaddr_reg:x3; val_offset:275289*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275289*0 + 3*371*FLEN/8, x4, x1, x2)

inst_91764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500000ffffffff; valaddr_reg:x3; val_offset:275292*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275292*0 + 3*372*FLEN/8, x4, x1, x2)

inst_91765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500001ffffffff; valaddr_reg:x3; val_offset:275295*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275295*0 + 3*373*FLEN/8, x4, x1, x2)

inst_91766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500003ffffffff; valaddr_reg:x3; val_offset:275298*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275298*0 + 3*374*FLEN/8, x4, x1, x2)

inst_91767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500007ffffffff; valaddr_reg:x3; val_offset:275301*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275301*0 + 3*375*FLEN/8, x4, x1, x2)

inst_91768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350000fffffffff; valaddr_reg:x3; val_offset:275304*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275304*0 + 3*376*FLEN/8, x4, x1, x2)

inst_91769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350001fffffffff; valaddr_reg:x3; val_offset:275307*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275307*0 + 3*377*FLEN/8, x4, x1, x2)

inst_91770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350003fffffffff; valaddr_reg:x3; val_offset:275310*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275310*0 + 3*378*FLEN/8, x4, x1, x2)

inst_91771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350007fffffffff; valaddr_reg:x3; val_offset:275313*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275313*0 + 3*379*FLEN/8, x4, x1, x2)

inst_91772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35000ffffffffff; valaddr_reg:x3; val_offset:275316*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275316*0 + 3*380*FLEN/8, x4, x1, x2)

inst_91773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35001ffffffffff; valaddr_reg:x3; val_offset:275319*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275319*0 + 3*381*FLEN/8, x4, x1, x2)

inst_91774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35003ffffffffff; valaddr_reg:x3; val_offset:275322*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275322*0 + 3*382*FLEN/8, x4, x1, x2)

inst_91775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35007ffffffffff; valaddr_reg:x3; val_offset:275325*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275325*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_91776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3500fffffffffff; valaddr_reg:x3; val_offset:275328*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275328*0 + 3*384*FLEN/8, x4, x1, x2)

inst_91777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3501fffffffffff; valaddr_reg:x3; val_offset:275331*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275331*0 + 3*385*FLEN/8, x4, x1, x2)

inst_91778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3503fffffffffff; valaddr_reg:x3; val_offset:275334*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275334*0 + 3*386*FLEN/8, x4, x1, x2)

inst_91779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x3507fffffffffff; valaddr_reg:x3; val_offset:275337*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275337*0 + 3*387*FLEN/8, x4, x1, x2)

inst_91780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x350ffffffffffff; valaddr_reg:x3; val_offset:275340*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275340*0 + 3*388*FLEN/8, x4, x1, x2)

inst_91781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x351ffffffffffff; valaddr_reg:x3; val_offset:275343*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275343*0 + 3*389*FLEN/8, x4, x1, x2)

inst_91782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x353ffffffffffff; valaddr_reg:x3; val_offset:275346*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275346*0 + 3*390*FLEN/8, x4, x1, x2)

inst_91783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x357ffffffffffff; valaddr_reg:x3; val_offset:275349*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275349*0 + 3*391*FLEN/8, x4, x1, x2)

inst_91784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x358000000000000; valaddr_reg:x3; val_offset:275352*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275352*0 + 3*392*FLEN/8, x4, x1, x2)

inst_91785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35c000000000000; valaddr_reg:x3; val_offset:275355*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275355*0 + 3*393*FLEN/8, x4, x1, x2)

inst_91786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35e000000000000; valaddr_reg:x3; val_offset:275358*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275358*0 + 3*394*FLEN/8, x4, x1, x2)

inst_91787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35f000000000000; valaddr_reg:x3; val_offset:275361*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275361*0 + 3*395*FLEN/8, x4, x1, x2)

inst_91788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35f800000000000; valaddr_reg:x3; val_offset:275364*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275364*0 + 3*396*FLEN/8, x4, x1, x2)

inst_91789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fc00000000000; valaddr_reg:x3; val_offset:275367*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275367*0 + 3*397*FLEN/8, x4, x1, x2)

inst_91790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fe00000000000; valaddr_reg:x3; val_offset:275370*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275370*0 + 3*398*FLEN/8, x4, x1, x2)

inst_91791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ff00000000000; valaddr_reg:x3; val_offset:275373*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275373*0 + 3*399*FLEN/8, x4, x1, x2)

inst_91792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ff80000000000; valaddr_reg:x3; val_offset:275376*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275376*0 + 3*400*FLEN/8, x4, x1, x2)

inst_91793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffc0000000000; valaddr_reg:x3; val_offset:275379*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275379*0 + 3*401*FLEN/8, x4, x1, x2)

inst_91794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffe0000000000; valaddr_reg:x3; val_offset:275382*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275382*0 + 3*402*FLEN/8, x4, x1, x2)

inst_91795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fff0000000000; valaddr_reg:x3; val_offset:275385*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275385*0 + 3*403*FLEN/8, x4, x1, x2)

inst_91796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fff8000000000; valaddr_reg:x3; val_offset:275388*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275388*0 + 3*404*FLEN/8, x4, x1, x2)

inst_91797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffc000000000; valaddr_reg:x3; val_offset:275391*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275391*0 + 3*405*FLEN/8, x4, x1, x2)

inst_91798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffe000000000; valaddr_reg:x3; val_offset:275394*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275394*0 + 3*406*FLEN/8, x4, x1, x2)

inst_91799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffff000000000; valaddr_reg:x3; val_offset:275397*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275397*0 + 3*407*FLEN/8, x4, x1, x2)

inst_91800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffff800000000; valaddr_reg:x3; val_offset:275400*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275400*0 + 3*408*FLEN/8, x4, x1, x2)

inst_91801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffc00000000; valaddr_reg:x3; val_offset:275403*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275403*0 + 3*409*FLEN/8, x4, x1, x2)

inst_91802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffe00000000; valaddr_reg:x3; val_offset:275406*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275406*0 + 3*410*FLEN/8, x4, x1, x2)

inst_91803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffff00000000; valaddr_reg:x3; val_offset:275409*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275409*0 + 3*411*FLEN/8, x4, x1, x2)

inst_91804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffff80000000; valaddr_reg:x3; val_offset:275412*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275412*0 + 3*412*FLEN/8, x4, x1, x2)

inst_91805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffc0000000; valaddr_reg:x3; val_offset:275415*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275415*0 + 3*413*FLEN/8, x4, x1, x2)

inst_91806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffe0000000; valaddr_reg:x3; val_offset:275418*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275418*0 + 3*414*FLEN/8, x4, x1, x2)

inst_91807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffff0000000; valaddr_reg:x3; val_offset:275421*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275421*0 + 3*415*FLEN/8, x4, x1, x2)

inst_91808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffff8000000; valaddr_reg:x3; val_offset:275424*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275424*0 + 3*416*FLEN/8, x4, x1, x2)

inst_91809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffc000000; valaddr_reg:x3; val_offset:275427*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275427*0 + 3*417*FLEN/8, x4, x1, x2)

inst_91810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffe000000; valaddr_reg:x3; val_offset:275430*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275430*0 + 3*418*FLEN/8, x4, x1, x2)

inst_91811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffff000000; valaddr_reg:x3; val_offset:275433*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275433*0 + 3*419*FLEN/8, x4, x1, x2)

inst_91812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffff800000; valaddr_reg:x3; val_offset:275436*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275436*0 + 3*420*FLEN/8, x4, x1, x2)

inst_91813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffc00000; valaddr_reg:x3; val_offset:275439*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275439*0 + 3*421*FLEN/8, x4, x1, x2)

inst_91814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffe00000; valaddr_reg:x3; val_offset:275442*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275442*0 + 3*422*FLEN/8, x4, x1, x2)

inst_91815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffff00000; valaddr_reg:x3; val_offset:275445*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275445*0 + 3*423*FLEN/8, x4, x1, x2)

inst_91816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffff80000; valaddr_reg:x3; val_offset:275448*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275448*0 + 3*424*FLEN/8, x4, x1, x2)

inst_91817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffc0000; valaddr_reg:x3; val_offset:275451*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275451*0 + 3*425*FLEN/8, x4, x1, x2)

inst_91818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffe0000; valaddr_reg:x3; val_offset:275454*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275454*0 + 3*426*FLEN/8, x4, x1, x2)

inst_91819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffff0000; valaddr_reg:x3; val_offset:275457*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275457*0 + 3*427*FLEN/8, x4, x1, x2)

inst_91820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffff8000; valaddr_reg:x3; val_offset:275460*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275460*0 + 3*428*FLEN/8, x4, x1, x2)

inst_91821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffc000; valaddr_reg:x3; val_offset:275463*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275463*0 + 3*429*FLEN/8, x4, x1, x2)

inst_91822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffe000; valaddr_reg:x3; val_offset:275466*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275466*0 + 3*430*FLEN/8, x4, x1, x2)

inst_91823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffff000; valaddr_reg:x3; val_offset:275469*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275469*0 + 3*431*FLEN/8, x4, x1, x2)

inst_91824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffff800; valaddr_reg:x3; val_offset:275472*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275472*0 + 3*432*FLEN/8, x4, x1, x2)

inst_91825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffffc00; valaddr_reg:x3; val_offset:275475*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275475*0 + 3*433*FLEN/8, x4, x1, x2)

inst_91826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffffe00; valaddr_reg:x3; val_offset:275478*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275478*0 + 3*434*FLEN/8, x4, x1, x2)

inst_91827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffff00; valaddr_reg:x3; val_offset:275481*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275481*0 + 3*435*FLEN/8, x4, x1, x2)

inst_91828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffff80; valaddr_reg:x3; val_offset:275484*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275484*0 + 3*436*FLEN/8, x4, x1, x2)

inst_91829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffffc0; valaddr_reg:x3; val_offset:275487*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275487*0 + 3*437*FLEN/8, x4, x1, x2)

inst_91830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffffe0; valaddr_reg:x3; val_offset:275490*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275490*0 + 3*438*FLEN/8, x4, x1, x2)

inst_91831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffffff0; valaddr_reg:x3; val_offset:275493*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275493*0 + 3*439*FLEN/8, x4, x1, x2)

inst_91832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffffff8; valaddr_reg:x3; val_offset:275496*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275496*0 + 3*440*FLEN/8, x4, x1, x2)

inst_91833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffffffc; valaddr_reg:x3; val_offset:275499*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275499*0 + 3*441*FLEN/8, x4, x1, x2)

inst_91834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35ffffffffffffe; valaddr_reg:x3; val_offset:275502*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275502*0 + 3*442*FLEN/8, x4, x1, x2)

inst_91835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facca58e39cda56; op2val:0x0;
op3val:0x35fffffffffffff; valaddr_reg:x3; val_offset:275505*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275505*0 + 3*443*FLEN/8, x4, x1, x2)

inst_91836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:275508*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275508*0 + 3*444*FLEN/8, x4, x1, x2)

inst_91837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:275511*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275511*0 + 3*445*FLEN/8, x4, x1, x2)

inst_91838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:275514*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275514*0 + 3*446*FLEN/8, x4, x1, x2)

inst_91839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:275517*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275517*0 + 3*447*FLEN/8, x4, x1, x2)

inst_91840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:275520*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275520*0 + 3*448*FLEN/8, x4, x1, x2)

inst_91841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:275523*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275523*0 + 3*449*FLEN/8, x4, x1, x2)

inst_91842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:275526*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275526*0 + 3*450*FLEN/8, x4, x1, x2)

inst_91843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:275529*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275529*0 + 3*451*FLEN/8, x4, x1, x2)

inst_91844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:275532*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275532*0 + 3*452*FLEN/8, x4, x1, x2)

inst_91845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:275535*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275535*0 + 3*453*FLEN/8, x4, x1, x2)

inst_91846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:275538*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275538*0 + 3*454*FLEN/8, x4, x1, x2)

inst_91847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:275541*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275541*0 + 3*455*FLEN/8, x4, x1, x2)

inst_91848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:275544*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275544*0 + 3*456*FLEN/8, x4, x1, x2)

inst_91849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:275547*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275547*0 + 3*457*FLEN/8, x4, x1, x2)

inst_91850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:275550*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275550*0 + 3*458*FLEN/8, x4, x1, x2)

inst_91851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:275553*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275553*0 + 3*459*FLEN/8, x4, x1, x2)

inst_91852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:275556*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275556*0 + 3*460*FLEN/8, x4, x1, x2)

inst_91853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:275559*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275559*0 + 3*461*FLEN/8, x4, x1, x2)

inst_91854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:275562*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275562*0 + 3*462*FLEN/8, x4, x1, x2)

inst_91855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:275565*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275565*0 + 3*463*FLEN/8, x4, x1, x2)

inst_91856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:275568*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275568*0 + 3*464*FLEN/8, x4, x1, x2)

inst_91857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:275571*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275571*0 + 3*465*FLEN/8, x4, x1, x2)

inst_91858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000000000; valaddr_reg:x3; val_offset:275574*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275574*0 + 3*466*FLEN/8, x4, x1, x2)

inst_91859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000000001; valaddr_reg:x3; val_offset:275577*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275577*0 + 3*467*FLEN/8, x4, x1, x2)

inst_91860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000000003; valaddr_reg:x3; val_offset:275580*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275580*0 + 3*468*FLEN/8, x4, x1, x2)

inst_91861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000000007; valaddr_reg:x3; val_offset:275583*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275583*0 + 3*469*FLEN/8, x4, x1, x2)

inst_91862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000000000f; valaddr_reg:x3; val_offset:275586*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275586*0 + 3*470*FLEN/8, x4, x1, x2)

inst_91863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000000001f; valaddr_reg:x3; val_offset:275589*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275589*0 + 3*471*FLEN/8, x4, x1, x2)

inst_91864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000000003f; valaddr_reg:x3; val_offset:275592*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275592*0 + 3*472*FLEN/8, x4, x1, x2)

inst_91865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000000007f; valaddr_reg:x3; val_offset:275595*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275595*0 + 3*473*FLEN/8, x4, x1, x2)

inst_91866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000000000ff; valaddr_reg:x3; val_offset:275598*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275598*0 + 3*474*FLEN/8, x4, x1, x2)

inst_91867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000000001ff; valaddr_reg:x3; val_offset:275601*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275601*0 + 3*475*FLEN/8, x4, x1, x2)

inst_91868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000000003ff; valaddr_reg:x3; val_offset:275604*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275604*0 + 3*476*FLEN/8, x4, x1, x2)

inst_91869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000000007ff; valaddr_reg:x3; val_offset:275607*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275607*0 + 3*477*FLEN/8, x4, x1, x2)

inst_91870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000000fff; valaddr_reg:x3; val_offset:275610*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275610*0 + 3*478*FLEN/8, x4, x1, x2)

inst_91871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000001fff; valaddr_reg:x3; val_offset:275613*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275613*0 + 3*479*FLEN/8, x4, x1, x2)

inst_91872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000003fff; valaddr_reg:x3; val_offset:275616*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275616*0 + 3*480*FLEN/8, x4, x1, x2)

inst_91873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000007fff; valaddr_reg:x3; val_offset:275619*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275619*0 + 3*481*FLEN/8, x4, x1, x2)

inst_91874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000000ffff; valaddr_reg:x3; val_offset:275622*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275622*0 + 3*482*FLEN/8, x4, x1, x2)

inst_91875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000001ffff; valaddr_reg:x3; val_offset:275625*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275625*0 + 3*483*FLEN/8, x4, x1, x2)

inst_91876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000003ffff; valaddr_reg:x3; val_offset:275628*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275628*0 + 3*484*FLEN/8, x4, x1, x2)

inst_91877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000007ffff; valaddr_reg:x3; val_offset:275631*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275631*0 + 3*485*FLEN/8, x4, x1, x2)

inst_91878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000000fffff; valaddr_reg:x3; val_offset:275634*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275634*0 + 3*486*FLEN/8, x4, x1, x2)

inst_91879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000001fffff; valaddr_reg:x3; val_offset:275637*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275637*0 + 3*487*FLEN/8, x4, x1, x2)

inst_91880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000003fffff; valaddr_reg:x3; val_offset:275640*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275640*0 + 3*488*FLEN/8, x4, x1, x2)

inst_91881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000007fffff; valaddr_reg:x3; val_offset:275643*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275643*0 + 3*489*FLEN/8, x4, x1, x2)

inst_91882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000000ffffff; valaddr_reg:x3; val_offset:275646*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275646*0 + 3*490*FLEN/8, x4, x1, x2)

inst_91883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000001ffffff; valaddr_reg:x3; val_offset:275649*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275649*0 + 3*491*FLEN/8, x4, x1, x2)

inst_91884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000003ffffff; valaddr_reg:x3; val_offset:275652*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275652*0 + 3*492*FLEN/8, x4, x1, x2)

inst_91885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000007ffffff; valaddr_reg:x3; val_offset:275655*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275655*0 + 3*493*FLEN/8, x4, x1, x2)

inst_91886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000000fffffff; valaddr_reg:x3; val_offset:275658*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275658*0 + 3*494*FLEN/8, x4, x1, x2)

inst_91887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000001fffffff; valaddr_reg:x3; val_offset:275661*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275661*0 + 3*495*FLEN/8, x4, x1, x2)

inst_91888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000003fffffff; valaddr_reg:x3; val_offset:275664*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275664*0 + 3*496*FLEN/8, x4, x1, x2)

inst_91889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000007fffffff; valaddr_reg:x3; val_offset:275667*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275667*0 + 3*497*FLEN/8, x4, x1, x2)

inst_91890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00000ffffffff; valaddr_reg:x3; val_offset:275670*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275670*0 + 3*498*FLEN/8, x4, x1, x2)

inst_91891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00001ffffffff; valaddr_reg:x3; val_offset:275673*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275673*0 + 3*499*FLEN/8, x4, x1, x2)

inst_91892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00003ffffffff; valaddr_reg:x3; val_offset:275676*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275676*0 + 3*500*FLEN/8, x4, x1, x2)

inst_91893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00007ffffffff; valaddr_reg:x3; val_offset:275679*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275679*0 + 3*501*FLEN/8, x4, x1, x2)

inst_91894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0000fffffffff; valaddr_reg:x3; val_offset:275682*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275682*0 + 3*502*FLEN/8, x4, x1, x2)

inst_91895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0001fffffffff; valaddr_reg:x3; val_offset:275685*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275685*0 + 3*503*FLEN/8, x4, x1, x2)

inst_91896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0003fffffffff; valaddr_reg:x3; val_offset:275688*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275688*0 + 3*504*FLEN/8, x4, x1, x2)

inst_91897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0007fffffffff; valaddr_reg:x3; val_offset:275691*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275691*0 + 3*505*FLEN/8, x4, x1, x2)

inst_91898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d000ffffffffff; valaddr_reg:x3; val_offset:275694*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275694*0 + 3*506*FLEN/8, x4, x1, x2)

inst_91899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d001ffffffffff; valaddr_reg:x3; val_offset:275697*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275697*0 + 3*507*FLEN/8, x4, x1, x2)

inst_91900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d003ffffffffff; valaddr_reg:x3; val_offset:275700*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275700*0 + 3*508*FLEN/8, x4, x1, x2)

inst_91901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d007ffffffffff; valaddr_reg:x3; val_offset:275703*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275703*0 + 3*509*FLEN/8, x4, x1, x2)

inst_91902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d00fffffffffff; valaddr_reg:x3; val_offset:275706*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275706*0 + 3*510*FLEN/8, x4, x1, x2)

inst_91903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d01fffffffffff; valaddr_reg:x3; val_offset:275709*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275709*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_91904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d03fffffffffff; valaddr_reg:x3; val_offset:275712*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275712*0 + 3*512*FLEN/8, x4, x1, x2)

inst_91905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d07fffffffffff; valaddr_reg:x3; val_offset:275715*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275715*0 + 3*513*FLEN/8, x4, x1, x2)

inst_91906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d0ffffffffffff; valaddr_reg:x3; val_offset:275718*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275718*0 + 3*514*FLEN/8, x4, x1, x2)

inst_91907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d1ffffffffffff; valaddr_reg:x3; val_offset:275721*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275721*0 + 3*515*FLEN/8, x4, x1, x2)

inst_91908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d3ffffffffffff; valaddr_reg:x3; val_offset:275724*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275724*0 + 3*516*FLEN/8, x4, x1, x2)

inst_91909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d7ffffffffffff; valaddr_reg:x3; val_offset:275727*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275727*0 + 3*517*FLEN/8, x4, x1, x2)

inst_91910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3d8000000000000; valaddr_reg:x3; val_offset:275730*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275730*0 + 3*518*FLEN/8, x4, x1, x2)

inst_91911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dc000000000000; valaddr_reg:x3; val_offset:275733*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275733*0 + 3*519*FLEN/8, x4, x1, x2)

inst_91912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3de000000000000; valaddr_reg:x3; val_offset:275736*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275736*0 + 3*520*FLEN/8, x4, x1, x2)

inst_91913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3df000000000000; valaddr_reg:x3; val_offset:275739*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275739*0 + 3*521*FLEN/8, x4, x1, x2)

inst_91914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3df800000000000; valaddr_reg:x3; val_offset:275742*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275742*0 + 3*522*FLEN/8, x4, x1, x2)

inst_91915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfc00000000000; valaddr_reg:x3; val_offset:275745*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275745*0 + 3*523*FLEN/8, x4, x1, x2)

inst_91916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfe00000000000; valaddr_reg:x3; val_offset:275748*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275748*0 + 3*524*FLEN/8, x4, x1, x2)

inst_91917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dff00000000000; valaddr_reg:x3; val_offset:275751*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275751*0 + 3*525*FLEN/8, x4, x1, x2)

inst_91918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dff80000000000; valaddr_reg:x3; val_offset:275754*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275754*0 + 3*526*FLEN/8, x4, x1, x2)

inst_91919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffc0000000000; valaddr_reg:x3; val_offset:275757*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275757*0 + 3*527*FLEN/8, x4, x1, x2)

inst_91920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffe0000000000; valaddr_reg:x3; val_offset:275760*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275760*0 + 3*528*FLEN/8, x4, x1, x2)

inst_91921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfff0000000000; valaddr_reg:x3; val_offset:275763*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275763*0 + 3*529*FLEN/8, x4, x1, x2)

inst_91922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfff8000000000; valaddr_reg:x3; val_offset:275766*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275766*0 + 3*530*FLEN/8, x4, x1, x2)

inst_91923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffc000000000; valaddr_reg:x3; val_offset:275769*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275769*0 + 3*531*FLEN/8, x4, x1, x2)

inst_91924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffe000000000; valaddr_reg:x3; val_offset:275772*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275772*0 + 3*532*FLEN/8, x4, x1, x2)

inst_91925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffff000000000; valaddr_reg:x3; val_offset:275775*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275775*0 + 3*533*FLEN/8, x4, x1, x2)

inst_91926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffff800000000; valaddr_reg:x3; val_offset:275778*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275778*0 + 3*534*FLEN/8, x4, x1, x2)

inst_91927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffc00000000; valaddr_reg:x3; val_offset:275781*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275781*0 + 3*535*FLEN/8, x4, x1, x2)

inst_91928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffe00000000; valaddr_reg:x3; val_offset:275784*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275784*0 + 3*536*FLEN/8, x4, x1, x2)

inst_91929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffff00000000; valaddr_reg:x3; val_offset:275787*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275787*0 + 3*537*FLEN/8, x4, x1, x2)

inst_91930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffff80000000; valaddr_reg:x3; val_offset:275790*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275790*0 + 3*538*FLEN/8, x4, x1, x2)

inst_91931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffc0000000; valaddr_reg:x3; val_offset:275793*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275793*0 + 3*539*FLEN/8, x4, x1, x2)

inst_91932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffe0000000; valaddr_reg:x3; val_offset:275796*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275796*0 + 3*540*FLEN/8, x4, x1, x2)

inst_91933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffff0000000; valaddr_reg:x3; val_offset:275799*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275799*0 + 3*541*FLEN/8, x4, x1, x2)

inst_91934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffff8000000; valaddr_reg:x3; val_offset:275802*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275802*0 + 3*542*FLEN/8, x4, x1, x2)

inst_91935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffc000000; valaddr_reg:x3; val_offset:275805*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275805*0 + 3*543*FLEN/8, x4, x1, x2)

inst_91936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffe000000; valaddr_reg:x3; val_offset:275808*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275808*0 + 3*544*FLEN/8, x4, x1, x2)

inst_91937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffff000000; valaddr_reg:x3; val_offset:275811*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275811*0 + 3*545*FLEN/8, x4, x1, x2)

inst_91938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffff800000; valaddr_reg:x3; val_offset:275814*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275814*0 + 3*546*FLEN/8, x4, x1, x2)

inst_91939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffc00000; valaddr_reg:x3; val_offset:275817*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275817*0 + 3*547*FLEN/8, x4, x1, x2)

inst_91940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffe00000; valaddr_reg:x3; val_offset:275820*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275820*0 + 3*548*FLEN/8, x4, x1, x2)

inst_91941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffff00000; valaddr_reg:x3; val_offset:275823*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275823*0 + 3*549*FLEN/8, x4, x1, x2)

inst_91942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffff80000; valaddr_reg:x3; val_offset:275826*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275826*0 + 3*550*FLEN/8, x4, x1, x2)

inst_91943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffc0000; valaddr_reg:x3; val_offset:275829*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275829*0 + 3*551*FLEN/8, x4, x1, x2)

inst_91944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffe0000; valaddr_reg:x3; val_offset:275832*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275832*0 + 3*552*FLEN/8, x4, x1, x2)

inst_91945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffff0000; valaddr_reg:x3; val_offset:275835*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275835*0 + 3*553*FLEN/8, x4, x1, x2)

inst_91946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffff8000; valaddr_reg:x3; val_offset:275838*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275838*0 + 3*554*FLEN/8, x4, x1, x2)

inst_91947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffc000; valaddr_reg:x3; val_offset:275841*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275841*0 + 3*555*FLEN/8, x4, x1, x2)

inst_91948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffe000; valaddr_reg:x3; val_offset:275844*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275844*0 + 3*556*FLEN/8, x4, x1, x2)

inst_91949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffff000; valaddr_reg:x3; val_offset:275847*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275847*0 + 3*557*FLEN/8, x4, x1, x2)

inst_91950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffff800; valaddr_reg:x3; val_offset:275850*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275850*0 + 3*558*FLEN/8, x4, x1, x2)

inst_91951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffffc00; valaddr_reg:x3; val_offset:275853*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275853*0 + 3*559*FLEN/8, x4, x1, x2)

inst_91952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffffe00; valaddr_reg:x3; val_offset:275856*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275856*0 + 3*560*FLEN/8, x4, x1, x2)

inst_91953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffff00; valaddr_reg:x3; val_offset:275859*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275859*0 + 3*561*FLEN/8, x4, x1, x2)

inst_91954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffff80; valaddr_reg:x3; val_offset:275862*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275862*0 + 3*562*FLEN/8, x4, x1, x2)

inst_91955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffffc0; valaddr_reg:x3; val_offset:275865*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275865*0 + 3*563*FLEN/8, x4, x1, x2)

inst_91956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffffe0; valaddr_reg:x3; val_offset:275868*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275868*0 + 3*564*FLEN/8, x4, x1, x2)

inst_91957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffffff0; valaddr_reg:x3; val_offset:275871*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275871*0 + 3*565*FLEN/8, x4, x1, x2)

inst_91958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffffff8; valaddr_reg:x3; val_offset:275874*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275874*0 + 3*566*FLEN/8, x4, x1, x2)

inst_91959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffffffc; valaddr_reg:x3; val_offset:275877*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275877*0 + 3*567*FLEN/8, x4, x1, x2)

inst_91960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dffffffffffffe; valaddr_reg:x3; val_offset:275880*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275880*0 + 3*568*FLEN/8, x4, x1, x2)

inst_91961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd2890c9a3145 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd2890c9a3145; op2val:0x0;
op3val:0x3dfffffffffffff; valaddr_reg:x3; val_offset:275883*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275883*0 + 3*569*FLEN/8, x4, x1, x2)

inst_91962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:275886*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275886*0 + 3*570*FLEN/8, x4, x1, x2)

inst_91963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:275889*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275889*0 + 3*571*FLEN/8, x4, x1, x2)

inst_91964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:275892*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275892*0 + 3*572*FLEN/8, x4, x1, x2)

inst_91965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:275895*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275895*0 + 3*573*FLEN/8, x4, x1, x2)

inst_91966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:275898*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275898*0 + 3*574*FLEN/8, x4, x1, x2)

inst_91967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:275901*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275901*0 + 3*575*FLEN/8, x4, x1, x2)

inst_91968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:275904*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275904*0 + 3*576*FLEN/8, x4, x1, x2)

inst_91969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:275907*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275907*0 + 3*577*FLEN/8, x4, x1, x2)

inst_91970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:275910*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275910*0 + 3*578*FLEN/8, x4, x1, x2)

inst_91971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:275913*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275913*0 + 3*579*FLEN/8, x4, x1, x2)

inst_91972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:275916*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275916*0 + 3*580*FLEN/8, x4, x1, x2)

inst_91973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:275919*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275919*0 + 3*581*FLEN/8, x4, x1, x2)

inst_91974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:275922*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275922*0 + 3*582*FLEN/8, x4, x1, x2)

inst_91975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:275925*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275925*0 + 3*583*FLEN/8, x4, x1, x2)

inst_91976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:275928*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275928*0 + 3*584*FLEN/8, x4, x1, x2)

inst_91977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:275931*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275931*0 + 3*585*FLEN/8, x4, x1, x2)

inst_91978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:275934*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275934*0 + 3*586*FLEN/8, x4, x1, x2)

inst_91979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:275937*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275937*0 + 3*587*FLEN/8, x4, x1, x2)

inst_91980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:275940*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275940*0 + 3*588*FLEN/8, x4, x1, x2)

inst_91981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:275943*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275943*0 + 3*589*FLEN/8, x4, x1, x2)

inst_91982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:275946*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275946*0 + 3*590*FLEN/8, x4, x1, x2)

inst_91983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:275949*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275949*0 + 3*591*FLEN/8, x4, x1, x2)

inst_91984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:275952*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275952*0 + 3*592*FLEN/8, x4, x1, x2)

inst_91985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:275955*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275955*0 + 3*593*FLEN/8, x4, x1, x2)

inst_91986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:275958*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275958*0 + 3*594*FLEN/8, x4, x1, x2)

inst_91987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:275961*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275961*0 + 3*595*FLEN/8, x4, x1, x2)

inst_91988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:275964*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275964*0 + 3*596*FLEN/8, x4, x1, x2)

inst_91989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:275967*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275967*0 + 3*597*FLEN/8, x4, x1, x2)

inst_91990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:275970*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275970*0 + 3*598*FLEN/8, x4, x1, x2)

inst_91991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:275973*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275973*0 + 3*599*FLEN/8, x4, x1, x2)

inst_91992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:275976*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275976*0 + 3*600*FLEN/8, x4, x1, x2)

inst_91993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:275979*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275979*0 + 3*601*FLEN/8, x4, x1, x2)

inst_91994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:275982*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275982*0 + 3*602*FLEN/8, x4, x1, x2)

inst_91995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:275985*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275985*0 + 3*603*FLEN/8, x4, x1, x2)

inst_91996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:275988*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275988*0 + 3*604*FLEN/8, x4, x1, x2)

inst_91997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:275991*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275991*0 + 3*605*FLEN/8, x4, x1, x2)

inst_91998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:275994*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275994*0 + 3*606*FLEN/8, x4, x1, x2)

inst_91999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:275997*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 275997*0 + 3*607*FLEN/8, x4, x1, x2)

inst_92000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:276000*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276000*0 + 3*608*FLEN/8, x4, x1, x2)

inst_92001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:276003*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276003*0 + 3*609*FLEN/8, x4, x1, x2)

inst_92002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:276006*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276006*0 + 3*610*FLEN/8, x4, x1, x2)

inst_92003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:276009*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276009*0 + 3*611*FLEN/8, x4, x1, x2)

inst_92004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:276012*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276012*0 + 3*612*FLEN/8, x4, x1, x2)

inst_92005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:276015*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276015*0 + 3*613*FLEN/8, x4, x1, x2)

inst_92006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:276018*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276018*0 + 3*614*FLEN/8, x4, x1, x2)

inst_92007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:276021*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276021*0 + 3*615*FLEN/8, x4, x1, x2)

inst_92008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:276024*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276024*0 + 3*616*FLEN/8, x4, x1, x2)

inst_92009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:276027*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276027*0 + 3*617*FLEN/8, x4, x1, x2)

inst_92010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:276030*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276030*0 + 3*618*FLEN/8, x4, x1, x2)

inst_92011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:276033*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276033*0 + 3*619*FLEN/8, x4, x1, x2)

inst_92012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:276036*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276036*0 + 3*620*FLEN/8, x4, x1, x2)

inst_92013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:276039*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276039*0 + 3*621*FLEN/8, x4, x1, x2)

inst_92014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:276042*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276042*0 + 3*622*FLEN/8, x4, x1, x2)

inst_92015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:276045*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276045*0 + 3*623*FLEN/8, x4, x1, x2)

inst_92016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:276048*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276048*0 + 3*624*FLEN/8, x4, x1, x2)

inst_92017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:276051*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276051*0 + 3*625*FLEN/8, x4, x1, x2)

inst_92018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:276054*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276054*0 + 3*626*FLEN/8, x4, x1, x2)

inst_92019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:276057*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276057*0 + 3*627*FLEN/8, x4, x1, x2)

inst_92020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:276060*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276060*0 + 3*628*FLEN/8, x4, x1, x2)

inst_92021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:276063*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276063*0 + 3*629*FLEN/8, x4, x1, x2)

inst_92022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:276066*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276066*0 + 3*630*FLEN/8, x4, x1, x2)

inst_92023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:276069*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276069*0 + 3*631*FLEN/8, x4, x1, x2)

inst_92024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:276072*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276072*0 + 3*632*FLEN/8, x4, x1, x2)

inst_92025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:276075*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276075*0 + 3*633*FLEN/8, x4, x1, x2)

inst_92026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:276078*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276078*0 + 3*634*FLEN/8, x4, x1, x2)

inst_92027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:276081*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276081*0 + 3*635*FLEN/8, x4, x1, x2)

inst_92028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:276084*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276084*0 + 3*636*FLEN/8, x4, x1, x2)

inst_92029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:276087*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276087*0 + 3*637*FLEN/8, x4, x1, x2)

inst_92030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:276090*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276090*0 + 3*638*FLEN/8, x4, x1, x2)

inst_92031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:276093*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276093*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_92032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:276096*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276096*0 + 3*640*FLEN/8, x4, x1, x2)

inst_92033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:276099*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276099*0 + 3*641*FLEN/8, x4, x1, x2)

inst_92034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:276102*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276102*0 + 3*642*FLEN/8, x4, x1, x2)

inst_92035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:276105*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276105*0 + 3*643*FLEN/8, x4, x1, x2)

inst_92036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:276108*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276108*0 + 3*644*FLEN/8, x4, x1, x2)

inst_92037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:276111*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276111*0 + 3*645*FLEN/8, x4, x1, x2)

inst_92038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:276114*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276114*0 + 3*646*FLEN/8, x4, x1, x2)

inst_92039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:276117*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276117*0 + 3*647*FLEN/8, x4, x1, x2)

inst_92040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:276120*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276120*0 + 3*648*FLEN/8, x4, x1, x2)

inst_92041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:276123*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276123*0 + 3*649*FLEN/8, x4, x1, x2)

inst_92042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:276126*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276126*0 + 3*650*FLEN/8, x4, x1, x2)

inst_92043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:276129*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276129*0 + 3*651*FLEN/8, x4, x1, x2)

inst_92044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:276132*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276132*0 + 3*652*FLEN/8, x4, x1, x2)

inst_92045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:276135*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276135*0 + 3*653*FLEN/8, x4, x1, x2)

inst_92046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:276138*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276138*0 + 3*654*FLEN/8, x4, x1, x2)

inst_92047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:276141*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276141*0 + 3*655*FLEN/8, x4, x1, x2)

inst_92048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:276144*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276144*0 + 3*656*FLEN/8, x4, x1, x2)

inst_92049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:276147*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276147*0 + 3*657*FLEN/8, x4, x1, x2)

inst_92050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:276150*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276150*0 + 3*658*FLEN/8, x4, x1, x2)

inst_92051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:276153*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276153*0 + 3*659*FLEN/8, x4, x1, x2)

inst_92052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:276156*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276156*0 + 3*660*FLEN/8, x4, x1, x2)

inst_92053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:276159*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276159*0 + 3*661*FLEN/8, x4, x1, x2)

inst_92054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:276162*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276162*0 + 3*662*FLEN/8, x4, x1, x2)

inst_92055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:276165*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276165*0 + 3*663*FLEN/8, x4, x1, x2)

inst_92056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:276168*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276168*0 + 3*664*FLEN/8, x4, x1, x2)

inst_92057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:276171*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276171*0 + 3*665*FLEN/8, x4, x1, x2)

inst_92058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:276174*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276174*0 + 3*666*FLEN/8, x4, x1, x2)

inst_92059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:276177*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276177*0 + 3*667*FLEN/8, x4, x1, x2)

inst_92060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:276180*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276180*0 + 3*668*FLEN/8, x4, x1, x2)

inst_92061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:276183*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276183*0 + 3*669*FLEN/8, x4, x1, x2)

inst_92062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:276186*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276186*0 + 3*670*FLEN/8, x4, x1, x2)

inst_92063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:276189*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276189*0 + 3*671*FLEN/8, x4, x1, x2)

inst_92064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:276192*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276192*0 + 3*672*FLEN/8, x4, x1, x2)

inst_92065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:276195*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276195*0 + 3*673*FLEN/8, x4, x1, x2)

inst_92066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:276198*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276198*0 + 3*674*FLEN/8, x4, x1, x2)

inst_92067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:276201*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276201*0 + 3*675*FLEN/8, x4, x1, x2)

inst_92068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:276204*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276204*0 + 3*676*FLEN/8, x4, x1, x2)

inst_92069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:276207*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276207*0 + 3*677*FLEN/8, x4, x1, x2)

inst_92070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:276210*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276210*0 + 3*678*FLEN/8, x4, x1, x2)

inst_92071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:276213*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276213*0 + 3*679*FLEN/8, x4, x1, x2)

inst_92072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:276216*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276216*0 + 3*680*FLEN/8, x4, x1, x2)

inst_92073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:276219*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276219*0 + 3*681*FLEN/8, x4, x1, x2)

inst_92074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:276222*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276222*0 + 3*682*FLEN/8, x4, x1, x2)

inst_92075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:276225*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276225*0 + 3*683*FLEN/8, x4, x1, x2)

inst_92076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:276228*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276228*0 + 3*684*FLEN/8, x4, x1, x2)

inst_92077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:276231*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276231*0 + 3*685*FLEN/8, x4, x1, x2)

inst_92078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:276234*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276234*0 + 3*686*FLEN/8, x4, x1, x2)

inst_92079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:276237*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276237*0 + 3*687*FLEN/8, x4, x1, x2)

inst_92080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:276240*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276240*0 + 3*688*FLEN/8, x4, x1, x2)

inst_92081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:276243*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276243*0 + 3*689*FLEN/8, x4, x1, x2)

inst_92082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:276246*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276246*0 + 3*690*FLEN/8, x4, x1, x2)

inst_92083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:276249*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276249*0 + 3*691*FLEN/8, x4, x1, x2)

inst_92084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:276252*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276252*0 + 3*692*FLEN/8, x4, x1, x2)

inst_92085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:276255*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276255*0 + 3*693*FLEN/8, x4, x1, x2)

inst_92086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:276258*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276258*0 + 3*694*FLEN/8, x4, x1, x2)

inst_92087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd7bab56a7fe5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd7bab56a7fe5; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:276261*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276261*0 + 3*695*FLEN/8, x4, x1, x2)

inst_92088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:276264*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276264*0 + 3*696*FLEN/8, x4, x1, x2)

inst_92089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:276267*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276267*0 + 3*697*FLEN/8, x4, x1, x2)

inst_92090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:276270*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276270*0 + 3*698*FLEN/8, x4, x1, x2)

inst_92091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:276273*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276273*0 + 3*699*FLEN/8, x4, x1, x2)

inst_92092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:276276*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276276*0 + 3*700*FLEN/8, x4, x1, x2)

inst_92093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:276279*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276279*0 + 3*701*FLEN/8, x4, x1, x2)

inst_92094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:276282*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276282*0 + 3*702*FLEN/8, x4, x1, x2)

inst_92095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:276285*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276285*0 + 3*703*FLEN/8, x4, x1, x2)

inst_92096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:276288*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276288*0 + 3*704*FLEN/8, x4, x1, x2)

inst_92097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:276291*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276291*0 + 3*705*FLEN/8, x4, x1, x2)

inst_92098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:276294*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276294*0 + 3*706*FLEN/8, x4, x1, x2)

inst_92099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:276297*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276297*0 + 3*707*FLEN/8, x4, x1, x2)

inst_92100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:276300*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276300*0 + 3*708*FLEN/8, x4, x1, x2)

inst_92101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:276303*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276303*0 + 3*709*FLEN/8, x4, x1, x2)

inst_92102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:276306*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276306*0 + 3*710*FLEN/8, x4, x1, x2)

inst_92103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:276309*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276309*0 + 3*711*FLEN/8, x4, x1, x2)

inst_92104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:276312*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276312*0 + 3*712*FLEN/8, x4, x1, x2)

inst_92105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:276315*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276315*0 + 3*713*FLEN/8, x4, x1, x2)

inst_92106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:276318*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276318*0 + 3*714*FLEN/8, x4, x1, x2)

inst_92107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:276321*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276321*0 + 3*715*FLEN/8, x4, x1, x2)

inst_92108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:276324*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276324*0 + 3*716*FLEN/8, x4, x1, x2)

inst_92109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:276327*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276327*0 + 3*717*FLEN/8, x4, x1, x2)

inst_92110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000000000; valaddr_reg:x3; val_offset:276330*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276330*0 + 3*718*FLEN/8, x4, x1, x2)

inst_92111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:276333*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276333*0 + 3*719*FLEN/8, x4, x1, x2)

inst_92112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:276336*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276336*0 + 3*720*FLEN/8, x4, x1, x2)

inst_92113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:276339*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276339*0 + 3*721*FLEN/8, x4, x1, x2)

inst_92114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:276342*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276342*0 + 3*722*FLEN/8, x4, x1, x2)

inst_92115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:276345*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276345*0 + 3*723*FLEN/8, x4, x1, x2)

inst_92116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:276348*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276348*0 + 3*724*FLEN/8, x4, x1, x2)

inst_92117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000000007f; valaddr_reg:x3; val_offset:276351*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276351*0 + 3*725*FLEN/8, x4, x1, x2)

inst_92118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000000000ff; valaddr_reg:x3; val_offset:276354*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276354*0 + 3*726*FLEN/8, x4, x1, x2)

inst_92119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000000001ff; valaddr_reg:x3; val_offset:276357*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276357*0 + 3*727*FLEN/8, x4, x1, x2)

inst_92120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000000003ff; valaddr_reg:x3; val_offset:276360*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276360*0 + 3*728*FLEN/8, x4, x1, x2)

inst_92121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000000007ff; valaddr_reg:x3; val_offset:276363*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276363*0 + 3*729*FLEN/8, x4, x1, x2)

inst_92122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000000fff; valaddr_reg:x3; val_offset:276366*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276366*0 + 3*730*FLEN/8, x4, x1, x2)

inst_92123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000001fff; valaddr_reg:x3; val_offset:276369*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276369*0 + 3*731*FLEN/8, x4, x1, x2)

inst_92124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000003fff; valaddr_reg:x3; val_offset:276372*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276372*0 + 3*732*FLEN/8, x4, x1, x2)

inst_92125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000007fff; valaddr_reg:x3; val_offset:276375*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276375*0 + 3*733*FLEN/8, x4, x1, x2)

inst_92126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000000ffff; valaddr_reg:x3; val_offset:276378*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276378*0 + 3*734*FLEN/8, x4, x1, x2)

inst_92127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000001ffff; valaddr_reg:x3; val_offset:276381*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276381*0 + 3*735*FLEN/8, x4, x1, x2)

inst_92128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000003ffff; valaddr_reg:x3; val_offset:276384*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276384*0 + 3*736*FLEN/8, x4, x1, x2)

inst_92129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000007ffff; valaddr_reg:x3; val_offset:276387*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276387*0 + 3*737*FLEN/8, x4, x1, x2)

inst_92130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000000fffff; valaddr_reg:x3; val_offset:276390*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276390*0 + 3*738*FLEN/8, x4, x1, x2)

inst_92131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000001fffff; valaddr_reg:x3; val_offset:276393*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276393*0 + 3*739*FLEN/8, x4, x1, x2)

inst_92132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000003fffff; valaddr_reg:x3; val_offset:276396*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276396*0 + 3*740*FLEN/8, x4, x1, x2)

inst_92133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000007fffff; valaddr_reg:x3; val_offset:276399*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276399*0 + 3*741*FLEN/8, x4, x1, x2)

inst_92134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000000ffffff; valaddr_reg:x3; val_offset:276402*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276402*0 + 3*742*FLEN/8, x4, x1, x2)

inst_92135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000001ffffff; valaddr_reg:x3; val_offset:276405*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276405*0 + 3*743*FLEN/8, x4, x1, x2)

inst_92136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000003ffffff; valaddr_reg:x3; val_offset:276408*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276408*0 + 3*744*FLEN/8, x4, x1, x2)

inst_92137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000007ffffff; valaddr_reg:x3; val_offset:276411*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276411*0 + 3*745*FLEN/8, x4, x1, x2)

inst_92138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000000fffffff; valaddr_reg:x3; val_offset:276414*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276414*0 + 3*746*FLEN/8, x4, x1, x2)

inst_92139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000001fffffff; valaddr_reg:x3; val_offset:276417*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276417*0 + 3*747*FLEN/8, x4, x1, x2)

inst_92140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000003fffffff; valaddr_reg:x3; val_offset:276420*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276420*0 + 3*748*FLEN/8, x4, x1, x2)

inst_92141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000007fffffff; valaddr_reg:x3; val_offset:276423*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276423*0 + 3*749*FLEN/8, x4, x1, x2)

inst_92142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100000ffffffff; valaddr_reg:x3; val_offset:276426*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276426*0 + 3*750*FLEN/8, x4, x1, x2)

inst_92143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100001ffffffff; valaddr_reg:x3; val_offset:276429*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276429*0 + 3*751*FLEN/8, x4, x1, x2)

inst_92144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100003ffffffff; valaddr_reg:x3; val_offset:276432*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276432*0 + 3*752*FLEN/8, x4, x1, x2)

inst_92145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100007ffffffff; valaddr_reg:x3; val_offset:276435*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276435*0 + 3*753*FLEN/8, x4, x1, x2)

inst_92146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010000fffffffff; valaddr_reg:x3; val_offset:276438*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276438*0 + 3*754*FLEN/8, x4, x1, x2)

inst_92147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010001fffffffff; valaddr_reg:x3; val_offset:276441*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276441*0 + 3*755*FLEN/8, x4, x1, x2)

inst_92148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010003fffffffff; valaddr_reg:x3; val_offset:276444*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276444*0 + 3*756*FLEN/8, x4, x1, x2)

inst_92149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010007fffffffff; valaddr_reg:x3; val_offset:276447*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276447*0 + 3*757*FLEN/8, x4, x1, x2)

inst_92150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801000ffffffffff; valaddr_reg:x3; val_offset:276450*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276450*0 + 3*758*FLEN/8, x4, x1, x2)

inst_92151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801001ffffffffff; valaddr_reg:x3; val_offset:276453*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276453*0 + 3*759*FLEN/8, x4, x1, x2)

inst_92152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801003ffffffffff; valaddr_reg:x3; val_offset:276456*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276456*0 + 3*760*FLEN/8, x4, x1, x2)

inst_92153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801007ffffffffff; valaddr_reg:x3; val_offset:276459*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276459*0 + 3*761*FLEN/8, x4, x1, x2)

inst_92154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80100fffffffffff; valaddr_reg:x3; val_offset:276462*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276462*0 + 3*762*FLEN/8, x4, x1, x2)

inst_92155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80101fffffffffff; valaddr_reg:x3; val_offset:276465*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276465*0 + 3*763*FLEN/8, x4, x1, x2)

inst_92156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80103fffffffffff; valaddr_reg:x3; val_offset:276468*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276468*0 + 3*764*FLEN/8, x4, x1, x2)

inst_92157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x80107fffffffffff; valaddr_reg:x3; val_offset:276471*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276471*0 + 3*765*FLEN/8, x4, x1, x2)

inst_92158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8010ffffffffffff; valaddr_reg:x3; val_offset:276474*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276474*0 + 3*766*FLEN/8, x4, x1, x2)

inst_92159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8011ffffffffffff; valaddr_reg:x3; val_offset:276477*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276477*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883110614794239,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883385492701183,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883935248515071,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236885034760142847,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236887233783398399,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236891631829909503,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236900427922931711,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236918020108976127,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236953204481064959,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237023573225242623,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237164310713597951,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237445785690308607,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9238008735643729919,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572543,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572544,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240260535457415168,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240823485410836480,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241104960387547136,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241245697875902464,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241316066620080128,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241351250992168960,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241368843178213376,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241377639271235584,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241382037317746688,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241384236341002240,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385335852630016,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385885608443904,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386160486350848,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386297925304320,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386366644781056,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386401004519424,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386418184388608,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386426774323200,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386431069290496,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386433216774144,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434290515968,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434827386880,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435095822336,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435230040064,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435297148928,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435330703360,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435347480576,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435355869184,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435360063488,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435362160640,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363209216,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363733504,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363995648,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364126720,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364192256,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364225024,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364241408,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364249600,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364253696,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364255744,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364256768,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257280,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257536,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257664,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257728,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257760,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257776,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257784,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257788,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257790,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257791,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149696,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149697,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149699,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149703,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149711,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149727,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149759,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149823,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149951,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421150207,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421150719,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421151743,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421153791,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421157887,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421166079,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421182463,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421215231,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421280767,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421411839,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421673983,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826422198271,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826423246847,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826425343999,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826429538303,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826437926911,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826454704127,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826488258559,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826555367423,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826689585151,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826958020607,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472827494891519,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472828568633343,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472830716116991,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472835011084287,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472843601018879,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472860780888063,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472895140626431,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472963860103167,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473101299056639,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473376176963583,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473925932777471,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349475025444405247,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349477224467660799,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349481622514171903,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349490418607194111,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349508010793238527,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349543195165327359,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349613563909505023,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349754301397860351,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9350035776374571007,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9350598726327992319,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9351724626234834943,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9351724626234834944,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9352850526141677568,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353413476095098880,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353694951071809536,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353835688560164864,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353906057304342528,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353941241676431360,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353958833862475776,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353967629955497984,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353972028002009088,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353974227025264640,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353975326536892416,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353975876292706304,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976151170613248,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976288609566720,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976357329043456,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976391688781824,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976408868651008,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976417458585600,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976421753552896,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976423901036544,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976424974778368,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425511649280,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425780084736,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425914302464,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425981411328,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426014965760,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426031742976,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426040131584,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426044325888,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426046423040,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426047471616,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426047995904,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048258048,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048389120,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048454656,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048487424,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048503808,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048512000,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048516096,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048518144,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519168,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519680,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519936,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520064,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520128,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520160,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520176,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520184,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520188,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520190,64,FLEN)
NAN_BOXED(6894092005805009675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520191,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894080,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894081,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894083,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894087,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894095,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894111,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894143,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894207,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894335,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894591,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614895103,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614896127,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614898175,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614902271,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614910463,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614926847,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614959615,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615025151,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615156223,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615418367,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615942655,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215616991231,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215619088383,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215623282687,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215631671295,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215648448511,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215682002943,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215749111807,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215883329535,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216151764991,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216688635903,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077217762377727,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077219909861375,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077224204828671,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077232794763263,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077249974632447,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077284334370815,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077353053847551,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077490492801023,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077765370707967,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480078315126521855,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480079414638149631,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480081613661405183,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480086011707916287,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480094807800938495,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480112399986982911,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480147584359071743,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480217953103249407,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480358690591604735,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480640165568315391,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9481203115521736703,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579327,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579328,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9483454915335421952,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484017865288843264,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484299340265553920,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484440077753909248,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484510446498086912,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484545630870175744,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484563223056220160,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484572019149242368,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484576417195753472,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484578616219009024,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484579715730636800,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580265486450688,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580540364357632,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580677803311104,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580746522787840,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580780882526208,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580798062395392,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580806652329984,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580810947297280,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580813094780928,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814168522752,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814705393664,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814973829120,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815108046848,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815175155712,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815208710144,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815225487360,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815233875968,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815238070272,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815240167424,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241216000,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241740288,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242002432,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242133504,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242199040,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242231808,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242248192,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242256384,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242260480,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242262528,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242263552,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264064,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264320,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264448,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264512,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264544,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264560,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264568,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264572,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264574,64,FLEN)
NAN_BOXED(6894098783381372473,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264575,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636288,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636289,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636291,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636295,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636303,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636319,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636351,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636415,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636543,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636799,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250637311,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250638335,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250640383,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250644479,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250652671,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250669055,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250701823,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250767359,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250898431,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251160575,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251684863,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780252733439,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780254830591,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780259024895,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780267413503,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780284190719,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780317745151,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780384854015,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780519071743,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780787507199,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690781324378111,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690782398119935,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690784545603583,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690788840570879,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690797430505471,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690814610374655,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690848970113023,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690917689589759,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691055128543231,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691330006450175,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691879762264063,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238692979273891839,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238695178297147391,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238699576343658495,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238708372436680703,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238725964622725119,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238761148994813951,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238831517738991615,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238972255227346943,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239253730204057599,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239816680157478911,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321535,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321536,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242068479971164160,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242631429924585472,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242912904901296128,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243053642389651456,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243124011133829120,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243159195505917952,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243176787691962368,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243185583784984576,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243189981831495680,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243192180854751232,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193280366379008,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193830122192896,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194105000099840,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194242439053312,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194311158530048,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194345518268416,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194362698137600,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194371288072192,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194375583039488,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194377730523136,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194378804264960,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379341135872,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379609571328,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379743789056,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379810897920,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379844452352,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379861229568,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379869618176,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379873812480,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379875909632,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379876958208,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877482496,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877744640,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877875712,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877941248,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877974016,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877990400,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877998592,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878002688,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878004736,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878005760,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006272,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006528,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006656,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006720,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006752,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006768,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006776,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006780,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006782,64,FLEN)
NAN_BOXED(6894107612722027094,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006783,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600256,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600257,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600259,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600263,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600271,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600287,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600319,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600383,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600511,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600767,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269601279,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269602303,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269604351,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269608447,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269616639,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269633023,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269665791,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269731327,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269862399,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270124543,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270648831,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577271697407,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577273794559,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577277988863,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577286377471,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577303154687,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577336709119,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577403817983,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577538035711,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577806471167,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719578343342079,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719579417083903,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719581564567551,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719585859534847,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719594449469439,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719611629338623,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719645989076991,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719714708553727,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719852147507199,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720127025414143,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720676781228031,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274721776292855807,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274723975316111359,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274728373362622463,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274737169455644671,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274754761641689087,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274789946013777919,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274860314757955583,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275001052246310911,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275282527223021567,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275845477176442879,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285503,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285504,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278097276990128128,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278660226943549440,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278941701920260096,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279082439408615424,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279152808152793088,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279187992524881920,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279205584710926336,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279214380803948544,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279218778850459648,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279220977873715200,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222077385342976,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222627141156864,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222902019063808,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223039458017280,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223108177494016,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223142537232384,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223159717101568,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223168307036160,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223172602003456,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223174749487104,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223175823228928,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176360099840,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176628535296,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176762753024,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176829861888,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176863416320,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176880193536,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176888582144,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176892776448,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176894873600,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176895922176,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896446464,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896708608,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896839680,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896905216,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896937984,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896954368,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896962560,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896966656,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896968704,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896969728,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970240,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970496,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970624,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970688,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970720,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970736,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970744,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970748,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970750,64,FLEN)
NAN_BOXED(6894116615661171013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970751,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6894122326504931301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146304,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146431,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146559,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146815,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482147327,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482148351,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482150399,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482154495,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482162687,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482179071,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482211839,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482277375,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482408447,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482670591,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636483194879,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636484243455,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636486340607,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636490534911,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636498923519,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636515700735,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636549255167,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636616364031,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636750581759,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875637019017215,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875637555888127,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875638629629951,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875640777113599,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875645072080895,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875653662015487,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875670841884671,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875705201623039,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875773921099775,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875911360053247,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227876186237960191,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227876735993774079,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227877835505401855,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227880034528657407,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227884432575168511,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227893228668190719,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227910820854235135,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227946005226323967,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228016373970501631,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228157111458856959,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228438586435567615,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
