
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_96768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000000fffff; valaddr_reg:x3; val_offset:290304*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290304*0 + 3*0*FLEN/8, x4, x1, x2)

inst_96769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000001fffff; valaddr_reg:x3; val_offset:290307*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290307*0 + 3*1*FLEN/8, x4, x1, x2)

inst_96770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000003fffff; valaddr_reg:x3; val_offset:290310*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290310*0 + 3*2*FLEN/8, x4, x1, x2)

inst_96771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000007fffff; valaddr_reg:x3; val_offset:290313*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290313*0 + 3*3*FLEN/8, x4, x1, x2)

inst_96772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000ffffff; valaddr_reg:x3; val_offset:290316*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290316*0 + 3*4*FLEN/8, x4, x1, x2)

inst_96773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000001ffffff; valaddr_reg:x3; val_offset:290319*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290319*0 + 3*5*FLEN/8, x4, x1, x2)

inst_96774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000003ffffff; valaddr_reg:x3; val_offset:290322*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290322*0 + 3*6*FLEN/8, x4, x1, x2)

inst_96775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000007ffffff; valaddr_reg:x3; val_offset:290325*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290325*0 + 3*7*FLEN/8, x4, x1, x2)

inst_96776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000fffffff; valaddr_reg:x3; val_offset:290328*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290328*0 + 3*8*FLEN/8, x4, x1, x2)

inst_96777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000001fffffff; valaddr_reg:x3; val_offset:290331*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290331*0 + 3*9*FLEN/8, x4, x1, x2)

inst_96778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000003fffffff; valaddr_reg:x3; val_offset:290334*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290334*0 + 3*10*FLEN/8, x4, x1, x2)

inst_96779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000007fffffff; valaddr_reg:x3; val_offset:290337*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290337*0 + 3*11*FLEN/8, x4, x1, x2)

inst_96780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000ffffffff; valaddr_reg:x3; val_offset:290340*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290340*0 + 3*12*FLEN/8, x4, x1, x2)

inst_96781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00001ffffffff; valaddr_reg:x3; val_offset:290343*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290343*0 + 3*13*FLEN/8, x4, x1, x2)

inst_96782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00003ffffffff; valaddr_reg:x3; val_offset:290346*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290346*0 + 3*14*FLEN/8, x4, x1, x2)

inst_96783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00007ffffffff; valaddr_reg:x3; val_offset:290349*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290349*0 + 3*15*FLEN/8, x4, x1, x2)

inst_96784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000fffffffff; valaddr_reg:x3; val_offset:290352*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290352*0 + 3*16*FLEN/8, x4, x1, x2)

inst_96785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0001fffffffff; valaddr_reg:x3; val_offset:290355*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290355*0 + 3*17*FLEN/8, x4, x1, x2)

inst_96786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0003fffffffff; valaddr_reg:x3; val_offset:290358*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290358*0 + 3*18*FLEN/8, x4, x1, x2)

inst_96787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0007fffffffff; valaddr_reg:x3; val_offset:290361*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290361*0 + 3*19*FLEN/8, x4, x1, x2)

inst_96788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000ffffffffff; valaddr_reg:x3; val_offset:290364*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290364*0 + 3*20*FLEN/8, x4, x1, x2)

inst_96789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd001ffffffffff; valaddr_reg:x3; val_offset:290367*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290367*0 + 3*21*FLEN/8, x4, x1, x2)

inst_96790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd003ffffffffff; valaddr_reg:x3; val_offset:290370*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290370*0 + 3*22*FLEN/8, x4, x1, x2)

inst_96791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd007ffffffffff; valaddr_reg:x3; val_offset:290373*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290373*0 + 3*23*FLEN/8, x4, x1, x2)

inst_96792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00fffffffffff; valaddr_reg:x3; val_offset:290376*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290376*0 + 3*24*FLEN/8, x4, x1, x2)

inst_96793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd01fffffffffff; valaddr_reg:x3; val_offset:290379*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290379*0 + 3*25*FLEN/8, x4, x1, x2)

inst_96794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd03fffffffffff; valaddr_reg:x3; val_offset:290382*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290382*0 + 3*26*FLEN/8, x4, x1, x2)

inst_96795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd07fffffffffff; valaddr_reg:x3; val_offset:290385*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290385*0 + 3*27*FLEN/8, x4, x1, x2)

inst_96796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0ffffffffffff; valaddr_reg:x3; val_offset:290388*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290388*0 + 3*28*FLEN/8, x4, x1, x2)

inst_96797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd1ffffffffffff; valaddr_reg:x3; val_offset:290391*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290391*0 + 3*29*FLEN/8, x4, x1, x2)

inst_96798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd3ffffffffffff; valaddr_reg:x3; val_offset:290394*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290394*0 + 3*30*FLEN/8, x4, x1, x2)

inst_96799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd7ffffffffffff; valaddr_reg:x3; val_offset:290397*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290397*0 + 3*31*FLEN/8, x4, x1, x2)

inst_96800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd8000000000000; valaddr_reg:x3; val_offset:290400*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290400*0 + 3*32*FLEN/8, x4, x1, x2)

inst_96801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdc000000000000; valaddr_reg:x3; val_offset:290403*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290403*0 + 3*33*FLEN/8, x4, x1, x2)

inst_96802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xde000000000000; valaddr_reg:x3; val_offset:290406*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290406*0 + 3*34*FLEN/8, x4, x1, x2)

inst_96803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdf000000000000; valaddr_reg:x3; val_offset:290409*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290409*0 + 3*35*FLEN/8, x4, x1, x2)

inst_96804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdf800000000000; valaddr_reg:x3; val_offset:290412*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290412*0 + 3*36*FLEN/8, x4, x1, x2)

inst_96805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfc00000000000; valaddr_reg:x3; val_offset:290415*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290415*0 + 3*37*FLEN/8, x4, x1, x2)

inst_96806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfe00000000000; valaddr_reg:x3; val_offset:290418*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290418*0 + 3*38*FLEN/8, x4, x1, x2)

inst_96807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdff00000000000; valaddr_reg:x3; val_offset:290421*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290421*0 + 3*39*FLEN/8, x4, x1, x2)

inst_96808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdff80000000000; valaddr_reg:x3; val_offset:290424*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290424*0 + 3*40*FLEN/8, x4, x1, x2)

inst_96809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffc0000000000; valaddr_reg:x3; val_offset:290427*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290427*0 + 3*41*FLEN/8, x4, x1, x2)

inst_96810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffe0000000000; valaddr_reg:x3; val_offset:290430*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290430*0 + 3*42*FLEN/8, x4, x1, x2)

inst_96811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfff0000000000; valaddr_reg:x3; val_offset:290433*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290433*0 + 3*43*FLEN/8, x4, x1, x2)

inst_96812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfff8000000000; valaddr_reg:x3; val_offset:290436*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290436*0 + 3*44*FLEN/8, x4, x1, x2)

inst_96813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffc000000000; valaddr_reg:x3; val_offset:290439*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290439*0 + 3*45*FLEN/8, x4, x1, x2)

inst_96814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffe000000000; valaddr_reg:x3; val_offset:290442*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290442*0 + 3*46*FLEN/8, x4, x1, x2)

inst_96815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffff000000000; valaddr_reg:x3; val_offset:290445*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290445*0 + 3*47*FLEN/8, x4, x1, x2)

inst_96816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffff800000000; valaddr_reg:x3; val_offset:290448*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290448*0 + 3*48*FLEN/8, x4, x1, x2)

inst_96817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffc00000000; valaddr_reg:x3; val_offset:290451*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290451*0 + 3*49*FLEN/8, x4, x1, x2)

inst_96818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffe00000000; valaddr_reg:x3; val_offset:290454*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290454*0 + 3*50*FLEN/8, x4, x1, x2)

inst_96819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffff00000000; valaddr_reg:x3; val_offset:290457*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290457*0 + 3*51*FLEN/8, x4, x1, x2)

inst_96820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffff80000000; valaddr_reg:x3; val_offset:290460*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290460*0 + 3*52*FLEN/8, x4, x1, x2)

inst_96821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffc0000000; valaddr_reg:x3; val_offset:290463*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290463*0 + 3*53*FLEN/8, x4, x1, x2)

inst_96822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffe0000000; valaddr_reg:x3; val_offset:290466*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290466*0 + 3*54*FLEN/8, x4, x1, x2)

inst_96823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffff0000000; valaddr_reg:x3; val_offset:290469*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290469*0 + 3*55*FLEN/8, x4, x1, x2)

inst_96824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffff8000000; valaddr_reg:x3; val_offset:290472*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290472*0 + 3*56*FLEN/8, x4, x1, x2)

inst_96825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffc000000; valaddr_reg:x3; val_offset:290475*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290475*0 + 3*57*FLEN/8, x4, x1, x2)

inst_96826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffe000000; valaddr_reg:x3; val_offset:290478*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290478*0 + 3*58*FLEN/8, x4, x1, x2)

inst_96827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffff000000; valaddr_reg:x3; val_offset:290481*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290481*0 + 3*59*FLEN/8, x4, x1, x2)

inst_96828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffff800000; valaddr_reg:x3; val_offset:290484*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290484*0 + 3*60*FLEN/8, x4, x1, x2)

inst_96829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffc00000; valaddr_reg:x3; val_offset:290487*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290487*0 + 3*61*FLEN/8, x4, x1, x2)

inst_96830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffe00000; valaddr_reg:x3; val_offset:290490*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290490*0 + 3*62*FLEN/8, x4, x1, x2)

inst_96831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffff00000; valaddr_reg:x3; val_offset:290493*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290493*0 + 3*63*FLEN/8, x4, x1, x2)

inst_96832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffff80000; valaddr_reg:x3; val_offset:290496*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290496*0 + 3*64*FLEN/8, x4, x1, x2)

inst_96833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffc0000; valaddr_reg:x3; val_offset:290499*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290499*0 + 3*65*FLEN/8, x4, x1, x2)

inst_96834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffe0000; valaddr_reg:x3; val_offset:290502*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290502*0 + 3*66*FLEN/8, x4, x1, x2)

inst_96835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffff0000; valaddr_reg:x3; val_offset:290505*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290505*0 + 3*67*FLEN/8, x4, x1, x2)

inst_96836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffff8000; valaddr_reg:x3; val_offset:290508*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290508*0 + 3*68*FLEN/8, x4, x1, x2)

inst_96837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffc000; valaddr_reg:x3; val_offset:290511*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290511*0 + 3*69*FLEN/8, x4, x1, x2)

inst_96838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffe000; valaddr_reg:x3; val_offset:290514*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290514*0 + 3*70*FLEN/8, x4, x1, x2)

inst_96839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffff000; valaddr_reg:x3; val_offset:290517*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290517*0 + 3*71*FLEN/8, x4, x1, x2)

inst_96840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffff800; valaddr_reg:x3; val_offset:290520*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290520*0 + 3*72*FLEN/8, x4, x1, x2)

inst_96841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffffc00; valaddr_reg:x3; val_offset:290523*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290523*0 + 3*73*FLEN/8, x4, x1, x2)

inst_96842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffffe00; valaddr_reg:x3; val_offset:290526*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290526*0 + 3*74*FLEN/8, x4, x1, x2)

inst_96843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffff00; valaddr_reg:x3; val_offset:290529*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290529*0 + 3*75*FLEN/8, x4, x1, x2)

inst_96844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffff80; valaddr_reg:x3; val_offset:290532*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290532*0 + 3*76*FLEN/8, x4, x1, x2)

inst_96845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffffc0; valaddr_reg:x3; val_offset:290535*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290535*0 + 3*77*FLEN/8, x4, x1, x2)

inst_96846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffffe0; valaddr_reg:x3; val_offset:290538*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290538*0 + 3*78*FLEN/8, x4, x1, x2)

inst_96847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffffff0; valaddr_reg:x3; val_offset:290541*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290541*0 + 3*79*FLEN/8, x4, x1, x2)

inst_96848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffffff8; valaddr_reg:x3; val_offset:290544*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290544*0 + 3*80*FLEN/8, x4, x1, x2)

inst_96849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffffffc; valaddr_reg:x3; val_offset:290547*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290547*0 + 3*81*FLEN/8, x4, x1, x2)

inst_96850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdffffffffffffe; valaddr_reg:x3; val_offset:290550*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290550*0 + 3*82*FLEN/8, x4, x1, x2)

inst_96851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdfffffffffffff; valaddr_reg:x3; val_offset:290553*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290553*0 + 3*83*FLEN/8, x4, x1, x2)

inst_96852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000000000; valaddr_reg:x3; val_offset:290556*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290556*0 + 3*84*FLEN/8, x4, x1, x2)

inst_96853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000000001; valaddr_reg:x3; val_offset:290559*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290559*0 + 3*85*FLEN/8, x4, x1, x2)

inst_96854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000000003; valaddr_reg:x3; val_offset:290562*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290562*0 + 3*86*FLEN/8, x4, x1, x2)

inst_96855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000000007; valaddr_reg:x3; val_offset:290565*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290565*0 + 3*87*FLEN/8, x4, x1, x2)

inst_96856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000000000f; valaddr_reg:x3; val_offset:290568*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290568*0 + 3*88*FLEN/8, x4, x1, x2)

inst_96857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000000001f; valaddr_reg:x3; val_offset:290571*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290571*0 + 3*89*FLEN/8, x4, x1, x2)

inst_96858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000000003f; valaddr_reg:x3; val_offset:290574*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290574*0 + 3*90*FLEN/8, x4, x1, x2)

inst_96859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000000007f; valaddr_reg:x3; val_offset:290577*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290577*0 + 3*91*FLEN/8, x4, x1, x2)

inst_96860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000000000ff; valaddr_reg:x3; val_offset:290580*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290580*0 + 3*92*FLEN/8, x4, x1, x2)

inst_96861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000000001ff; valaddr_reg:x3; val_offset:290583*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290583*0 + 3*93*FLEN/8, x4, x1, x2)

inst_96862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000000003ff; valaddr_reg:x3; val_offset:290586*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290586*0 + 3*94*FLEN/8, x4, x1, x2)

inst_96863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000000007ff; valaddr_reg:x3; val_offset:290589*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290589*0 + 3*95*FLEN/8, x4, x1, x2)

inst_96864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000000fff; valaddr_reg:x3; val_offset:290592*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290592*0 + 3*96*FLEN/8, x4, x1, x2)

inst_96865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000001fff; valaddr_reg:x3; val_offset:290595*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290595*0 + 3*97*FLEN/8, x4, x1, x2)

inst_96866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000003fff; valaddr_reg:x3; val_offset:290598*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290598*0 + 3*98*FLEN/8, x4, x1, x2)

inst_96867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000007fff; valaddr_reg:x3; val_offset:290601*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290601*0 + 3*99*FLEN/8, x4, x1, x2)

inst_96868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000000ffff; valaddr_reg:x3; val_offset:290604*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290604*0 + 3*100*FLEN/8, x4, x1, x2)

inst_96869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000001ffff; valaddr_reg:x3; val_offset:290607*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290607*0 + 3*101*FLEN/8, x4, x1, x2)

inst_96870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000003ffff; valaddr_reg:x3; val_offset:290610*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290610*0 + 3*102*FLEN/8, x4, x1, x2)

inst_96871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000007ffff; valaddr_reg:x3; val_offset:290613*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290613*0 + 3*103*FLEN/8, x4, x1, x2)

inst_96872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000000fffff; valaddr_reg:x3; val_offset:290616*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290616*0 + 3*104*FLEN/8, x4, x1, x2)

inst_96873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000001fffff; valaddr_reg:x3; val_offset:290619*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290619*0 + 3*105*FLEN/8, x4, x1, x2)

inst_96874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000003fffff; valaddr_reg:x3; val_offset:290622*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290622*0 + 3*106*FLEN/8, x4, x1, x2)

inst_96875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000007fffff; valaddr_reg:x3; val_offset:290625*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290625*0 + 3*107*FLEN/8, x4, x1, x2)

inst_96876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000000ffffff; valaddr_reg:x3; val_offset:290628*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290628*0 + 3*108*FLEN/8, x4, x1, x2)

inst_96877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000001ffffff; valaddr_reg:x3; val_offset:290631*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290631*0 + 3*109*FLEN/8, x4, x1, x2)

inst_96878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000003ffffff; valaddr_reg:x3; val_offset:290634*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290634*0 + 3*110*FLEN/8, x4, x1, x2)

inst_96879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000007ffffff; valaddr_reg:x3; val_offset:290637*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290637*0 + 3*111*FLEN/8, x4, x1, x2)

inst_96880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000000fffffff; valaddr_reg:x3; val_offset:290640*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290640*0 + 3*112*FLEN/8, x4, x1, x2)

inst_96881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000001fffffff; valaddr_reg:x3; val_offset:290643*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290643*0 + 3*113*FLEN/8, x4, x1, x2)

inst_96882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000003fffffff; valaddr_reg:x3; val_offset:290646*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290646*0 + 3*114*FLEN/8, x4, x1, x2)

inst_96883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000007fffffff; valaddr_reg:x3; val_offset:290649*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290649*0 + 3*115*FLEN/8, x4, x1, x2)

inst_96884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00000ffffffff; valaddr_reg:x3; val_offset:290652*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290652*0 + 3*116*FLEN/8, x4, x1, x2)

inst_96885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00001ffffffff; valaddr_reg:x3; val_offset:290655*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290655*0 + 3*117*FLEN/8, x4, x1, x2)

inst_96886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00003ffffffff; valaddr_reg:x3; val_offset:290658*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290658*0 + 3*118*FLEN/8, x4, x1, x2)

inst_96887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00007ffffffff; valaddr_reg:x3; val_offset:290661*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290661*0 + 3*119*FLEN/8, x4, x1, x2)

inst_96888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0000fffffffff; valaddr_reg:x3; val_offset:290664*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290664*0 + 3*120*FLEN/8, x4, x1, x2)

inst_96889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0001fffffffff; valaddr_reg:x3; val_offset:290667*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290667*0 + 3*121*FLEN/8, x4, x1, x2)

inst_96890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0003fffffffff; valaddr_reg:x3; val_offset:290670*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290670*0 + 3*122*FLEN/8, x4, x1, x2)

inst_96891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0007fffffffff; valaddr_reg:x3; val_offset:290673*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290673*0 + 3*123*FLEN/8, x4, x1, x2)

inst_96892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f000ffffffffff; valaddr_reg:x3; val_offset:290676*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290676*0 + 3*124*FLEN/8, x4, x1, x2)

inst_96893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f001ffffffffff; valaddr_reg:x3; val_offset:290679*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290679*0 + 3*125*FLEN/8, x4, x1, x2)

inst_96894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f003ffffffffff; valaddr_reg:x3; val_offset:290682*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290682*0 + 3*126*FLEN/8, x4, x1, x2)

inst_96895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f007ffffffffff; valaddr_reg:x3; val_offset:290685*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290685*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_96896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f00fffffffffff; valaddr_reg:x3; val_offset:290688*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290688*0 + 3*128*FLEN/8, x4, x1, x2)

inst_96897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f01fffffffffff; valaddr_reg:x3; val_offset:290691*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290691*0 + 3*129*FLEN/8, x4, x1, x2)

inst_96898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f03fffffffffff; valaddr_reg:x3; val_offset:290694*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290694*0 + 3*130*FLEN/8, x4, x1, x2)

inst_96899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f07fffffffffff; valaddr_reg:x3; val_offset:290697*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290697*0 + 3*131*FLEN/8, x4, x1, x2)

inst_96900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f0ffffffffffff; valaddr_reg:x3; val_offset:290700*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290700*0 + 3*132*FLEN/8, x4, x1, x2)

inst_96901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f1ffffffffffff; valaddr_reg:x3; val_offset:290703*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290703*0 + 3*133*FLEN/8, x4, x1, x2)

inst_96902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f3ffffffffffff; valaddr_reg:x3; val_offset:290706*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290706*0 + 3*134*FLEN/8, x4, x1, x2)

inst_96903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f7ffffffffffff; valaddr_reg:x3; val_offset:290709*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290709*0 + 3*135*FLEN/8, x4, x1, x2)

inst_96904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7f8000000000000; valaddr_reg:x3; val_offset:290712*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290712*0 + 3*136*FLEN/8, x4, x1, x2)

inst_96905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fc000000000000; valaddr_reg:x3; val_offset:290715*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290715*0 + 3*137*FLEN/8, x4, x1, x2)

inst_96906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fe000000000000; valaddr_reg:x3; val_offset:290718*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290718*0 + 3*138*FLEN/8, x4, x1, x2)

inst_96907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ff000000000000; valaddr_reg:x3; val_offset:290721*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290721*0 + 3*139*FLEN/8, x4, x1, x2)

inst_96908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ff800000000000; valaddr_reg:x3; val_offset:290724*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290724*0 + 3*140*FLEN/8, x4, x1, x2)

inst_96909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffc00000000000; valaddr_reg:x3; val_offset:290727*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290727*0 + 3*141*FLEN/8, x4, x1, x2)

inst_96910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffe00000000000; valaddr_reg:x3; val_offset:290730*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290730*0 + 3*142*FLEN/8, x4, x1, x2)

inst_96911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fff00000000000; valaddr_reg:x3; val_offset:290733*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290733*0 + 3*143*FLEN/8, x4, x1, x2)

inst_96912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fff80000000000; valaddr_reg:x3; val_offset:290736*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290736*0 + 3*144*FLEN/8, x4, x1, x2)

inst_96913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffc0000000000; valaddr_reg:x3; val_offset:290739*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290739*0 + 3*145*FLEN/8, x4, x1, x2)

inst_96914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffe0000000000; valaddr_reg:x3; val_offset:290742*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290742*0 + 3*146*FLEN/8, x4, x1, x2)

inst_96915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffff0000000000; valaddr_reg:x3; val_offset:290745*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290745*0 + 3*147*FLEN/8, x4, x1, x2)

inst_96916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffff8000000000; valaddr_reg:x3; val_offset:290748*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290748*0 + 3*148*FLEN/8, x4, x1, x2)

inst_96917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffc000000000; valaddr_reg:x3; val_offset:290751*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290751*0 + 3*149*FLEN/8, x4, x1, x2)

inst_96918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffe000000000; valaddr_reg:x3; val_offset:290754*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290754*0 + 3*150*FLEN/8, x4, x1, x2)

inst_96919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffff000000000; valaddr_reg:x3; val_offset:290757*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290757*0 + 3*151*FLEN/8, x4, x1, x2)

inst_96920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffff800000000; valaddr_reg:x3; val_offset:290760*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290760*0 + 3*152*FLEN/8, x4, x1, x2)

inst_96921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffc00000000; valaddr_reg:x3; val_offset:290763*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290763*0 + 3*153*FLEN/8, x4, x1, x2)

inst_96922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffe00000000; valaddr_reg:x3; val_offset:290766*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290766*0 + 3*154*FLEN/8, x4, x1, x2)

inst_96923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffff00000000; valaddr_reg:x3; val_offset:290769*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290769*0 + 3*155*FLEN/8, x4, x1, x2)

inst_96924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffff80000000; valaddr_reg:x3; val_offset:290772*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290772*0 + 3*156*FLEN/8, x4, x1, x2)

inst_96925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffc0000000; valaddr_reg:x3; val_offset:290775*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290775*0 + 3*157*FLEN/8, x4, x1, x2)

inst_96926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffe0000000; valaddr_reg:x3; val_offset:290778*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290778*0 + 3*158*FLEN/8, x4, x1, x2)

inst_96927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffff0000000; valaddr_reg:x3; val_offset:290781*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290781*0 + 3*159*FLEN/8, x4, x1, x2)

inst_96928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffff8000000; valaddr_reg:x3; val_offset:290784*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290784*0 + 3*160*FLEN/8, x4, x1, x2)

inst_96929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffc000000; valaddr_reg:x3; val_offset:290787*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290787*0 + 3*161*FLEN/8, x4, x1, x2)

inst_96930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffe000000; valaddr_reg:x3; val_offset:290790*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290790*0 + 3*162*FLEN/8, x4, x1, x2)

inst_96931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffff000000; valaddr_reg:x3; val_offset:290793*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290793*0 + 3*163*FLEN/8, x4, x1, x2)

inst_96932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffff800000; valaddr_reg:x3; val_offset:290796*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290796*0 + 3*164*FLEN/8, x4, x1, x2)

inst_96933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffc00000; valaddr_reg:x3; val_offset:290799*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290799*0 + 3*165*FLEN/8, x4, x1, x2)

inst_96934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffe00000; valaddr_reg:x3; val_offset:290802*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290802*0 + 3*166*FLEN/8, x4, x1, x2)

inst_96935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffff00000; valaddr_reg:x3; val_offset:290805*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290805*0 + 3*167*FLEN/8, x4, x1, x2)

inst_96936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffff80000; valaddr_reg:x3; val_offset:290808*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290808*0 + 3*168*FLEN/8, x4, x1, x2)

inst_96937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffc0000; valaddr_reg:x3; val_offset:290811*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290811*0 + 3*169*FLEN/8, x4, x1, x2)

inst_96938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffe0000; valaddr_reg:x3; val_offset:290814*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290814*0 + 3*170*FLEN/8, x4, x1, x2)

inst_96939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffff0000; valaddr_reg:x3; val_offset:290817*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290817*0 + 3*171*FLEN/8, x4, x1, x2)

inst_96940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffff8000; valaddr_reg:x3; val_offset:290820*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290820*0 + 3*172*FLEN/8, x4, x1, x2)

inst_96941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffc000; valaddr_reg:x3; val_offset:290823*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290823*0 + 3*173*FLEN/8, x4, x1, x2)

inst_96942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffe000; valaddr_reg:x3; val_offset:290826*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290826*0 + 3*174*FLEN/8, x4, x1, x2)

inst_96943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffff000; valaddr_reg:x3; val_offset:290829*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290829*0 + 3*175*FLEN/8, x4, x1, x2)

inst_96944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffff800; valaddr_reg:x3; val_offset:290832*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290832*0 + 3*176*FLEN/8, x4, x1, x2)

inst_96945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffffc00; valaddr_reg:x3; val_offset:290835*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290835*0 + 3*177*FLEN/8, x4, x1, x2)

inst_96946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffffe00; valaddr_reg:x3; val_offset:290838*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290838*0 + 3*178*FLEN/8, x4, x1, x2)

inst_96947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffff00; valaddr_reg:x3; val_offset:290841*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290841*0 + 3*179*FLEN/8, x4, x1, x2)

inst_96948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffff80; valaddr_reg:x3; val_offset:290844*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290844*0 + 3*180*FLEN/8, x4, x1, x2)

inst_96949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffffc0; valaddr_reg:x3; val_offset:290847*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290847*0 + 3*181*FLEN/8, x4, x1, x2)

inst_96950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffffe0; valaddr_reg:x3; val_offset:290850*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290850*0 + 3*182*FLEN/8, x4, x1, x2)

inst_96951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffffff0; valaddr_reg:x3; val_offset:290853*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290853*0 + 3*183*FLEN/8, x4, x1, x2)

inst_96952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffffff8; valaddr_reg:x3; val_offset:290856*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290856*0 + 3*184*FLEN/8, x4, x1, x2)

inst_96953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffffffc; valaddr_reg:x3; val_offset:290859*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290859*0 + 3*185*FLEN/8, x4, x1, x2)

inst_96954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7fffffffffffffe; valaddr_reg:x3; val_offset:290862*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290862*0 + 3*186*FLEN/8, x4, x1, x2)

inst_96955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xb7ffffffffffffff; valaddr_reg:x3; val_offset:290865*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290865*0 + 3*187*FLEN/8, x4, x1, x2)

inst_96956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:290868*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290868*0 + 3*188*FLEN/8, x4, x1, x2)

inst_96957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:290871*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290871*0 + 3*189*FLEN/8, x4, x1, x2)

inst_96958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:290874*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290874*0 + 3*190*FLEN/8, x4, x1, x2)

inst_96959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:290877*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290877*0 + 3*191*FLEN/8, x4, x1, x2)

inst_96960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:290880*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290880*0 + 3*192*FLEN/8, x4, x1, x2)

inst_96961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:290883*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290883*0 + 3*193*FLEN/8, x4, x1, x2)

inst_96962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:290886*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290886*0 + 3*194*FLEN/8, x4, x1, x2)

inst_96963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:290889*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290889*0 + 3*195*FLEN/8, x4, x1, x2)

inst_96964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:290892*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290892*0 + 3*196*FLEN/8, x4, x1, x2)

inst_96965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:290895*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290895*0 + 3*197*FLEN/8, x4, x1, x2)

inst_96966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:290898*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290898*0 + 3*198*FLEN/8, x4, x1, x2)

inst_96967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:290901*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290901*0 + 3*199*FLEN/8, x4, x1, x2)

inst_96968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:290904*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290904*0 + 3*200*FLEN/8, x4, x1, x2)

inst_96969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:290907*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290907*0 + 3*201*FLEN/8, x4, x1, x2)

inst_96970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:290910*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290910*0 + 3*202*FLEN/8, x4, x1, x2)

inst_96971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:290913*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290913*0 + 3*203*FLEN/8, x4, x1, x2)

inst_96972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:290916*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290916*0 + 3*204*FLEN/8, x4, x1, x2)

inst_96973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:290919*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290919*0 + 3*205*FLEN/8, x4, x1, x2)

inst_96974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:290922*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290922*0 + 3*206*FLEN/8, x4, x1, x2)

inst_96975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:290925*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290925*0 + 3*207*FLEN/8, x4, x1, x2)

inst_96976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:290928*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290928*0 + 3*208*FLEN/8, x4, x1, x2)

inst_96977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe65e5e3e01c84 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0d7db69665e0e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae65e5e3e01c84; op2val:0x9fc0d7db69665e0e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:290931*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290931*0 + 3*209*FLEN/8, x4, x1, x2)

inst_96978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:290934*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290934*0 + 3*210*FLEN/8, x4, x1, x2)

inst_96979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:290937*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290937*0 + 3*211*FLEN/8, x4, x1, x2)

inst_96980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:290940*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290940*0 + 3*212*FLEN/8, x4, x1, x2)

inst_96981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:290943*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290943*0 + 3*213*FLEN/8, x4, x1, x2)

inst_96982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:290946*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290946*0 + 3*214*FLEN/8, x4, x1, x2)

inst_96983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:290949*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290949*0 + 3*215*FLEN/8, x4, x1, x2)

inst_96984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:290952*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290952*0 + 3*216*FLEN/8, x4, x1, x2)

inst_96985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:290955*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290955*0 + 3*217*FLEN/8, x4, x1, x2)

inst_96986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:290958*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290958*0 + 3*218*FLEN/8, x4, x1, x2)

inst_96987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:290961*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290961*0 + 3*219*FLEN/8, x4, x1, x2)

inst_96988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:290964*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290964*0 + 3*220*FLEN/8, x4, x1, x2)

inst_96989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:290967*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290967*0 + 3*221*FLEN/8, x4, x1, x2)

inst_96990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:290970*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290970*0 + 3*222*FLEN/8, x4, x1, x2)

inst_96991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:290973*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290973*0 + 3*223*FLEN/8, x4, x1, x2)

inst_96992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:290976*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290976*0 + 3*224*FLEN/8, x4, x1, x2)

inst_96993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:290979*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290979*0 + 3*225*FLEN/8, x4, x1, x2)

inst_96994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:290982*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290982*0 + 3*226*FLEN/8, x4, x1, x2)

inst_96995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:290985*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290985*0 + 3*227*FLEN/8, x4, x1, x2)

inst_96996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:290988*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290988*0 + 3*228*FLEN/8, x4, x1, x2)

inst_96997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:290991*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290991*0 + 3*229*FLEN/8, x4, x1, x2)

inst_96998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:290994*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290994*0 + 3*230*FLEN/8, x4, x1, x2)

inst_96999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:290997*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290997*0 + 3*231*FLEN/8, x4, x1, x2)

inst_97000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000000000; valaddr_reg:x3; val_offset:291000*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291000*0 + 3*232*FLEN/8, x4, x1, x2)

inst_97001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000000001; valaddr_reg:x3; val_offset:291003*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291003*0 + 3*233*FLEN/8, x4, x1, x2)

inst_97002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000000003; valaddr_reg:x3; val_offset:291006*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291006*0 + 3*234*FLEN/8, x4, x1, x2)

inst_97003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000000007; valaddr_reg:x3; val_offset:291009*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291009*0 + 3*235*FLEN/8, x4, x1, x2)

inst_97004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000000000f; valaddr_reg:x3; val_offset:291012*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291012*0 + 3*236*FLEN/8, x4, x1, x2)

inst_97005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000000001f; valaddr_reg:x3; val_offset:291015*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291015*0 + 3*237*FLEN/8, x4, x1, x2)

inst_97006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000000003f; valaddr_reg:x3; val_offset:291018*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291018*0 + 3*238*FLEN/8, x4, x1, x2)

inst_97007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000000007f; valaddr_reg:x3; val_offset:291021*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291021*0 + 3*239*FLEN/8, x4, x1, x2)

inst_97008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000000000ff; valaddr_reg:x3; val_offset:291024*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291024*0 + 3*240*FLEN/8, x4, x1, x2)

inst_97009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000000001ff; valaddr_reg:x3; val_offset:291027*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291027*0 + 3*241*FLEN/8, x4, x1, x2)

inst_97010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000000003ff; valaddr_reg:x3; val_offset:291030*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291030*0 + 3*242*FLEN/8, x4, x1, x2)

inst_97011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000000007ff; valaddr_reg:x3; val_offset:291033*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291033*0 + 3*243*FLEN/8, x4, x1, x2)

inst_97012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000000fff; valaddr_reg:x3; val_offset:291036*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291036*0 + 3*244*FLEN/8, x4, x1, x2)

inst_97013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000001fff; valaddr_reg:x3; val_offset:291039*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291039*0 + 3*245*FLEN/8, x4, x1, x2)

inst_97014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000003fff; valaddr_reg:x3; val_offset:291042*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291042*0 + 3*246*FLEN/8, x4, x1, x2)

inst_97015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000007fff; valaddr_reg:x3; val_offset:291045*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291045*0 + 3*247*FLEN/8, x4, x1, x2)

inst_97016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000000ffff; valaddr_reg:x3; val_offset:291048*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291048*0 + 3*248*FLEN/8, x4, x1, x2)

inst_97017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000001ffff; valaddr_reg:x3; val_offset:291051*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291051*0 + 3*249*FLEN/8, x4, x1, x2)

inst_97018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000003ffff; valaddr_reg:x3; val_offset:291054*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291054*0 + 3*250*FLEN/8, x4, x1, x2)

inst_97019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000007ffff; valaddr_reg:x3; val_offset:291057*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291057*0 + 3*251*FLEN/8, x4, x1, x2)

inst_97020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000000fffff; valaddr_reg:x3; val_offset:291060*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291060*0 + 3*252*FLEN/8, x4, x1, x2)

inst_97021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000001fffff; valaddr_reg:x3; val_offset:291063*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291063*0 + 3*253*FLEN/8, x4, x1, x2)

inst_97022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000003fffff; valaddr_reg:x3; val_offset:291066*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291066*0 + 3*254*FLEN/8, x4, x1, x2)

inst_97023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000007fffff; valaddr_reg:x3; val_offset:291069*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291069*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_97024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000000ffffff; valaddr_reg:x3; val_offset:291072*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291072*0 + 3*256*FLEN/8, x4, x1, x2)

inst_97025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000001ffffff; valaddr_reg:x3; val_offset:291075*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291075*0 + 3*257*FLEN/8, x4, x1, x2)

inst_97026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000003ffffff; valaddr_reg:x3; val_offset:291078*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291078*0 + 3*258*FLEN/8, x4, x1, x2)

inst_97027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000007ffffff; valaddr_reg:x3; val_offset:291081*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291081*0 + 3*259*FLEN/8, x4, x1, x2)

inst_97028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000000fffffff; valaddr_reg:x3; val_offset:291084*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291084*0 + 3*260*FLEN/8, x4, x1, x2)

inst_97029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000001fffffff; valaddr_reg:x3; val_offset:291087*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291087*0 + 3*261*FLEN/8, x4, x1, x2)

inst_97030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000003fffffff; valaddr_reg:x3; val_offset:291090*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291090*0 + 3*262*FLEN/8, x4, x1, x2)

inst_97031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000007fffffff; valaddr_reg:x3; val_offset:291093*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291093*0 + 3*263*FLEN/8, x4, x1, x2)

inst_97032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00000ffffffff; valaddr_reg:x3; val_offset:291096*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291096*0 + 3*264*FLEN/8, x4, x1, x2)

inst_97033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00001ffffffff; valaddr_reg:x3; val_offset:291099*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291099*0 + 3*265*FLEN/8, x4, x1, x2)

inst_97034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00003ffffffff; valaddr_reg:x3; val_offset:291102*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291102*0 + 3*266*FLEN/8, x4, x1, x2)

inst_97035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00007ffffffff; valaddr_reg:x3; val_offset:291105*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291105*0 + 3*267*FLEN/8, x4, x1, x2)

inst_97036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0000fffffffff; valaddr_reg:x3; val_offset:291108*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291108*0 + 3*268*FLEN/8, x4, x1, x2)

inst_97037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0001fffffffff; valaddr_reg:x3; val_offset:291111*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291111*0 + 3*269*FLEN/8, x4, x1, x2)

inst_97038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0003fffffffff; valaddr_reg:x3; val_offset:291114*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291114*0 + 3*270*FLEN/8, x4, x1, x2)

inst_97039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0007fffffffff; valaddr_reg:x3; val_offset:291117*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291117*0 + 3*271*FLEN/8, x4, x1, x2)

inst_97040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a000ffffffffff; valaddr_reg:x3; val_offset:291120*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291120*0 + 3*272*FLEN/8, x4, x1, x2)

inst_97041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a001ffffffffff; valaddr_reg:x3; val_offset:291123*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291123*0 + 3*273*FLEN/8, x4, x1, x2)

inst_97042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a003ffffffffff; valaddr_reg:x3; val_offset:291126*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291126*0 + 3*274*FLEN/8, x4, x1, x2)

inst_97043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a007ffffffffff; valaddr_reg:x3; val_offset:291129*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291129*0 + 3*275*FLEN/8, x4, x1, x2)

inst_97044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a00fffffffffff; valaddr_reg:x3; val_offset:291132*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291132*0 + 3*276*FLEN/8, x4, x1, x2)

inst_97045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a01fffffffffff; valaddr_reg:x3; val_offset:291135*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291135*0 + 3*277*FLEN/8, x4, x1, x2)

inst_97046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a03fffffffffff; valaddr_reg:x3; val_offset:291138*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291138*0 + 3*278*FLEN/8, x4, x1, x2)

inst_97047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a07fffffffffff; valaddr_reg:x3; val_offset:291141*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291141*0 + 3*279*FLEN/8, x4, x1, x2)

inst_97048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a0ffffffffffff; valaddr_reg:x3; val_offset:291144*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291144*0 + 3*280*FLEN/8, x4, x1, x2)

inst_97049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a1ffffffffffff; valaddr_reg:x3; val_offset:291147*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291147*0 + 3*281*FLEN/8, x4, x1, x2)

inst_97050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a3ffffffffffff; valaddr_reg:x3; val_offset:291150*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291150*0 + 3*282*FLEN/8, x4, x1, x2)

inst_97051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a7ffffffffffff; valaddr_reg:x3; val_offset:291153*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291153*0 + 3*283*FLEN/8, x4, x1, x2)

inst_97052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83a8000000000000; valaddr_reg:x3; val_offset:291156*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291156*0 + 3*284*FLEN/8, x4, x1, x2)

inst_97053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83ac000000000000; valaddr_reg:x3; val_offset:291159*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291159*0 + 3*285*FLEN/8, x4, x1, x2)

inst_97054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83ae000000000000; valaddr_reg:x3; val_offset:291162*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291162*0 + 3*286*FLEN/8, x4, x1, x2)

inst_97055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83af000000000000; valaddr_reg:x3; val_offset:291165*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291165*0 + 3*287*FLEN/8, x4, x1, x2)

inst_97056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83af800000000000; valaddr_reg:x3; val_offset:291168*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291168*0 + 3*288*FLEN/8, x4, x1, x2)

inst_97057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afc00000000000; valaddr_reg:x3; val_offset:291171*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291171*0 + 3*289*FLEN/8, x4, x1, x2)

inst_97058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afe00000000000; valaddr_reg:x3; val_offset:291174*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291174*0 + 3*290*FLEN/8, x4, x1, x2)

inst_97059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83aff00000000000; valaddr_reg:x3; val_offset:291177*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291177*0 + 3*291*FLEN/8, x4, x1, x2)

inst_97060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83aff80000000000; valaddr_reg:x3; val_offset:291180*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291180*0 + 3*292*FLEN/8, x4, x1, x2)

inst_97061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affc0000000000; valaddr_reg:x3; val_offset:291183*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291183*0 + 3*293*FLEN/8, x4, x1, x2)

inst_97062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affe0000000000; valaddr_reg:x3; val_offset:291186*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291186*0 + 3*294*FLEN/8, x4, x1, x2)

inst_97063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afff0000000000; valaddr_reg:x3; val_offset:291189*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291189*0 + 3*295*FLEN/8, x4, x1, x2)

inst_97064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afff8000000000; valaddr_reg:x3; val_offset:291192*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291192*0 + 3*296*FLEN/8, x4, x1, x2)

inst_97065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffc000000000; valaddr_reg:x3; val_offset:291195*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291195*0 + 3*297*FLEN/8, x4, x1, x2)

inst_97066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffe000000000; valaddr_reg:x3; val_offset:291198*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291198*0 + 3*298*FLEN/8, x4, x1, x2)

inst_97067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affff000000000; valaddr_reg:x3; val_offset:291201*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291201*0 + 3*299*FLEN/8, x4, x1, x2)

inst_97068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affff800000000; valaddr_reg:x3; val_offset:291204*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291204*0 + 3*300*FLEN/8, x4, x1, x2)

inst_97069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffc00000000; valaddr_reg:x3; val_offset:291207*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291207*0 + 3*301*FLEN/8, x4, x1, x2)

inst_97070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffe00000000; valaddr_reg:x3; val_offset:291210*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291210*0 + 3*302*FLEN/8, x4, x1, x2)

inst_97071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffff00000000; valaddr_reg:x3; val_offset:291213*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291213*0 + 3*303*FLEN/8, x4, x1, x2)

inst_97072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffff80000000; valaddr_reg:x3; val_offset:291216*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291216*0 + 3*304*FLEN/8, x4, x1, x2)

inst_97073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffc0000000; valaddr_reg:x3; val_offset:291219*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291219*0 + 3*305*FLEN/8, x4, x1, x2)

inst_97074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffe0000000; valaddr_reg:x3; val_offset:291222*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291222*0 + 3*306*FLEN/8, x4, x1, x2)

inst_97075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffff0000000; valaddr_reg:x3; val_offset:291225*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291225*0 + 3*307*FLEN/8, x4, x1, x2)

inst_97076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffff8000000; valaddr_reg:x3; val_offset:291228*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291228*0 + 3*308*FLEN/8, x4, x1, x2)

inst_97077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffc000000; valaddr_reg:x3; val_offset:291231*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291231*0 + 3*309*FLEN/8, x4, x1, x2)

inst_97078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffe000000; valaddr_reg:x3; val_offset:291234*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291234*0 + 3*310*FLEN/8, x4, x1, x2)

inst_97079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffff000000; valaddr_reg:x3; val_offset:291237*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291237*0 + 3*311*FLEN/8, x4, x1, x2)

inst_97080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffff800000; valaddr_reg:x3; val_offset:291240*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291240*0 + 3*312*FLEN/8, x4, x1, x2)

inst_97081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffc00000; valaddr_reg:x3; val_offset:291243*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291243*0 + 3*313*FLEN/8, x4, x1, x2)

inst_97082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffe00000; valaddr_reg:x3; val_offset:291246*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291246*0 + 3*314*FLEN/8, x4, x1, x2)

inst_97083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffff00000; valaddr_reg:x3; val_offset:291249*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291249*0 + 3*315*FLEN/8, x4, x1, x2)

inst_97084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffff80000; valaddr_reg:x3; val_offset:291252*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291252*0 + 3*316*FLEN/8, x4, x1, x2)

inst_97085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffc0000; valaddr_reg:x3; val_offset:291255*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291255*0 + 3*317*FLEN/8, x4, x1, x2)

inst_97086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffe0000; valaddr_reg:x3; val_offset:291258*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291258*0 + 3*318*FLEN/8, x4, x1, x2)

inst_97087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffff0000; valaddr_reg:x3; val_offset:291261*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291261*0 + 3*319*FLEN/8, x4, x1, x2)

inst_97088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffff8000; valaddr_reg:x3; val_offset:291264*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291264*0 + 3*320*FLEN/8, x4, x1, x2)

inst_97089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffc000; valaddr_reg:x3; val_offset:291267*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291267*0 + 3*321*FLEN/8, x4, x1, x2)

inst_97090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffe000; valaddr_reg:x3; val_offset:291270*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291270*0 + 3*322*FLEN/8, x4, x1, x2)

inst_97091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffff000; valaddr_reg:x3; val_offset:291273*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291273*0 + 3*323*FLEN/8, x4, x1, x2)

inst_97092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffff800; valaddr_reg:x3; val_offset:291276*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291276*0 + 3*324*FLEN/8, x4, x1, x2)

inst_97093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffffc00; valaddr_reg:x3; val_offset:291279*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291279*0 + 3*325*FLEN/8, x4, x1, x2)

inst_97094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffffe00; valaddr_reg:x3; val_offset:291282*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291282*0 + 3*326*FLEN/8, x4, x1, x2)

inst_97095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffff00; valaddr_reg:x3; val_offset:291285*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291285*0 + 3*327*FLEN/8, x4, x1, x2)

inst_97096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffff80; valaddr_reg:x3; val_offset:291288*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291288*0 + 3*328*FLEN/8, x4, x1, x2)

inst_97097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffffc0; valaddr_reg:x3; val_offset:291291*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291291*0 + 3*329*FLEN/8, x4, x1, x2)

inst_97098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffffe0; valaddr_reg:x3; val_offset:291294*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291294*0 + 3*330*FLEN/8, x4, x1, x2)

inst_97099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffffff0; valaddr_reg:x3; val_offset:291297*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291297*0 + 3*331*FLEN/8, x4, x1, x2)

inst_97100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffffff8; valaddr_reg:x3; val_offset:291300*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291300*0 + 3*332*FLEN/8, x4, x1, x2)

inst_97101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffffffc; valaddr_reg:x3; val_offset:291303*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291303*0 + 3*333*FLEN/8, x4, x1, x2)

inst_97102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83affffffffffffe; valaddr_reg:x3; val_offset:291306*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291306*0 + 3*334*FLEN/8, x4, x1, x2)

inst_97103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe6e92374909b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae6e92374909b9; op2val:0x8000;
op3val:0x83afffffffffffff; valaddr_reg:x3; val_offset:291309*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291309*0 + 3*335*FLEN/8, x4, x1, x2)

inst_97104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000000000; valaddr_reg:x3; val_offset:291312*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291312*0 + 3*336*FLEN/8, x4, x1, x2)

inst_97105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000000001; valaddr_reg:x3; val_offset:291315*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291315*0 + 3*337*FLEN/8, x4, x1, x2)

inst_97106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000000003; valaddr_reg:x3; val_offset:291318*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291318*0 + 3*338*FLEN/8, x4, x1, x2)

inst_97107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000000007; valaddr_reg:x3; val_offset:291321*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291321*0 + 3*339*FLEN/8, x4, x1, x2)

inst_97108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000000000f; valaddr_reg:x3; val_offset:291324*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291324*0 + 3*340*FLEN/8, x4, x1, x2)

inst_97109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000000001f; valaddr_reg:x3; val_offset:291327*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291327*0 + 3*341*FLEN/8, x4, x1, x2)

inst_97110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000000003f; valaddr_reg:x3; val_offset:291330*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291330*0 + 3*342*FLEN/8, x4, x1, x2)

inst_97111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000000007f; valaddr_reg:x3; val_offset:291333*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291333*0 + 3*343*FLEN/8, x4, x1, x2)

inst_97112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000000000ff; valaddr_reg:x3; val_offset:291336*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291336*0 + 3*344*FLEN/8, x4, x1, x2)

inst_97113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000000001ff; valaddr_reg:x3; val_offset:291339*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291339*0 + 3*345*FLEN/8, x4, x1, x2)

inst_97114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000000003ff; valaddr_reg:x3; val_offset:291342*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291342*0 + 3*346*FLEN/8, x4, x1, x2)

inst_97115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000000007ff; valaddr_reg:x3; val_offset:291345*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291345*0 + 3*347*FLEN/8, x4, x1, x2)

inst_97116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000000fff; valaddr_reg:x3; val_offset:291348*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291348*0 + 3*348*FLEN/8, x4, x1, x2)

inst_97117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000001fff; valaddr_reg:x3; val_offset:291351*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291351*0 + 3*349*FLEN/8, x4, x1, x2)

inst_97118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000003fff; valaddr_reg:x3; val_offset:291354*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291354*0 + 3*350*FLEN/8, x4, x1, x2)

inst_97119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000007fff; valaddr_reg:x3; val_offset:291357*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291357*0 + 3*351*FLEN/8, x4, x1, x2)

inst_97120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000000ffff; valaddr_reg:x3; val_offset:291360*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291360*0 + 3*352*FLEN/8, x4, x1, x2)

inst_97121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000001ffff; valaddr_reg:x3; val_offset:291363*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291363*0 + 3*353*FLEN/8, x4, x1, x2)

inst_97122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000003ffff; valaddr_reg:x3; val_offset:291366*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291366*0 + 3*354*FLEN/8, x4, x1, x2)

inst_97123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000007ffff; valaddr_reg:x3; val_offset:291369*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291369*0 + 3*355*FLEN/8, x4, x1, x2)

inst_97124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000000fffff; valaddr_reg:x3; val_offset:291372*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291372*0 + 3*356*FLEN/8, x4, x1, x2)

inst_97125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000001fffff; valaddr_reg:x3; val_offset:291375*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291375*0 + 3*357*FLEN/8, x4, x1, x2)

inst_97126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000003fffff; valaddr_reg:x3; val_offset:291378*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291378*0 + 3*358*FLEN/8, x4, x1, x2)

inst_97127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000007fffff; valaddr_reg:x3; val_offset:291381*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291381*0 + 3*359*FLEN/8, x4, x1, x2)

inst_97128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000000ffffff; valaddr_reg:x3; val_offset:291384*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291384*0 + 3*360*FLEN/8, x4, x1, x2)

inst_97129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000001ffffff; valaddr_reg:x3; val_offset:291387*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291387*0 + 3*361*FLEN/8, x4, x1, x2)

inst_97130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000003ffffff; valaddr_reg:x3; val_offset:291390*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291390*0 + 3*362*FLEN/8, x4, x1, x2)

inst_97131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000007ffffff; valaddr_reg:x3; val_offset:291393*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291393*0 + 3*363*FLEN/8, x4, x1, x2)

inst_97132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000000fffffff; valaddr_reg:x3; val_offset:291396*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291396*0 + 3*364*FLEN/8, x4, x1, x2)

inst_97133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000001fffffff; valaddr_reg:x3; val_offset:291399*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291399*0 + 3*365*FLEN/8, x4, x1, x2)

inst_97134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000003fffffff; valaddr_reg:x3; val_offset:291402*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291402*0 + 3*366*FLEN/8, x4, x1, x2)

inst_97135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000007fffffff; valaddr_reg:x3; val_offset:291405*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291405*0 + 3*367*FLEN/8, x4, x1, x2)

inst_97136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00000ffffffff; valaddr_reg:x3; val_offset:291408*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291408*0 + 3*368*FLEN/8, x4, x1, x2)

inst_97137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00001ffffffff; valaddr_reg:x3; val_offset:291411*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291411*0 + 3*369*FLEN/8, x4, x1, x2)

inst_97138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00003ffffffff; valaddr_reg:x3; val_offset:291414*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291414*0 + 3*370*FLEN/8, x4, x1, x2)

inst_97139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00007ffffffff; valaddr_reg:x3; val_offset:291417*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291417*0 + 3*371*FLEN/8, x4, x1, x2)

inst_97140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0000fffffffff; valaddr_reg:x3; val_offset:291420*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291420*0 + 3*372*FLEN/8, x4, x1, x2)

inst_97141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0001fffffffff; valaddr_reg:x3; val_offset:291423*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291423*0 + 3*373*FLEN/8, x4, x1, x2)

inst_97142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0003fffffffff; valaddr_reg:x3; val_offset:291426*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291426*0 + 3*374*FLEN/8, x4, x1, x2)

inst_97143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0007fffffffff; valaddr_reg:x3; val_offset:291429*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291429*0 + 3*375*FLEN/8, x4, x1, x2)

inst_97144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea000ffffffffff; valaddr_reg:x3; val_offset:291432*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291432*0 + 3*376*FLEN/8, x4, x1, x2)

inst_97145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea001ffffffffff; valaddr_reg:x3; val_offset:291435*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291435*0 + 3*377*FLEN/8, x4, x1, x2)

inst_97146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea003ffffffffff; valaddr_reg:x3; val_offset:291438*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291438*0 + 3*378*FLEN/8, x4, x1, x2)

inst_97147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea007ffffffffff; valaddr_reg:x3; val_offset:291441*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291441*0 + 3*379*FLEN/8, x4, x1, x2)

inst_97148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea00fffffffffff; valaddr_reg:x3; val_offset:291444*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291444*0 + 3*380*FLEN/8, x4, x1, x2)

inst_97149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea01fffffffffff; valaddr_reg:x3; val_offset:291447*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291447*0 + 3*381*FLEN/8, x4, x1, x2)

inst_97150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea03fffffffffff; valaddr_reg:x3; val_offset:291450*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291450*0 + 3*382*FLEN/8, x4, x1, x2)

inst_97151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea07fffffffffff; valaddr_reg:x3; val_offset:291453*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291453*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_97152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea0ffffffffffff; valaddr_reg:x3; val_offset:291456*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291456*0 + 3*384*FLEN/8, x4, x1, x2)

inst_97153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea1ffffffffffff; valaddr_reg:x3; val_offset:291459*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291459*0 + 3*385*FLEN/8, x4, x1, x2)

inst_97154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea3ffffffffffff; valaddr_reg:x3; val_offset:291462*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291462*0 + 3*386*FLEN/8, x4, x1, x2)

inst_97155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea7ffffffffffff; valaddr_reg:x3; val_offset:291465*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291465*0 + 3*387*FLEN/8, x4, x1, x2)

inst_97156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ea8000000000000; valaddr_reg:x3; val_offset:291468*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291468*0 + 3*388*FLEN/8, x4, x1, x2)

inst_97157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eac000000000000; valaddr_reg:x3; val_offset:291471*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291471*0 + 3*389*FLEN/8, x4, x1, x2)

inst_97158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eae000000000000; valaddr_reg:x3; val_offset:291474*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291474*0 + 3*390*FLEN/8, x4, x1, x2)

inst_97159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaf000000000000; valaddr_reg:x3; val_offset:291477*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291477*0 + 3*391*FLEN/8, x4, x1, x2)

inst_97160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaf800000000000; valaddr_reg:x3; val_offset:291480*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291480*0 + 3*392*FLEN/8, x4, x1, x2)

inst_97161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafc00000000000; valaddr_reg:x3; val_offset:291483*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291483*0 + 3*393*FLEN/8, x4, x1, x2)

inst_97162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafe00000000000; valaddr_reg:x3; val_offset:291486*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291486*0 + 3*394*FLEN/8, x4, x1, x2)

inst_97163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaff00000000000; valaddr_reg:x3; val_offset:291489*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291489*0 + 3*395*FLEN/8, x4, x1, x2)

inst_97164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaff80000000000; valaddr_reg:x3; val_offset:291492*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291492*0 + 3*396*FLEN/8, x4, x1, x2)

inst_97165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffc0000000000; valaddr_reg:x3; val_offset:291495*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291495*0 + 3*397*FLEN/8, x4, x1, x2)

inst_97166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffe0000000000; valaddr_reg:x3; val_offset:291498*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291498*0 + 3*398*FLEN/8, x4, x1, x2)

inst_97167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafff0000000000; valaddr_reg:x3; val_offset:291501*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291501*0 + 3*399*FLEN/8, x4, x1, x2)

inst_97168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafff8000000000; valaddr_reg:x3; val_offset:291504*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291504*0 + 3*400*FLEN/8, x4, x1, x2)

inst_97169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffc000000000; valaddr_reg:x3; val_offset:291507*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291507*0 + 3*401*FLEN/8, x4, x1, x2)

inst_97170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffe000000000; valaddr_reg:x3; val_offset:291510*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291510*0 + 3*402*FLEN/8, x4, x1, x2)

inst_97171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffff000000000; valaddr_reg:x3; val_offset:291513*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291513*0 + 3*403*FLEN/8, x4, x1, x2)

inst_97172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffff800000000; valaddr_reg:x3; val_offset:291516*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291516*0 + 3*404*FLEN/8, x4, x1, x2)

inst_97173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffc00000000; valaddr_reg:x3; val_offset:291519*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291519*0 + 3*405*FLEN/8, x4, x1, x2)

inst_97174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffe00000000; valaddr_reg:x3; val_offset:291522*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291522*0 + 3*406*FLEN/8, x4, x1, x2)

inst_97175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffff00000000; valaddr_reg:x3; val_offset:291525*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291525*0 + 3*407*FLEN/8, x4, x1, x2)

inst_97176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffff80000000; valaddr_reg:x3; val_offset:291528*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291528*0 + 3*408*FLEN/8, x4, x1, x2)

inst_97177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffc0000000; valaddr_reg:x3; val_offset:291531*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291531*0 + 3*409*FLEN/8, x4, x1, x2)

inst_97178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffe0000000; valaddr_reg:x3; val_offset:291534*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291534*0 + 3*410*FLEN/8, x4, x1, x2)

inst_97179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffff0000000; valaddr_reg:x3; val_offset:291537*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291537*0 + 3*411*FLEN/8, x4, x1, x2)

inst_97180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffff8000000; valaddr_reg:x3; val_offset:291540*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291540*0 + 3*412*FLEN/8, x4, x1, x2)

inst_97181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffc000000; valaddr_reg:x3; val_offset:291543*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291543*0 + 3*413*FLEN/8, x4, x1, x2)

inst_97182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffe000000; valaddr_reg:x3; val_offset:291546*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291546*0 + 3*414*FLEN/8, x4, x1, x2)

inst_97183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffff000000; valaddr_reg:x3; val_offset:291549*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291549*0 + 3*415*FLEN/8, x4, x1, x2)

inst_97184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffff800000; valaddr_reg:x3; val_offset:291552*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291552*0 + 3*416*FLEN/8, x4, x1, x2)

inst_97185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffc00000; valaddr_reg:x3; val_offset:291555*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291555*0 + 3*417*FLEN/8, x4, x1, x2)

inst_97186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffe00000; valaddr_reg:x3; val_offset:291558*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291558*0 + 3*418*FLEN/8, x4, x1, x2)

inst_97187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffff00000; valaddr_reg:x3; val_offset:291561*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291561*0 + 3*419*FLEN/8, x4, x1, x2)

inst_97188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffff80000; valaddr_reg:x3; val_offset:291564*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291564*0 + 3*420*FLEN/8, x4, x1, x2)

inst_97189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffc0000; valaddr_reg:x3; val_offset:291567*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291567*0 + 3*421*FLEN/8, x4, x1, x2)

inst_97190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffe0000; valaddr_reg:x3; val_offset:291570*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291570*0 + 3*422*FLEN/8, x4, x1, x2)

inst_97191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffff0000; valaddr_reg:x3; val_offset:291573*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291573*0 + 3*423*FLEN/8, x4, x1, x2)

inst_97192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffff8000; valaddr_reg:x3; val_offset:291576*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291576*0 + 3*424*FLEN/8, x4, x1, x2)

inst_97193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffc000; valaddr_reg:x3; val_offset:291579*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291579*0 + 3*425*FLEN/8, x4, x1, x2)

inst_97194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffe000; valaddr_reg:x3; val_offset:291582*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291582*0 + 3*426*FLEN/8, x4, x1, x2)

inst_97195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffff000; valaddr_reg:x3; val_offset:291585*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291585*0 + 3*427*FLEN/8, x4, x1, x2)

inst_97196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffff800; valaddr_reg:x3; val_offset:291588*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291588*0 + 3*428*FLEN/8, x4, x1, x2)

inst_97197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffffc00; valaddr_reg:x3; val_offset:291591*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291591*0 + 3*429*FLEN/8, x4, x1, x2)

inst_97198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffffe00; valaddr_reg:x3; val_offset:291594*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291594*0 + 3*430*FLEN/8, x4, x1, x2)

inst_97199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffff00; valaddr_reg:x3; val_offset:291597*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291597*0 + 3*431*FLEN/8, x4, x1, x2)

inst_97200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffff80; valaddr_reg:x3; val_offset:291600*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291600*0 + 3*432*FLEN/8, x4, x1, x2)

inst_97201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffffc0; valaddr_reg:x3; val_offset:291603*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291603*0 + 3*433*FLEN/8, x4, x1, x2)

inst_97202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffffe0; valaddr_reg:x3; val_offset:291606*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291606*0 + 3*434*FLEN/8, x4, x1, x2)

inst_97203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffffff0; valaddr_reg:x3; val_offset:291609*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291609*0 + 3*435*FLEN/8, x4, x1, x2)

inst_97204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffffff8; valaddr_reg:x3; val_offset:291612*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291612*0 + 3*436*FLEN/8, x4, x1, x2)

inst_97205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffffffc; valaddr_reg:x3; val_offset:291615*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291615*0 + 3*437*FLEN/8, x4, x1, x2)

inst_97206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eaffffffffffffe; valaddr_reg:x3; val_offset:291618*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291618*0 + 3*438*FLEN/8, x4, x1, x2)

inst_97207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3eafffffffffffff; valaddr_reg:x3; val_offset:291621*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291621*0 + 3*439*FLEN/8, x4, x1, x2)

inst_97208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:291624*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291624*0 + 3*440*FLEN/8, x4, x1, x2)

inst_97209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:291627*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291627*0 + 3*441*FLEN/8, x4, x1, x2)

inst_97210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:291630*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291630*0 + 3*442*FLEN/8, x4, x1, x2)

inst_97211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:291633*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291633*0 + 3*443*FLEN/8, x4, x1, x2)

inst_97212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:291636*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291636*0 + 3*444*FLEN/8, x4, x1, x2)

inst_97213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:291639*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291639*0 + 3*445*FLEN/8, x4, x1, x2)

inst_97214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:291642*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291642*0 + 3*446*FLEN/8, x4, x1, x2)

inst_97215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:291645*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291645*0 + 3*447*FLEN/8, x4, x1, x2)

inst_97216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:291648*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291648*0 + 3*448*FLEN/8, x4, x1, x2)

inst_97217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:291651*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291651*0 + 3*449*FLEN/8, x4, x1, x2)

inst_97218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:291654*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291654*0 + 3*450*FLEN/8, x4, x1, x2)

inst_97219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:291657*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291657*0 + 3*451*FLEN/8, x4, x1, x2)

inst_97220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:291660*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291660*0 + 3*452*FLEN/8, x4, x1, x2)

inst_97221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:291663*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291663*0 + 3*453*FLEN/8, x4, x1, x2)

inst_97222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:291666*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291666*0 + 3*454*FLEN/8, x4, x1, x2)

inst_97223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:291669*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291669*0 + 3*455*FLEN/8, x4, x1, x2)

inst_97224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:291672*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291672*0 + 3*456*FLEN/8, x4, x1, x2)

inst_97225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:291675*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291675*0 + 3*457*FLEN/8, x4, x1, x2)

inst_97226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:291678*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291678*0 + 3*458*FLEN/8, x4, x1, x2)

inst_97227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:291681*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291681*0 + 3*459*FLEN/8, x4, x1, x2)

inst_97228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:291684*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291684*0 + 3*460*FLEN/8, x4, x1, x2)

inst_97229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0c25dfe335b5f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae8ce066e96229; op2val:0x2030c25dfe335b5f;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:291687*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291687*0 + 3*461*FLEN/8, x4, x1, x2)

inst_97230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:291690*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291690*0 + 3*462*FLEN/8, x4, x1, x2)

inst_97231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:291693*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291693*0 + 3*463*FLEN/8, x4, x1, x2)

inst_97232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:291696*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291696*0 + 3*464*FLEN/8, x4, x1, x2)

inst_97233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:291699*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291699*0 + 3*465*FLEN/8, x4, x1, x2)

inst_97234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:291702*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291702*0 + 3*466*FLEN/8, x4, x1, x2)

inst_97235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:291705*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291705*0 + 3*467*FLEN/8, x4, x1, x2)

inst_97236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:291708*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291708*0 + 3*468*FLEN/8, x4, x1, x2)

inst_97237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:291711*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291711*0 + 3*469*FLEN/8, x4, x1, x2)

inst_97238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:291714*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291714*0 + 3*470*FLEN/8, x4, x1, x2)

inst_97239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:291717*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291717*0 + 3*471*FLEN/8, x4, x1, x2)

inst_97240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:291720*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291720*0 + 3*472*FLEN/8, x4, x1, x2)

inst_97241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:291723*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291723*0 + 3*473*FLEN/8, x4, x1, x2)

inst_97242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:291726*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291726*0 + 3*474*FLEN/8, x4, x1, x2)

inst_97243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:291729*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291729*0 + 3*475*FLEN/8, x4, x1, x2)

inst_97244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:291732*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291732*0 + 3*476*FLEN/8, x4, x1, x2)

inst_97245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:291735*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291735*0 + 3*477*FLEN/8, x4, x1, x2)

inst_97246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:291738*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291738*0 + 3*478*FLEN/8, x4, x1, x2)

inst_97247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:291741*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291741*0 + 3*479*FLEN/8, x4, x1, x2)

inst_97248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:291744*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291744*0 + 3*480*FLEN/8, x4, x1, x2)

inst_97249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:291747*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291747*0 + 3*481*FLEN/8, x4, x1, x2)

inst_97250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:291750*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291750*0 + 3*482*FLEN/8, x4, x1, x2)

inst_97251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:291753*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291753*0 + 3*483*FLEN/8, x4, x1, x2)

inst_97252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:291756*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291756*0 + 3*484*FLEN/8, x4, x1, x2)

inst_97253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:291759*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291759*0 + 3*485*FLEN/8, x4, x1, x2)

inst_97254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:291762*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291762*0 + 3*486*FLEN/8, x4, x1, x2)

inst_97255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:291765*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291765*0 + 3*487*FLEN/8, x4, x1, x2)

inst_97256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:291768*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291768*0 + 3*488*FLEN/8, x4, x1, x2)

inst_97257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:291771*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291771*0 + 3*489*FLEN/8, x4, x1, x2)

inst_97258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:291774*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291774*0 + 3*490*FLEN/8, x4, x1, x2)

inst_97259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:291777*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291777*0 + 3*491*FLEN/8, x4, x1, x2)

inst_97260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:291780*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291780*0 + 3*492*FLEN/8, x4, x1, x2)

inst_97261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:291783*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291783*0 + 3*493*FLEN/8, x4, x1, x2)

inst_97262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:291786*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291786*0 + 3*494*FLEN/8, x4, x1, x2)

inst_97263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:291789*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291789*0 + 3*495*FLEN/8, x4, x1, x2)

inst_97264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:291792*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291792*0 + 3*496*FLEN/8, x4, x1, x2)

inst_97265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:291795*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291795*0 + 3*497*FLEN/8, x4, x1, x2)

inst_97266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:291798*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291798*0 + 3*498*FLEN/8, x4, x1, x2)

inst_97267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:291801*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291801*0 + 3*499*FLEN/8, x4, x1, x2)

inst_97268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:291804*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291804*0 + 3*500*FLEN/8, x4, x1, x2)

inst_97269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:291807*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291807*0 + 3*501*FLEN/8, x4, x1, x2)

inst_97270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:291810*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291810*0 + 3*502*FLEN/8, x4, x1, x2)

inst_97271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:291813*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291813*0 + 3*503*FLEN/8, x4, x1, x2)

inst_97272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:291816*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291816*0 + 3*504*FLEN/8, x4, x1, x2)

inst_97273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:291819*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291819*0 + 3*505*FLEN/8, x4, x1, x2)

inst_97274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:291822*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291822*0 + 3*506*FLEN/8, x4, x1, x2)

inst_97275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:291825*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291825*0 + 3*507*FLEN/8, x4, x1, x2)

inst_97276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:291828*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291828*0 + 3*508*FLEN/8, x4, x1, x2)

inst_97277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:291831*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291831*0 + 3*509*FLEN/8, x4, x1, x2)

inst_97278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:291834*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291834*0 + 3*510*FLEN/8, x4, x1, x2)

inst_97279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:291837*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291837*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_97280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:291840*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291840*0 + 3*512*FLEN/8, x4, x1, x2)

inst_97281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:291843*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291843*0 + 3*513*FLEN/8, x4, x1, x2)

inst_97282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:291846*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291846*0 + 3*514*FLEN/8, x4, x1, x2)

inst_97283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:291849*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291849*0 + 3*515*FLEN/8, x4, x1, x2)

inst_97284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:291852*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291852*0 + 3*516*FLEN/8, x4, x1, x2)

inst_97285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:291855*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291855*0 + 3*517*FLEN/8, x4, x1, x2)

inst_97286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:291858*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291858*0 + 3*518*FLEN/8, x4, x1, x2)

inst_97287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:291861*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291861*0 + 3*519*FLEN/8, x4, x1, x2)

inst_97288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:291864*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291864*0 + 3*520*FLEN/8, x4, x1, x2)

inst_97289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:291867*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291867*0 + 3*521*FLEN/8, x4, x1, x2)

inst_97290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:291870*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291870*0 + 3*522*FLEN/8, x4, x1, x2)

inst_97291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:291873*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291873*0 + 3*523*FLEN/8, x4, x1, x2)

inst_97292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:291876*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291876*0 + 3*524*FLEN/8, x4, x1, x2)

inst_97293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:291879*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291879*0 + 3*525*FLEN/8, x4, x1, x2)

inst_97294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:291882*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291882*0 + 3*526*FLEN/8, x4, x1, x2)

inst_97295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:291885*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291885*0 + 3*527*FLEN/8, x4, x1, x2)

inst_97296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:291888*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291888*0 + 3*528*FLEN/8, x4, x1, x2)

inst_97297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:291891*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291891*0 + 3*529*FLEN/8, x4, x1, x2)

inst_97298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:291894*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291894*0 + 3*530*FLEN/8, x4, x1, x2)

inst_97299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:291897*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291897*0 + 3*531*FLEN/8, x4, x1, x2)

inst_97300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:291900*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291900*0 + 3*532*FLEN/8, x4, x1, x2)

inst_97301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:291903*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291903*0 + 3*533*FLEN/8, x4, x1, x2)

inst_97302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:291906*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291906*0 + 3*534*FLEN/8, x4, x1, x2)

inst_97303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:291909*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291909*0 + 3*535*FLEN/8, x4, x1, x2)

inst_97304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:291912*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291912*0 + 3*536*FLEN/8, x4, x1, x2)

inst_97305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:291915*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291915*0 + 3*537*FLEN/8, x4, x1, x2)

inst_97306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:291918*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291918*0 + 3*538*FLEN/8, x4, x1, x2)

inst_97307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:291921*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291921*0 + 3*539*FLEN/8, x4, x1, x2)

inst_97308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:291924*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291924*0 + 3*540*FLEN/8, x4, x1, x2)

inst_97309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:291927*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291927*0 + 3*541*FLEN/8, x4, x1, x2)

inst_97310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:291930*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291930*0 + 3*542*FLEN/8, x4, x1, x2)

inst_97311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:291933*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291933*0 + 3*543*FLEN/8, x4, x1, x2)

inst_97312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:291936*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291936*0 + 3*544*FLEN/8, x4, x1, x2)

inst_97313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:291939*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291939*0 + 3*545*FLEN/8, x4, x1, x2)

inst_97314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:291942*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291942*0 + 3*546*FLEN/8, x4, x1, x2)

inst_97315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:291945*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291945*0 + 3*547*FLEN/8, x4, x1, x2)

inst_97316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:291948*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291948*0 + 3*548*FLEN/8, x4, x1, x2)

inst_97317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:291951*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291951*0 + 3*549*FLEN/8, x4, x1, x2)

inst_97318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:291954*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291954*0 + 3*550*FLEN/8, x4, x1, x2)

inst_97319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:291957*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291957*0 + 3*551*FLEN/8, x4, x1, x2)

inst_97320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:291960*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291960*0 + 3*552*FLEN/8, x4, x1, x2)

inst_97321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:291963*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291963*0 + 3*553*FLEN/8, x4, x1, x2)

inst_97322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:291966*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291966*0 + 3*554*FLEN/8, x4, x1, x2)

inst_97323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:291969*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291969*0 + 3*555*FLEN/8, x4, x1, x2)

inst_97324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:291972*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291972*0 + 3*556*FLEN/8, x4, x1, x2)

inst_97325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:291975*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291975*0 + 3*557*FLEN/8, x4, x1, x2)

inst_97326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:291978*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291978*0 + 3*558*FLEN/8, x4, x1, x2)

inst_97327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:291981*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291981*0 + 3*559*FLEN/8, x4, x1, x2)

inst_97328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:291984*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291984*0 + 3*560*FLEN/8, x4, x1, x2)

inst_97329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:291987*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291987*0 + 3*561*FLEN/8, x4, x1, x2)

inst_97330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:291990*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291990*0 + 3*562*FLEN/8, x4, x1, x2)

inst_97331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:291993*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291993*0 + 3*563*FLEN/8, x4, x1, x2)

inst_97332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:291996*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291996*0 + 3*564*FLEN/8, x4, x1, x2)

inst_97333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:291999*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291999*0 + 3*565*FLEN/8, x4, x1, x2)

inst_97334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:292002*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292002*0 + 3*566*FLEN/8, x4, x1, x2)

inst_97335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:292005*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292005*0 + 3*567*FLEN/8, x4, x1, x2)

inst_97336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:292008*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292008*0 + 3*568*FLEN/8, x4, x1, x2)

inst_97337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:292011*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292011*0 + 3*569*FLEN/8, x4, x1, x2)

inst_97338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:292014*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292014*0 + 3*570*FLEN/8, x4, x1, x2)

inst_97339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:292017*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292017*0 + 3*571*FLEN/8, x4, x1, x2)

inst_97340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:292020*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292020*0 + 3*572*FLEN/8, x4, x1, x2)

inst_97341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:292023*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292023*0 + 3*573*FLEN/8, x4, x1, x2)

inst_97342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:292026*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292026*0 + 3*574*FLEN/8, x4, x1, x2)

inst_97343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:292029*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292029*0 + 3*575*FLEN/8, x4, x1, x2)

inst_97344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:292032*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292032*0 + 3*576*FLEN/8, x4, x1, x2)

inst_97345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:292035*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292035*0 + 3*577*FLEN/8, x4, x1, x2)

inst_97346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:292038*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292038*0 + 3*578*FLEN/8, x4, x1, x2)

inst_97347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:292041*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292041*0 + 3*579*FLEN/8, x4, x1, x2)

inst_97348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:292044*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292044*0 + 3*580*FLEN/8, x4, x1, x2)

inst_97349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:292047*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292047*0 + 3*581*FLEN/8, x4, x1, x2)

inst_97350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:292050*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292050*0 + 3*582*FLEN/8, x4, x1, x2)

inst_97351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:292053*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292053*0 + 3*583*FLEN/8, x4, x1, x2)

inst_97352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:292056*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292056*0 + 3*584*FLEN/8, x4, x1, x2)

inst_97353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:292059*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292059*0 + 3*585*FLEN/8, x4, x1, x2)

inst_97354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:292062*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292062*0 + 3*586*FLEN/8, x4, x1, x2)

inst_97355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:292065*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292065*0 + 3*587*FLEN/8, x4, x1, x2)

inst_97356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:292068*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292068*0 + 3*588*FLEN/8, x4, x1, x2)

inst_97357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:292071*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292071*0 + 3*589*FLEN/8, x4, x1, x2)

inst_97358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:292074*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292074*0 + 3*590*FLEN/8, x4, x1, x2)

inst_97359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:292077*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292077*0 + 3*591*FLEN/8, x4, x1, x2)

inst_97360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:292080*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292080*0 + 3*592*FLEN/8, x4, x1, x2)

inst_97361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:292083*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292083*0 + 3*593*FLEN/8, x4, x1, x2)

inst_97362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:292086*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292086*0 + 3*594*FLEN/8, x4, x1, x2)

inst_97363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:292089*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292089*0 + 3*595*FLEN/8, x4, x1, x2)

inst_97364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:292092*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292092*0 + 3*596*FLEN/8, x4, x1, x2)

inst_97365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:292095*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292095*0 + 3*597*FLEN/8, x4, x1, x2)

inst_97366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000000000; valaddr_reg:x3; val_offset:292098*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292098*0 + 3*598*FLEN/8, x4, x1, x2)

inst_97367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000000001; valaddr_reg:x3; val_offset:292101*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292101*0 + 3*599*FLEN/8, x4, x1, x2)

inst_97368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000000003; valaddr_reg:x3; val_offset:292104*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292104*0 + 3*600*FLEN/8, x4, x1, x2)

inst_97369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000000007; valaddr_reg:x3; val_offset:292107*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292107*0 + 3*601*FLEN/8, x4, x1, x2)

inst_97370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000000000f; valaddr_reg:x3; val_offset:292110*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292110*0 + 3*602*FLEN/8, x4, x1, x2)

inst_97371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000000001f; valaddr_reg:x3; val_offset:292113*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292113*0 + 3*603*FLEN/8, x4, x1, x2)

inst_97372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000000003f; valaddr_reg:x3; val_offset:292116*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292116*0 + 3*604*FLEN/8, x4, x1, x2)

inst_97373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000000007f; valaddr_reg:x3; val_offset:292119*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292119*0 + 3*605*FLEN/8, x4, x1, x2)

inst_97374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000000000ff; valaddr_reg:x3; val_offset:292122*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292122*0 + 3*606*FLEN/8, x4, x1, x2)

inst_97375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000000001ff; valaddr_reg:x3; val_offset:292125*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292125*0 + 3*607*FLEN/8, x4, x1, x2)

inst_97376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000000003ff; valaddr_reg:x3; val_offset:292128*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292128*0 + 3*608*FLEN/8, x4, x1, x2)

inst_97377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000000007ff; valaddr_reg:x3; val_offset:292131*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292131*0 + 3*609*FLEN/8, x4, x1, x2)

inst_97378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000000fff; valaddr_reg:x3; val_offset:292134*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292134*0 + 3*610*FLEN/8, x4, x1, x2)

inst_97379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000001fff; valaddr_reg:x3; val_offset:292137*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292137*0 + 3*611*FLEN/8, x4, x1, x2)

inst_97380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000003fff; valaddr_reg:x3; val_offset:292140*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292140*0 + 3*612*FLEN/8, x4, x1, x2)

inst_97381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000007fff; valaddr_reg:x3; val_offset:292143*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292143*0 + 3*613*FLEN/8, x4, x1, x2)

inst_97382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000000ffff; valaddr_reg:x3; val_offset:292146*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292146*0 + 3*614*FLEN/8, x4, x1, x2)

inst_97383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000001ffff; valaddr_reg:x3; val_offset:292149*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292149*0 + 3*615*FLEN/8, x4, x1, x2)

inst_97384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000003ffff; valaddr_reg:x3; val_offset:292152*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292152*0 + 3*616*FLEN/8, x4, x1, x2)

inst_97385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000007ffff; valaddr_reg:x3; val_offset:292155*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292155*0 + 3*617*FLEN/8, x4, x1, x2)

inst_97386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000000fffff; valaddr_reg:x3; val_offset:292158*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292158*0 + 3*618*FLEN/8, x4, x1, x2)

inst_97387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000001fffff; valaddr_reg:x3; val_offset:292161*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292161*0 + 3*619*FLEN/8, x4, x1, x2)

inst_97388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000003fffff; valaddr_reg:x3; val_offset:292164*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292164*0 + 3*620*FLEN/8, x4, x1, x2)

inst_97389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000007fffff; valaddr_reg:x3; val_offset:292167*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292167*0 + 3*621*FLEN/8, x4, x1, x2)

inst_97390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000000ffffff; valaddr_reg:x3; val_offset:292170*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292170*0 + 3*622*FLEN/8, x4, x1, x2)

inst_97391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000001ffffff; valaddr_reg:x3; val_offset:292173*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292173*0 + 3*623*FLEN/8, x4, x1, x2)

inst_97392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000003ffffff; valaddr_reg:x3; val_offset:292176*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292176*0 + 3*624*FLEN/8, x4, x1, x2)

inst_97393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000007ffffff; valaddr_reg:x3; val_offset:292179*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292179*0 + 3*625*FLEN/8, x4, x1, x2)

inst_97394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000000fffffff; valaddr_reg:x3; val_offset:292182*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292182*0 + 3*626*FLEN/8, x4, x1, x2)

inst_97395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000001fffffff; valaddr_reg:x3; val_offset:292185*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292185*0 + 3*627*FLEN/8, x4, x1, x2)

inst_97396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000003fffffff; valaddr_reg:x3; val_offset:292188*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292188*0 + 3*628*FLEN/8, x4, x1, x2)

inst_97397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000007fffffff; valaddr_reg:x3; val_offset:292191*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292191*0 + 3*629*FLEN/8, x4, x1, x2)

inst_97398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500000ffffffff; valaddr_reg:x3; val_offset:292194*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292194*0 + 3*630*FLEN/8, x4, x1, x2)

inst_97399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500001ffffffff; valaddr_reg:x3; val_offset:292197*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292197*0 + 3*631*FLEN/8, x4, x1, x2)

inst_97400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500003ffffffff; valaddr_reg:x3; val_offset:292200*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292200*0 + 3*632*FLEN/8, x4, x1, x2)

inst_97401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500007ffffffff; valaddr_reg:x3; val_offset:292203*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292203*0 + 3*633*FLEN/8, x4, x1, x2)

inst_97402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150000fffffffff; valaddr_reg:x3; val_offset:292206*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292206*0 + 3*634*FLEN/8, x4, x1, x2)

inst_97403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150001fffffffff; valaddr_reg:x3; val_offset:292209*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292209*0 + 3*635*FLEN/8, x4, x1, x2)

inst_97404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150003fffffffff; valaddr_reg:x3; val_offset:292212*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292212*0 + 3*636*FLEN/8, x4, x1, x2)

inst_97405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150007fffffffff; valaddr_reg:x3; val_offset:292215*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292215*0 + 3*637*FLEN/8, x4, x1, x2)

inst_97406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15000ffffffffff; valaddr_reg:x3; val_offset:292218*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292218*0 + 3*638*FLEN/8, x4, x1, x2)

inst_97407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15001ffffffffff; valaddr_reg:x3; val_offset:292221*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292221*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_97408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15003ffffffffff; valaddr_reg:x3; val_offset:292224*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292224*0 + 3*640*FLEN/8, x4, x1, x2)

inst_97409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15007ffffffffff; valaddr_reg:x3; val_offset:292227*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292227*0 + 3*641*FLEN/8, x4, x1, x2)

inst_97410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1500fffffffffff; valaddr_reg:x3; val_offset:292230*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292230*0 + 3*642*FLEN/8, x4, x1, x2)

inst_97411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1501fffffffffff; valaddr_reg:x3; val_offset:292233*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292233*0 + 3*643*FLEN/8, x4, x1, x2)

inst_97412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1503fffffffffff; valaddr_reg:x3; val_offset:292236*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292236*0 + 3*644*FLEN/8, x4, x1, x2)

inst_97413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x1507fffffffffff; valaddr_reg:x3; val_offset:292239*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292239*0 + 3*645*FLEN/8, x4, x1, x2)

inst_97414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x150ffffffffffff; valaddr_reg:x3; val_offset:292242*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292242*0 + 3*646*FLEN/8, x4, x1, x2)

inst_97415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x151ffffffffffff; valaddr_reg:x3; val_offset:292245*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292245*0 + 3*647*FLEN/8, x4, x1, x2)

inst_97416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x153ffffffffffff; valaddr_reg:x3; val_offset:292248*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292248*0 + 3*648*FLEN/8, x4, x1, x2)

inst_97417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x157ffffffffffff; valaddr_reg:x3; val_offset:292251*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292251*0 + 3*649*FLEN/8, x4, x1, x2)

inst_97418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x158000000000000; valaddr_reg:x3; val_offset:292254*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292254*0 + 3*650*FLEN/8, x4, x1, x2)

inst_97419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15c000000000000; valaddr_reg:x3; val_offset:292257*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292257*0 + 3*651*FLEN/8, x4, x1, x2)

inst_97420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15e000000000000; valaddr_reg:x3; val_offset:292260*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292260*0 + 3*652*FLEN/8, x4, x1, x2)

inst_97421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15f000000000000; valaddr_reg:x3; val_offset:292263*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292263*0 + 3*653*FLEN/8, x4, x1, x2)

inst_97422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15f800000000000; valaddr_reg:x3; val_offset:292266*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292266*0 + 3*654*FLEN/8, x4, x1, x2)

inst_97423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fc00000000000; valaddr_reg:x3; val_offset:292269*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292269*0 + 3*655*FLEN/8, x4, x1, x2)

inst_97424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fe00000000000; valaddr_reg:x3; val_offset:292272*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292272*0 + 3*656*FLEN/8, x4, x1, x2)

inst_97425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ff00000000000; valaddr_reg:x3; val_offset:292275*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292275*0 + 3*657*FLEN/8, x4, x1, x2)

inst_97426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ff80000000000; valaddr_reg:x3; val_offset:292278*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292278*0 + 3*658*FLEN/8, x4, x1, x2)

inst_97427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffc0000000000; valaddr_reg:x3; val_offset:292281*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292281*0 + 3*659*FLEN/8, x4, x1, x2)

inst_97428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffe0000000000; valaddr_reg:x3; val_offset:292284*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292284*0 + 3*660*FLEN/8, x4, x1, x2)

inst_97429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fff0000000000; valaddr_reg:x3; val_offset:292287*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292287*0 + 3*661*FLEN/8, x4, x1, x2)

inst_97430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fff8000000000; valaddr_reg:x3; val_offset:292290*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292290*0 + 3*662*FLEN/8, x4, x1, x2)

inst_97431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffc000000000; valaddr_reg:x3; val_offset:292293*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292293*0 + 3*663*FLEN/8, x4, x1, x2)

inst_97432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffe000000000; valaddr_reg:x3; val_offset:292296*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292296*0 + 3*664*FLEN/8, x4, x1, x2)

inst_97433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffff000000000; valaddr_reg:x3; val_offset:292299*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292299*0 + 3*665*FLEN/8, x4, x1, x2)

inst_97434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:292302*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292302*0 + 3*666*FLEN/8, x4, x1, x2)

inst_97435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:292305*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292305*0 + 3*667*FLEN/8, x4, x1, x2)

inst_97436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:292308*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292308*0 + 3*668*FLEN/8, x4, x1, x2)

inst_97437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:292311*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292311*0 + 3*669*FLEN/8, x4, x1, x2)

inst_97438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:292314*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292314*0 + 3*670*FLEN/8, x4, x1, x2)

inst_97439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:292317*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292317*0 + 3*671*FLEN/8, x4, x1, x2)

inst_97440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:292320*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292320*0 + 3*672*FLEN/8, x4, x1, x2)

inst_97441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:292323*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292323*0 + 3*673*FLEN/8, x4, x1, x2)

inst_97442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:292326*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292326*0 + 3*674*FLEN/8, x4, x1, x2)

inst_97443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:292329*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292329*0 + 3*675*FLEN/8, x4, x1, x2)

inst_97444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:292332*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292332*0 + 3*676*FLEN/8, x4, x1, x2)

inst_97445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:292335*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292335*0 + 3*677*FLEN/8, x4, x1, x2)

inst_97446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:292338*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292338*0 + 3*678*FLEN/8, x4, x1, x2)

inst_97447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:292341*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292341*0 + 3*679*FLEN/8, x4, x1, x2)

inst_97448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:292344*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292344*0 + 3*680*FLEN/8, x4, x1, x2)

inst_97449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:292347*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292347*0 + 3*681*FLEN/8, x4, x1, x2)

inst_97450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:292350*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292350*0 + 3*682*FLEN/8, x4, x1, x2)

inst_97451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:292353*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292353*0 + 3*683*FLEN/8, x4, x1, x2)

inst_97452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:292356*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292356*0 + 3*684*FLEN/8, x4, x1, x2)

inst_97453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:292359*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292359*0 + 3*685*FLEN/8, x4, x1, x2)

inst_97454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:292362*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292362*0 + 3*686*FLEN/8, x4, x1, x2)

inst_97455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:292365*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292365*0 + 3*687*FLEN/8, x4, x1, x2)

inst_97456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:292368*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292368*0 + 3*688*FLEN/8, x4, x1, x2)

inst_97457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:292371*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292371*0 + 3*689*FLEN/8, x4, x1, x2)

inst_97458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:292374*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292374*0 + 3*690*FLEN/8, x4, x1, x2)

inst_97459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:292377*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292377*0 + 3*691*FLEN/8, x4, x1, x2)

inst_97460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:292380*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292380*0 + 3*692*FLEN/8, x4, x1, x2)

inst_97461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:292383*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292383*0 + 3*693*FLEN/8, x4, x1, x2)

inst_97462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:292386*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292386*0 + 3*694*FLEN/8, x4, x1, x2)

inst_97463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:292389*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292389*0 + 3*695*FLEN/8, x4, x1, x2)

inst_97464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:292392*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292392*0 + 3*696*FLEN/8, x4, x1, x2)

inst_97465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:292395*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292395*0 + 3*697*FLEN/8, x4, x1, x2)

inst_97466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:292398*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292398*0 + 3*698*FLEN/8, x4, x1, x2)

inst_97467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:292401*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292401*0 + 3*699*FLEN/8, x4, x1, x2)

inst_97468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:292404*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292404*0 + 3*700*FLEN/8, x4, x1, x2)

inst_97469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea12c70d75cb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea12c70d75cb0; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:292407*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292407*0 + 3*701*FLEN/8, x4, x1, x2)

inst_97470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:292410*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292410*0 + 3*702*FLEN/8, x4, x1, x2)

inst_97471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:292413*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292413*0 + 3*703*FLEN/8, x4, x1, x2)

inst_97472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:292416*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292416*0 + 3*704*FLEN/8, x4, x1, x2)

inst_97473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:292419*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292419*0 + 3*705*FLEN/8, x4, x1, x2)

inst_97474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:292422*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292422*0 + 3*706*FLEN/8, x4, x1, x2)

inst_97475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:292425*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292425*0 + 3*707*FLEN/8, x4, x1, x2)

inst_97476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:292428*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292428*0 + 3*708*FLEN/8, x4, x1, x2)

inst_97477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:292431*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292431*0 + 3*709*FLEN/8, x4, x1, x2)

inst_97478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:292434*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292434*0 + 3*710*FLEN/8, x4, x1, x2)

inst_97479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:292437*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292437*0 + 3*711*FLEN/8, x4, x1, x2)

inst_97480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:292440*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292440*0 + 3*712*FLEN/8, x4, x1, x2)

inst_97481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:292443*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292443*0 + 3*713*FLEN/8, x4, x1, x2)

inst_97482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:292446*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292446*0 + 3*714*FLEN/8, x4, x1, x2)

inst_97483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:292449*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292449*0 + 3*715*FLEN/8, x4, x1, x2)

inst_97484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:292452*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292452*0 + 3*716*FLEN/8, x4, x1, x2)

inst_97485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:292455*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292455*0 + 3*717*FLEN/8, x4, x1, x2)

inst_97486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:292458*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292458*0 + 3*718*FLEN/8, x4, x1, x2)

inst_97487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:292461*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292461*0 + 3*719*FLEN/8, x4, x1, x2)

inst_97488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:292464*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292464*0 + 3*720*FLEN/8, x4, x1, x2)

inst_97489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:292467*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292467*0 + 3*721*FLEN/8, x4, x1, x2)

inst_97490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:292470*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292470*0 + 3*722*FLEN/8, x4, x1, x2)

inst_97491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:292473*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292473*0 + 3*723*FLEN/8, x4, x1, x2)

inst_97492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000000000; valaddr_reg:x3; val_offset:292476*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292476*0 + 3*724*FLEN/8, x4, x1, x2)

inst_97493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000000001; valaddr_reg:x3; val_offset:292479*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292479*0 + 3*725*FLEN/8, x4, x1, x2)

inst_97494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000000003; valaddr_reg:x3; val_offset:292482*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292482*0 + 3*726*FLEN/8, x4, x1, x2)

inst_97495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000000007; valaddr_reg:x3; val_offset:292485*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292485*0 + 3*727*FLEN/8, x4, x1, x2)

inst_97496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000000000f; valaddr_reg:x3; val_offset:292488*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292488*0 + 3*728*FLEN/8, x4, x1, x2)

inst_97497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000000001f; valaddr_reg:x3; val_offset:292491*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292491*0 + 3*729*FLEN/8, x4, x1, x2)

inst_97498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000000003f; valaddr_reg:x3; val_offset:292494*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292494*0 + 3*730*FLEN/8, x4, x1, x2)

inst_97499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000000007f; valaddr_reg:x3; val_offset:292497*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292497*0 + 3*731*FLEN/8, x4, x1, x2)

inst_97500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000000000ff; valaddr_reg:x3; val_offset:292500*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292500*0 + 3*732*FLEN/8, x4, x1, x2)

inst_97501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000000001ff; valaddr_reg:x3; val_offset:292503*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292503*0 + 3*733*FLEN/8, x4, x1, x2)

inst_97502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000000003ff; valaddr_reg:x3; val_offset:292506*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292506*0 + 3*734*FLEN/8, x4, x1, x2)

inst_97503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000000007ff; valaddr_reg:x3; val_offset:292509*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292509*0 + 3*735*FLEN/8, x4, x1, x2)

inst_97504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000000fff; valaddr_reg:x3; val_offset:292512*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292512*0 + 3*736*FLEN/8, x4, x1, x2)

inst_97505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000001fff; valaddr_reg:x3; val_offset:292515*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292515*0 + 3*737*FLEN/8, x4, x1, x2)

inst_97506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000003fff; valaddr_reg:x3; val_offset:292518*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292518*0 + 3*738*FLEN/8, x4, x1, x2)

inst_97507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000007fff; valaddr_reg:x3; val_offset:292521*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292521*0 + 3*739*FLEN/8, x4, x1, x2)

inst_97508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000000ffff; valaddr_reg:x3; val_offset:292524*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292524*0 + 3*740*FLEN/8, x4, x1, x2)

inst_97509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000001ffff; valaddr_reg:x3; val_offset:292527*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292527*0 + 3*741*FLEN/8, x4, x1, x2)

inst_97510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000003ffff; valaddr_reg:x3; val_offset:292530*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292530*0 + 3*742*FLEN/8, x4, x1, x2)

inst_97511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000007ffff; valaddr_reg:x3; val_offset:292533*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292533*0 + 3*743*FLEN/8, x4, x1, x2)

inst_97512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000000fffff; valaddr_reg:x3; val_offset:292536*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292536*0 + 3*744*FLEN/8, x4, x1, x2)

inst_97513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000001fffff; valaddr_reg:x3; val_offset:292539*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292539*0 + 3*745*FLEN/8, x4, x1, x2)

inst_97514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000003fffff; valaddr_reg:x3; val_offset:292542*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292542*0 + 3*746*FLEN/8, x4, x1, x2)

inst_97515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000007fffff; valaddr_reg:x3; val_offset:292545*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292545*0 + 3*747*FLEN/8, x4, x1, x2)

inst_97516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000000ffffff; valaddr_reg:x3; val_offset:292548*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292548*0 + 3*748*FLEN/8, x4, x1, x2)

inst_97517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000001ffffff; valaddr_reg:x3; val_offset:292551*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292551*0 + 3*749*FLEN/8, x4, x1, x2)

inst_97518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000003ffffff; valaddr_reg:x3; val_offset:292554*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292554*0 + 3*750*FLEN/8, x4, x1, x2)

inst_97519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000007ffffff; valaddr_reg:x3; val_offset:292557*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292557*0 + 3*751*FLEN/8, x4, x1, x2)

inst_97520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000000fffffff; valaddr_reg:x3; val_offset:292560*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292560*0 + 3*752*FLEN/8, x4, x1, x2)

inst_97521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000001fffffff; valaddr_reg:x3; val_offset:292563*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292563*0 + 3*753*FLEN/8, x4, x1, x2)

inst_97522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000003fffffff; valaddr_reg:x3; val_offset:292566*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292566*0 + 3*754*FLEN/8, x4, x1, x2)

inst_97523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000007fffffff; valaddr_reg:x3; val_offset:292569*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292569*0 + 3*755*FLEN/8, x4, x1, x2)

inst_97524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00000ffffffff; valaddr_reg:x3; val_offset:292572*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292572*0 + 3*756*FLEN/8, x4, x1, x2)

inst_97525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00001ffffffff; valaddr_reg:x3; val_offset:292575*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292575*0 + 3*757*FLEN/8, x4, x1, x2)

inst_97526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00003ffffffff; valaddr_reg:x3; val_offset:292578*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292578*0 + 3*758*FLEN/8, x4, x1, x2)

inst_97527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00007ffffffff; valaddr_reg:x3; val_offset:292581*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292581*0 + 3*759*FLEN/8, x4, x1, x2)

inst_97528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0000fffffffff; valaddr_reg:x3; val_offset:292584*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292584*0 + 3*760*FLEN/8, x4, x1, x2)

inst_97529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0001fffffffff; valaddr_reg:x3; val_offset:292587*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292587*0 + 3*761*FLEN/8, x4, x1, x2)

inst_97530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0003fffffffff; valaddr_reg:x3; val_offset:292590*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292590*0 + 3*762*FLEN/8, x4, x1, x2)

inst_97531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0007fffffffff; valaddr_reg:x3; val_offset:292593*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292593*0 + 3*763*FLEN/8, x4, x1, x2)

inst_97532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc000ffffffffff; valaddr_reg:x3; val_offset:292596*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292596*0 + 3*764*FLEN/8, x4, x1, x2)

inst_97533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc001ffffffffff; valaddr_reg:x3; val_offset:292599*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292599*0 + 3*765*FLEN/8, x4, x1, x2)

inst_97534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc003ffffffffff; valaddr_reg:x3; val_offset:292602*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292602*0 + 3*766*FLEN/8, x4, x1, x2)

inst_97535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc007ffffffffff; valaddr_reg:x3; val_offset:292605*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292605*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156865023,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795157913599,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795160010751,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795164205055,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795172593663,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795189370879,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795222925311,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795290034175,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795424251903,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795692687359,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546796229558271,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546797303300095,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546799450783743,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546803745751039,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546812335685631,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546829515554815,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546863875293183,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546932594769919,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547070033723391,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547344911630335,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547894667444223,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58548994179071999,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58551193202327551,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58555591248838655,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58564387341860863,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58581979527905279,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58617163899994111,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58687532644171775,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58828270132527103,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(59109745109237759,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(59672695062659071,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(60798594969501695,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(60798594969501696,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(61924494876344320,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62487444829765632,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62768919806476288,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62909657294831616,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62980026039009280,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63015210411098112,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63032802597142528,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63041598690164736,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63045996736675840,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63048195759931392,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63049295271559168,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63049845027373056,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050119905280000,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050257344233472,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050326063710208,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050360423448576,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050377603317760,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050386193252352,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050390488219648,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050392635703296,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050393709445120,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394246316032,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394514751488,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394648969216,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394716078080,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394749632512,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394766409728,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394774798336,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394778992640,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394781089792,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394782138368,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394782662656,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394782924800,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783055872,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783121408,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783154176,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783170560,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783178752,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783182848,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783184896,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783185920,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186432,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186688,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186816,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186880,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186912,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186928,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186936,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186940,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186942,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186943,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369728,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369729,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369731,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369735,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369743,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369759,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369791,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369855,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351369983,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351370239,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351370751,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351371775,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351373823,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351377919,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351386111,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351402495,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351435263,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351500799,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351631871,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703351894015,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703352418303,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703353466879,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703355564031,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703359758335,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703368146943,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703384924159,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703418478591,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703485587455,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703619805183,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093703888240639,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093704425111551,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093705498853375,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093707646337023,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093711941304319,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093720531238911,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093737711108095,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093772070846463,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093840790323199,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254093978229276671,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254094253107183615,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254094802862997503,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254095902374625279,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254098101397880831,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254102499444391935,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254111295537414143,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254128887723458559,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254164072095547391,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254234440839725055,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254375178328080383,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13254656653304791039,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13255219603258212351,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13256345503165054975,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13256345503165054976,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13257471403071897600,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258034353025318912,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258315828002029568,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258456565490384896,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258526934234562560,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258562118606651392,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258579710792695808,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258588506885718016,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258592904932229120,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258595103955484672,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258596203467112448,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258596753222926336,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597028100833280,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597165539786752,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597234259263488,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597268619001856,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597285798871040,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597294388805632,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597298683772928,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597300831256576,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597301904998400,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302441869312,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302710304768,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302844522496,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302911631360,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302945185792,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302961963008,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302970351616,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302974545920,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302976643072,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302977691648,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978215936,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978478080,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978609152,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978674688,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978707456,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978723840,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978732032,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978736128,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978738176,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978739200,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978739712,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978739968,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740096,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740160,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740192,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740208,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740216,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740220,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740222,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13258597302978740223,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894560117595839620,64,FLEN)
NAN_BOXED(11511437984925113870,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264576,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264577,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264579,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264583,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264591,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264607,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264639,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264703,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264831,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265087,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265599,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242266623,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242268671,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242272767,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242280959,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242297343,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242330111,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242395647,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242526719,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242788863,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815243313151,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815244361727,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815246458879,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815250653183,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815259041791,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815275819007,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815309373439,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815376482303,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815510700031,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815779135487,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580816316006399,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580817389748223,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580819537231871,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580823832199167,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580832422133759,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580849602002943,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580883961741311,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580952681218047,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581090120171519,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581364998078463,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581914753892351,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484583014265520127,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484585213288775679,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484589611335286783,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484598407428308991,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484615999614353407,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484651183986442239,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484721552730619903,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484862290218975231,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485143765195685887,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485706715149107199,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949823,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949824,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9487958514962792448,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488521464916213760,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488802939892924416,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488943677381279744,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489014046125457408,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489049230497546240,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489066822683590656,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489075618776612864,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489080016823123968,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489082215846379520,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083315358007296,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083865113821184,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084139991728128,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084277430681600,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084346150158336,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084380509896704,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084397689765888,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084406279700480,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084410574667776,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084412722151424,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084413795893248,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414332764160,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414601199616,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414735417344,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414802526208,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414836080640,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414852857856,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414861246464,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414865440768,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414867537920,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414868586496,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869110784,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869372928,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869504000,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869569536,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869602304,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869618688,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869626880,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869630976,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869633024,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634048,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634560,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634816,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634944,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635008,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635040,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635056,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635064,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635068,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635070,64,FLEN)
NAN_BOXED(6894569653822622137,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635071,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625236992,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625236993,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625236995,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625236999,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625237007,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625237023,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625237055,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625237119,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625237247,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625237503,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625238015,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625239039,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625241087,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625245183,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625253375,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625269759,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625302527,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625368063,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625499135,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826625761279,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826626285567,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826627334143,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826629431295,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826633625599,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826642014207,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826658791423,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826692345855,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826759454719,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606826893672447,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606827162107903,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606827698978815,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606828772720639,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606830920204287,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606835215171583,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606843805106175,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606860984975359,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606895344713727,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512606964064190463,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512607101503143935,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512607376381050879,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512607926136864767,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512609025648492543,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512611224671748095,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512615622718259199,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512624418811281407,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512642010997325823,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512677195369414655,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512747564113592319,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4512888301601947647,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4513169776578658303,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4513732726532079615,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4514858626438922239,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4514858626438922240,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4515984526345764864,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4516547476299186176,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4516828951275896832,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4516969688764252160,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517040057508429824,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517075241880518656,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517092834066563072,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517101630159585280,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517106028206096384,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517108227229351936,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517109326740979712,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517109876496793600,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110151374700544,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110288813654016,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110357533130752,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110391892869120,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110409072738304,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110417662672896,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110421957640192,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110424105123840,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110425178865664,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110425715736576,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110425984172032,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426118389760,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426185498624,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426219053056,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426235830272,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426244218880,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426248413184,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426250510336,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426251558912,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252083200,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252345344,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252476416,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252541952,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252574720,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252591104,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252599296,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252603392,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252605440,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252606464,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252606976,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607232,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607360,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607424,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607456,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607472,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607480,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607484,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607486,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4517110426252607487,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894602974977942057,64,FLEN)
NAN_BOXED(2319567517048331103,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894615021430756077,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780416,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780417,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780419,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780423,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780431,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780447,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780479,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780543,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780671,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780927,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174781439,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174782463,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174784511,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174788607,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174796799,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174813183,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174845951,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174911487,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175042559,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175304703,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175828991,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592176877567,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592178974719,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592183169023,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592191557631,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592208334847,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592241889279,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592308998143,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592443215871,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592711651327,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575593248522239,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575594322264063,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575596469747711,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575600764715007,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575609354649599,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575626534518783,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575660894257151,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575729613733887,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575867052687359,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576141930594303,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576691686408191,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94577791198035967,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94579990221291519,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94584388267802623,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94593184360824831,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94610776546869247,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94645960918958079,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94716329663135743,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94857067151491071,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95138542128201727,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95701492081623039,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465663,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465664,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(97953291895308288,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98516241848729600,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98797716825440256,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98938454313795584,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99008823057973248,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99044007430062080,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99061599616106496,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99070395709128704,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99074793755639808,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99076992778895360,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078092290523136,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078642046337024,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078916924243968,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079054363197440,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079123082674176,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6894625291794603184,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681728,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681729,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681731,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681735,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681743,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681759,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681791,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681855,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772681983,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772682239,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772682751,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772683775,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772685823,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772689919,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772698111,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772714495,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772747263,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772812799,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656772943871,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656773206015,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656773730303,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656774778879,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656776876031,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656781070335,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656789458943,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656806236159,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656839790591,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043656906899455,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043657041117183,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043657309552639,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043657846423551,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043658920165375,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043661067649023,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043665362616319,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043673952550911,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043691132420095,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043725492158463,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043794211635199,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817043931650588671,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817044206528495615,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817044756284309503,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817045855795937279,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817048054819192831,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817052452865703935,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
