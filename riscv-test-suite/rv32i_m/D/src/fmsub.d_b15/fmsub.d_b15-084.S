
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_63744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffe0000; valaddr_reg:x3; val_offset:191232*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191232*0 + 3*0*FLEN/8, x4, x1, x2)

inst_63745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffff0000; valaddr_reg:x3; val_offset:191235*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191235*0 + 3*1*FLEN/8, x4, x1, x2)

inst_63746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffff8000; valaddr_reg:x3; val_offset:191238*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191238*0 + 3*2*FLEN/8, x4, x1, x2)

inst_63747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffc000; valaddr_reg:x3; val_offset:191241*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191241*0 + 3*3*FLEN/8, x4, x1, x2)

inst_63748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffe000; valaddr_reg:x3; val_offset:191244*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191244*0 + 3*4*FLEN/8, x4, x1, x2)

inst_63749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffff000; valaddr_reg:x3; val_offset:191247*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191247*0 + 3*5*FLEN/8, x4, x1, x2)

inst_63750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffff800; valaddr_reg:x3; val_offset:191250*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191250*0 + 3*6*FLEN/8, x4, x1, x2)

inst_63751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffffc00; valaddr_reg:x3; val_offset:191253*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191253*0 + 3*7*FLEN/8, x4, x1, x2)

inst_63752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffffe00; valaddr_reg:x3; val_offset:191256*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191256*0 + 3*8*FLEN/8, x4, x1, x2)

inst_63753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffff00; valaddr_reg:x3; val_offset:191259*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191259*0 + 3*9*FLEN/8, x4, x1, x2)

inst_63754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffff80; valaddr_reg:x3; val_offset:191262*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191262*0 + 3*10*FLEN/8, x4, x1, x2)

inst_63755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffffc0; valaddr_reg:x3; val_offset:191265*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191265*0 + 3*11*FLEN/8, x4, x1, x2)

inst_63756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffffe0; valaddr_reg:x3; val_offset:191268*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191268*0 + 3*12*FLEN/8, x4, x1, x2)

inst_63757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffffff0; valaddr_reg:x3; val_offset:191271*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191271*0 + 3*13*FLEN/8, x4, x1, x2)

inst_63758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffffff8; valaddr_reg:x3; val_offset:191274*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191274*0 + 3*14*FLEN/8, x4, x1, x2)

inst_63759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffffffc; valaddr_reg:x3; val_offset:191277*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191277*0 + 3*15*FLEN/8, x4, x1, x2)

inst_63760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822ffffffffffffe; valaddr_reg:x3; val_offset:191280*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191280*0 + 3*16*FLEN/8, x4, x1, x2)

inst_63761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35cc2be8150b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35cc2be8150b7; op2val:0x8000;
op3val:0x822fffffffffffff; valaddr_reg:x3; val_offset:191283*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191283*0 + 3*17*FLEN/8, x4, x1, x2)

inst_63762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:191286*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191286*0 + 3*18*FLEN/8, x4, x1, x2)

inst_63763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:191289*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191289*0 + 3*19*FLEN/8, x4, x1, x2)

inst_63764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:191292*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191292*0 + 3*20*FLEN/8, x4, x1, x2)

inst_63765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:191295*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191295*0 + 3*21*FLEN/8, x4, x1, x2)

inst_63766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:191298*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191298*0 + 3*22*FLEN/8, x4, x1, x2)

inst_63767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:191301*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191301*0 + 3*23*FLEN/8, x4, x1, x2)

inst_63768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:191304*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191304*0 + 3*24*FLEN/8, x4, x1, x2)

inst_63769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:191307*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191307*0 + 3*25*FLEN/8, x4, x1, x2)

inst_63770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:191310*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191310*0 + 3*26*FLEN/8, x4, x1, x2)

inst_63771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:191313*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191313*0 + 3*27*FLEN/8, x4, x1, x2)

inst_63772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:191316*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191316*0 + 3*28*FLEN/8, x4, x1, x2)

inst_63773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:191319*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191319*0 + 3*29*FLEN/8, x4, x1, x2)

inst_63774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:191322*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191322*0 + 3*30*FLEN/8, x4, x1, x2)

inst_63775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:191325*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191325*0 + 3*31*FLEN/8, x4, x1, x2)

inst_63776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:191328*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191328*0 + 3*32*FLEN/8, x4, x1, x2)

inst_63777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:191331*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191331*0 + 3*33*FLEN/8, x4, x1, x2)

inst_63778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:191334*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191334*0 + 3*34*FLEN/8, x4, x1, x2)

inst_63779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:191337*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191337*0 + 3*35*FLEN/8, x4, x1, x2)

inst_63780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:191340*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191340*0 + 3*36*FLEN/8, x4, x1, x2)

inst_63781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:191343*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191343*0 + 3*37*FLEN/8, x4, x1, x2)

inst_63782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:191346*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191346*0 + 3*38*FLEN/8, x4, x1, x2)

inst_63783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:191349*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191349*0 + 3*39*FLEN/8, x4, x1, x2)

inst_63784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000000000; valaddr_reg:x3; val_offset:191352*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191352*0 + 3*40*FLEN/8, x4, x1, x2)

inst_63785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000000001; valaddr_reg:x3; val_offset:191355*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191355*0 + 3*41*FLEN/8, x4, x1, x2)

inst_63786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000000003; valaddr_reg:x3; val_offset:191358*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191358*0 + 3*42*FLEN/8, x4, x1, x2)

inst_63787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000000007; valaddr_reg:x3; val_offset:191361*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191361*0 + 3*43*FLEN/8, x4, x1, x2)

inst_63788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000000000f; valaddr_reg:x3; val_offset:191364*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191364*0 + 3*44*FLEN/8, x4, x1, x2)

inst_63789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000000001f; valaddr_reg:x3; val_offset:191367*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191367*0 + 3*45*FLEN/8, x4, x1, x2)

inst_63790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000000003f; valaddr_reg:x3; val_offset:191370*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191370*0 + 3*46*FLEN/8, x4, x1, x2)

inst_63791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000000007f; valaddr_reg:x3; val_offset:191373*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191373*0 + 3*47*FLEN/8, x4, x1, x2)

inst_63792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000000000ff; valaddr_reg:x3; val_offset:191376*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191376*0 + 3*48*FLEN/8, x4, x1, x2)

inst_63793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000000001ff; valaddr_reg:x3; val_offset:191379*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191379*0 + 3*49*FLEN/8, x4, x1, x2)

inst_63794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000000003ff; valaddr_reg:x3; val_offset:191382*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191382*0 + 3*50*FLEN/8, x4, x1, x2)

inst_63795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000000007ff; valaddr_reg:x3; val_offset:191385*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191385*0 + 3*51*FLEN/8, x4, x1, x2)

inst_63796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000000fff; valaddr_reg:x3; val_offset:191388*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191388*0 + 3*52*FLEN/8, x4, x1, x2)

inst_63797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000001fff; valaddr_reg:x3; val_offset:191391*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191391*0 + 3*53*FLEN/8, x4, x1, x2)

inst_63798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000003fff; valaddr_reg:x3; val_offset:191394*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191394*0 + 3*54*FLEN/8, x4, x1, x2)

inst_63799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000007fff; valaddr_reg:x3; val_offset:191397*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191397*0 + 3*55*FLEN/8, x4, x1, x2)

inst_63800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000000ffff; valaddr_reg:x3; val_offset:191400*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191400*0 + 3*56*FLEN/8, x4, x1, x2)

inst_63801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000001ffff; valaddr_reg:x3; val_offset:191403*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191403*0 + 3*57*FLEN/8, x4, x1, x2)

inst_63802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000003ffff; valaddr_reg:x3; val_offset:191406*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191406*0 + 3*58*FLEN/8, x4, x1, x2)

inst_63803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000007ffff; valaddr_reg:x3; val_offset:191409*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191409*0 + 3*59*FLEN/8, x4, x1, x2)

inst_63804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000000fffff; valaddr_reg:x3; val_offset:191412*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191412*0 + 3*60*FLEN/8, x4, x1, x2)

inst_63805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000001fffff; valaddr_reg:x3; val_offset:191415*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191415*0 + 3*61*FLEN/8, x4, x1, x2)

inst_63806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000003fffff; valaddr_reg:x3; val_offset:191418*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191418*0 + 3*62*FLEN/8, x4, x1, x2)

inst_63807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000007fffff; valaddr_reg:x3; val_offset:191421*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191421*0 + 3*63*FLEN/8, x4, x1, x2)

inst_63808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000000ffffff; valaddr_reg:x3; val_offset:191424*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191424*0 + 3*64*FLEN/8, x4, x1, x2)

inst_63809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000001ffffff; valaddr_reg:x3; val_offset:191427*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191427*0 + 3*65*FLEN/8, x4, x1, x2)

inst_63810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000003ffffff; valaddr_reg:x3; val_offset:191430*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191430*0 + 3*66*FLEN/8, x4, x1, x2)

inst_63811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000007ffffff; valaddr_reg:x3; val_offset:191433*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191433*0 + 3*67*FLEN/8, x4, x1, x2)

inst_63812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000000fffffff; valaddr_reg:x3; val_offset:191436*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191436*0 + 3*68*FLEN/8, x4, x1, x2)

inst_63813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000001fffffff; valaddr_reg:x3; val_offset:191439*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191439*0 + 3*69*FLEN/8, x4, x1, x2)

inst_63814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000003fffffff; valaddr_reg:x3; val_offset:191442*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191442*0 + 3*70*FLEN/8, x4, x1, x2)

inst_63815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000007fffffff; valaddr_reg:x3; val_offset:191445*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191445*0 + 3*71*FLEN/8, x4, x1, x2)

inst_63816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800000ffffffff; valaddr_reg:x3; val_offset:191448*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191448*0 + 3*72*FLEN/8, x4, x1, x2)

inst_63817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800001ffffffff; valaddr_reg:x3; val_offset:191451*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191451*0 + 3*73*FLEN/8, x4, x1, x2)

inst_63818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800003ffffffff; valaddr_reg:x3; val_offset:191454*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191454*0 + 3*74*FLEN/8, x4, x1, x2)

inst_63819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800007ffffffff; valaddr_reg:x3; val_offset:191457*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191457*0 + 3*75*FLEN/8, x4, x1, x2)

inst_63820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380000fffffffff; valaddr_reg:x3; val_offset:191460*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191460*0 + 3*76*FLEN/8, x4, x1, x2)

inst_63821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380001fffffffff; valaddr_reg:x3; val_offset:191463*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191463*0 + 3*77*FLEN/8, x4, x1, x2)

inst_63822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380003fffffffff; valaddr_reg:x3; val_offset:191466*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191466*0 + 3*78*FLEN/8, x4, x1, x2)

inst_63823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380007fffffffff; valaddr_reg:x3; val_offset:191469*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191469*0 + 3*79*FLEN/8, x4, x1, x2)

inst_63824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838000ffffffffff; valaddr_reg:x3; val_offset:191472*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191472*0 + 3*80*FLEN/8, x4, x1, x2)

inst_63825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838001ffffffffff; valaddr_reg:x3; val_offset:191475*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191475*0 + 3*81*FLEN/8, x4, x1, x2)

inst_63826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838003ffffffffff; valaddr_reg:x3; val_offset:191478*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191478*0 + 3*82*FLEN/8, x4, x1, x2)

inst_63827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838007ffffffffff; valaddr_reg:x3; val_offset:191481*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191481*0 + 3*83*FLEN/8, x4, x1, x2)

inst_63828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83800fffffffffff; valaddr_reg:x3; val_offset:191484*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191484*0 + 3*84*FLEN/8, x4, x1, x2)

inst_63829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83801fffffffffff; valaddr_reg:x3; val_offset:191487*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191487*0 + 3*85*FLEN/8, x4, x1, x2)

inst_63830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83803fffffffffff; valaddr_reg:x3; val_offset:191490*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191490*0 + 3*86*FLEN/8, x4, x1, x2)

inst_63831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x83807fffffffffff; valaddr_reg:x3; val_offset:191493*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191493*0 + 3*87*FLEN/8, x4, x1, x2)

inst_63832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8380ffffffffffff; valaddr_reg:x3; val_offset:191496*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191496*0 + 3*88*FLEN/8, x4, x1, x2)

inst_63833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8381ffffffffffff; valaddr_reg:x3; val_offset:191499*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191499*0 + 3*89*FLEN/8, x4, x1, x2)

inst_63834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8383ffffffffffff; valaddr_reg:x3; val_offset:191502*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191502*0 + 3*90*FLEN/8, x4, x1, x2)

inst_63835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8387ffffffffffff; valaddr_reg:x3; val_offset:191505*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191505*0 + 3*91*FLEN/8, x4, x1, x2)

inst_63836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x8388000000000000; valaddr_reg:x3; val_offset:191508*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191508*0 + 3*92*FLEN/8, x4, x1, x2)

inst_63837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838c000000000000; valaddr_reg:x3; val_offset:191511*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191511*0 + 3*93*FLEN/8, x4, x1, x2)

inst_63838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838e000000000000; valaddr_reg:x3; val_offset:191514*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191514*0 + 3*94*FLEN/8, x4, x1, x2)

inst_63839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838f000000000000; valaddr_reg:x3; val_offset:191517*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191517*0 + 3*95*FLEN/8, x4, x1, x2)

inst_63840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838f800000000000; valaddr_reg:x3; val_offset:191520*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191520*0 + 3*96*FLEN/8, x4, x1, x2)

inst_63841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fc00000000000; valaddr_reg:x3; val_offset:191523*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191523*0 + 3*97*FLEN/8, x4, x1, x2)

inst_63842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fe00000000000; valaddr_reg:x3; val_offset:191526*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191526*0 + 3*98*FLEN/8, x4, x1, x2)

inst_63843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ff00000000000; valaddr_reg:x3; val_offset:191529*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191529*0 + 3*99*FLEN/8, x4, x1, x2)

inst_63844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ff80000000000; valaddr_reg:x3; val_offset:191532*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191532*0 + 3*100*FLEN/8, x4, x1, x2)

inst_63845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffc0000000000; valaddr_reg:x3; val_offset:191535*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191535*0 + 3*101*FLEN/8, x4, x1, x2)

inst_63846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffe0000000000; valaddr_reg:x3; val_offset:191538*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191538*0 + 3*102*FLEN/8, x4, x1, x2)

inst_63847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fff0000000000; valaddr_reg:x3; val_offset:191541*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191541*0 + 3*103*FLEN/8, x4, x1, x2)

inst_63848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fff8000000000; valaddr_reg:x3; val_offset:191544*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191544*0 + 3*104*FLEN/8, x4, x1, x2)

inst_63849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffc000000000; valaddr_reg:x3; val_offset:191547*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191547*0 + 3*105*FLEN/8, x4, x1, x2)

inst_63850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffe000000000; valaddr_reg:x3; val_offset:191550*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191550*0 + 3*106*FLEN/8, x4, x1, x2)

inst_63851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffff000000000; valaddr_reg:x3; val_offset:191553*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191553*0 + 3*107*FLEN/8, x4, x1, x2)

inst_63852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffff800000000; valaddr_reg:x3; val_offset:191556*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191556*0 + 3*108*FLEN/8, x4, x1, x2)

inst_63853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffc00000000; valaddr_reg:x3; val_offset:191559*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191559*0 + 3*109*FLEN/8, x4, x1, x2)

inst_63854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffe00000000; valaddr_reg:x3; val_offset:191562*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191562*0 + 3*110*FLEN/8, x4, x1, x2)

inst_63855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffff00000000; valaddr_reg:x3; val_offset:191565*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191565*0 + 3*111*FLEN/8, x4, x1, x2)

inst_63856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffff80000000; valaddr_reg:x3; val_offset:191568*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191568*0 + 3*112*FLEN/8, x4, x1, x2)

inst_63857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffc0000000; valaddr_reg:x3; val_offset:191571*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191571*0 + 3*113*FLEN/8, x4, x1, x2)

inst_63858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffe0000000; valaddr_reg:x3; val_offset:191574*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191574*0 + 3*114*FLEN/8, x4, x1, x2)

inst_63859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffff0000000; valaddr_reg:x3; val_offset:191577*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191577*0 + 3*115*FLEN/8, x4, x1, x2)

inst_63860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffff8000000; valaddr_reg:x3; val_offset:191580*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191580*0 + 3*116*FLEN/8, x4, x1, x2)

inst_63861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffc000000; valaddr_reg:x3; val_offset:191583*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191583*0 + 3*117*FLEN/8, x4, x1, x2)

inst_63862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffe000000; valaddr_reg:x3; val_offset:191586*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191586*0 + 3*118*FLEN/8, x4, x1, x2)

inst_63863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffff000000; valaddr_reg:x3; val_offset:191589*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191589*0 + 3*119*FLEN/8, x4, x1, x2)

inst_63864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffff800000; valaddr_reg:x3; val_offset:191592*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191592*0 + 3*120*FLEN/8, x4, x1, x2)

inst_63865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffc00000; valaddr_reg:x3; val_offset:191595*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191595*0 + 3*121*FLEN/8, x4, x1, x2)

inst_63866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffe00000; valaddr_reg:x3; val_offset:191598*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191598*0 + 3*122*FLEN/8, x4, x1, x2)

inst_63867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffff00000; valaddr_reg:x3; val_offset:191601*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191601*0 + 3*123*FLEN/8, x4, x1, x2)

inst_63868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffff80000; valaddr_reg:x3; val_offset:191604*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191604*0 + 3*124*FLEN/8, x4, x1, x2)

inst_63869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffc0000; valaddr_reg:x3; val_offset:191607*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191607*0 + 3*125*FLEN/8, x4, x1, x2)

inst_63870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffe0000; valaddr_reg:x3; val_offset:191610*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191610*0 + 3*126*FLEN/8, x4, x1, x2)

inst_63871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffff0000; valaddr_reg:x3; val_offset:191613*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191613*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_63872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffff8000; valaddr_reg:x3; val_offset:191616*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191616*0 + 3*128*FLEN/8, x4, x1, x2)

inst_63873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffc000; valaddr_reg:x3; val_offset:191619*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191619*0 + 3*129*FLEN/8, x4, x1, x2)

inst_63874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffe000; valaddr_reg:x3; val_offset:191622*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191622*0 + 3*130*FLEN/8, x4, x1, x2)

inst_63875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffff000; valaddr_reg:x3; val_offset:191625*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191625*0 + 3*131*FLEN/8, x4, x1, x2)

inst_63876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffff800; valaddr_reg:x3; val_offset:191628*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191628*0 + 3*132*FLEN/8, x4, x1, x2)

inst_63877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffffc00; valaddr_reg:x3; val_offset:191631*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191631*0 + 3*133*FLEN/8, x4, x1, x2)

inst_63878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffffe00; valaddr_reg:x3; val_offset:191634*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191634*0 + 3*134*FLEN/8, x4, x1, x2)

inst_63879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffff00; valaddr_reg:x3; val_offset:191637*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191637*0 + 3*135*FLEN/8, x4, x1, x2)

inst_63880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffff80; valaddr_reg:x3; val_offset:191640*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191640*0 + 3*136*FLEN/8, x4, x1, x2)

inst_63881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffffc0; valaddr_reg:x3; val_offset:191643*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191643*0 + 3*137*FLEN/8, x4, x1, x2)

inst_63882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffffe0; valaddr_reg:x3; val_offset:191646*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191646*0 + 3*138*FLEN/8, x4, x1, x2)

inst_63883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffffff0; valaddr_reg:x3; val_offset:191649*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191649*0 + 3*139*FLEN/8, x4, x1, x2)

inst_63884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffffff8; valaddr_reg:x3; val_offset:191652*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191652*0 + 3*140*FLEN/8, x4, x1, x2)

inst_63885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffffffc; valaddr_reg:x3; val_offset:191655*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191655*0 + 3*141*FLEN/8, x4, x1, x2)

inst_63886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838ffffffffffffe; valaddr_reg:x3; val_offset:191658*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191658*0 + 3*142*FLEN/8, x4, x1, x2)

inst_63887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35d6ff6f5b493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35d6ff6f5b493; op2val:0x8000;
op3val:0x838fffffffffffff; valaddr_reg:x3; val_offset:191661*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191661*0 + 3*143*FLEN/8, x4, x1, x2)

inst_63888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:191664*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191664*0 + 3*144*FLEN/8, x4, x1, x2)

inst_63889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:191667*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191667*0 + 3*145*FLEN/8, x4, x1, x2)

inst_63890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:191670*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191670*0 + 3*146*FLEN/8, x4, x1, x2)

inst_63891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:191673*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191673*0 + 3*147*FLEN/8, x4, x1, x2)

inst_63892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:191676*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191676*0 + 3*148*FLEN/8, x4, x1, x2)

inst_63893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:191679*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191679*0 + 3*149*FLEN/8, x4, x1, x2)

inst_63894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:191682*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191682*0 + 3*150*FLEN/8, x4, x1, x2)

inst_63895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:191685*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191685*0 + 3*151*FLEN/8, x4, x1, x2)

inst_63896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:191688*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191688*0 + 3*152*FLEN/8, x4, x1, x2)

inst_63897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:191691*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191691*0 + 3*153*FLEN/8, x4, x1, x2)

inst_63898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:191694*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191694*0 + 3*154*FLEN/8, x4, x1, x2)

inst_63899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:191697*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191697*0 + 3*155*FLEN/8, x4, x1, x2)

inst_63900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:191700*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191700*0 + 3*156*FLEN/8, x4, x1, x2)

inst_63901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:191703*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191703*0 + 3*157*FLEN/8, x4, x1, x2)

inst_63902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:191706*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191706*0 + 3*158*FLEN/8, x4, x1, x2)

inst_63903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:191709*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191709*0 + 3*159*FLEN/8, x4, x1, x2)

inst_63904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:191712*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191712*0 + 3*160*FLEN/8, x4, x1, x2)

inst_63905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:191715*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191715*0 + 3*161*FLEN/8, x4, x1, x2)

inst_63906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:191718*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191718*0 + 3*162*FLEN/8, x4, x1, x2)

inst_63907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:191721*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191721*0 + 3*163*FLEN/8, x4, x1, x2)

inst_63908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:191724*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191724*0 + 3*164*FLEN/8, x4, x1, x2)

inst_63909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:191727*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191727*0 + 3*165*FLEN/8, x4, x1, x2)

inst_63910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000000000; valaddr_reg:x3; val_offset:191730*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191730*0 + 3*166*FLEN/8, x4, x1, x2)

inst_63911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000000001; valaddr_reg:x3; val_offset:191733*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191733*0 + 3*167*FLEN/8, x4, x1, x2)

inst_63912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000000003; valaddr_reg:x3; val_offset:191736*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191736*0 + 3*168*FLEN/8, x4, x1, x2)

inst_63913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000000007; valaddr_reg:x3; val_offset:191739*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191739*0 + 3*169*FLEN/8, x4, x1, x2)

inst_63914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000000000f; valaddr_reg:x3; val_offset:191742*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191742*0 + 3*170*FLEN/8, x4, x1, x2)

inst_63915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000000001f; valaddr_reg:x3; val_offset:191745*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191745*0 + 3*171*FLEN/8, x4, x1, x2)

inst_63916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000000003f; valaddr_reg:x3; val_offset:191748*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191748*0 + 3*172*FLEN/8, x4, x1, x2)

inst_63917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000000007f; valaddr_reg:x3; val_offset:191751*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191751*0 + 3*173*FLEN/8, x4, x1, x2)

inst_63918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000000000ff; valaddr_reg:x3; val_offset:191754*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191754*0 + 3*174*FLEN/8, x4, x1, x2)

inst_63919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000000001ff; valaddr_reg:x3; val_offset:191757*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191757*0 + 3*175*FLEN/8, x4, x1, x2)

inst_63920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000000003ff; valaddr_reg:x3; val_offset:191760*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191760*0 + 3*176*FLEN/8, x4, x1, x2)

inst_63921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000000007ff; valaddr_reg:x3; val_offset:191763*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191763*0 + 3*177*FLEN/8, x4, x1, x2)

inst_63922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000000fff; valaddr_reg:x3; val_offset:191766*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191766*0 + 3*178*FLEN/8, x4, x1, x2)

inst_63923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000001fff; valaddr_reg:x3; val_offset:191769*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191769*0 + 3*179*FLEN/8, x4, x1, x2)

inst_63924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000003fff; valaddr_reg:x3; val_offset:191772*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191772*0 + 3*180*FLEN/8, x4, x1, x2)

inst_63925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000007fff; valaddr_reg:x3; val_offset:191775*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191775*0 + 3*181*FLEN/8, x4, x1, x2)

inst_63926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000000ffff; valaddr_reg:x3; val_offset:191778*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191778*0 + 3*182*FLEN/8, x4, x1, x2)

inst_63927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000001ffff; valaddr_reg:x3; val_offset:191781*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191781*0 + 3*183*FLEN/8, x4, x1, x2)

inst_63928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000003ffff; valaddr_reg:x3; val_offset:191784*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191784*0 + 3*184*FLEN/8, x4, x1, x2)

inst_63929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000007ffff; valaddr_reg:x3; val_offset:191787*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191787*0 + 3*185*FLEN/8, x4, x1, x2)

inst_63930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000000fffff; valaddr_reg:x3; val_offset:191790*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191790*0 + 3*186*FLEN/8, x4, x1, x2)

inst_63931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000001fffff; valaddr_reg:x3; val_offset:191793*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191793*0 + 3*187*FLEN/8, x4, x1, x2)

inst_63932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000003fffff; valaddr_reg:x3; val_offset:191796*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191796*0 + 3*188*FLEN/8, x4, x1, x2)

inst_63933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000007fffff; valaddr_reg:x3; val_offset:191799*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191799*0 + 3*189*FLEN/8, x4, x1, x2)

inst_63934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000000ffffff; valaddr_reg:x3; val_offset:191802*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191802*0 + 3*190*FLEN/8, x4, x1, x2)

inst_63935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000001ffffff; valaddr_reg:x3; val_offset:191805*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191805*0 + 3*191*FLEN/8, x4, x1, x2)

inst_63936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000003ffffff; valaddr_reg:x3; val_offset:191808*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191808*0 + 3*192*FLEN/8, x4, x1, x2)

inst_63937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000007ffffff; valaddr_reg:x3; val_offset:191811*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191811*0 + 3*193*FLEN/8, x4, x1, x2)

inst_63938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000000fffffff; valaddr_reg:x3; val_offset:191814*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191814*0 + 3*194*FLEN/8, x4, x1, x2)

inst_63939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000001fffffff; valaddr_reg:x3; val_offset:191817*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191817*0 + 3*195*FLEN/8, x4, x1, x2)

inst_63940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000003fffffff; valaddr_reg:x3; val_offset:191820*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191820*0 + 3*196*FLEN/8, x4, x1, x2)

inst_63941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000007fffffff; valaddr_reg:x3; val_offset:191823*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191823*0 + 3*197*FLEN/8, x4, x1, x2)

inst_63942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500000ffffffff; valaddr_reg:x3; val_offset:191826*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191826*0 + 3*198*FLEN/8, x4, x1, x2)

inst_63943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500001ffffffff; valaddr_reg:x3; val_offset:191829*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191829*0 + 3*199*FLEN/8, x4, x1, x2)

inst_63944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500003ffffffff; valaddr_reg:x3; val_offset:191832*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191832*0 + 3*200*FLEN/8, x4, x1, x2)

inst_63945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500007ffffffff; valaddr_reg:x3; val_offset:191835*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191835*0 + 3*201*FLEN/8, x4, x1, x2)

inst_63946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50000fffffffff; valaddr_reg:x3; val_offset:191838*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191838*0 + 3*202*FLEN/8, x4, x1, x2)

inst_63947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50001fffffffff; valaddr_reg:x3; val_offset:191841*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191841*0 + 3*203*FLEN/8, x4, x1, x2)

inst_63948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50003fffffffff; valaddr_reg:x3; val_offset:191844*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191844*0 + 3*204*FLEN/8, x4, x1, x2)

inst_63949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50007fffffffff; valaddr_reg:x3; val_offset:191847*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191847*0 + 3*205*FLEN/8, x4, x1, x2)

inst_63950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5000ffffffffff; valaddr_reg:x3; val_offset:191850*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191850*0 + 3*206*FLEN/8, x4, x1, x2)

inst_63951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5001ffffffffff; valaddr_reg:x3; val_offset:191853*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191853*0 + 3*207*FLEN/8, x4, x1, x2)

inst_63952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5003ffffffffff; valaddr_reg:x3; val_offset:191856*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191856*0 + 3*208*FLEN/8, x4, x1, x2)

inst_63953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5007ffffffffff; valaddr_reg:x3; val_offset:191859*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191859*0 + 3*209*FLEN/8, x4, x1, x2)

inst_63954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x500fffffffffff; valaddr_reg:x3; val_offset:191862*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191862*0 + 3*210*FLEN/8, x4, x1, x2)

inst_63955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x501fffffffffff; valaddr_reg:x3; val_offset:191865*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191865*0 + 3*211*FLEN/8, x4, x1, x2)

inst_63956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x503fffffffffff; valaddr_reg:x3; val_offset:191868*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191868*0 + 3*212*FLEN/8, x4, x1, x2)

inst_63957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x507fffffffffff; valaddr_reg:x3; val_offset:191871*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191871*0 + 3*213*FLEN/8, x4, x1, x2)

inst_63958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x50ffffffffffff; valaddr_reg:x3; val_offset:191874*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191874*0 + 3*214*FLEN/8, x4, x1, x2)

inst_63959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x51ffffffffffff; valaddr_reg:x3; val_offset:191877*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191877*0 + 3*215*FLEN/8, x4, x1, x2)

inst_63960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x53ffffffffffff; valaddr_reg:x3; val_offset:191880*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191880*0 + 3*216*FLEN/8, x4, x1, x2)

inst_63961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x57ffffffffffff; valaddr_reg:x3; val_offset:191883*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191883*0 + 3*217*FLEN/8, x4, x1, x2)

inst_63962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x58000000000000; valaddr_reg:x3; val_offset:191886*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191886*0 + 3*218*FLEN/8, x4, x1, x2)

inst_63963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5c000000000000; valaddr_reg:x3; val_offset:191889*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191889*0 + 3*219*FLEN/8, x4, x1, x2)

inst_63964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5e000000000000; valaddr_reg:x3; val_offset:191892*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191892*0 + 3*220*FLEN/8, x4, x1, x2)

inst_63965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5f000000000000; valaddr_reg:x3; val_offset:191895*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191895*0 + 3*221*FLEN/8, x4, x1, x2)

inst_63966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5f800000000000; valaddr_reg:x3; val_offset:191898*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191898*0 + 3*222*FLEN/8, x4, x1, x2)

inst_63967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fc00000000000; valaddr_reg:x3; val_offset:191901*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191901*0 + 3*223*FLEN/8, x4, x1, x2)

inst_63968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fe00000000000; valaddr_reg:x3; val_offset:191904*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191904*0 + 3*224*FLEN/8, x4, x1, x2)

inst_63969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ff00000000000; valaddr_reg:x3; val_offset:191907*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191907*0 + 3*225*FLEN/8, x4, x1, x2)

inst_63970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ff80000000000; valaddr_reg:x3; val_offset:191910*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191910*0 + 3*226*FLEN/8, x4, x1, x2)

inst_63971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffc0000000000; valaddr_reg:x3; val_offset:191913*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191913*0 + 3*227*FLEN/8, x4, x1, x2)

inst_63972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffe0000000000; valaddr_reg:x3; val_offset:191916*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191916*0 + 3*228*FLEN/8, x4, x1, x2)

inst_63973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fff0000000000; valaddr_reg:x3; val_offset:191919*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191919*0 + 3*229*FLEN/8, x4, x1, x2)

inst_63974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fff8000000000; valaddr_reg:x3; val_offset:191922*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191922*0 + 3*230*FLEN/8, x4, x1, x2)

inst_63975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffc000000000; valaddr_reg:x3; val_offset:191925*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191925*0 + 3*231*FLEN/8, x4, x1, x2)

inst_63976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffe000000000; valaddr_reg:x3; val_offset:191928*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191928*0 + 3*232*FLEN/8, x4, x1, x2)

inst_63977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffff000000000; valaddr_reg:x3; val_offset:191931*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191931*0 + 3*233*FLEN/8, x4, x1, x2)

inst_63978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffff800000000; valaddr_reg:x3; val_offset:191934*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191934*0 + 3*234*FLEN/8, x4, x1, x2)

inst_63979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffc00000000; valaddr_reg:x3; val_offset:191937*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191937*0 + 3*235*FLEN/8, x4, x1, x2)

inst_63980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffe00000000; valaddr_reg:x3; val_offset:191940*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191940*0 + 3*236*FLEN/8, x4, x1, x2)

inst_63981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffff00000000; valaddr_reg:x3; val_offset:191943*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191943*0 + 3*237*FLEN/8, x4, x1, x2)

inst_63982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffff80000000; valaddr_reg:x3; val_offset:191946*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191946*0 + 3*238*FLEN/8, x4, x1, x2)

inst_63983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffc0000000; valaddr_reg:x3; val_offset:191949*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191949*0 + 3*239*FLEN/8, x4, x1, x2)

inst_63984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffe0000000; valaddr_reg:x3; val_offset:191952*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191952*0 + 3*240*FLEN/8, x4, x1, x2)

inst_63985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffff0000000; valaddr_reg:x3; val_offset:191955*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191955*0 + 3*241*FLEN/8, x4, x1, x2)

inst_63986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffff8000000; valaddr_reg:x3; val_offset:191958*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191958*0 + 3*242*FLEN/8, x4, x1, x2)

inst_63987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffc000000; valaddr_reg:x3; val_offset:191961*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191961*0 + 3*243*FLEN/8, x4, x1, x2)

inst_63988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffe000000; valaddr_reg:x3; val_offset:191964*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191964*0 + 3*244*FLEN/8, x4, x1, x2)

inst_63989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffff000000; valaddr_reg:x3; val_offset:191967*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191967*0 + 3*245*FLEN/8, x4, x1, x2)

inst_63990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffff800000; valaddr_reg:x3; val_offset:191970*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191970*0 + 3*246*FLEN/8, x4, x1, x2)

inst_63991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffc00000; valaddr_reg:x3; val_offset:191973*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191973*0 + 3*247*FLEN/8, x4, x1, x2)

inst_63992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffe00000; valaddr_reg:x3; val_offset:191976*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191976*0 + 3*248*FLEN/8, x4, x1, x2)

inst_63993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffff00000; valaddr_reg:x3; val_offset:191979*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191979*0 + 3*249*FLEN/8, x4, x1, x2)

inst_63994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffff80000; valaddr_reg:x3; val_offset:191982*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191982*0 + 3*250*FLEN/8, x4, x1, x2)

inst_63995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffc0000; valaddr_reg:x3; val_offset:191985*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191985*0 + 3*251*FLEN/8, x4, x1, x2)

inst_63996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffe0000; valaddr_reg:x3; val_offset:191988*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191988*0 + 3*252*FLEN/8, x4, x1, x2)

inst_63997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffff0000; valaddr_reg:x3; val_offset:191991*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191991*0 + 3*253*FLEN/8, x4, x1, x2)

inst_63998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffff8000; valaddr_reg:x3; val_offset:191994*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191994*0 + 3*254*FLEN/8, x4, x1, x2)

inst_63999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffc000; valaddr_reg:x3; val_offset:191997*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191997*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_64000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffe000; valaddr_reg:x3; val_offset:192000*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192000*0 + 3*256*FLEN/8, x4, x1, x2)

inst_64001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffff000; valaddr_reg:x3; val_offset:192003*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192003*0 + 3*257*FLEN/8, x4, x1, x2)

inst_64002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffff800; valaddr_reg:x3; val_offset:192006*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192006*0 + 3*258*FLEN/8, x4, x1, x2)

inst_64003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffffc00; valaddr_reg:x3; val_offset:192009*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192009*0 + 3*259*FLEN/8, x4, x1, x2)

inst_64004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffffe00; valaddr_reg:x3; val_offset:192012*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192012*0 + 3*260*FLEN/8, x4, x1, x2)

inst_64005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffff00; valaddr_reg:x3; val_offset:192015*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192015*0 + 3*261*FLEN/8, x4, x1, x2)

inst_64006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffff80; valaddr_reg:x3; val_offset:192018*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192018*0 + 3*262*FLEN/8, x4, x1, x2)

inst_64007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffffc0; valaddr_reg:x3; val_offset:192021*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192021*0 + 3*263*FLEN/8, x4, x1, x2)

inst_64008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffffe0; valaddr_reg:x3; val_offset:192024*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192024*0 + 3*264*FLEN/8, x4, x1, x2)

inst_64009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffffff0; valaddr_reg:x3; val_offset:192027*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192027*0 + 3*265*FLEN/8, x4, x1, x2)

inst_64010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffffff8; valaddr_reg:x3; val_offset:192030*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192030*0 + 3*266*FLEN/8, x4, x1, x2)

inst_64011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffffffc; valaddr_reg:x3; val_offset:192033*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192033*0 + 3*267*FLEN/8, x4, x1, x2)

inst_64012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5ffffffffffffe; valaddr_reg:x3; val_offset:192036*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192036*0 + 3*268*FLEN/8, x4, x1, x2)

inst_64013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa363e504d94fe2; op2val:0x0;
op3val:0x5fffffffffffff; valaddr_reg:x3; val_offset:192039*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192039*0 + 3*269*FLEN/8, x4, x1, x2)

inst_64014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000000000; valaddr_reg:x3; val_offset:192042*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192042*0 + 3*270*FLEN/8, x4, x1, x2)

inst_64015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000000001; valaddr_reg:x3; val_offset:192045*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192045*0 + 3*271*FLEN/8, x4, x1, x2)

inst_64016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000000003; valaddr_reg:x3; val_offset:192048*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192048*0 + 3*272*FLEN/8, x4, x1, x2)

inst_64017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000000007; valaddr_reg:x3; val_offset:192051*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192051*0 + 3*273*FLEN/8, x4, x1, x2)

inst_64018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000000000f; valaddr_reg:x3; val_offset:192054*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192054*0 + 3*274*FLEN/8, x4, x1, x2)

inst_64019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000000001f; valaddr_reg:x3; val_offset:192057*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192057*0 + 3*275*FLEN/8, x4, x1, x2)

inst_64020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000000003f; valaddr_reg:x3; val_offset:192060*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192060*0 + 3*276*FLEN/8, x4, x1, x2)

inst_64021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000000007f; valaddr_reg:x3; val_offset:192063*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192063*0 + 3*277*FLEN/8, x4, x1, x2)

inst_64022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000000000ff; valaddr_reg:x3; val_offset:192066*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192066*0 + 3*278*FLEN/8, x4, x1, x2)

inst_64023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000000001ff; valaddr_reg:x3; val_offset:192069*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192069*0 + 3*279*FLEN/8, x4, x1, x2)

inst_64024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000000003ff; valaddr_reg:x3; val_offset:192072*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192072*0 + 3*280*FLEN/8, x4, x1, x2)

inst_64025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000000007ff; valaddr_reg:x3; val_offset:192075*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192075*0 + 3*281*FLEN/8, x4, x1, x2)

inst_64026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000000fff; valaddr_reg:x3; val_offset:192078*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192078*0 + 3*282*FLEN/8, x4, x1, x2)

inst_64027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000001fff; valaddr_reg:x3; val_offset:192081*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192081*0 + 3*283*FLEN/8, x4, x1, x2)

inst_64028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000003fff; valaddr_reg:x3; val_offset:192084*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192084*0 + 3*284*FLEN/8, x4, x1, x2)

inst_64029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000007fff; valaddr_reg:x3; val_offset:192087*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192087*0 + 3*285*FLEN/8, x4, x1, x2)

inst_64030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000000ffff; valaddr_reg:x3; val_offset:192090*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192090*0 + 3*286*FLEN/8, x4, x1, x2)

inst_64031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000001ffff; valaddr_reg:x3; val_offset:192093*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192093*0 + 3*287*FLEN/8, x4, x1, x2)

inst_64032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000003ffff; valaddr_reg:x3; val_offset:192096*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192096*0 + 3*288*FLEN/8, x4, x1, x2)

inst_64033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000007ffff; valaddr_reg:x3; val_offset:192099*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192099*0 + 3*289*FLEN/8, x4, x1, x2)

inst_64034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000000fffff; valaddr_reg:x3; val_offset:192102*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192102*0 + 3*290*FLEN/8, x4, x1, x2)

inst_64035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000001fffff; valaddr_reg:x3; val_offset:192105*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192105*0 + 3*291*FLEN/8, x4, x1, x2)

inst_64036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000003fffff; valaddr_reg:x3; val_offset:192108*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192108*0 + 3*292*FLEN/8, x4, x1, x2)

inst_64037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000007fffff; valaddr_reg:x3; val_offset:192111*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192111*0 + 3*293*FLEN/8, x4, x1, x2)

inst_64038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000000ffffff; valaddr_reg:x3; val_offset:192114*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192114*0 + 3*294*FLEN/8, x4, x1, x2)

inst_64039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000001ffffff; valaddr_reg:x3; val_offset:192117*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192117*0 + 3*295*FLEN/8, x4, x1, x2)

inst_64040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000003ffffff; valaddr_reg:x3; val_offset:192120*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192120*0 + 3*296*FLEN/8, x4, x1, x2)

inst_64041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000007ffffff; valaddr_reg:x3; val_offset:192123*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192123*0 + 3*297*FLEN/8, x4, x1, x2)

inst_64042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000000fffffff; valaddr_reg:x3; val_offset:192126*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192126*0 + 3*298*FLEN/8, x4, x1, x2)

inst_64043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000001fffffff; valaddr_reg:x3; val_offset:192129*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192129*0 + 3*299*FLEN/8, x4, x1, x2)

inst_64044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000003fffffff; valaddr_reg:x3; val_offset:192132*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192132*0 + 3*300*FLEN/8, x4, x1, x2)

inst_64045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000007fffffff; valaddr_reg:x3; val_offset:192135*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192135*0 + 3*301*FLEN/8, x4, x1, x2)

inst_64046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600000ffffffff; valaddr_reg:x3; val_offset:192138*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192138*0 + 3*302*FLEN/8, x4, x1, x2)

inst_64047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600001ffffffff; valaddr_reg:x3; val_offset:192141*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192141*0 + 3*303*FLEN/8, x4, x1, x2)

inst_64048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600003ffffffff; valaddr_reg:x3; val_offset:192144*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192144*0 + 3*304*FLEN/8, x4, x1, x2)

inst_64049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600007ffffffff; valaddr_reg:x3; val_offset:192147*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192147*0 + 3*305*FLEN/8, x4, x1, x2)

inst_64050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860000fffffffff; valaddr_reg:x3; val_offset:192150*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192150*0 + 3*306*FLEN/8, x4, x1, x2)

inst_64051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860001fffffffff; valaddr_reg:x3; val_offset:192153*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192153*0 + 3*307*FLEN/8, x4, x1, x2)

inst_64052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860003fffffffff; valaddr_reg:x3; val_offset:192156*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192156*0 + 3*308*FLEN/8, x4, x1, x2)

inst_64053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860007fffffffff; valaddr_reg:x3; val_offset:192159*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192159*0 + 3*309*FLEN/8, x4, x1, x2)

inst_64054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386000ffffffffff; valaddr_reg:x3; val_offset:192162*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192162*0 + 3*310*FLEN/8, x4, x1, x2)

inst_64055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386001ffffffffff; valaddr_reg:x3; val_offset:192165*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192165*0 + 3*311*FLEN/8, x4, x1, x2)

inst_64056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386003ffffffffff; valaddr_reg:x3; val_offset:192168*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192168*0 + 3*312*FLEN/8, x4, x1, x2)

inst_64057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386007ffffffffff; valaddr_reg:x3; val_offset:192171*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192171*0 + 3*313*FLEN/8, x4, x1, x2)

inst_64058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38600fffffffffff; valaddr_reg:x3; val_offset:192174*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192174*0 + 3*314*FLEN/8, x4, x1, x2)

inst_64059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38601fffffffffff; valaddr_reg:x3; val_offset:192177*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192177*0 + 3*315*FLEN/8, x4, x1, x2)

inst_64060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38603fffffffffff; valaddr_reg:x3; val_offset:192180*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192180*0 + 3*316*FLEN/8, x4, x1, x2)

inst_64061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x38607fffffffffff; valaddr_reg:x3; val_offset:192183*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192183*0 + 3*317*FLEN/8, x4, x1, x2)

inst_64062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3860ffffffffffff; valaddr_reg:x3; val_offset:192186*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192186*0 + 3*318*FLEN/8, x4, x1, x2)

inst_64063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3861ffffffffffff; valaddr_reg:x3; val_offset:192189*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192189*0 + 3*319*FLEN/8, x4, x1, x2)

inst_64064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3863ffffffffffff; valaddr_reg:x3; val_offset:192192*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192192*0 + 3*320*FLEN/8, x4, x1, x2)

inst_64065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3867ffffffffffff; valaddr_reg:x3; val_offset:192195*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192195*0 + 3*321*FLEN/8, x4, x1, x2)

inst_64066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3868000000000000; valaddr_reg:x3; val_offset:192198*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192198*0 + 3*322*FLEN/8, x4, x1, x2)

inst_64067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386c000000000000; valaddr_reg:x3; val_offset:192201*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192201*0 + 3*323*FLEN/8, x4, x1, x2)

inst_64068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386e000000000000; valaddr_reg:x3; val_offset:192204*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192204*0 + 3*324*FLEN/8, x4, x1, x2)

inst_64069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386f000000000000; valaddr_reg:x3; val_offset:192207*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192207*0 + 3*325*FLEN/8, x4, x1, x2)

inst_64070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386f800000000000; valaddr_reg:x3; val_offset:192210*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192210*0 + 3*326*FLEN/8, x4, x1, x2)

inst_64071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fc00000000000; valaddr_reg:x3; val_offset:192213*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192213*0 + 3*327*FLEN/8, x4, x1, x2)

inst_64072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fe00000000000; valaddr_reg:x3; val_offset:192216*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192216*0 + 3*328*FLEN/8, x4, x1, x2)

inst_64073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ff00000000000; valaddr_reg:x3; val_offset:192219*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192219*0 + 3*329*FLEN/8, x4, x1, x2)

inst_64074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ff80000000000; valaddr_reg:x3; val_offset:192222*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192222*0 + 3*330*FLEN/8, x4, x1, x2)

inst_64075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffc0000000000; valaddr_reg:x3; val_offset:192225*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192225*0 + 3*331*FLEN/8, x4, x1, x2)

inst_64076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffe0000000000; valaddr_reg:x3; val_offset:192228*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192228*0 + 3*332*FLEN/8, x4, x1, x2)

inst_64077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fff0000000000; valaddr_reg:x3; val_offset:192231*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192231*0 + 3*333*FLEN/8, x4, x1, x2)

inst_64078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fff8000000000; valaddr_reg:x3; val_offset:192234*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192234*0 + 3*334*FLEN/8, x4, x1, x2)

inst_64079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffc000000000; valaddr_reg:x3; val_offset:192237*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192237*0 + 3*335*FLEN/8, x4, x1, x2)

inst_64080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffe000000000; valaddr_reg:x3; val_offset:192240*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192240*0 + 3*336*FLEN/8, x4, x1, x2)

inst_64081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffff000000000; valaddr_reg:x3; val_offset:192243*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192243*0 + 3*337*FLEN/8, x4, x1, x2)

inst_64082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffff800000000; valaddr_reg:x3; val_offset:192246*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192246*0 + 3*338*FLEN/8, x4, x1, x2)

inst_64083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffc00000000; valaddr_reg:x3; val_offset:192249*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192249*0 + 3*339*FLEN/8, x4, x1, x2)

inst_64084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffe00000000; valaddr_reg:x3; val_offset:192252*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192252*0 + 3*340*FLEN/8, x4, x1, x2)

inst_64085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffff00000000; valaddr_reg:x3; val_offset:192255*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192255*0 + 3*341*FLEN/8, x4, x1, x2)

inst_64086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffff80000000; valaddr_reg:x3; val_offset:192258*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192258*0 + 3*342*FLEN/8, x4, x1, x2)

inst_64087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffc0000000; valaddr_reg:x3; val_offset:192261*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192261*0 + 3*343*FLEN/8, x4, x1, x2)

inst_64088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffe0000000; valaddr_reg:x3; val_offset:192264*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192264*0 + 3*344*FLEN/8, x4, x1, x2)

inst_64089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffff0000000; valaddr_reg:x3; val_offset:192267*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192267*0 + 3*345*FLEN/8, x4, x1, x2)

inst_64090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffff8000000; valaddr_reg:x3; val_offset:192270*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192270*0 + 3*346*FLEN/8, x4, x1, x2)

inst_64091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffc000000; valaddr_reg:x3; val_offset:192273*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192273*0 + 3*347*FLEN/8, x4, x1, x2)

inst_64092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffe000000; valaddr_reg:x3; val_offset:192276*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192276*0 + 3*348*FLEN/8, x4, x1, x2)

inst_64093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffff000000; valaddr_reg:x3; val_offset:192279*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192279*0 + 3*349*FLEN/8, x4, x1, x2)

inst_64094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffff800000; valaddr_reg:x3; val_offset:192282*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192282*0 + 3*350*FLEN/8, x4, x1, x2)

inst_64095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffc00000; valaddr_reg:x3; val_offset:192285*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192285*0 + 3*351*FLEN/8, x4, x1, x2)

inst_64096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffe00000; valaddr_reg:x3; val_offset:192288*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192288*0 + 3*352*FLEN/8, x4, x1, x2)

inst_64097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffff00000; valaddr_reg:x3; val_offset:192291*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192291*0 + 3*353*FLEN/8, x4, x1, x2)

inst_64098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffff80000; valaddr_reg:x3; val_offset:192294*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192294*0 + 3*354*FLEN/8, x4, x1, x2)

inst_64099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffc0000; valaddr_reg:x3; val_offset:192297*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192297*0 + 3*355*FLEN/8, x4, x1, x2)

inst_64100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffe0000; valaddr_reg:x3; val_offset:192300*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192300*0 + 3*356*FLEN/8, x4, x1, x2)

inst_64101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffff0000; valaddr_reg:x3; val_offset:192303*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192303*0 + 3*357*FLEN/8, x4, x1, x2)

inst_64102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffff8000; valaddr_reg:x3; val_offset:192306*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192306*0 + 3*358*FLEN/8, x4, x1, x2)

inst_64103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffc000; valaddr_reg:x3; val_offset:192309*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192309*0 + 3*359*FLEN/8, x4, x1, x2)

inst_64104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffe000; valaddr_reg:x3; val_offset:192312*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192312*0 + 3*360*FLEN/8, x4, x1, x2)

inst_64105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffff000; valaddr_reg:x3; val_offset:192315*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192315*0 + 3*361*FLEN/8, x4, x1, x2)

inst_64106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffff800; valaddr_reg:x3; val_offset:192318*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192318*0 + 3*362*FLEN/8, x4, x1, x2)

inst_64107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffffc00; valaddr_reg:x3; val_offset:192321*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192321*0 + 3*363*FLEN/8, x4, x1, x2)

inst_64108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffffe00; valaddr_reg:x3; val_offset:192324*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192324*0 + 3*364*FLEN/8, x4, x1, x2)

inst_64109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffff00; valaddr_reg:x3; val_offset:192327*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192327*0 + 3*365*FLEN/8, x4, x1, x2)

inst_64110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffff80; valaddr_reg:x3; val_offset:192330*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192330*0 + 3*366*FLEN/8, x4, x1, x2)

inst_64111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffffc0; valaddr_reg:x3; val_offset:192333*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192333*0 + 3*367*FLEN/8, x4, x1, x2)

inst_64112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffffe0; valaddr_reg:x3; val_offset:192336*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192336*0 + 3*368*FLEN/8, x4, x1, x2)

inst_64113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffffff0; valaddr_reg:x3; val_offset:192339*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192339*0 + 3*369*FLEN/8, x4, x1, x2)

inst_64114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffffff8; valaddr_reg:x3; val_offset:192342*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192342*0 + 3*370*FLEN/8, x4, x1, x2)

inst_64115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffffffc; valaddr_reg:x3; val_offset:192345*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192345*0 + 3*371*FLEN/8, x4, x1, x2)

inst_64116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386ffffffffffffe; valaddr_reg:x3; val_offset:192348*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192348*0 + 3*372*FLEN/8, x4, x1, x2)

inst_64117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x386fffffffffffff; valaddr_reg:x3; val_offset:192351*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192351*0 + 3*373*FLEN/8, x4, x1, x2)

inst_64118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:192354*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192354*0 + 3*374*FLEN/8, x4, x1, x2)

inst_64119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:192357*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192357*0 + 3*375*FLEN/8, x4, x1, x2)

inst_64120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:192360*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192360*0 + 3*376*FLEN/8, x4, x1, x2)

inst_64121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:192363*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192363*0 + 3*377*FLEN/8, x4, x1, x2)

inst_64122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:192366*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192366*0 + 3*378*FLEN/8, x4, x1, x2)

inst_64123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:192369*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192369*0 + 3*379*FLEN/8, x4, x1, x2)

inst_64124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:192372*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192372*0 + 3*380*FLEN/8, x4, x1, x2)

inst_64125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:192375*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192375*0 + 3*381*FLEN/8, x4, x1, x2)

inst_64126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:192378*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192378*0 + 3*382*FLEN/8, x4, x1, x2)

inst_64127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:192381*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192381*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_64128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:192384*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192384*0 + 3*384*FLEN/8, x4, x1, x2)

inst_64129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:192387*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192387*0 + 3*385*FLEN/8, x4, x1, x2)

inst_64130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:192390*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192390*0 + 3*386*FLEN/8, x4, x1, x2)

inst_64131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:192393*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192393*0 + 3*387*FLEN/8, x4, x1, x2)

inst_64132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:192396*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192396*0 + 3*388*FLEN/8, x4, x1, x2)

inst_64133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:192399*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192399*0 + 3*389*FLEN/8, x4, x1, x2)

inst_64134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:192402*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192402*0 + 3*390*FLEN/8, x4, x1, x2)

inst_64135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:192405*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192405*0 + 3*391*FLEN/8, x4, x1, x2)

inst_64136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:192408*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192408*0 + 3*392*FLEN/8, x4, x1, x2)

inst_64137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:192411*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192411*0 + 3*393*FLEN/8, x4, x1, x2)

inst_64138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:192414*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192414*0 + 3*394*FLEN/8, x4, x1, x2)

inst_64139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa6634eb8ab97e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa364fd8fe1fae1; op2val:0x203a6634eb8ab97e;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:192417*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192417*0 + 3*395*FLEN/8, x4, x1, x2)

inst_64140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000000000; valaddr_reg:x3; val_offset:192420*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192420*0 + 3*396*FLEN/8, x4, x1, x2)

inst_64141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000000001; valaddr_reg:x3; val_offset:192423*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192423*0 + 3*397*FLEN/8, x4, x1, x2)

inst_64142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000000003; valaddr_reg:x3; val_offset:192426*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192426*0 + 3*398*FLEN/8, x4, x1, x2)

inst_64143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000000007; valaddr_reg:x3; val_offset:192429*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192429*0 + 3*399*FLEN/8, x4, x1, x2)

inst_64144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000000000f; valaddr_reg:x3; val_offset:192432*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192432*0 + 3*400*FLEN/8, x4, x1, x2)

inst_64145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000000001f; valaddr_reg:x3; val_offset:192435*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192435*0 + 3*401*FLEN/8, x4, x1, x2)

inst_64146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000000003f; valaddr_reg:x3; val_offset:192438*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192438*0 + 3*402*FLEN/8, x4, x1, x2)

inst_64147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000000007f; valaddr_reg:x3; val_offset:192441*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192441*0 + 3*403*FLEN/8, x4, x1, x2)

inst_64148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000000000ff; valaddr_reg:x3; val_offset:192444*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192444*0 + 3*404*FLEN/8, x4, x1, x2)

inst_64149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000000001ff; valaddr_reg:x3; val_offset:192447*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192447*0 + 3*405*FLEN/8, x4, x1, x2)

inst_64150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000000003ff; valaddr_reg:x3; val_offset:192450*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192450*0 + 3*406*FLEN/8, x4, x1, x2)

inst_64151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000000007ff; valaddr_reg:x3; val_offset:192453*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192453*0 + 3*407*FLEN/8, x4, x1, x2)

inst_64152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000000fff; valaddr_reg:x3; val_offset:192456*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192456*0 + 3*408*FLEN/8, x4, x1, x2)

inst_64153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000001fff; valaddr_reg:x3; val_offset:192459*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192459*0 + 3*409*FLEN/8, x4, x1, x2)

inst_64154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000003fff; valaddr_reg:x3; val_offset:192462*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192462*0 + 3*410*FLEN/8, x4, x1, x2)

inst_64155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000007fff; valaddr_reg:x3; val_offset:192465*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192465*0 + 3*411*FLEN/8, x4, x1, x2)

inst_64156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000000ffff; valaddr_reg:x3; val_offset:192468*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192468*0 + 3*412*FLEN/8, x4, x1, x2)

inst_64157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000001ffff; valaddr_reg:x3; val_offset:192471*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192471*0 + 3*413*FLEN/8, x4, x1, x2)

inst_64158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000003ffff; valaddr_reg:x3; val_offset:192474*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192474*0 + 3*414*FLEN/8, x4, x1, x2)

inst_64159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000007ffff; valaddr_reg:x3; val_offset:192477*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192477*0 + 3*415*FLEN/8, x4, x1, x2)

inst_64160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000000fffff; valaddr_reg:x3; val_offset:192480*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192480*0 + 3*416*FLEN/8, x4, x1, x2)

inst_64161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000001fffff; valaddr_reg:x3; val_offset:192483*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192483*0 + 3*417*FLEN/8, x4, x1, x2)

inst_64162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000003fffff; valaddr_reg:x3; val_offset:192486*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192486*0 + 3*418*FLEN/8, x4, x1, x2)

inst_64163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000007fffff; valaddr_reg:x3; val_offset:192489*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192489*0 + 3*419*FLEN/8, x4, x1, x2)

inst_64164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000000ffffff; valaddr_reg:x3; val_offset:192492*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192492*0 + 3*420*FLEN/8, x4, x1, x2)

inst_64165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000001ffffff; valaddr_reg:x3; val_offset:192495*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192495*0 + 3*421*FLEN/8, x4, x1, x2)

inst_64166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000003ffffff; valaddr_reg:x3; val_offset:192498*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192498*0 + 3*422*FLEN/8, x4, x1, x2)

inst_64167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000007ffffff; valaddr_reg:x3; val_offset:192501*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192501*0 + 3*423*FLEN/8, x4, x1, x2)

inst_64168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000000fffffff; valaddr_reg:x3; val_offset:192504*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192504*0 + 3*424*FLEN/8, x4, x1, x2)

inst_64169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000001fffffff; valaddr_reg:x3; val_offset:192507*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192507*0 + 3*425*FLEN/8, x4, x1, x2)

inst_64170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000003fffffff; valaddr_reg:x3; val_offset:192510*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192510*0 + 3*426*FLEN/8, x4, x1, x2)

inst_64171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000007fffffff; valaddr_reg:x3; val_offset:192513*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192513*0 + 3*427*FLEN/8, x4, x1, x2)

inst_64172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00000ffffffff; valaddr_reg:x3; val_offset:192516*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192516*0 + 3*428*FLEN/8, x4, x1, x2)

inst_64173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00001ffffffff; valaddr_reg:x3; val_offset:192519*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192519*0 + 3*429*FLEN/8, x4, x1, x2)

inst_64174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00003ffffffff; valaddr_reg:x3; val_offset:192522*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192522*0 + 3*430*FLEN/8, x4, x1, x2)

inst_64175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00007ffffffff; valaddr_reg:x3; val_offset:192525*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192525*0 + 3*431*FLEN/8, x4, x1, x2)

inst_64176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0000fffffffff; valaddr_reg:x3; val_offset:192528*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192528*0 + 3*432*FLEN/8, x4, x1, x2)

inst_64177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0001fffffffff; valaddr_reg:x3; val_offset:192531*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192531*0 + 3*433*FLEN/8, x4, x1, x2)

inst_64178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0003fffffffff; valaddr_reg:x3; val_offset:192534*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192534*0 + 3*434*FLEN/8, x4, x1, x2)

inst_64179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0007fffffffff; valaddr_reg:x3; val_offset:192537*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192537*0 + 3*435*FLEN/8, x4, x1, x2)

inst_64180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae000ffffffffff; valaddr_reg:x3; val_offset:192540*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192540*0 + 3*436*FLEN/8, x4, x1, x2)

inst_64181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae001ffffffffff; valaddr_reg:x3; val_offset:192543*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192543*0 + 3*437*FLEN/8, x4, x1, x2)

inst_64182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae003ffffffffff; valaddr_reg:x3; val_offset:192546*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192546*0 + 3*438*FLEN/8, x4, x1, x2)

inst_64183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae007ffffffffff; valaddr_reg:x3; val_offset:192549*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192549*0 + 3*439*FLEN/8, x4, x1, x2)

inst_64184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae00fffffffffff; valaddr_reg:x3; val_offset:192552*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192552*0 + 3*440*FLEN/8, x4, x1, x2)

inst_64185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae01fffffffffff; valaddr_reg:x3; val_offset:192555*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192555*0 + 3*441*FLEN/8, x4, x1, x2)

inst_64186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae03fffffffffff; valaddr_reg:x3; val_offset:192558*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192558*0 + 3*442*FLEN/8, x4, x1, x2)

inst_64187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae07fffffffffff; valaddr_reg:x3; val_offset:192561*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192561*0 + 3*443*FLEN/8, x4, x1, x2)

inst_64188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae0ffffffffffff; valaddr_reg:x3; val_offset:192564*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192564*0 + 3*444*FLEN/8, x4, x1, x2)

inst_64189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae1ffffffffffff; valaddr_reg:x3; val_offset:192567*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192567*0 + 3*445*FLEN/8, x4, x1, x2)

inst_64190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae3ffffffffffff; valaddr_reg:x3; val_offset:192570*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192570*0 + 3*446*FLEN/8, x4, x1, x2)

inst_64191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae7ffffffffffff; valaddr_reg:x3; val_offset:192573*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192573*0 + 3*447*FLEN/8, x4, x1, x2)

inst_64192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbae8000000000000; valaddr_reg:x3; val_offset:192576*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192576*0 + 3*448*FLEN/8, x4, x1, x2)

inst_64193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaec000000000000; valaddr_reg:x3; val_offset:192579*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192579*0 + 3*449*FLEN/8, x4, x1, x2)

inst_64194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaee000000000000; valaddr_reg:x3; val_offset:192582*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192582*0 + 3*450*FLEN/8, x4, x1, x2)

inst_64195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaef000000000000; valaddr_reg:x3; val_offset:192585*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192585*0 + 3*451*FLEN/8, x4, x1, x2)

inst_64196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaef800000000000; valaddr_reg:x3; val_offset:192588*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192588*0 + 3*452*FLEN/8, x4, x1, x2)

inst_64197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefc00000000000; valaddr_reg:x3; val_offset:192591*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192591*0 + 3*453*FLEN/8, x4, x1, x2)

inst_64198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefe00000000000; valaddr_reg:x3; val_offset:192594*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192594*0 + 3*454*FLEN/8, x4, x1, x2)

inst_64199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeff00000000000; valaddr_reg:x3; val_offset:192597*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192597*0 + 3*455*FLEN/8, x4, x1, x2)

inst_64200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeff80000000000; valaddr_reg:x3; val_offset:192600*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192600*0 + 3*456*FLEN/8, x4, x1, x2)

inst_64201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffc0000000000; valaddr_reg:x3; val_offset:192603*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192603*0 + 3*457*FLEN/8, x4, x1, x2)

inst_64202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffe0000000000; valaddr_reg:x3; val_offset:192606*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192606*0 + 3*458*FLEN/8, x4, x1, x2)

inst_64203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefff0000000000; valaddr_reg:x3; val_offset:192609*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192609*0 + 3*459*FLEN/8, x4, x1, x2)

inst_64204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefff8000000000; valaddr_reg:x3; val_offset:192612*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192612*0 + 3*460*FLEN/8, x4, x1, x2)

inst_64205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffc000000000; valaddr_reg:x3; val_offset:192615*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192615*0 + 3*461*FLEN/8, x4, x1, x2)

inst_64206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffe000000000; valaddr_reg:x3; val_offset:192618*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192618*0 + 3*462*FLEN/8, x4, x1, x2)

inst_64207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffff000000000; valaddr_reg:x3; val_offset:192621*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192621*0 + 3*463*FLEN/8, x4, x1, x2)

inst_64208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffff800000000; valaddr_reg:x3; val_offset:192624*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192624*0 + 3*464*FLEN/8, x4, x1, x2)

inst_64209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffc00000000; valaddr_reg:x3; val_offset:192627*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192627*0 + 3*465*FLEN/8, x4, x1, x2)

inst_64210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffe00000000; valaddr_reg:x3; val_offset:192630*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192630*0 + 3*466*FLEN/8, x4, x1, x2)

inst_64211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffff00000000; valaddr_reg:x3; val_offset:192633*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192633*0 + 3*467*FLEN/8, x4, x1, x2)

inst_64212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffff80000000; valaddr_reg:x3; val_offset:192636*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192636*0 + 3*468*FLEN/8, x4, x1, x2)

inst_64213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffc0000000; valaddr_reg:x3; val_offset:192639*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192639*0 + 3*469*FLEN/8, x4, x1, x2)

inst_64214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffe0000000; valaddr_reg:x3; val_offset:192642*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192642*0 + 3*470*FLEN/8, x4, x1, x2)

inst_64215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffff0000000; valaddr_reg:x3; val_offset:192645*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192645*0 + 3*471*FLEN/8, x4, x1, x2)

inst_64216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffff8000000; valaddr_reg:x3; val_offset:192648*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192648*0 + 3*472*FLEN/8, x4, x1, x2)

inst_64217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffc000000; valaddr_reg:x3; val_offset:192651*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192651*0 + 3*473*FLEN/8, x4, x1, x2)

inst_64218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffe000000; valaddr_reg:x3; val_offset:192654*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192654*0 + 3*474*FLEN/8, x4, x1, x2)

inst_64219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffff000000; valaddr_reg:x3; val_offset:192657*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192657*0 + 3*475*FLEN/8, x4, x1, x2)

inst_64220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffff800000; valaddr_reg:x3; val_offset:192660*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192660*0 + 3*476*FLEN/8, x4, x1, x2)

inst_64221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffc00000; valaddr_reg:x3; val_offset:192663*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192663*0 + 3*477*FLEN/8, x4, x1, x2)

inst_64222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffe00000; valaddr_reg:x3; val_offset:192666*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192666*0 + 3*478*FLEN/8, x4, x1, x2)

inst_64223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffff00000; valaddr_reg:x3; val_offset:192669*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192669*0 + 3*479*FLEN/8, x4, x1, x2)

inst_64224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffff80000; valaddr_reg:x3; val_offset:192672*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192672*0 + 3*480*FLEN/8, x4, x1, x2)

inst_64225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffc0000; valaddr_reg:x3; val_offset:192675*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192675*0 + 3*481*FLEN/8, x4, x1, x2)

inst_64226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffe0000; valaddr_reg:x3; val_offset:192678*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192678*0 + 3*482*FLEN/8, x4, x1, x2)

inst_64227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffff0000; valaddr_reg:x3; val_offset:192681*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192681*0 + 3*483*FLEN/8, x4, x1, x2)

inst_64228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffff8000; valaddr_reg:x3; val_offset:192684*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192684*0 + 3*484*FLEN/8, x4, x1, x2)

inst_64229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffc000; valaddr_reg:x3; val_offset:192687*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192687*0 + 3*485*FLEN/8, x4, x1, x2)

inst_64230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffe000; valaddr_reg:x3; val_offset:192690*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192690*0 + 3*486*FLEN/8, x4, x1, x2)

inst_64231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffff000; valaddr_reg:x3; val_offset:192693*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192693*0 + 3*487*FLEN/8, x4, x1, x2)

inst_64232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffff800; valaddr_reg:x3; val_offset:192696*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192696*0 + 3*488*FLEN/8, x4, x1, x2)

inst_64233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffffc00; valaddr_reg:x3; val_offset:192699*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192699*0 + 3*489*FLEN/8, x4, x1, x2)

inst_64234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffffe00; valaddr_reg:x3; val_offset:192702*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192702*0 + 3*490*FLEN/8, x4, x1, x2)

inst_64235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffff00; valaddr_reg:x3; val_offset:192705*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192705*0 + 3*491*FLEN/8, x4, x1, x2)

inst_64236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffff80; valaddr_reg:x3; val_offset:192708*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192708*0 + 3*492*FLEN/8, x4, x1, x2)

inst_64237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffffc0; valaddr_reg:x3; val_offset:192711*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192711*0 + 3*493*FLEN/8, x4, x1, x2)

inst_64238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffffe0; valaddr_reg:x3; val_offset:192714*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192714*0 + 3*494*FLEN/8, x4, x1, x2)

inst_64239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffffff0; valaddr_reg:x3; val_offset:192717*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192717*0 + 3*495*FLEN/8, x4, x1, x2)

inst_64240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffffff8; valaddr_reg:x3; val_offset:192720*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192720*0 + 3*496*FLEN/8, x4, x1, x2)

inst_64241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffffffc; valaddr_reg:x3; val_offset:192723*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192723*0 + 3*497*FLEN/8, x4, x1, x2)

inst_64242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaeffffffffffffe; valaddr_reg:x3; val_offset:192726*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192726*0 + 3*498*FLEN/8, x4, x1, x2)

inst_64243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbaefffffffffffff; valaddr_reg:x3; val_offset:192729*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192729*0 + 3*499*FLEN/8, x4, x1, x2)

inst_64244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:192732*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192732*0 + 3*500*FLEN/8, x4, x1, x2)

inst_64245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:192735*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192735*0 + 3*501*FLEN/8, x4, x1, x2)

inst_64246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:192738*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192738*0 + 3*502*FLEN/8, x4, x1, x2)

inst_64247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:192741*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192741*0 + 3*503*FLEN/8, x4, x1, x2)

inst_64248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:192744*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192744*0 + 3*504*FLEN/8, x4, x1, x2)

inst_64249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:192747*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192747*0 + 3*505*FLEN/8, x4, x1, x2)

inst_64250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:192750*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192750*0 + 3*506*FLEN/8, x4, x1, x2)

inst_64251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:192753*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192753*0 + 3*507*FLEN/8, x4, x1, x2)

inst_64252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:192756*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192756*0 + 3*508*FLEN/8, x4, x1, x2)

inst_64253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:192759*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192759*0 + 3*509*FLEN/8, x4, x1, x2)

inst_64254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:192762*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192762*0 + 3*510*FLEN/8, x4, x1, x2)

inst_64255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:192765*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192765*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_64256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:192768*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192768*0 + 3*512*FLEN/8, x4, x1, x2)

inst_64257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:192771*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192771*0 + 3*513*FLEN/8, x4, x1, x2)

inst_64258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:192774*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192774*0 + 3*514*FLEN/8, x4, x1, x2)

inst_64259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:192777*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192777*0 + 3*515*FLEN/8, x4, x1, x2)

inst_64260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:192780*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192780*0 + 3*516*FLEN/8, x4, x1, x2)

inst_64261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:192783*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192783*0 + 3*517*FLEN/8, x4, x1, x2)

inst_64262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:192786*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192786*0 + 3*518*FLEN/8, x4, x1, x2)

inst_64263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:192789*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192789*0 + 3*519*FLEN/8, x4, x1, x2)

inst_64264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:192792*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192792*0 + 3*520*FLEN/8, x4, x1, x2)

inst_64265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x367fd258b0b63 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa6220bc62e307 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa367fd258b0b63; op2val:0x9fca6220bc62e307;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:192795*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192795*0 + 3*521*FLEN/8, x4, x1, x2)

inst_64266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:192798*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192798*0 + 3*522*FLEN/8, x4, x1, x2)

inst_64267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:192801*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192801*0 + 3*523*FLEN/8, x4, x1, x2)

inst_64268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:192804*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192804*0 + 3*524*FLEN/8, x4, x1, x2)

inst_64269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:192807*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192807*0 + 3*525*FLEN/8, x4, x1, x2)

inst_64270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:192810*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192810*0 + 3*526*FLEN/8, x4, x1, x2)

inst_64271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:192813*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192813*0 + 3*527*FLEN/8, x4, x1, x2)

inst_64272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:192816*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192816*0 + 3*528*FLEN/8, x4, x1, x2)

inst_64273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:192819*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192819*0 + 3*529*FLEN/8, x4, x1, x2)

inst_64274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:192822*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192822*0 + 3*530*FLEN/8, x4, x1, x2)

inst_64275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:192825*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192825*0 + 3*531*FLEN/8, x4, x1, x2)

inst_64276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:192828*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192828*0 + 3*532*FLEN/8, x4, x1, x2)

inst_64277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:192831*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192831*0 + 3*533*FLEN/8, x4, x1, x2)

inst_64278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:192834*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192834*0 + 3*534*FLEN/8, x4, x1, x2)

inst_64279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:192837*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192837*0 + 3*535*FLEN/8, x4, x1, x2)

inst_64280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:192840*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192840*0 + 3*536*FLEN/8, x4, x1, x2)

inst_64281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:192843*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192843*0 + 3*537*FLEN/8, x4, x1, x2)

inst_64282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:192846*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192846*0 + 3*538*FLEN/8, x4, x1, x2)

inst_64283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:192849*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192849*0 + 3*539*FLEN/8, x4, x1, x2)

inst_64284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:192852*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192852*0 + 3*540*FLEN/8, x4, x1, x2)

inst_64285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:192855*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192855*0 + 3*541*FLEN/8, x4, x1, x2)

inst_64286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:192858*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192858*0 + 3*542*FLEN/8, x4, x1, x2)

inst_64287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:192861*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192861*0 + 3*543*FLEN/8, x4, x1, x2)

inst_64288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000000000; valaddr_reg:x3; val_offset:192864*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192864*0 + 3*544*FLEN/8, x4, x1, x2)

inst_64289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000000001; valaddr_reg:x3; val_offset:192867*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192867*0 + 3*545*FLEN/8, x4, x1, x2)

inst_64290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000000003; valaddr_reg:x3; val_offset:192870*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192870*0 + 3*546*FLEN/8, x4, x1, x2)

inst_64291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000000007; valaddr_reg:x3; val_offset:192873*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192873*0 + 3*547*FLEN/8, x4, x1, x2)

inst_64292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000000000f; valaddr_reg:x3; val_offset:192876*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192876*0 + 3*548*FLEN/8, x4, x1, x2)

inst_64293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000000001f; valaddr_reg:x3; val_offset:192879*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192879*0 + 3*549*FLEN/8, x4, x1, x2)

inst_64294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000000003f; valaddr_reg:x3; val_offset:192882*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192882*0 + 3*550*FLEN/8, x4, x1, x2)

inst_64295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000000007f; valaddr_reg:x3; val_offset:192885*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192885*0 + 3*551*FLEN/8, x4, x1, x2)

inst_64296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000000000ff; valaddr_reg:x3; val_offset:192888*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192888*0 + 3*552*FLEN/8, x4, x1, x2)

inst_64297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000000001ff; valaddr_reg:x3; val_offset:192891*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192891*0 + 3*553*FLEN/8, x4, x1, x2)

inst_64298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000000003ff; valaddr_reg:x3; val_offset:192894*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192894*0 + 3*554*FLEN/8, x4, x1, x2)

inst_64299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000000007ff; valaddr_reg:x3; val_offset:192897*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192897*0 + 3*555*FLEN/8, x4, x1, x2)

inst_64300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000000fff; valaddr_reg:x3; val_offset:192900*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192900*0 + 3*556*FLEN/8, x4, x1, x2)

inst_64301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000001fff; valaddr_reg:x3; val_offset:192903*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192903*0 + 3*557*FLEN/8, x4, x1, x2)

inst_64302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000003fff; valaddr_reg:x3; val_offset:192906*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192906*0 + 3*558*FLEN/8, x4, x1, x2)

inst_64303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000007fff; valaddr_reg:x3; val_offset:192909*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192909*0 + 3*559*FLEN/8, x4, x1, x2)

inst_64304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000000ffff; valaddr_reg:x3; val_offset:192912*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192912*0 + 3*560*FLEN/8, x4, x1, x2)

inst_64305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000001ffff; valaddr_reg:x3; val_offset:192915*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192915*0 + 3*561*FLEN/8, x4, x1, x2)

inst_64306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000003ffff; valaddr_reg:x3; val_offset:192918*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192918*0 + 3*562*FLEN/8, x4, x1, x2)

inst_64307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000007ffff; valaddr_reg:x3; val_offset:192921*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192921*0 + 3*563*FLEN/8, x4, x1, x2)

inst_64308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000000fffff; valaddr_reg:x3; val_offset:192924*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192924*0 + 3*564*FLEN/8, x4, x1, x2)

inst_64309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000001fffff; valaddr_reg:x3; val_offset:192927*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192927*0 + 3*565*FLEN/8, x4, x1, x2)

inst_64310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000003fffff; valaddr_reg:x3; val_offset:192930*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192930*0 + 3*566*FLEN/8, x4, x1, x2)

inst_64311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000007fffff; valaddr_reg:x3; val_offset:192933*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192933*0 + 3*567*FLEN/8, x4, x1, x2)

inst_64312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000000ffffff; valaddr_reg:x3; val_offset:192936*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192936*0 + 3*568*FLEN/8, x4, x1, x2)

inst_64313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000001ffffff; valaddr_reg:x3; val_offset:192939*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192939*0 + 3*569*FLEN/8, x4, x1, x2)

inst_64314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000003ffffff; valaddr_reg:x3; val_offset:192942*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192942*0 + 3*570*FLEN/8, x4, x1, x2)

inst_64315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000007ffffff; valaddr_reg:x3; val_offset:192945*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192945*0 + 3*571*FLEN/8, x4, x1, x2)

inst_64316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000000fffffff; valaddr_reg:x3; val_offset:192948*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192948*0 + 3*572*FLEN/8, x4, x1, x2)

inst_64317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000001fffffff; valaddr_reg:x3; val_offset:192951*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192951*0 + 3*573*FLEN/8, x4, x1, x2)

inst_64318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000003fffffff; valaddr_reg:x3; val_offset:192954*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192954*0 + 3*574*FLEN/8, x4, x1, x2)

inst_64319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000007fffffff; valaddr_reg:x3; val_offset:192957*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192957*0 + 3*575*FLEN/8, x4, x1, x2)

inst_64320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600000ffffffff; valaddr_reg:x3; val_offset:192960*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192960*0 + 3*576*FLEN/8, x4, x1, x2)

inst_64321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600001ffffffff; valaddr_reg:x3; val_offset:192963*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192963*0 + 3*577*FLEN/8, x4, x1, x2)

inst_64322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600003ffffffff; valaddr_reg:x3; val_offset:192966*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192966*0 + 3*578*FLEN/8, x4, x1, x2)

inst_64323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600007ffffffff; valaddr_reg:x3; val_offset:192969*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192969*0 + 3*579*FLEN/8, x4, x1, x2)

inst_64324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60000fffffffff; valaddr_reg:x3; val_offset:192972*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192972*0 + 3*580*FLEN/8, x4, x1, x2)

inst_64325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60001fffffffff; valaddr_reg:x3; val_offset:192975*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192975*0 + 3*581*FLEN/8, x4, x1, x2)

inst_64326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60003fffffffff; valaddr_reg:x3; val_offset:192978*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192978*0 + 3*582*FLEN/8, x4, x1, x2)

inst_64327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60007fffffffff; valaddr_reg:x3; val_offset:192981*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192981*0 + 3*583*FLEN/8, x4, x1, x2)

inst_64328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6000ffffffffff; valaddr_reg:x3; val_offset:192984*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192984*0 + 3*584*FLEN/8, x4, x1, x2)

inst_64329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6001ffffffffff; valaddr_reg:x3; val_offset:192987*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192987*0 + 3*585*FLEN/8, x4, x1, x2)

inst_64330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6003ffffffffff; valaddr_reg:x3; val_offset:192990*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192990*0 + 3*586*FLEN/8, x4, x1, x2)

inst_64331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6007ffffffffff; valaddr_reg:x3; val_offset:192993*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192993*0 + 3*587*FLEN/8, x4, x1, x2)

inst_64332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x600fffffffffff; valaddr_reg:x3; val_offset:192996*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192996*0 + 3*588*FLEN/8, x4, x1, x2)

inst_64333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x601fffffffffff; valaddr_reg:x3; val_offset:192999*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192999*0 + 3*589*FLEN/8, x4, x1, x2)

inst_64334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x603fffffffffff; valaddr_reg:x3; val_offset:193002*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193002*0 + 3*590*FLEN/8, x4, x1, x2)

inst_64335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x607fffffffffff; valaddr_reg:x3; val_offset:193005*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193005*0 + 3*591*FLEN/8, x4, x1, x2)

inst_64336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x60ffffffffffff; valaddr_reg:x3; val_offset:193008*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193008*0 + 3*592*FLEN/8, x4, x1, x2)

inst_64337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x61ffffffffffff; valaddr_reg:x3; val_offset:193011*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193011*0 + 3*593*FLEN/8, x4, x1, x2)

inst_64338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x63ffffffffffff; valaddr_reg:x3; val_offset:193014*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193014*0 + 3*594*FLEN/8, x4, x1, x2)

inst_64339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x67ffffffffffff; valaddr_reg:x3; val_offset:193017*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193017*0 + 3*595*FLEN/8, x4, x1, x2)

inst_64340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x68000000000000; valaddr_reg:x3; val_offset:193020*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193020*0 + 3*596*FLEN/8, x4, x1, x2)

inst_64341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6c000000000000; valaddr_reg:x3; val_offset:193023*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193023*0 + 3*597*FLEN/8, x4, x1, x2)

inst_64342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6e000000000000; valaddr_reg:x3; val_offset:193026*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193026*0 + 3*598*FLEN/8, x4, x1, x2)

inst_64343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6f000000000000; valaddr_reg:x3; val_offset:193029*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193029*0 + 3*599*FLEN/8, x4, x1, x2)

inst_64344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6f800000000000; valaddr_reg:x3; val_offset:193032*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193032*0 + 3*600*FLEN/8, x4, x1, x2)

inst_64345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fc00000000000; valaddr_reg:x3; val_offset:193035*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193035*0 + 3*601*FLEN/8, x4, x1, x2)

inst_64346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fe00000000000; valaddr_reg:x3; val_offset:193038*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193038*0 + 3*602*FLEN/8, x4, x1, x2)

inst_64347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ff00000000000; valaddr_reg:x3; val_offset:193041*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193041*0 + 3*603*FLEN/8, x4, x1, x2)

inst_64348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ff80000000000; valaddr_reg:x3; val_offset:193044*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193044*0 + 3*604*FLEN/8, x4, x1, x2)

inst_64349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffc0000000000; valaddr_reg:x3; val_offset:193047*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193047*0 + 3*605*FLEN/8, x4, x1, x2)

inst_64350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffe0000000000; valaddr_reg:x3; val_offset:193050*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193050*0 + 3*606*FLEN/8, x4, x1, x2)

inst_64351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fff0000000000; valaddr_reg:x3; val_offset:193053*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193053*0 + 3*607*FLEN/8, x4, x1, x2)

inst_64352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fff8000000000; valaddr_reg:x3; val_offset:193056*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193056*0 + 3*608*FLEN/8, x4, x1, x2)

inst_64353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffc000000000; valaddr_reg:x3; val_offset:193059*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193059*0 + 3*609*FLEN/8, x4, x1, x2)

inst_64354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffe000000000; valaddr_reg:x3; val_offset:193062*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193062*0 + 3*610*FLEN/8, x4, x1, x2)

inst_64355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffff000000000; valaddr_reg:x3; val_offset:193065*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193065*0 + 3*611*FLEN/8, x4, x1, x2)

inst_64356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffff800000000; valaddr_reg:x3; val_offset:193068*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193068*0 + 3*612*FLEN/8, x4, x1, x2)

inst_64357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffc00000000; valaddr_reg:x3; val_offset:193071*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193071*0 + 3*613*FLEN/8, x4, x1, x2)

inst_64358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffe00000000; valaddr_reg:x3; val_offset:193074*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193074*0 + 3*614*FLEN/8, x4, x1, x2)

inst_64359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffff00000000; valaddr_reg:x3; val_offset:193077*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193077*0 + 3*615*FLEN/8, x4, x1, x2)

inst_64360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffff80000000; valaddr_reg:x3; val_offset:193080*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193080*0 + 3*616*FLEN/8, x4, x1, x2)

inst_64361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffc0000000; valaddr_reg:x3; val_offset:193083*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193083*0 + 3*617*FLEN/8, x4, x1, x2)

inst_64362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffe0000000; valaddr_reg:x3; val_offset:193086*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193086*0 + 3*618*FLEN/8, x4, x1, x2)

inst_64363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffff0000000; valaddr_reg:x3; val_offset:193089*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193089*0 + 3*619*FLEN/8, x4, x1, x2)

inst_64364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffff8000000; valaddr_reg:x3; val_offset:193092*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193092*0 + 3*620*FLEN/8, x4, x1, x2)

inst_64365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffc000000; valaddr_reg:x3; val_offset:193095*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193095*0 + 3*621*FLEN/8, x4, x1, x2)

inst_64366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffe000000; valaddr_reg:x3; val_offset:193098*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193098*0 + 3*622*FLEN/8, x4, x1, x2)

inst_64367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffff000000; valaddr_reg:x3; val_offset:193101*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193101*0 + 3*623*FLEN/8, x4, x1, x2)

inst_64368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffff800000; valaddr_reg:x3; val_offset:193104*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193104*0 + 3*624*FLEN/8, x4, x1, x2)

inst_64369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffc00000; valaddr_reg:x3; val_offset:193107*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193107*0 + 3*625*FLEN/8, x4, x1, x2)

inst_64370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffe00000; valaddr_reg:x3; val_offset:193110*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193110*0 + 3*626*FLEN/8, x4, x1, x2)

inst_64371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffff00000; valaddr_reg:x3; val_offset:193113*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193113*0 + 3*627*FLEN/8, x4, x1, x2)

inst_64372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffff80000; valaddr_reg:x3; val_offset:193116*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193116*0 + 3*628*FLEN/8, x4, x1, x2)

inst_64373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffc0000; valaddr_reg:x3; val_offset:193119*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193119*0 + 3*629*FLEN/8, x4, x1, x2)

inst_64374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffe0000; valaddr_reg:x3; val_offset:193122*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193122*0 + 3*630*FLEN/8, x4, x1, x2)

inst_64375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffff0000; valaddr_reg:x3; val_offset:193125*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193125*0 + 3*631*FLEN/8, x4, x1, x2)

inst_64376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffff8000; valaddr_reg:x3; val_offset:193128*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193128*0 + 3*632*FLEN/8, x4, x1, x2)

inst_64377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffc000; valaddr_reg:x3; val_offset:193131*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193131*0 + 3*633*FLEN/8, x4, x1, x2)

inst_64378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffe000; valaddr_reg:x3; val_offset:193134*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193134*0 + 3*634*FLEN/8, x4, x1, x2)

inst_64379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffff000; valaddr_reg:x3; val_offset:193137*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193137*0 + 3*635*FLEN/8, x4, x1, x2)

inst_64380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffff800; valaddr_reg:x3; val_offset:193140*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193140*0 + 3*636*FLEN/8, x4, x1, x2)

inst_64381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffffc00; valaddr_reg:x3; val_offset:193143*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193143*0 + 3*637*FLEN/8, x4, x1, x2)

inst_64382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffffe00; valaddr_reg:x3; val_offset:193146*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193146*0 + 3*638*FLEN/8, x4, x1, x2)

inst_64383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffff00; valaddr_reg:x3; val_offset:193149*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193149*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_64384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffff80; valaddr_reg:x3; val_offset:193152*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193152*0 + 3*640*FLEN/8, x4, x1, x2)

inst_64385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffffc0; valaddr_reg:x3; val_offset:193155*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193155*0 + 3*641*FLEN/8, x4, x1, x2)

inst_64386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffffe0; valaddr_reg:x3; val_offset:193158*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193158*0 + 3*642*FLEN/8, x4, x1, x2)

inst_64387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffffff0; valaddr_reg:x3; val_offset:193161*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193161*0 + 3*643*FLEN/8, x4, x1, x2)

inst_64388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffffff8; valaddr_reg:x3; val_offset:193164*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193164*0 + 3*644*FLEN/8, x4, x1, x2)

inst_64389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffffffc; valaddr_reg:x3; val_offset:193167*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193167*0 + 3*645*FLEN/8, x4, x1, x2)

inst_64390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6ffffffffffffe; valaddr_reg:x3; val_offset:193170*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193170*0 + 3*646*FLEN/8, x4, x1, x2)

inst_64391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36aeb78249790; op2val:0x0;
op3val:0x6fffffffffffff; valaddr_reg:x3; val_offset:193173*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193173*0 + 3*647*FLEN/8, x4, x1, x2)

inst_64392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:193176*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193176*0 + 3*648*FLEN/8, x4, x1, x2)

inst_64393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:193179*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193179*0 + 3*649*FLEN/8, x4, x1, x2)

inst_64394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:193182*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193182*0 + 3*650*FLEN/8, x4, x1, x2)

inst_64395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:193185*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193185*0 + 3*651*FLEN/8, x4, x1, x2)

inst_64396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:193188*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193188*0 + 3*652*FLEN/8, x4, x1, x2)

inst_64397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:193191*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193191*0 + 3*653*FLEN/8, x4, x1, x2)

inst_64398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:193194*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193194*0 + 3*654*FLEN/8, x4, x1, x2)

inst_64399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:193197*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193197*0 + 3*655*FLEN/8, x4, x1, x2)

inst_64400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:193200*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193200*0 + 3*656*FLEN/8, x4, x1, x2)

inst_64401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:193203*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193203*0 + 3*657*FLEN/8, x4, x1, x2)

inst_64402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:193206*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193206*0 + 3*658*FLEN/8, x4, x1, x2)

inst_64403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:193209*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193209*0 + 3*659*FLEN/8, x4, x1, x2)

inst_64404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:193212*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193212*0 + 3*660*FLEN/8, x4, x1, x2)

inst_64405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:193215*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193215*0 + 3*661*FLEN/8, x4, x1, x2)

inst_64406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:193218*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193218*0 + 3*662*FLEN/8, x4, x1, x2)

inst_64407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:193221*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193221*0 + 3*663*FLEN/8, x4, x1, x2)

inst_64408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:193224*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193224*0 + 3*664*FLEN/8, x4, x1, x2)

inst_64409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:193227*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193227*0 + 3*665*FLEN/8, x4, x1, x2)

inst_64410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:193230*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193230*0 + 3*666*FLEN/8, x4, x1, x2)

inst_64411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:193233*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193233*0 + 3*667*FLEN/8, x4, x1, x2)

inst_64412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:193236*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193236*0 + 3*668*FLEN/8, x4, x1, x2)

inst_64413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:193239*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193239*0 + 3*669*FLEN/8, x4, x1, x2)

inst_64414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000000000; valaddr_reg:x3; val_offset:193242*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193242*0 + 3*670*FLEN/8, x4, x1, x2)

inst_64415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000000001; valaddr_reg:x3; val_offset:193245*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193245*0 + 3*671*FLEN/8, x4, x1, x2)

inst_64416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000000003; valaddr_reg:x3; val_offset:193248*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193248*0 + 3*672*FLEN/8, x4, x1, x2)

inst_64417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000000007; valaddr_reg:x3; val_offset:193251*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193251*0 + 3*673*FLEN/8, x4, x1, x2)

inst_64418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000000000f; valaddr_reg:x3; val_offset:193254*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193254*0 + 3*674*FLEN/8, x4, x1, x2)

inst_64419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000000001f; valaddr_reg:x3; val_offset:193257*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193257*0 + 3*675*FLEN/8, x4, x1, x2)

inst_64420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000000003f; valaddr_reg:x3; val_offset:193260*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193260*0 + 3*676*FLEN/8, x4, x1, x2)

inst_64421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000000007f; valaddr_reg:x3; val_offset:193263*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193263*0 + 3*677*FLEN/8, x4, x1, x2)

inst_64422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000000000ff; valaddr_reg:x3; val_offset:193266*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193266*0 + 3*678*FLEN/8, x4, x1, x2)

inst_64423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000000001ff; valaddr_reg:x3; val_offset:193269*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193269*0 + 3*679*FLEN/8, x4, x1, x2)

inst_64424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000000003ff; valaddr_reg:x3; val_offset:193272*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193272*0 + 3*680*FLEN/8, x4, x1, x2)

inst_64425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000000007ff; valaddr_reg:x3; val_offset:193275*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193275*0 + 3*681*FLEN/8, x4, x1, x2)

inst_64426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000000fff; valaddr_reg:x3; val_offset:193278*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193278*0 + 3*682*FLEN/8, x4, x1, x2)

inst_64427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000001fff; valaddr_reg:x3; val_offset:193281*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193281*0 + 3*683*FLEN/8, x4, x1, x2)

inst_64428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:193284*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193284*0 + 3*684*FLEN/8, x4, x1, x2)

inst_64429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:193287*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193287*0 + 3*685*FLEN/8, x4, x1, x2)

inst_64430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:193290*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193290*0 + 3*686*FLEN/8, x4, x1, x2)

inst_64431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:193293*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193293*0 + 3*687*FLEN/8, x4, x1, x2)

inst_64432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:193296*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193296*0 + 3*688*FLEN/8, x4, x1, x2)

inst_64433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:193299*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193299*0 + 3*689*FLEN/8, x4, x1, x2)

inst_64434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:193302*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193302*0 + 3*690*FLEN/8, x4, x1, x2)

inst_64435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:193305*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193305*0 + 3*691*FLEN/8, x4, x1, x2)

inst_64436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:193308*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193308*0 + 3*692*FLEN/8, x4, x1, x2)

inst_64437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:193311*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193311*0 + 3*693*FLEN/8, x4, x1, x2)

inst_64438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:193314*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193314*0 + 3*694*FLEN/8, x4, x1, x2)

inst_64439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:193317*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193317*0 + 3*695*FLEN/8, x4, x1, x2)

inst_64440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:193320*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193320*0 + 3*696*FLEN/8, x4, x1, x2)

inst_64441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:193323*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193323*0 + 3*697*FLEN/8, x4, x1, x2)

inst_64442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:193326*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193326*0 + 3*698*FLEN/8, x4, x1, x2)

inst_64443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:193329*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193329*0 + 3*699*FLEN/8, x4, x1, x2)

inst_64444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:193332*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193332*0 + 3*700*FLEN/8, x4, x1, x2)

inst_64445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:193335*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193335*0 + 3*701*FLEN/8, x4, x1, x2)

inst_64446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:193338*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193338*0 + 3*702*FLEN/8, x4, x1, x2)

inst_64447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:193341*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193341*0 + 3*703*FLEN/8, x4, x1, x2)

inst_64448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:193344*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193344*0 + 3*704*FLEN/8, x4, x1, x2)

inst_64449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:193347*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193347*0 + 3*705*FLEN/8, x4, x1, x2)

inst_64450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:193350*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193350*0 + 3*706*FLEN/8, x4, x1, x2)

inst_64451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:193353*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193353*0 + 3*707*FLEN/8, x4, x1, x2)

inst_64452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:193356*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193356*0 + 3*708*FLEN/8, x4, x1, x2)

inst_64453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:193359*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193359*0 + 3*709*FLEN/8, x4, x1, x2)

inst_64454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:193362*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193362*0 + 3*710*FLEN/8, x4, x1, x2)

inst_64455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:193365*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193365*0 + 3*711*FLEN/8, x4, x1, x2)

inst_64456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:193368*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193368*0 + 3*712*FLEN/8, x4, x1, x2)

inst_64457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:193371*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193371*0 + 3*713*FLEN/8, x4, x1, x2)

inst_64458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:193374*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193374*0 + 3*714*FLEN/8, x4, x1, x2)

inst_64459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:193377*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193377*0 + 3*715*FLEN/8, x4, x1, x2)

inst_64460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:193380*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193380*0 + 3*716*FLEN/8, x4, x1, x2)

inst_64461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:193383*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193383*0 + 3*717*FLEN/8, x4, x1, x2)

inst_64462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:193386*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193386*0 + 3*718*FLEN/8, x4, x1, x2)

inst_64463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:193389*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193389*0 + 3*719*FLEN/8, x4, x1, x2)

inst_64464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:193392*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193392*0 + 3*720*FLEN/8, x4, x1, x2)

inst_64465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:193395*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193395*0 + 3*721*FLEN/8, x4, x1, x2)

inst_64466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:193398*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193398*0 + 3*722*FLEN/8, x4, x1, x2)

inst_64467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:193401*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193401*0 + 3*723*FLEN/8, x4, x1, x2)

inst_64468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:193404*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193404*0 + 3*724*FLEN/8, x4, x1, x2)

inst_64469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:193407*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193407*0 + 3*725*FLEN/8, x4, x1, x2)

inst_64470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:193410*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193410*0 + 3*726*FLEN/8, x4, x1, x2)

inst_64471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:193413*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193413*0 + 3*727*FLEN/8, x4, x1, x2)

inst_64472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:193416*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193416*0 + 3*728*FLEN/8, x4, x1, x2)

inst_64473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:193419*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193419*0 + 3*729*FLEN/8, x4, x1, x2)

inst_64474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:193422*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193422*0 + 3*730*FLEN/8, x4, x1, x2)

inst_64475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:193425*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193425*0 + 3*731*FLEN/8, x4, x1, x2)

inst_64476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:193428*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193428*0 + 3*732*FLEN/8, x4, x1, x2)

inst_64477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:193431*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193431*0 + 3*733*FLEN/8, x4, x1, x2)

inst_64478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:193434*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193434*0 + 3*734*FLEN/8, x4, x1, x2)

inst_64479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:193437*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193437*0 + 3*735*FLEN/8, x4, x1, x2)

inst_64480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:193440*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193440*0 + 3*736*FLEN/8, x4, x1, x2)

inst_64481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:193443*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193443*0 + 3*737*FLEN/8, x4, x1, x2)

inst_64482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:193446*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193446*0 + 3*738*FLEN/8, x4, x1, x2)

inst_64483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:193449*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193449*0 + 3*739*FLEN/8, x4, x1, x2)

inst_64484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:193452*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193452*0 + 3*740*FLEN/8, x4, x1, x2)

inst_64485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:193455*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193455*0 + 3*741*FLEN/8, x4, x1, x2)

inst_64486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:193458*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193458*0 + 3*742*FLEN/8, x4, x1, x2)

inst_64487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:193461*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193461*0 + 3*743*FLEN/8, x4, x1, x2)

inst_64488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:193464*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193464*0 + 3*744*FLEN/8, x4, x1, x2)

inst_64489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:193467*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193467*0 + 3*745*FLEN/8, x4, x1, x2)

inst_64490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:193470*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193470*0 + 3*746*FLEN/8, x4, x1, x2)

inst_64491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:193473*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193473*0 + 3*747*FLEN/8, x4, x1, x2)

inst_64492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:193476*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193476*0 + 3*748*FLEN/8, x4, x1, x2)

inst_64493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:193479*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193479*0 + 3*749*FLEN/8, x4, x1, x2)

inst_64494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:193482*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193482*0 + 3*750*FLEN/8, x4, x1, x2)

inst_64495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:193485*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193485*0 + 3*751*FLEN/8, x4, x1, x2)

inst_64496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:193488*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193488*0 + 3*752*FLEN/8, x4, x1, x2)

inst_64497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:193491*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193491*0 + 3*753*FLEN/8, x4, x1, x2)

inst_64498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:193494*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193494*0 + 3*754*FLEN/8, x4, x1, x2)

inst_64499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:193497*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193497*0 + 3*755*FLEN/8, x4, x1, x2)

inst_64500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:193500*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193500*0 + 3*756*FLEN/8, x4, x1, x2)

inst_64501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:193503*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193503*0 + 3*757*FLEN/8, x4, x1, x2)

inst_64502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:193506*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193506*0 + 3*758*FLEN/8, x4, x1, x2)

inst_64503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:193509*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193509*0 + 3*759*FLEN/8, x4, x1, x2)

inst_64504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:193512*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193512*0 + 3*760*FLEN/8, x4, x1, x2)

inst_64505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:193515*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193515*0 + 3*761*FLEN/8, x4, x1, x2)

inst_64506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:193518*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193518*0 + 3*762*FLEN/8, x4, x1, x2)

inst_64507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:193521*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193521*0 + 3*763*FLEN/8, x4, x1, x2)

inst_64508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:193524*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193524*0 + 3*764*FLEN/8, x4, x1, x2)

inst_64509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:193527*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193527*0 + 3*765*FLEN/8, x4, x1, x2)

inst_64510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:193530*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193530*0 + 3*766*FLEN/8, x4, x1, x2)

inst_64511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36b7c2715b1e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36b7c2715b1e3; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:193533*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193533*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812612096,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812677632,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812710400,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812726784,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812734976,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812739072,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812741120,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742144,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742656,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742912,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743040,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743104,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743136,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743152,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743160,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743164,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743166,64,FLEN)
NAN_BOXED(6891453846296547511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743167,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523584,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523585,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523587,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523591,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523599,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523615,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523647,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523711,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523839,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524095,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524607,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987525631,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987527679,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987531775,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987539967,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987556351,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987589119,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987654655,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987785727,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988047871,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988572159,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615989620735,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615991717887,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615995912191,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616004300799,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616021078015,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616054632447,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616121741311,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616255959039,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616524394495,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573617061265407,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573618135007231,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573620282490879,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573624577458175,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573633167392767,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573650347261951,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573684707000319,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573753426477055,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573890865430527,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574165743337471,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574715499151359,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475575815010779135,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475578014034034687,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475582412080545791,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475591208173567999,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475608800359612415,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475643984731701247,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475714353475878911,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475855090964234239,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476136565940944895,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476699515894366207,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208831,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208832,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9478951315708051456,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479514265661472768,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479795740638183424,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479936478126538752,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480006846870716416,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480042031242805248,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480059623428849664,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480068419521871872,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480072817568382976,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480075016591638528,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076116103266304,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076665859080192,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076940736987136,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077078175940608,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077146895417344,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077181255155712,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077198435024896,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077207024959488,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077211319926784,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077213467410432,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077214541152256,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215078023168,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215346458624,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215480676352,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215547785216,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215581339648,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215598116864,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215606505472,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215610699776,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215612796928,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215613845504,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614369792,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614631936,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614763008,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614828544,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614861312,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614877696,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614885888,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614889984,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614892032,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893056,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893568,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893824,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893952,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894016,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894048,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894064,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894072,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894076,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894078,64,FLEN)
NAN_BOXED(6891454590273041555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894079,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852480,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852481,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852483,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852487,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852495,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852511,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852543,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852607,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852735,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852991,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136853503,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136854527,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136856575,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136860671,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136868863,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136885247,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136918015,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136983551,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137114623,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137376767,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137901055,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998138949631,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998141046783,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998145241087,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998153629695,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998170406911,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998203961343,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998271070207,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998405287935,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998673723391,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517999210594303,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518000284336127,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518002431819775,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518006726787071,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518015316721663,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518032496590847,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518066856329215,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518135575805951,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518273014759423,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518547892666367,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22519097648480255,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22520197160108031,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22522396183363583,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22526794229874687,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22535590322896895,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22553182508941311,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22588366881030143,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22658735625207807,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22799473113563135,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23080948090273791,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23643898043695103,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537727,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537728,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(25895697857380352,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26458647810801664,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26740122787512320,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26880860275867648,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26951229020045312,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26986413392134144,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27004005578178560,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27012801671200768,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27017199717711872,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27019398740967424,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27020498252595200,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021048008409088,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021322886316032,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021460325269504,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021529044746240,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021563404484608,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021580584353792,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021589174288384,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021593469255680,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021595616739328,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021596690481152,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597227352064,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597495787520,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597630005248,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597697114112,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597730668544,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597747445760,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597755834368,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597760028672,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597762125824,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763174400,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763698688,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763960832,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764091904,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764157440,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764190208,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764206592,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764214784,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764218880,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764220928,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764221952,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222464,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222720,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222848,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222912,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222944,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222960,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222968,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222972,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222974,64,FLEN)
NAN_BOXED(6891461690087002082,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222975,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187392,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187393,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187395,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187399,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187407,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187423,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187455,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187519,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187647,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888187903,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888188415,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888189439,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888191487,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888195583,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888203775,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888220159,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888252927,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888318463,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888449535,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863888711679,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863889235967,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863890284543,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863892381695,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863896575999,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863904964607,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863921741823,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246863955296255,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246864022405119,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246864156622847,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246864425058303,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246864961929215,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246866035671039,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246868183154687,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246872478121983,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246881068056575,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246898247925759,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062246932607664127,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062247001327140863,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062247138766094335,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062247413644001279,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062247963399815167,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062249062911442943,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062251261934698495,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062255659981209599,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062264456074231807,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062282048260276223,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062317232632365055,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062387601376542719,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062528338864898047,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4062809813841608703,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4063372763795030015,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4064498663701872639,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4064498663701872640,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4065624563608715264,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066187513562136576,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066468988538847232,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066609726027202560,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066680094771380224,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066715279143469056,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066732871329513472,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066741667422535680,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066746065469046784,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066748264492302336,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066749364003930112,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066749913759744000,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750188637650944,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750326076604416,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750394796081152,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750429155819520,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750446335688704,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750454925623296,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750459220590592,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750461368074240,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750462441816064,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750462978686976,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463247122432,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463381340160,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463448449024,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463482003456,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463498780672,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463507169280,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463511363584,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463513460736,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463514509312,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515033600,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515295744,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515426816,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515492352,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515525120,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515541504,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515549696,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515553792,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515555840,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515556864,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557376,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557632,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557760,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557824,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557856,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557872,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557880,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557884,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557886,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4066750463515557887,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891462895010446049,64,FLEN)
NAN_BOXED(2322280935338981758,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783040,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783041,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783043,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783047,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783055,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783071,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783103,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783167,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783295,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837783551,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837784063,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837785087,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837787135,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837791231,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837799423,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837815807,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837848575,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885837914111,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885838045183,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885838307327,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885838831615,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885839880191,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885841977343,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885846171647,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885854560255,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885871337471,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885904891903,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762885972000767,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762886106218495,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762886374653951,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762886911524863,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762887985266687,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762890132750335,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762894427717631,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762903017652223,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762920197521407,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465762954557259775,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465763023276736511,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465763160715689983,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465763435593596927,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465763985349410815,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465765084861038591,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465767283884294143,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465771681930805247,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465780478023827455,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465798070209871871,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465833254581960703,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13465903623326138367,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13466044360814493695,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13466325835791204351,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13466888785744625663,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13468014685651468287,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13468014685651468288,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13469140585558310912,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13469703535511732224,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13469985010488442880,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470125747976798208,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470196116720975872,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470231301093064704,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470248893279109120,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470257689372131328,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470262087418642432,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470264286441897984,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470265385953525760,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470265935709339648,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266210587246592,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266348026200064,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266416745676800,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266451105415168,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266468285284352,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266476875218944,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266481170186240,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266483317669888,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266484391411712,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266484928282624,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485196718080,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485330935808,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485398044672,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485431599104,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485448376320,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485456764928,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485460959232,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485463056384,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485464104960,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485464629248,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485464891392,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465022464,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465088000,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465120768,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465137152,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465145344,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465149440,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465151488,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465152512,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153024,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153280,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153408,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153472,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153504,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153520,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153528,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153532,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153534,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13470266485465153535,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891466191761247075,64,FLEN)
NAN_BOXED(11514123290065167111,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222976,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222977,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222979,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222983,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222991,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223007,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223039,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223103,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223231,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223487,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223999,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764225023,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764227071,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764231167,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764239359,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764255743,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764288511,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764354047,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764485119,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764747263,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597765271551,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597766320127,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597768417279,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597772611583,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597781000191,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597797777407,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597831331839,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597898440703,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598032658431,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598301093887,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598837964799,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021599911706623,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021602059190271,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021606354157567,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021614944092159,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021632123961343,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021666483699711,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021735203176447,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021872642129919,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27022147520036863,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27022697275850751,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27023796787478527,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27025995810734079,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27030393857245183,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27039189950267391,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27056782136311807,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27091966508400639,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27162335252578303,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27303072740933631,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27584547717644287,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(28147497671065599,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(29273397577908223,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(29273397577908224,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(30399297484750848,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(30962247438172160,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31243722414882816,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31384459903238144,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31454828647415808,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31490013019504640,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31507605205549056,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31516401298571264,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31520799345082368,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31522998368337920,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524097879965696,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524647635779584,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524922513686528,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525059952640000,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525128672116736,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525163031855104,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525180211724288,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525188801658880,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525193096626176,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525195244109824,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525196317851648,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525196854722560,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197123158016,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197257375744,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197324484608,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197358039040,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197374816256,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197383204864,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197387399168,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197389496320,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197390544896,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391069184,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391331328,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391462400,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391527936,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391560704,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391577088,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391585280,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391589376,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391591424,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592448,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592960,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593216,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593344,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593408,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593440,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593456,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593464,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593468,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593470,64,FLEN)
NAN_BOXED(6891469414372513680,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593471,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005568,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005569,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005571,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005575,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005583,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005599,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005631,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005695,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005823,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006079,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006591,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497007615,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497009663,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497013759,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6891470035782840803,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
