
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_90624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:271872*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271872*0 + 3*0*FLEN/8, x4, x1, x2)

inst_90625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:271875*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271875*0 + 3*1*FLEN/8, x4, x1, x2)

inst_90626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:271878*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271878*0 + 3*2*FLEN/8, x4, x1, x2)

inst_90627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:271881*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271881*0 + 3*3*FLEN/8, x4, x1, x2)

inst_90628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:271884*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271884*0 + 3*4*FLEN/8, x4, x1, x2)

inst_90629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:271887*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271887*0 + 3*5*FLEN/8, x4, x1, x2)

inst_90630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:271890*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271890*0 + 3*6*FLEN/8, x4, x1, x2)

inst_90631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:271893*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271893*0 + 3*7*FLEN/8, x4, x1, x2)

inst_90632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:271896*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271896*0 + 3*8*FLEN/8, x4, x1, x2)

inst_90633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:271899*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271899*0 + 3*9*FLEN/8, x4, x1, x2)

inst_90634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:271902*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271902*0 + 3*10*FLEN/8, x4, x1, x2)

inst_90635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:271905*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271905*0 + 3*11*FLEN/8, x4, x1, x2)

inst_90636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:271908*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271908*0 + 3*12*FLEN/8, x4, x1, x2)

inst_90637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:271911*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271911*0 + 3*13*FLEN/8, x4, x1, x2)

inst_90638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:271914*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271914*0 + 3*14*FLEN/8, x4, x1, x2)

inst_90639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:271917*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271917*0 + 3*15*FLEN/8, x4, x1, x2)

inst_90640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:271920*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271920*0 + 3*16*FLEN/8, x4, x1, x2)

inst_90641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:271923*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271923*0 + 3*17*FLEN/8, x4, x1, x2)

inst_90642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:271926*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271926*0 + 3*18*FLEN/8, x4, x1, x2)

inst_90643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:271929*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271929*0 + 3*19*FLEN/8, x4, x1, x2)

inst_90644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:271932*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271932*0 + 3*20*FLEN/8, x4, x1, x2)

inst_90645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:271935*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271935*0 + 3*21*FLEN/8, x4, x1, x2)

inst_90646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:271938*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271938*0 + 3*22*FLEN/8, x4, x1, x2)

inst_90647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:271941*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271941*0 + 3*23*FLEN/8, x4, x1, x2)

inst_90648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:271944*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271944*0 + 3*24*FLEN/8, x4, x1, x2)

inst_90649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:271947*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271947*0 + 3*25*FLEN/8, x4, x1, x2)

inst_90650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:271950*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271950*0 + 3*26*FLEN/8, x4, x1, x2)

inst_90651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:271953*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271953*0 + 3*27*FLEN/8, x4, x1, x2)

inst_90652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:271956*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271956*0 + 3*28*FLEN/8, x4, x1, x2)

inst_90653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:271959*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271959*0 + 3*29*FLEN/8, x4, x1, x2)

inst_90654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:271962*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271962*0 + 3*30*FLEN/8, x4, x1, x2)

inst_90655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:271965*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271965*0 + 3*31*FLEN/8, x4, x1, x2)

inst_90656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:271968*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271968*0 + 3*32*FLEN/8, x4, x1, x2)

inst_90657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:271971*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271971*0 + 3*33*FLEN/8, x4, x1, x2)

inst_90658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:271974*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271974*0 + 3*34*FLEN/8, x4, x1, x2)

inst_90659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:271977*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271977*0 + 3*35*FLEN/8, x4, x1, x2)

inst_90660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:271980*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271980*0 + 3*36*FLEN/8, x4, x1, x2)

inst_90661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:271983*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271983*0 + 3*37*FLEN/8, x4, x1, x2)

inst_90662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:271986*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271986*0 + 3*38*FLEN/8, x4, x1, x2)

inst_90663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:271989*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271989*0 + 3*39*FLEN/8, x4, x1, x2)

inst_90664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:271992*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271992*0 + 3*40*FLEN/8, x4, x1, x2)

inst_90665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:271995*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271995*0 + 3*41*FLEN/8, x4, x1, x2)

inst_90666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:271998*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271998*0 + 3*42*FLEN/8, x4, x1, x2)

inst_90667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:272001*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272001*0 + 3*43*FLEN/8, x4, x1, x2)

inst_90668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:272004*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272004*0 + 3*44*FLEN/8, x4, x1, x2)

inst_90669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:272007*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272007*0 + 3*45*FLEN/8, x4, x1, x2)

inst_90670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:272010*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272010*0 + 3*46*FLEN/8, x4, x1, x2)

inst_90671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:272013*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272013*0 + 3*47*FLEN/8, x4, x1, x2)

inst_90672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:272016*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272016*0 + 3*48*FLEN/8, x4, x1, x2)

inst_90673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:272019*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272019*0 + 3*49*FLEN/8, x4, x1, x2)

inst_90674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:272022*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272022*0 + 3*50*FLEN/8, x4, x1, x2)

inst_90675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:272025*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272025*0 + 3*51*FLEN/8, x4, x1, x2)

inst_90676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:272028*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272028*0 + 3*52*FLEN/8, x4, x1, x2)

inst_90677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:272031*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272031*0 + 3*53*FLEN/8, x4, x1, x2)

inst_90678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:272034*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272034*0 + 3*54*FLEN/8, x4, x1, x2)

inst_90679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:272037*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272037*0 + 3*55*FLEN/8, x4, x1, x2)

inst_90680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:272040*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272040*0 + 3*56*FLEN/8, x4, x1, x2)

inst_90681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:272043*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272043*0 + 3*57*FLEN/8, x4, x1, x2)

inst_90682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:272046*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272046*0 + 3*58*FLEN/8, x4, x1, x2)

inst_90683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:272049*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272049*0 + 3*59*FLEN/8, x4, x1, x2)

inst_90684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:272052*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272052*0 + 3*60*FLEN/8, x4, x1, x2)

inst_90685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:272055*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272055*0 + 3*61*FLEN/8, x4, x1, x2)

inst_90686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:272058*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272058*0 + 3*62*FLEN/8, x4, x1, x2)

inst_90687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:272061*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272061*0 + 3*63*FLEN/8, x4, x1, x2)

inst_90688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:272064*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272064*0 + 3*64*FLEN/8, x4, x1, x2)

inst_90689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:272067*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272067*0 + 3*65*FLEN/8, x4, x1, x2)

inst_90690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:272070*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272070*0 + 3*66*FLEN/8, x4, x1, x2)

inst_90691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:272073*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272073*0 + 3*67*FLEN/8, x4, x1, x2)

inst_90692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:272076*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272076*0 + 3*68*FLEN/8, x4, x1, x2)

inst_90693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:272079*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272079*0 + 3*69*FLEN/8, x4, x1, x2)

inst_90694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:272082*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272082*0 + 3*70*FLEN/8, x4, x1, x2)

inst_90695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:272085*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272085*0 + 3*71*FLEN/8, x4, x1, x2)

inst_90696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:272088*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272088*0 + 3*72*FLEN/8, x4, x1, x2)

inst_90697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:272091*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272091*0 + 3*73*FLEN/8, x4, x1, x2)

inst_90698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:272094*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272094*0 + 3*74*FLEN/8, x4, x1, x2)

inst_90699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:272097*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272097*0 + 3*75*FLEN/8, x4, x1, x2)

inst_90700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:272100*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272100*0 + 3*76*FLEN/8, x4, x1, x2)

inst_90701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc682e24f38cd1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac682e24f38cd1; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:272103*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272103*0 + 3*77*FLEN/8, x4, x1, x2)

inst_90702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:272106*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272106*0 + 3*78*FLEN/8, x4, x1, x2)

inst_90703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:272109*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272109*0 + 3*79*FLEN/8, x4, x1, x2)

inst_90704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:272112*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272112*0 + 3*80*FLEN/8, x4, x1, x2)

inst_90705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:272115*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272115*0 + 3*81*FLEN/8, x4, x1, x2)

inst_90706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:272118*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272118*0 + 3*82*FLEN/8, x4, x1, x2)

inst_90707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:272121*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272121*0 + 3*83*FLEN/8, x4, x1, x2)

inst_90708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:272124*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272124*0 + 3*84*FLEN/8, x4, x1, x2)

inst_90709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:272127*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272127*0 + 3*85*FLEN/8, x4, x1, x2)

inst_90710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:272130*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272130*0 + 3*86*FLEN/8, x4, x1, x2)

inst_90711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:272133*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272133*0 + 3*87*FLEN/8, x4, x1, x2)

inst_90712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:272136*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272136*0 + 3*88*FLEN/8, x4, x1, x2)

inst_90713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:272139*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272139*0 + 3*89*FLEN/8, x4, x1, x2)

inst_90714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:272142*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272142*0 + 3*90*FLEN/8, x4, x1, x2)

inst_90715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:272145*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272145*0 + 3*91*FLEN/8, x4, x1, x2)

inst_90716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:272148*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272148*0 + 3*92*FLEN/8, x4, x1, x2)

inst_90717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:272151*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272151*0 + 3*93*FLEN/8, x4, x1, x2)

inst_90718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:272154*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272154*0 + 3*94*FLEN/8, x4, x1, x2)

inst_90719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:272157*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272157*0 + 3*95*FLEN/8, x4, x1, x2)

inst_90720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:272160*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272160*0 + 3*96*FLEN/8, x4, x1, x2)

inst_90721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:272163*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272163*0 + 3*97*FLEN/8, x4, x1, x2)

inst_90722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:272166*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272166*0 + 3*98*FLEN/8, x4, x1, x2)

inst_90723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:272169*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272169*0 + 3*99*FLEN/8, x4, x1, x2)

inst_90724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000000000; valaddr_reg:x3; val_offset:272172*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272172*0 + 3*100*FLEN/8, x4, x1, x2)

inst_90725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000000001; valaddr_reg:x3; val_offset:272175*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272175*0 + 3*101*FLEN/8, x4, x1, x2)

inst_90726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000000003; valaddr_reg:x3; val_offset:272178*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272178*0 + 3*102*FLEN/8, x4, x1, x2)

inst_90727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000000007; valaddr_reg:x3; val_offset:272181*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272181*0 + 3*103*FLEN/8, x4, x1, x2)

inst_90728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000000000f; valaddr_reg:x3; val_offset:272184*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272184*0 + 3*104*FLEN/8, x4, x1, x2)

inst_90729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000000001f; valaddr_reg:x3; val_offset:272187*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272187*0 + 3*105*FLEN/8, x4, x1, x2)

inst_90730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000000003f; valaddr_reg:x3; val_offset:272190*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272190*0 + 3*106*FLEN/8, x4, x1, x2)

inst_90731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000000007f; valaddr_reg:x3; val_offset:272193*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272193*0 + 3*107*FLEN/8, x4, x1, x2)

inst_90732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000000000ff; valaddr_reg:x3; val_offset:272196*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272196*0 + 3*108*FLEN/8, x4, x1, x2)

inst_90733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000000001ff; valaddr_reg:x3; val_offset:272199*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272199*0 + 3*109*FLEN/8, x4, x1, x2)

inst_90734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000000003ff; valaddr_reg:x3; val_offset:272202*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272202*0 + 3*110*FLEN/8, x4, x1, x2)

inst_90735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000000007ff; valaddr_reg:x3; val_offset:272205*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272205*0 + 3*111*FLEN/8, x4, x1, x2)

inst_90736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000000fff; valaddr_reg:x3; val_offset:272208*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272208*0 + 3*112*FLEN/8, x4, x1, x2)

inst_90737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000001fff; valaddr_reg:x3; val_offset:272211*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272211*0 + 3*113*FLEN/8, x4, x1, x2)

inst_90738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000003fff; valaddr_reg:x3; val_offset:272214*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272214*0 + 3*114*FLEN/8, x4, x1, x2)

inst_90739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000007fff; valaddr_reg:x3; val_offset:272217*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272217*0 + 3*115*FLEN/8, x4, x1, x2)

inst_90740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000000ffff; valaddr_reg:x3; val_offset:272220*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272220*0 + 3*116*FLEN/8, x4, x1, x2)

inst_90741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000001ffff; valaddr_reg:x3; val_offset:272223*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272223*0 + 3*117*FLEN/8, x4, x1, x2)

inst_90742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000003ffff; valaddr_reg:x3; val_offset:272226*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272226*0 + 3*118*FLEN/8, x4, x1, x2)

inst_90743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000007ffff; valaddr_reg:x3; val_offset:272229*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272229*0 + 3*119*FLEN/8, x4, x1, x2)

inst_90744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000000fffff; valaddr_reg:x3; val_offset:272232*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272232*0 + 3*120*FLEN/8, x4, x1, x2)

inst_90745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000001fffff; valaddr_reg:x3; val_offset:272235*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272235*0 + 3*121*FLEN/8, x4, x1, x2)

inst_90746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000003fffff; valaddr_reg:x3; val_offset:272238*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272238*0 + 3*122*FLEN/8, x4, x1, x2)

inst_90747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000007fffff; valaddr_reg:x3; val_offset:272241*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272241*0 + 3*123*FLEN/8, x4, x1, x2)

inst_90748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000000ffffff; valaddr_reg:x3; val_offset:272244*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272244*0 + 3*124*FLEN/8, x4, x1, x2)

inst_90749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000001ffffff; valaddr_reg:x3; val_offset:272247*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272247*0 + 3*125*FLEN/8, x4, x1, x2)

inst_90750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000003ffffff; valaddr_reg:x3; val_offset:272250*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272250*0 + 3*126*FLEN/8, x4, x1, x2)

inst_90751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000007ffffff; valaddr_reg:x3; val_offset:272253*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272253*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_90752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000000fffffff; valaddr_reg:x3; val_offset:272256*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272256*0 + 3*128*FLEN/8, x4, x1, x2)

inst_90753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000001fffffff; valaddr_reg:x3; val_offset:272259*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272259*0 + 3*129*FLEN/8, x4, x1, x2)

inst_90754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000003fffffff; valaddr_reg:x3; val_offset:272262*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272262*0 + 3*130*FLEN/8, x4, x1, x2)

inst_90755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000007fffffff; valaddr_reg:x3; val_offset:272265*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272265*0 + 3*131*FLEN/8, x4, x1, x2)

inst_90756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600000ffffffff; valaddr_reg:x3; val_offset:272268*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272268*0 + 3*132*FLEN/8, x4, x1, x2)

inst_90757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600001ffffffff; valaddr_reg:x3; val_offset:272271*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272271*0 + 3*133*FLEN/8, x4, x1, x2)

inst_90758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600003ffffffff; valaddr_reg:x3; val_offset:272274*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272274*0 + 3*134*FLEN/8, x4, x1, x2)

inst_90759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600007ffffffff; valaddr_reg:x3; val_offset:272277*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272277*0 + 3*135*FLEN/8, x4, x1, x2)

inst_90760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160000fffffffff; valaddr_reg:x3; val_offset:272280*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272280*0 + 3*136*FLEN/8, x4, x1, x2)

inst_90761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160001fffffffff; valaddr_reg:x3; val_offset:272283*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272283*0 + 3*137*FLEN/8, x4, x1, x2)

inst_90762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160003fffffffff; valaddr_reg:x3; val_offset:272286*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272286*0 + 3*138*FLEN/8, x4, x1, x2)

inst_90763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160007fffffffff; valaddr_reg:x3; val_offset:272289*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272289*0 + 3*139*FLEN/8, x4, x1, x2)

inst_90764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16000ffffffffff; valaddr_reg:x3; val_offset:272292*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272292*0 + 3*140*FLEN/8, x4, x1, x2)

inst_90765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16001ffffffffff; valaddr_reg:x3; val_offset:272295*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272295*0 + 3*141*FLEN/8, x4, x1, x2)

inst_90766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16003ffffffffff; valaddr_reg:x3; val_offset:272298*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272298*0 + 3*142*FLEN/8, x4, x1, x2)

inst_90767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16007ffffffffff; valaddr_reg:x3; val_offset:272301*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272301*0 + 3*143*FLEN/8, x4, x1, x2)

inst_90768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1600fffffffffff; valaddr_reg:x3; val_offset:272304*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272304*0 + 3*144*FLEN/8, x4, x1, x2)

inst_90769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1601fffffffffff; valaddr_reg:x3; val_offset:272307*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272307*0 + 3*145*FLEN/8, x4, x1, x2)

inst_90770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1603fffffffffff; valaddr_reg:x3; val_offset:272310*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272310*0 + 3*146*FLEN/8, x4, x1, x2)

inst_90771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x1607fffffffffff; valaddr_reg:x3; val_offset:272313*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272313*0 + 3*147*FLEN/8, x4, x1, x2)

inst_90772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x160ffffffffffff; valaddr_reg:x3; val_offset:272316*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272316*0 + 3*148*FLEN/8, x4, x1, x2)

inst_90773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x161ffffffffffff; valaddr_reg:x3; val_offset:272319*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272319*0 + 3*149*FLEN/8, x4, x1, x2)

inst_90774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x163ffffffffffff; valaddr_reg:x3; val_offset:272322*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272322*0 + 3*150*FLEN/8, x4, x1, x2)

inst_90775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x167ffffffffffff; valaddr_reg:x3; val_offset:272325*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272325*0 + 3*151*FLEN/8, x4, x1, x2)

inst_90776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x168000000000000; valaddr_reg:x3; val_offset:272328*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272328*0 + 3*152*FLEN/8, x4, x1, x2)

inst_90777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16c000000000000; valaddr_reg:x3; val_offset:272331*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272331*0 + 3*153*FLEN/8, x4, x1, x2)

inst_90778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16e000000000000; valaddr_reg:x3; val_offset:272334*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272334*0 + 3*154*FLEN/8, x4, x1, x2)

inst_90779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16f000000000000; valaddr_reg:x3; val_offset:272337*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272337*0 + 3*155*FLEN/8, x4, x1, x2)

inst_90780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16f800000000000; valaddr_reg:x3; val_offset:272340*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272340*0 + 3*156*FLEN/8, x4, x1, x2)

inst_90781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fc00000000000; valaddr_reg:x3; val_offset:272343*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272343*0 + 3*157*FLEN/8, x4, x1, x2)

inst_90782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fe00000000000; valaddr_reg:x3; val_offset:272346*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272346*0 + 3*158*FLEN/8, x4, x1, x2)

inst_90783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ff00000000000; valaddr_reg:x3; val_offset:272349*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272349*0 + 3*159*FLEN/8, x4, x1, x2)

inst_90784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ff80000000000; valaddr_reg:x3; val_offset:272352*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272352*0 + 3*160*FLEN/8, x4, x1, x2)

inst_90785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffc0000000000; valaddr_reg:x3; val_offset:272355*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272355*0 + 3*161*FLEN/8, x4, x1, x2)

inst_90786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffe0000000000; valaddr_reg:x3; val_offset:272358*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272358*0 + 3*162*FLEN/8, x4, x1, x2)

inst_90787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fff0000000000; valaddr_reg:x3; val_offset:272361*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272361*0 + 3*163*FLEN/8, x4, x1, x2)

inst_90788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fff8000000000; valaddr_reg:x3; val_offset:272364*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272364*0 + 3*164*FLEN/8, x4, x1, x2)

inst_90789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffc000000000; valaddr_reg:x3; val_offset:272367*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272367*0 + 3*165*FLEN/8, x4, x1, x2)

inst_90790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffe000000000; valaddr_reg:x3; val_offset:272370*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272370*0 + 3*166*FLEN/8, x4, x1, x2)

inst_90791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffff000000000; valaddr_reg:x3; val_offset:272373*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272373*0 + 3*167*FLEN/8, x4, x1, x2)

inst_90792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffff800000000; valaddr_reg:x3; val_offset:272376*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272376*0 + 3*168*FLEN/8, x4, x1, x2)

inst_90793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffc00000000; valaddr_reg:x3; val_offset:272379*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272379*0 + 3*169*FLEN/8, x4, x1, x2)

inst_90794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffe00000000; valaddr_reg:x3; val_offset:272382*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272382*0 + 3*170*FLEN/8, x4, x1, x2)

inst_90795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffff00000000; valaddr_reg:x3; val_offset:272385*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272385*0 + 3*171*FLEN/8, x4, x1, x2)

inst_90796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffff80000000; valaddr_reg:x3; val_offset:272388*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272388*0 + 3*172*FLEN/8, x4, x1, x2)

inst_90797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffc0000000; valaddr_reg:x3; val_offset:272391*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272391*0 + 3*173*FLEN/8, x4, x1, x2)

inst_90798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffe0000000; valaddr_reg:x3; val_offset:272394*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272394*0 + 3*174*FLEN/8, x4, x1, x2)

inst_90799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffff0000000; valaddr_reg:x3; val_offset:272397*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272397*0 + 3*175*FLEN/8, x4, x1, x2)

inst_90800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffff8000000; valaddr_reg:x3; val_offset:272400*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272400*0 + 3*176*FLEN/8, x4, x1, x2)

inst_90801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffc000000; valaddr_reg:x3; val_offset:272403*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272403*0 + 3*177*FLEN/8, x4, x1, x2)

inst_90802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffe000000; valaddr_reg:x3; val_offset:272406*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272406*0 + 3*178*FLEN/8, x4, x1, x2)

inst_90803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffff000000; valaddr_reg:x3; val_offset:272409*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272409*0 + 3*179*FLEN/8, x4, x1, x2)

inst_90804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffff800000; valaddr_reg:x3; val_offset:272412*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272412*0 + 3*180*FLEN/8, x4, x1, x2)

inst_90805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffc00000; valaddr_reg:x3; val_offset:272415*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272415*0 + 3*181*FLEN/8, x4, x1, x2)

inst_90806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffe00000; valaddr_reg:x3; val_offset:272418*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272418*0 + 3*182*FLEN/8, x4, x1, x2)

inst_90807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffff00000; valaddr_reg:x3; val_offset:272421*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272421*0 + 3*183*FLEN/8, x4, x1, x2)

inst_90808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffff80000; valaddr_reg:x3; val_offset:272424*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272424*0 + 3*184*FLEN/8, x4, x1, x2)

inst_90809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffc0000; valaddr_reg:x3; val_offset:272427*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272427*0 + 3*185*FLEN/8, x4, x1, x2)

inst_90810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffe0000; valaddr_reg:x3; val_offset:272430*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272430*0 + 3*186*FLEN/8, x4, x1, x2)

inst_90811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffff0000; valaddr_reg:x3; val_offset:272433*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272433*0 + 3*187*FLEN/8, x4, x1, x2)

inst_90812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffff8000; valaddr_reg:x3; val_offset:272436*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272436*0 + 3*188*FLEN/8, x4, x1, x2)

inst_90813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffc000; valaddr_reg:x3; val_offset:272439*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272439*0 + 3*189*FLEN/8, x4, x1, x2)

inst_90814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffe000; valaddr_reg:x3; val_offset:272442*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272442*0 + 3*190*FLEN/8, x4, x1, x2)

inst_90815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffff000; valaddr_reg:x3; val_offset:272445*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272445*0 + 3*191*FLEN/8, x4, x1, x2)

inst_90816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffff800; valaddr_reg:x3; val_offset:272448*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272448*0 + 3*192*FLEN/8, x4, x1, x2)

inst_90817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffffc00; valaddr_reg:x3; val_offset:272451*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272451*0 + 3*193*FLEN/8, x4, x1, x2)

inst_90818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffffe00; valaddr_reg:x3; val_offset:272454*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272454*0 + 3*194*FLEN/8, x4, x1, x2)

inst_90819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffff00; valaddr_reg:x3; val_offset:272457*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272457*0 + 3*195*FLEN/8, x4, x1, x2)

inst_90820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffff80; valaddr_reg:x3; val_offset:272460*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272460*0 + 3*196*FLEN/8, x4, x1, x2)

inst_90821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffffc0; valaddr_reg:x3; val_offset:272463*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272463*0 + 3*197*FLEN/8, x4, x1, x2)

inst_90822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffffe0; valaddr_reg:x3; val_offset:272466*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272466*0 + 3*198*FLEN/8, x4, x1, x2)

inst_90823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffffff0; valaddr_reg:x3; val_offset:272469*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272469*0 + 3*199*FLEN/8, x4, x1, x2)

inst_90824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffffff8; valaddr_reg:x3; val_offset:272472*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272472*0 + 3*200*FLEN/8, x4, x1, x2)

inst_90825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffffffc; valaddr_reg:x3; val_offset:272475*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272475*0 + 3*201*FLEN/8, x4, x1, x2)

inst_90826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16ffffffffffffe; valaddr_reg:x3; val_offset:272478*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272478*0 + 3*202*FLEN/8, x4, x1, x2)

inst_90827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac898a0b894837; op2val:0x0;
op3val:0x16fffffffffffff; valaddr_reg:x3; val_offset:272481*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272481*0 + 3*203*FLEN/8, x4, x1, x2)

inst_90828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:272484*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272484*0 + 3*204*FLEN/8, x4, x1, x2)

inst_90829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:272487*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272487*0 + 3*205*FLEN/8, x4, x1, x2)

inst_90830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:272490*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272490*0 + 3*206*FLEN/8, x4, x1, x2)

inst_90831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:272493*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272493*0 + 3*207*FLEN/8, x4, x1, x2)

inst_90832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:272496*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272496*0 + 3*208*FLEN/8, x4, x1, x2)

inst_90833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:272499*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272499*0 + 3*209*FLEN/8, x4, x1, x2)

inst_90834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:272502*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272502*0 + 3*210*FLEN/8, x4, x1, x2)

inst_90835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:272505*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272505*0 + 3*211*FLEN/8, x4, x1, x2)

inst_90836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:272508*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272508*0 + 3*212*FLEN/8, x4, x1, x2)

inst_90837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:272511*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272511*0 + 3*213*FLEN/8, x4, x1, x2)

inst_90838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:272514*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272514*0 + 3*214*FLEN/8, x4, x1, x2)

inst_90839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:272517*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272517*0 + 3*215*FLEN/8, x4, x1, x2)

inst_90840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:272520*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272520*0 + 3*216*FLEN/8, x4, x1, x2)

inst_90841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:272523*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272523*0 + 3*217*FLEN/8, x4, x1, x2)

inst_90842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:272526*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272526*0 + 3*218*FLEN/8, x4, x1, x2)

inst_90843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:272529*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272529*0 + 3*219*FLEN/8, x4, x1, x2)

inst_90844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:272532*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272532*0 + 3*220*FLEN/8, x4, x1, x2)

inst_90845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:272535*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272535*0 + 3*221*FLEN/8, x4, x1, x2)

inst_90846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:272538*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272538*0 + 3*222*FLEN/8, x4, x1, x2)

inst_90847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:272541*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272541*0 + 3*223*FLEN/8, x4, x1, x2)

inst_90848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:272544*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272544*0 + 3*224*FLEN/8, x4, x1, x2)

inst_90849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:272547*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272547*0 + 3*225*FLEN/8, x4, x1, x2)

inst_90850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000000000; valaddr_reg:x3; val_offset:272550*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272550*0 + 3*226*FLEN/8, x4, x1, x2)

inst_90851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000000001; valaddr_reg:x3; val_offset:272553*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272553*0 + 3*227*FLEN/8, x4, x1, x2)

inst_90852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000000003; valaddr_reg:x3; val_offset:272556*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272556*0 + 3*228*FLEN/8, x4, x1, x2)

inst_90853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000000007; valaddr_reg:x3; val_offset:272559*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272559*0 + 3*229*FLEN/8, x4, x1, x2)

inst_90854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000000000f; valaddr_reg:x3; val_offset:272562*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272562*0 + 3*230*FLEN/8, x4, x1, x2)

inst_90855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000000001f; valaddr_reg:x3; val_offset:272565*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272565*0 + 3*231*FLEN/8, x4, x1, x2)

inst_90856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000000003f; valaddr_reg:x3; val_offset:272568*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272568*0 + 3*232*FLEN/8, x4, x1, x2)

inst_90857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000000007f; valaddr_reg:x3; val_offset:272571*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272571*0 + 3*233*FLEN/8, x4, x1, x2)

inst_90858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000000000ff; valaddr_reg:x3; val_offset:272574*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272574*0 + 3*234*FLEN/8, x4, x1, x2)

inst_90859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000000001ff; valaddr_reg:x3; val_offset:272577*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272577*0 + 3*235*FLEN/8, x4, x1, x2)

inst_90860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000000003ff; valaddr_reg:x3; val_offset:272580*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272580*0 + 3*236*FLEN/8, x4, x1, x2)

inst_90861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000000007ff; valaddr_reg:x3; val_offset:272583*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272583*0 + 3*237*FLEN/8, x4, x1, x2)

inst_90862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000000fff; valaddr_reg:x3; val_offset:272586*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272586*0 + 3*238*FLEN/8, x4, x1, x2)

inst_90863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000001fff; valaddr_reg:x3; val_offset:272589*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272589*0 + 3*239*FLEN/8, x4, x1, x2)

inst_90864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000003fff; valaddr_reg:x3; val_offset:272592*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272592*0 + 3*240*FLEN/8, x4, x1, x2)

inst_90865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000007fff; valaddr_reg:x3; val_offset:272595*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272595*0 + 3*241*FLEN/8, x4, x1, x2)

inst_90866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000000ffff; valaddr_reg:x3; val_offset:272598*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272598*0 + 3*242*FLEN/8, x4, x1, x2)

inst_90867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000001ffff; valaddr_reg:x3; val_offset:272601*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272601*0 + 3*243*FLEN/8, x4, x1, x2)

inst_90868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000003ffff; valaddr_reg:x3; val_offset:272604*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272604*0 + 3*244*FLEN/8, x4, x1, x2)

inst_90869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000007ffff; valaddr_reg:x3; val_offset:272607*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272607*0 + 3*245*FLEN/8, x4, x1, x2)

inst_90870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000000fffff; valaddr_reg:x3; val_offset:272610*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272610*0 + 3*246*FLEN/8, x4, x1, x2)

inst_90871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000001fffff; valaddr_reg:x3; val_offset:272613*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272613*0 + 3*247*FLEN/8, x4, x1, x2)

inst_90872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000003fffff; valaddr_reg:x3; val_offset:272616*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272616*0 + 3*248*FLEN/8, x4, x1, x2)

inst_90873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000007fffff; valaddr_reg:x3; val_offset:272619*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272619*0 + 3*249*FLEN/8, x4, x1, x2)

inst_90874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000000ffffff; valaddr_reg:x3; val_offset:272622*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272622*0 + 3*250*FLEN/8, x4, x1, x2)

inst_90875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000001ffffff; valaddr_reg:x3; val_offset:272625*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272625*0 + 3*251*FLEN/8, x4, x1, x2)

inst_90876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000003ffffff; valaddr_reg:x3; val_offset:272628*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272628*0 + 3*252*FLEN/8, x4, x1, x2)

inst_90877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000007ffffff; valaddr_reg:x3; val_offset:272631*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272631*0 + 3*253*FLEN/8, x4, x1, x2)

inst_90878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000000fffffff; valaddr_reg:x3; val_offset:272634*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272634*0 + 3*254*FLEN/8, x4, x1, x2)

inst_90879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000001fffffff; valaddr_reg:x3; val_offset:272637*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272637*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_90880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000003fffffff; valaddr_reg:x3; val_offset:272640*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272640*0 + 3*256*FLEN/8, x4, x1, x2)

inst_90881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000007fffffff; valaddr_reg:x3; val_offset:272643*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272643*0 + 3*257*FLEN/8, x4, x1, x2)

inst_90882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100000ffffffff; valaddr_reg:x3; val_offset:272646*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272646*0 + 3*258*FLEN/8, x4, x1, x2)

inst_90883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100001ffffffff; valaddr_reg:x3; val_offset:272649*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272649*0 + 3*259*FLEN/8, x4, x1, x2)

inst_90884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100003ffffffff; valaddr_reg:x3; val_offset:272652*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272652*0 + 3*260*FLEN/8, x4, x1, x2)

inst_90885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100007ffffffff; valaddr_reg:x3; val_offset:272655*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272655*0 + 3*261*FLEN/8, x4, x1, x2)

inst_90886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210000fffffffff; valaddr_reg:x3; val_offset:272658*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272658*0 + 3*262*FLEN/8, x4, x1, x2)

inst_90887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210001fffffffff; valaddr_reg:x3; val_offset:272661*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272661*0 + 3*263*FLEN/8, x4, x1, x2)

inst_90888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210003fffffffff; valaddr_reg:x3; val_offset:272664*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272664*0 + 3*264*FLEN/8, x4, x1, x2)

inst_90889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210007fffffffff; valaddr_reg:x3; val_offset:272667*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272667*0 + 3*265*FLEN/8, x4, x1, x2)

inst_90890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21000ffffffffff; valaddr_reg:x3; val_offset:272670*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272670*0 + 3*266*FLEN/8, x4, x1, x2)

inst_90891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21001ffffffffff; valaddr_reg:x3; val_offset:272673*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272673*0 + 3*267*FLEN/8, x4, x1, x2)

inst_90892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21003ffffffffff; valaddr_reg:x3; val_offset:272676*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272676*0 + 3*268*FLEN/8, x4, x1, x2)

inst_90893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21007ffffffffff; valaddr_reg:x3; val_offset:272679*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272679*0 + 3*269*FLEN/8, x4, x1, x2)

inst_90894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2100fffffffffff; valaddr_reg:x3; val_offset:272682*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272682*0 + 3*270*FLEN/8, x4, x1, x2)

inst_90895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2101fffffffffff; valaddr_reg:x3; val_offset:272685*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272685*0 + 3*271*FLEN/8, x4, x1, x2)

inst_90896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2103fffffffffff; valaddr_reg:x3; val_offset:272688*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272688*0 + 3*272*FLEN/8, x4, x1, x2)

inst_90897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x2107fffffffffff; valaddr_reg:x3; val_offset:272691*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272691*0 + 3*273*FLEN/8, x4, x1, x2)

inst_90898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x210ffffffffffff; valaddr_reg:x3; val_offset:272694*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272694*0 + 3*274*FLEN/8, x4, x1, x2)

inst_90899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x211ffffffffffff; valaddr_reg:x3; val_offset:272697*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272697*0 + 3*275*FLEN/8, x4, x1, x2)

inst_90900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x213ffffffffffff; valaddr_reg:x3; val_offset:272700*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272700*0 + 3*276*FLEN/8, x4, x1, x2)

inst_90901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x217ffffffffffff; valaddr_reg:x3; val_offset:272703*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272703*0 + 3*277*FLEN/8, x4, x1, x2)

inst_90902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x218000000000000; valaddr_reg:x3; val_offset:272706*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272706*0 + 3*278*FLEN/8, x4, x1, x2)

inst_90903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21c000000000000; valaddr_reg:x3; val_offset:272709*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272709*0 + 3*279*FLEN/8, x4, x1, x2)

inst_90904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21e000000000000; valaddr_reg:x3; val_offset:272712*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272712*0 + 3*280*FLEN/8, x4, x1, x2)

inst_90905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21f000000000000; valaddr_reg:x3; val_offset:272715*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272715*0 + 3*281*FLEN/8, x4, x1, x2)

inst_90906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21f800000000000; valaddr_reg:x3; val_offset:272718*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272718*0 + 3*282*FLEN/8, x4, x1, x2)

inst_90907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fc00000000000; valaddr_reg:x3; val_offset:272721*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272721*0 + 3*283*FLEN/8, x4, x1, x2)

inst_90908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fe00000000000; valaddr_reg:x3; val_offset:272724*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272724*0 + 3*284*FLEN/8, x4, x1, x2)

inst_90909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ff00000000000; valaddr_reg:x3; val_offset:272727*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272727*0 + 3*285*FLEN/8, x4, x1, x2)

inst_90910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ff80000000000; valaddr_reg:x3; val_offset:272730*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272730*0 + 3*286*FLEN/8, x4, x1, x2)

inst_90911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffc0000000000; valaddr_reg:x3; val_offset:272733*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272733*0 + 3*287*FLEN/8, x4, x1, x2)

inst_90912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffe0000000000; valaddr_reg:x3; val_offset:272736*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272736*0 + 3*288*FLEN/8, x4, x1, x2)

inst_90913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fff0000000000; valaddr_reg:x3; val_offset:272739*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272739*0 + 3*289*FLEN/8, x4, x1, x2)

inst_90914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fff8000000000; valaddr_reg:x3; val_offset:272742*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272742*0 + 3*290*FLEN/8, x4, x1, x2)

inst_90915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffc000000000; valaddr_reg:x3; val_offset:272745*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272745*0 + 3*291*FLEN/8, x4, x1, x2)

inst_90916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffe000000000; valaddr_reg:x3; val_offset:272748*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272748*0 + 3*292*FLEN/8, x4, x1, x2)

inst_90917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffff000000000; valaddr_reg:x3; val_offset:272751*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272751*0 + 3*293*FLEN/8, x4, x1, x2)

inst_90918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffff800000000; valaddr_reg:x3; val_offset:272754*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272754*0 + 3*294*FLEN/8, x4, x1, x2)

inst_90919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffc00000000; valaddr_reg:x3; val_offset:272757*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272757*0 + 3*295*FLEN/8, x4, x1, x2)

inst_90920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffe00000000; valaddr_reg:x3; val_offset:272760*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272760*0 + 3*296*FLEN/8, x4, x1, x2)

inst_90921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffff00000000; valaddr_reg:x3; val_offset:272763*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272763*0 + 3*297*FLEN/8, x4, x1, x2)

inst_90922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffff80000000; valaddr_reg:x3; val_offset:272766*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272766*0 + 3*298*FLEN/8, x4, x1, x2)

inst_90923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffc0000000; valaddr_reg:x3; val_offset:272769*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272769*0 + 3*299*FLEN/8, x4, x1, x2)

inst_90924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffe0000000; valaddr_reg:x3; val_offset:272772*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272772*0 + 3*300*FLEN/8, x4, x1, x2)

inst_90925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffff0000000; valaddr_reg:x3; val_offset:272775*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272775*0 + 3*301*FLEN/8, x4, x1, x2)

inst_90926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffff8000000; valaddr_reg:x3; val_offset:272778*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272778*0 + 3*302*FLEN/8, x4, x1, x2)

inst_90927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffc000000; valaddr_reg:x3; val_offset:272781*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272781*0 + 3*303*FLEN/8, x4, x1, x2)

inst_90928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffe000000; valaddr_reg:x3; val_offset:272784*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272784*0 + 3*304*FLEN/8, x4, x1, x2)

inst_90929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffff000000; valaddr_reg:x3; val_offset:272787*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272787*0 + 3*305*FLEN/8, x4, x1, x2)

inst_90930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffff800000; valaddr_reg:x3; val_offset:272790*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272790*0 + 3*306*FLEN/8, x4, x1, x2)

inst_90931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffc00000; valaddr_reg:x3; val_offset:272793*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272793*0 + 3*307*FLEN/8, x4, x1, x2)

inst_90932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffe00000; valaddr_reg:x3; val_offset:272796*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272796*0 + 3*308*FLEN/8, x4, x1, x2)

inst_90933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffff00000; valaddr_reg:x3; val_offset:272799*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272799*0 + 3*309*FLEN/8, x4, x1, x2)

inst_90934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffff80000; valaddr_reg:x3; val_offset:272802*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272802*0 + 3*310*FLEN/8, x4, x1, x2)

inst_90935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffc0000; valaddr_reg:x3; val_offset:272805*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272805*0 + 3*311*FLEN/8, x4, x1, x2)

inst_90936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffe0000; valaddr_reg:x3; val_offset:272808*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272808*0 + 3*312*FLEN/8, x4, x1, x2)

inst_90937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffff0000; valaddr_reg:x3; val_offset:272811*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272811*0 + 3*313*FLEN/8, x4, x1, x2)

inst_90938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffff8000; valaddr_reg:x3; val_offset:272814*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272814*0 + 3*314*FLEN/8, x4, x1, x2)

inst_90939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffc000; valaddr_reg:x3; val_offset:272817*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272817*0 + 3*315*FLEN/8, x4, x1, x2)

inst_90940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffe000; valaddr_reg:x3; val_offset:272820*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272820*0 + 3*316*FLEN/8, x4, x1, x2)

inst_90941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffff000; valaddr_reg:x3; val_offset:272823*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272823*0 + 3*317*FLEN/8, x4, x1, x2)

inst_90942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffff800; valaddr_reg:x3; val_offset:272826*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272826*0 + 3*318*FLEN/8, x4, x1, x2)

inst_90943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffffc00; valaddr_reg:x3; val_offset:272829*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272829*0 + 3*319*FLEN/8, x4, x1, x2)

inst_90944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffffe00; valaddr_reg:x3; val_offset:272832*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272832*0 + 3*320*FLEN/8, x4, x1, x2)

inst_90945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffff00; valaddr_reg:x3; val_offset:272835*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272835*0 + 3*321*FLEN/8, x4, x1, x2)

inst_90946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffff80; valaddr_reg:x3; val_offset:272838*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272838*0 + 3*322*FLEN/8, x4, x1, x2)

inst_90947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffffc0; valaddr_reg:x3; val_offset:272841*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272841*0 + 3*323*FLEN/8, x4, x1, x2)

inst_90948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffffe0; valaddr_reg:x3; val_offset:272844*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272844*0 + 3*324*FLEN/8, x4, x1, x2)

inst_90949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffffff0; valaddr_reg:x3; val_offset:272847*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272847*0 + 3*325*FLEN/8, x4, x1, x2)

inst_90950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffffff8; valaddr_reg:x3; val_offset:272850*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272850*0 + 3*326*FLEN/8, x4, x1, x2)

inst_90951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffffffc; valaddr_reg:x3; val_offset:272853*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272853*0 + 3*327*FLEN/8, x4, x1, x2)

inst_90952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21ffffffffffffe; valaddr_reg:x3; val_offset:272856*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272856*0 + 3*328*FLEN/8, x4, x1, x2)

inst_90953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac982355c85538; op2val:0x0;
op3val:0x21fffffffffffff; valaddr_reg:x3; val_offset:272859*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272859*0 + 3*329*FLEN/8, x4, x1, x2)

inst_90954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:272862*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272862*0 + 3*330*FLEN/8, x4, x1, x2)

inst_90955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:272865*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272865*0 + 3*331*FLEN/8, x4, x1, x2)

inst_90956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:272868*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272868*0 + 3*332*FLEN/8, x4, x1, x2)

inst_90957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:272871*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272871*0 + 3*333*FLEN/8, x4, x1, x2)

inst_90958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:272874*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272874*0 + 3*334*FLEN/8, x4, x1, x2)

inst_90959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:272877*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272877*0 + 3*335*FLEN/8, x4, x1, x2)

inst_90960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:272880*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272880*0 + 3*336*FLEN/8, x4, x1, x2)

inst_90961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:272883*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272883*0 + 3*337*FLEN/8, x4, x1, x2)

inst_90962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:272886*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272886*0 + 3*338*FLEN/8, x4, x1, x2)

inst_90963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:272889*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272889*0 + 3*339*FLEN/8, x4, x1, x2)

inst_90964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:272892*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272892*0 + 3*340*FLEN/8, x4, x1, x2)

inst_90965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:272895*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272895*0 + 3*341*FLEN/8, x4, x1, x2)

inst_90966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:272898*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272898*0 + 3*342*FLEN/8, x4, x1, x2)

inst_90967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:272901*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272901*0 + 3*343*FLEN/8, x4, x1, x2)

inst_90968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:272904*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272904*0 + 3*344*FLEN/8, x4, x1, x2)

inst_90969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:272907*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272907*0 + 3*345*FLEN/8, x4, x1, x2)

inst_90970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:272910*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272910*0 + 3*346*FLEN/8, x4, x1, x2)

inst_90971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:272913*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272913*0 + 3*347*FLEN/8, x4, x1, x2)

inst_90972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:272916*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272916*0 + 3*348*FLEN/8, x4, x1, x2)

inst_90973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:272919*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272919*0 + 3*349*FLEN/8, x4, x1, x2)

inst_90974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:272922*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272922*0 + 3*350*FLEN/8, x4, x1, x2)

inst_90975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:272925*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272925*0 + 3*351*FLEN/8, x4, x1, x2)

inst_90976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000000000; valaddr_reg:x3; val_offset:272928*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272928*0 + 3*352*FLEN/8, x4, x1, x2)

inst_90977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000000001; valaddr_reg:x3; val_offset:272931*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272931*0 + 3*353*FLEN/8, x4, x1, x2)

inst_90978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000000003; valaddr_reg:x3; val_offset:272934*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272934*0 + 3*354*FLEN/8, x4, x1, x2)

inst_90979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000000007; valaddr_reg:x3; val_offset:272937*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272937*0 + 3*355*FLEN/8, x4, x1, x2)

inst_90980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000000000f; valaddr_reg:x3; val_offset:272940*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272940*0 + 3*356*FLEN/8, x4, x1, x2)

inst_90981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000000001f; valaddr_reg:x3; val_offset:272943*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272943*0 + 3*357*FLEN/8, x4, x1, x2)

inst_90982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000000003f; valaddr_reg:x3; val_offset:272946*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272946*0 + 3*358*FLEN/8, x4, x1, x2)

inst_90983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000000007f; valaddr_reg:x3; val_offset:272949*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272949*0 + 3*359*FLEN/8, x4, x1, x2)

inst_90984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000000000ff; valaddr_reg:x3; val_offset:272952*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272952*0 + 3*360*FLEN/8, x4, x1, x2)

inst_90985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000000001ff; valaddr_reg:x3; val_offset:272955*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272955*0 + 3*361*FLEN/8, x4, x1, x2)

inst_90986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000000003ff; valaddr_reg:x3; val_offset:272958*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272958*0 + 3*362*FLEN/8, x4, x1, x2)

inst_90987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000000007ff; valaddr_reg:x3; val_offset:272961*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272961*0 + 3*363*FLEN/8, x4, x1, x2)

inst_90988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000000fff; valaddr_reg:x3; val_offset:272964*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272964*0 + 3*364*FLEN/8, x4, x1, x2)

inst_90989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000001fff; valaddr_reg:x3; val_offset:272967*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272967*0 + 3*365*FLEN/8, x4, x1, x2)

inst_90990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000003fff; valaddr_reg:x3; val_offset:272970*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272970*0 + 3*366*FLEN/8, x4, x1, x2)

inst_90991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000007fff; valaddr_reg:x3; val_offset:272973*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272973*0 + 3*367*FLEN/8, x4, x1, x2)

inst_90992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000000ffff; valaddr_reg:x3; val_offset:272976*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272976*0 + 3*368*FLEN/8, x4, x1, x2)

inst_90993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000001ffff; valaddr_reg:x3; val_offset:272979*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272979*0 + 3*369*FLEN/8, x4, x1, x2)

inst_90994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000003ffff; valaddr_reg:x3; val_offset:272982*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272982*0 + 3*370*FLEN/8, x4, x1, x2)

inst_90995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000007ffff; valaddr_reg:x3; val_offset:272985*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272985*0 + 3*371*FLEN/8, x4, x1, x2)

inst_90996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000000fffff; valaddr_reg:x3; val_offset:272988*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272988*0 + 3*372*FLEN/8, x4, x1, x2)

inst_90997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000001fffff; valaddr_reg:x3; val_offset:272991*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272991*0 + 3*373*FLEN/8, x4, x1, x2)

inst_90998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000003fffff; valaddr_reg:x3; val_offset:272994*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272994*0 + 3*374*FLEN/8, x4, x1, x2)

inst_90999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000007fffff; valaddr_reg:x3; val_offset:272997*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272997*0 + 3*375*FLEN/8, x4, x1, x2)

inst_91000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000000ffffff; valaddr_reg:x3; val_offset:273000*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273000*0 + 3*376*FLEN/8, x4, x1, x2)

inst_91001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000001ffffff; valaddr_reg:x3; val_offset:273003*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273003*0 + 3*377*FLEN/8, x4, x1, x2)

inst_91002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000003ffffff; valaddr_reg:x3; val_offset:273006*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273006*0 + 3*378*FLEN/8, x4, x1, x2)

inst_91003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000007ffffff; valaddr_reg:x3; val_offset:273009*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273009*0 + 3*379*FLEN/8, x4, x1, x2)

inst_91004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000000fffffff; valaddr_reg:x3; val_offset:273012*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273012*0 + 3*380*FLEN/8, x4, x1, x2)

inst_91005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000001fffffff; valaddr_reg:x3; val_offset:273015*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273015*0 + 3*381*FLEN/8, x4, x1, x2)

inst_91006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000003fffffff; valaddr_reg:x3; val_offset:273018*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273018*0 + 3*382*FLEN/8, x4, x1, x2)

inst_91007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000007fffffff; valaddr_reg:x3; val_offset:273021*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273021*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_91008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00000ffffffff; valaddr_reg:x3; val_offset:273024*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273024*0 + 3*384*FLEN/8, x4, x1, x2)

inst_91009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00001ffffffff; valaddr_reg:x3; val_offset:273027*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273027*0 + 3*385*FLEN/8, x4, x1, x2)

inst_91010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00003ffffffff; valaddr_reg:x3; val_offset:273030*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273030*0 + 3*386*FLEN/8, x4, x1, x2)

inst_91011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00007ffffffff; valaddr_reg:x3; val_offset:273033*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273033*0 + 3*387*FLEN/8, x4, x1, x2)

inst_91012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0000fffffffff; valaddr_reg:x3; val_offset:273036*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273036*0 + 3*388*FLEN/8, x4, x1, x2)

inst_91013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0001fffffffff; valaddr_reg:x3; val_offset:273039*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273039*0 + 3*389*FLEN/8, x4, x1, x2)

inst_91014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0003fffffffff; valaddr_reg:x3; val_offset:273042*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273042*0 + 3*390*FLEN/8, x4, x1, x2)

inst_91015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0007fffffffff; valaddr_reg:x3; val_offset:273045*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273045*0 + 3*391*FLEN/8, x4, x1, x2)

inst_91016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f000ffffffffff; valaddr_reg:x3; val_offset:273048*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273048*0 + 3*392*FLEN/8, x4, x1, x2)

inst_91017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f001ffffffffff; valaddr_reg:x3; val_offset:273051*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273051*0 + 3*393*FLEN/8, x4, x1, x2)

inst_91018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f003ffffffffff; valaddr_reg:x3; val_offset:273054*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273054*0 + 3*394*FLEN/8, x4, x1, x2)

inst_91019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f007ffffffffff; valaddr_reg:x3; val_offset:273057*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273057*0 + 3*395*FLEN/8, x4, x1, x2)

inst_91020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f00fffffffffff; valaddr_reg:x3; val_offset:273060*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273060*0 + 3*396*FLEN/8, x4, x1, x2)

inst_91021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f01fffffffffff; valaddr_reg:x3; val_offset:273063*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273063*0 + 3*397*FLEN/8, x4, x1, x2)

inst_91022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f03fffffffffff; valaddr_reg:x3; val_offset:273066*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273066*0 + 3*398*FLEN/8, x4, x1, x2)

inst_91023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f07fffffffffff; valaddr_reg:x3; val_offset:273069*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273069*0 + 3*399*FLEN/8, x4, x1, x2)

inst_91024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f0ffffffffffff; valaddr_reg:x3; val_offset:273072*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273072*0 + 3*400*FLEN/8, x4, x1, x2)

inst_91025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f1ffffffffffff; valaddr_reg:x3; val_offset:273075*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273075*0 + 3*401*FLEN/8, x4, x1, x2)

inst_91026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f3ffffffffffff; valaddr_reg:x3; val_offset:273078*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273078*0 + 3*402*FLEN/8, x4, x1, x2)

inst_91027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f7ffffffffffff; valaddr_reg:x3; val_offset:273081*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273081*0 + 3*403*FLEN/8, x4, x1, x2)

inst_91028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81f8000000000000; valaddr_reg:x3; val_offset:273084*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273084*0 + 3*404*FLEN/8, x4, x1, x2)

inst_91029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fc000000000000; valaddr_reg:x3; val_offset:273087*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273087*0 + 3*405*FLEN/8, x4, x1, x2)

inst_91030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fe000000000000; valaddr_reg:x3; val_offset:273090*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273090*0 + 3*406*FLEN/8, x4, x1, x2)

inst_91031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ff000000000000; valaddr_reg:x3; val_offset:273093*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273093*0 + 3*407*FLEN/8, x4, x1, x2)

inst_91032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ff800000000000; valaddr_reg:x3; val_offset:273096*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273096*0 + 3*408*FLEN/8, x4, x1, x2)

inst_91033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffc00000000000; valaddr_reg:x3; val_offset:273099*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273099*0 + 3*409*FLEN/8, x4, x1, x2)

inst_91034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffe00000000000; valaddr_reg:x3; val_offset:273102*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273102*0 + 3*410*FLEN/8, x4, x1, x2)

inst_91035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fff00000000000; valaddr_reg:x3; val_offset:273105*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273105*0 + 3*411*FLEN/8, x4, x1, x2)

inst_91036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fff80000000000; valaddr_reg:x3; val_offset:273108*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273108*0 + 3*412*FLEN/8, x4, x1, x2)

inst_91037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffc0000000000; valaddr_reg:x3; val_offset:273111*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273111*0 + 3*413*FLEN/8, x4, x1, x2)

inst_91038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffe0000000000; valaddr_reg:x3; val_offset:273114*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273114*0 + 3*414*FLEN/8, x4, x1, x2)

inst_91039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffff0000000000; valaddr_reg:x3; val_offset:273117*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273117*0 + 3*415*FLEN/8, x4, x1, x2)

inst_91040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffff8000000000; valaddr_reg:x3; val_offset:273120*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273120*0 + 3*416*FLEN/8, x4, x1, x2)

inst_91041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffc000000000; valaddr_reg:x3; val_offset:273123*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273123*0 + 3*417*FLEN/8, x4, x1, x2)

inst_91042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffe000000000; valaddr_reg:x3; val_offset:273126*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273126*0 + 3*418*FLEN/8, x4, x1, x2)

inst_91043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffff000000000; valaddr_reg:x3; val_offset:273129*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273129*0 + 3*419*FLEN/8, x4, x1, x2)

inst_91044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffff800000000; valaddr_reg:x3; val_offset:273132*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273132*0 + 3*420*FLEN/8, x4, x1, x2)

inst_91045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffc00000000; valaddr_reg:x3; val_offset:273135*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273135*0 + 3*421*FLEN/8, x4, x1, x2)

inst_91046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffe00000000; valaddr_reg:x3; val_offset:273138*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273138*0 + 3*422*FLEN/8, x4, x1, x2)

inst_91047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffff00000000; valaddr_reg:x3; val_offset:273141*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273141*0 + 3*423*FLEN/8, x4, x1, x2)

inst_91048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffff80000000; valaddr_reg:x3; val_offset:273144*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273144*0 + 3*424*FLEN/8, x4, x1, x2)

inst_91049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffc0000000; valaddr_reg:x3; val_offset:273147*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273147*0 + 3*425*FLEN/8, x4, x1, x2)

inst_91050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffe0000000; valaddr_reg:x3; val_offset:273150*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273150*0 + 3*426*FLEN/8, x4, x1, x2)

inst_91051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffff0000000; valaddr_reg:x3; val_offset:273153*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273153*0 + 3*427*FLEN/8, x4, x1, x2)

inst_91052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffff8000000; valaddr_reg:x3; val_offset:273156*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273156*0 + 3*428*FLEN/8, x4, x1, x2)

inst_91053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffc000000; valaddr_reg:x3; val_offset:273159*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273159*0 + 3*429*FLEN/8, x4, x1, x2)

inst_91054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffe000000; valaddr_reg:x3; val_offset:273162*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273162*0 + 3*430*FLEN/8, x4, x1, x2)

inst_91055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffff000000; valaddr_reg:x3; val_offset:273165*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273165*0 + 3*431*FLEN/8, x4, x1, x2)

inst_91056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffff800000; valaddr_reg:x3; val_offset:273168*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273168*0 + 3*432*FLEN/8, x4, x1, x2)

inst_91057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffc00000; valaddr_reg:x3; val_offset:273171*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273171*0 + 3*433*FLEN/8, x4, x1, x2)

inst_91058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffe00000; valaddr_reg:x3; val_offset:273174*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273174*0 + 3*434*FLEN/8, x4, x1, x2)

inst_91059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffff00000; valaddr_reg:x3; val_offset:273177*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273177*0 + 3*435*FLEN/8, x4, x1, x2)

inst_91060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffff80000; valaddr_reg:x3; val_offset:273180*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273180*0 + 3*436*FLEN/8, x4, x1, x2)

inst_91061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffc0000; valaddr_reg:x3; val_offset:273183*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273183*0 + 3*437*FLEN/8, x4, x1, x2)

inst_91062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffe0000; valaddr_reg:x3; val_offset:273186*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273186*0 + 3*438*FLEN/8, x4, x1, x2)

inst_91063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffff0000; valaddr_reg:x3; val_offset:273189*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273189*0 + 3*439*FLEN/8, x4, x1, x2)

inst_91064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffff8000; valaddr_reg:x3; val_offset:273192*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273192*0 + 3*440*FLEN/8, x4, x1, x2)

inst_91065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffc000; valaddr_reg:x3; val_offset:273195*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273195*0 + 3*441*FLEN/8, x4, x1, x2)

inst_91066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffe000; valaddr_reg:x3; val_offset:273198*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273198*0 + 3*442*FLEN/8, x4, x1, x2)

inst_91067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffff000; valaddr_reg:x3; val_offset:273201*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273201*0 + 3*443*FLEN/8, x4, x1, x2)

inst_91068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffff800; valaddr_reg:x3; val_offset:273204*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273204*0 + 3*444*FLEN/8, x4, x1, x2)

inst_91069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffffc00; valaddr_reg:x3; val_offset:273207*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273207*0 + 3*445*FLEN/8, x4, x1, x2)

inst_91070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffffe00; valaddr_reg:x3; val_offset:273210*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273210*0 + 3*446*FLEN/8, x4, x1, x2)

inst_91071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffff00; valaddr_reg:x3; val_offset:273213*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273213*0 + 3*447*FLEN/8, x4, x1, x2)

inst_91072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffff80; valaddr_reg:x3; val_offset:273216*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273216*0 + 3*448*FLEN/8, x4, x1, x2)

inst_91073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffffc0; valaddr_reg:x3; val_offset:273219*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273219*0 + 3*449*FLEN/8, x4, x1, x2)

inst_91074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffffe0; valaddr_reg:x3; val_offset:273222*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273222*0 + 3*450*FLEN/8, x4, x1, x2)

inst_91075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffffff0; valaddr_reg:x3; val_offset:273225*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273225*0 + 3*451*FLEN/8, x4, x1, x2)

inst_91076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffffff8; valaddr_reg:x3; val_offset:273228*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273228*0 + 3*452*FLEN/8, x4, x1, x2)

inst_91077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffffffc; valaddr_reg:x3; val_offset:273231*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273231*0 + 3*453*FLEN/8, x4, x1, x2)

inst_91078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81fffffffffffffe; valaddr_reg:x3; val_offset:273234*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273234*0 + 3*454*FLEN/8, x4, x1, x2)

inst_91079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca15e00e0db46 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca15e00e0db46; op2val:0x8000;
op3val:0x81ffffffffffffff; valaddr_reg:x3; val_offset:273237*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273237*0 + 3*455*FLEN/8, x4, x1, x2)

inst_91080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000000000; valaddr_reg:x3; val_offset:273240*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273240*0 + 3*456*FLEN/8, x4, x1, x2)

inst_91081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000000001; valaddr_reg:x3; val_offset:273243*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273243*0 + 3*457*FLEN/8, x4, x1, x2)

inst_91082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000000003; valaddr_reg:x3; val_offset:273246*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273246*0 + 3*458*FLEN/8, x4, x1, x2)

inst_91083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000000007; valaddr_reg:x3; val_offset:273249*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273249*0 + 3*459*FLEN/8, x4, x1, x2)

inst_91084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000000000f; valaddr_reg:x3; val_offset:273252*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273252*0 + 3*460*FLEN/8, x4, x1, x2)

inst_91085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000000001f; valaddr_reg:x3; val_offset:273255*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273255*0 + 3*461*FLEN/8, x4, x1, x2)

inst_91086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000000003f; valaddr_reg:x3; val_offset:273258*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273258*0 + 3*462*FLEN/8, x4, x1, x2)

inst_91087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000000007f; valaddr_reg:x3; val_offset:273261*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273261*0 + 3*463*FLEN/8, x4, x1, x2)

inst_91088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000000000ff; valaddr_reg:x3; val_offset:273264*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273264*0 + 3*464*FLEN/8, x4, x1, x2)

inst_91089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000000001ff; valaddr_reg:x3; val_offset:273267*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273267*0 + 3*465*FLEN/8, x4, x1, x2)

inst_91090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000000003ff; valaddr_reg:x3; val_offset:273270*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273270*0 + 3*466*FLEN/8, x4, x1, x2)

inst_91091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000000007ff; valaddr_reg:x3; val_offset:273273*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273273*0 + 3*467*FLEN/8, x4, x1, x2)

inst_91092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000000fff; valaddr_reg:x3; val_offset:273276*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273276*0 + 3*468*FLEN/8, x4, x1, x2)

inst_91093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000001fff; valaddr_reg:x3; val_offset:273279*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273279*0 + 3*469*FLEN/8, x4, x1, x2)

inst_91094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000003fff; valaddr_reg:x3; val_offset:273282*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273282*0 + 3*470*FLEN/8, x4, x1, x2)

inst_91095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000007fff; valaddr_reg:x3; val_offset:273285*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273285*0 + 3*471*FLEN/8, x4, x1, x2)

inst_91096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000000ffff; valaddr_reg:x3; val_offset:273288*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273288*0 + 3*472*FLEN/8, x4, x1, x2)

inst_91097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000001ffff; valaddr_reg:x3; val_offset:273291*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273291*0 + 3*473*FLEN/8, x4, x1, x2)

inst_91098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000003ffff; valaddr_reg:x3; val_offset:273294*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273294*0 + 3*474*FLEN/8, x4, x1, x2)

inst_91099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000007ffff; valaddr_reg:x3; val_offset:273297*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273297*0 + 3*475*FLEN/8, x4, x1, x2)

inst_91100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000000fffff; valaddr_reg:x3; val_offset:273300*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273300*0 + 3*476*FLEN/8, x4, x1, x2)

inst_91101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000001fffff; valaddr_reg:x3; val_offset:273303*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273303*0 + 3*477*FLEN/8, x4, x1, x2)

inst_91102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000003fffff; valaddr_reg:x3; val_offset:273306*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273306*0 + 3*478*FLEN/8, x4, x1, x2)

inst_91103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000007fffff; valaddr_reg:x3; val_offset:273309*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273309*0 + 3*479*FLEN/8, x4, x1, x2)

inst_91104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000000ffffff; valaddr_reg:x3; val_offset:273312*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273312*0 + 3*480*FLEN/8, x4, x1, x2)

inst_91105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000001ffffff; valaddr_reg:x3; val_offset:273315*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273315*0 + 3*481*FLEN/8, x4, x1, x2)

inst_91106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000003ffffff; valaddr_reg:x3; val_offset:273318*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273318*0 + 3*482*FLEN/8, x4, x1, x2)

inst_91107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000007ffffff; valaddr_reg:x3; val_offset:273321*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273321*0 + 3*483*FLEN/8, x4, x1, x2)

inst_91108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000000fffffff; valaddr_reg:x3; val_offset:273324*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273324*0 + 3*484*FLEN/8, x4, x1, x2)

inst_91109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000001fffffff; valaddr_reg:x3; val_offset:273327*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273327*0 + 3*485*FLEN/8, x4, x1, x2)

inst_91110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000003fffffff; valaddr_reg:x3; val_offset:273330*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273330*0 + 3*486*FLEN/8, x4, x1, x2)

inst_91111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000007fffffff; valaddr_reg:x3; val_offset:273333*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273333*0 + 3*487*FLEN/8, x4, x1, x2)

inst_91112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500000ffffffff; valaddr_reg:x3; val_offset:273336*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273336*0 + 3*488*FLEN/8, x4, x1, x2)

inst_91113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500001ffffffff; valaddr_reg:x3; val_offset:273339*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273339*0 + 3*489*FLEN/8, x4, x1, x2)

inst_91114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500003ffffffff; valaddr_reg:x3; val_offset:273342*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273342*0 + 3*490*FLEN/8, x4, x1, x2)

inst_91115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500007ffffffff; valaddr_reg:x3; val_offset:273345*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273345*0 + 3*491*FLEN/8, x4, x1, x2)

inst_91116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850000fffffffff; valaddr_reg:x3; val_offset:273348*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273348*0 + 3*492*FLEN/8, x4, x1, x2)

inst_91117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850001fffffffff; valaddr_reg:x3; val_offset:273351*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273351*0 + 3*493*FLEN/8, x4, x1, x2)

inst_91118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850003fffffffff; valaddr_reg:x3; val_offset:273354*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273354*0 + 3*494*FLEN/8, x4, x1, x2)

inst_91119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850007fffffffff; valaddr_reg:x3; val_offset:273357*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273357*0 + 3*495*FLEN/8, x4, x1, x2)

inst_91120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85000ffffffffff; valaddr_reg:x3; val_offset:273360*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273360*0 + 3*496*FLEN/8, x4, x1, x2)

inst_91121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85001ffffffffff; valaddr_reg:x3; val_offset:273363*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273363*0 + 3*497*FLEN/8, x4, x1, x2)

inst_91122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85003ffffffffff; valaddr_reg:x3; val_offset:273366*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273366*0 + 3*498*FLEN/8, x4, x1, x2)

inst_91123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85007ffffffffff; valaddr_reg:x3; val_offset:273369*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273369*0 + 3*499*FLEN/8, x4, x1, x2)

inst_91124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8500fffffffffff; valaddr_reg:x3; val_offset:273372*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273372*0 + 3*500*FLEN/8, x4, x1, x2)

inst_91125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8501fffffffffff; valaddr_reg:x3; val_offset:273375*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273375*0 + 3*501*FLEN/8, x4, x1, x2)

inst_91126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8503fffffffffff; valaddr_reg:x3; val_offset:273378*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273378*0 + 3*502*FLEN/8, x4, x1, x2)

inst_91127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb8507fffffffffff; valaddr_reg:x3; val_offset:273381*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273381*0 + 3*503*FLEN/8, x4, x1, x2)

inst_91128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb850ffffffffffff; valaddr_reg:x3; val_offset:273384*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273384*0 + 3*504*FLEN/8, x4, x1, x2)

inst_91129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb851ffffffffffff; valaddr_reg:x3; val_offset:273387*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273387*0 + 3*505*FLEN/8, x4, x1, x2)

inst_91130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb853ffffffffffff; valaddr_reg:x3; val_offset:273390*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273390*0 + 3*506*FLEN/8, x4, x1, x2)

inst_91131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb857ffffffffffff; valaddr_reg:x3; val_offset:273393*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273393*0 + 3*507*FLEN/8, x4, x1, x2)

inst_91132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb858000000000000; valaddr_reg:x3; val_offset:273396*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273396*0 + 3*508*FLEN/8, x4, x1, x2)

inst_91133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85c000000000000; valaddr_reg:x3; val_offset:273399*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273399*0 + 3*509*FLEN/8, x4, x1, x2)

inst_91134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85e000000000000; valaddr_reg:x3; val_offset:273402*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273402*0 + 3*510*FLEN/8, x4, x1, x2)

inst_91135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85f000000000000; valaddr_reg:x3; val_offset:273405*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273405*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_91136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85f800000000000; valaddr_reg:x3; val_offset:273408*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273408*0 + 3*512*FLEN/8, x4, x1, x2)

inst_91137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fc00000000000; valaddr_reg:x3; val_offset:273411*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273411*0 + 3*513*FLEN/8, x4, x1, x2)

inst_91138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fe00000000000; valaddr_reg:x3; val_offset:273414*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273414*0 + 3*514*FLEN/8, x4, x1, x2)

inst_91139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ff00000000000; valaddr_reg:x3; val_offset:273417*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273417*0 + 3*515*FLEN/8, x4, x1, x2)

inst_91140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ff80000000000; valaddr_reg:x3; val_offset:273420*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273420*0 + 3*516*FLEN/8, x4, x1, x2)

inst_91141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffc0000000000; valaddr_reg:x3; val_offset:273423*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273423*0 + 3*517*FLEN/8, x4, x1, x2)

inst_91142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffe0000000000; valaddr_reg:x3; val_offset:273426*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273426*0 + 3*518*FLEN/8, x4, x1, x2)

inst_91143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fff0000000000; valaddr_reg:x3; val_offset:273429*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273429*0 + 3*519*FLEN/8, x4, x1, x2)

inst_91144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fff8000000000; valaddr_reg:x3; val_offset:273432*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273432*0 + 3*520*FLEN/8, x4, x1, x2)

inst_91145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffc000000000; valaddr_reg:x3; val_offset:273435*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273435*0 + 3*521*FLEN/8, x4, x1, x2)

inst_91146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffe000000000; valaddr_reg:x3; val_offset:273438*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273438*0 + 3*522*FLEN/8, x4, x1, x2)

inst_91147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffff000000000; valaddr_reg:x3; val_offset:273441*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273441*0 + 3*523*FLEN/8, x4, x1, x2)

inst_91148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffff800000000; valaddr_reg:x3; val_offset:273444*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273444*0 + 3*524*FLEN/8, x4, x1, x2)

inst_91149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffc00000000; valaddr_reg:x3; val_offset:273447*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273447*0 + 3*525*FLEN/8, x4, x1, x2)

inst_91150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffe00000000; valaddr_reg:x3; val_offset:273450*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273450*0 + 3*526*FLEN/8, x4, x1, x2)

inst_91151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffff00000000; valaddr_reg:x3; val_offset:273453*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273453*0 + 3*527*FLEN/8, x4, x1, x2)

inst_91152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffff80000000; valaddr_reg:x3; val_offset:273456*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273456*0 + 3*528*FLEN/8, x4, x1, x2)

inst_91153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffc0000000; valaddr_reg:x3; val_offset:273459*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273459*0 + 3*529*FLEN/8, x4, x1, x2)

inst_91154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffe0000000; valaddr_reg:x3; val_offset:273462*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273462*0 + 3*530*FLEN/8, x4, x1, x2)

inst_91155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffff0000000; valaddr_reg:x3; val_offset:273465*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273465*0 + 3*531*FLEN/8, x4, x1, x2)

inst_91156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffff8000000; valaddr_reg:x3; val_offset:273468*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273468*0 + 3*532*FLEN/8, x4, x1, x2)

inst_91157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffc000000; valaddr_reg:x3; val_offset:273471*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273471*0 + 3*533*FLEN/8, x4, x1, x2)

inst_91158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffe000000; valaddr_reg:x3; val_offset:273474*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273474*0 + 3*534*FLEN/8, x4, x1, x2)

inst_91159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffff000000; valaddr_reg:x3; val_offset:273477*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273477*0 + 3*535*FLEN/8, x4, x1, x2)

inst_91160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffff800000; valaddr_reg:x3; val_offset:273480*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273480*0 + 3*536*FLEN/8, x4, x1, x2)

inst_91161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffc00000; valaddr_reg:x3; val_offset:273483*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273483*0 + 3*537*FLEN/8, x4, x1, x2)

inst_91162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffe00000; valaddr_reg:x3; val_offset:273486*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273486*0 + 3*538*FLEN/8, x4, x1, x2)

inst_91163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffff00000; valaddr_reg:x3; val_offset:273489*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273489*0 + 3*539*FLEN/8, x4, x1, x2)

inst_91164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffff80000; valaddr_reg:x3; val_offset:273492*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273492*0 + 3*540*FLEN/8, x4, x1, x2)

inst_91165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffc0000; valaddr_reg:x3; val_offset:273495*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273495*0 + 3*541*FLEN/8, x4, x1, x2)

inst_91166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffe0000; valaddr_reg:x3; val_offset:273498*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273498*0 + 3*542*FLEN/8, x4, x1, x2)

inst_91167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffff0000; valaddr_reg:x3; val_offset:273501*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273501*0 + 3*543*FLEN/8, x4, x1, x2)

inst_91168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffff8000; valaddr_reg:x3; val_offset:273504*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273504*0 + 3*544*FLEN/8, x4, x1, x2)

inst_91169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffc000; valaddr_reg:x3; val_offset:273507*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273507*0 + 3*545*FLEN/8, x4, x1, x2)

inst_91170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffe000; valaddr_reg:x3; val_offset:273510*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273510*0 + 3*546*FLEN/8, x4, x1, x2)

inst_91171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffff000; valaddr_reg:x3; val_offset:273513*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273513*0 + 3*547*FLEN/8, x4, x1, x2)

inst_91172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffff800; valaddr_reg:x3; val_offset:273516*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273516*0 + 3*548*FLEN/8, x4, x1, x2)

inst_91173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffffc00; valaddr_reg:x3; val_offset:273519*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273519*0 + 3*549*FLEN/8, x4, x1, x2)

inst_91174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffffe00; valaddr_reg:x3; val_offset:273522*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273522*0 + 3*550*FLEN/8, x4, x1, x2)

inst_91175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffff00; valaddr_reg:x3; val_offset:273525*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273525*0 + 3*551*FLEN/8, x4, x1, x2)

inst_91176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffff80; valaddr_reg:x3; val_offset:273528*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273528*0 + 3*552*FLEN/8, x4, x1, x2)

inst_91177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffffc0; valaddr_reg:x3; val_offset:273531*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273531*0 + 3*553*FLEN/8, x4, x1, x2)

inst_91178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffffe0; valaddr_reg:x3; val_offset:273534*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273534*0 + 3*554*FLEN/8, x4, x1, x2)

inst_91179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffffff0; valaddr_reg:x3; val_offset:273537*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273537*0 + 3*555*FLEN/8, x4, x1, x2)

inst_91180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffffff8; valaddr_reg:x3; val_offset:273540*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273540*0 + 3*556*FLEN/8, x4, x1, x2)

inst_91181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffffffc; valaddr_reg:x3; val_offset:273543*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273543*0 + 3*557*FLEN/8, x4, x1, x2)

inst_91182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85ffffffffffffe; valaddr_reg:x3; val_offset:273546*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273546*0 + 3*558*FLEN/8, x4, x1, x2)

inst_91183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xb85fffffffffffff; valaddr_reg:x3; val_offset:273549*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273549*0 + 3*559*FLEN/8, x4, x1, x2)

inst_91184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:273552*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273552*0 + 3*560*FLEN/8, x4, x1, x2)

inst_91185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:273555*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273555*0 + 3*561*FLEN/8, x4, x1, x2)

inst_91186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:273558*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273558*0 + 3*562*FLEN/8, x4, x1, x2)

inst_91187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:273561*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273561*0 + 3*563*FLEN/8, x4, x1, x2)

inst_91188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:273564*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273564*0 + 3*564*FLEN/8, x4, x1, x2)

inst_91189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:273567*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273567*0 + 3*565*FLEN/8, x4, x1, x2)

inst_91190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:273570*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273570*0 + 3*566*FLEN/8, x4, x1, x2)

inst_91191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:273573*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273573*0 + 3*567*FLEN/8, x4, x1, x2)

inst_91192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:273576*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273576*0 + 3*568*FLEN/8, x4, x1, x2)

inst_91193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:273579*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273579*0 + 3*569*FLEN/8, x4, x1, x2)

inst_91194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:273582*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273582*0 + 3*570*FLEN/8, x4, x1, x2)

inst_91195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:273585*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273585*0 + 3*571*FLEN/8, x4, x1, x2)

inst_91196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:273588*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273588*0 + 3*572*FLEN/8, x4, x1, x2)

inst_91197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:273591*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273591*0 + 3*573*FLEN/8, x4, x1, x2)

inst_91198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:273594*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273594*0 + 3*574*FLEN/8, x4, x1, x2)

inst_91199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:273597*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273597*0 + 3*575*FLEN/8, x4, x1, x2)

inst_91200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:273600*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273600*0 + 3*576*FLEN/8, x4, x1, x2)

inst_91201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:273603*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273603*0 + 3*577*FLEN/8, x4, x1, x2)

inst_91202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:273606*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273606*0 + 3*578*FLEN/8, x4, x1, x2)

inst_91203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:273609*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273609*0 + 3*579*FLEN/8, x4, x1, x2)

inst_91204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:273612*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273612*0 + 3*580*FLEN/8, x4, x1, x2)

inst_91205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca2fe4ca14a9a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1e11099ee11b4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca2fe4ca14a9a; op2val:0x9fc1e11099ee11b4;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:273615*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273615*0 + 3*581*FLEN/8, x4, x1, x2)

inst_91206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000000000; valaddr_reg:x3; val_offset:273618*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273618*0 + 3*582*FLEN/8, x4, x1, x2)

inst_91207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000000001; valaddr_reg:x3; val_offset:273621*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273621*0 + 3*583*FLEN/8, x4, x1, x2)

inst_91208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000000003; valaddr_reg:x3; val_offset:273624*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273624*0 + 3*584*FLEN/8, x4, x1, x2)

inst_91209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000000007; valaddr_reg:x3; val_offset:273627*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273627*0 + 3*585*FLEN/8, x4, x1, x2)

inst_91210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000000000f; valaddr_reg:x3; val_offset:273630*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273630*0 + 3*586*FLEN/8, x4, x1, x2)

inst_91211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000000001f; valaddr_reg:x3; val_offset:273633*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273633*0 + 3*587*FLEN/8, x4, x1, x2)

inst_91212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000000003f; valaddr_reg:x3; val_offset:273636*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273636*0 + 3*588*FLEN/8, x4, x1, x2)

inst_91213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000000007f; valaddr_reg:x3; val_offset:273639*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273639*0 + 3*589*FLEN/8, x4, x1, x2)

inst_91214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000000000ff; valaddr_reg:x3; val_offset:273642*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273642*0 + 3*590*FLEN/8, x4, x1, x2)

inst_91215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000000001ff; valaddr_reg:x3; val_offset:273645*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273645*0 + 3*591*FLEN/8, x4, x1, x2)

inst_91216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000000003ff; valaddr_reg:x3; val_offset:273648*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273648*0 + 3*592*FLEN/8, x4, x1, x2)

inst_91217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000000007ff; valaddr_reg:x3; val_offset:273651*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273651*0 + 3*593*FLEN/8, x4, x1, x2)

inst_91218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000000fff; valaddr_reg:x3; val_offset:273654*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273654*0 + 3*594*FLEN/8, x4, x1, x2)

inst_91219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000001fff; valaddr_reg:x3; val_offset:273657*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273657*0 + 3*595*FLEN/8, x4, x1, x2)

inst_91220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000003fff; valaddr_reg:x3; val_offset:273660*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273660*0 + 3*596*FLEN/8, x4, x1, x2)

inst_91221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000007fff; valaddr_reg:x3; val_offset:273663*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273663*0 + 3*597*FLEN/8, x4, x1, x2)

inst_91222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000000ffff; valaddr_reg:x3; val_offset:273666*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273666*0 + 3*598*FLEN/8, x4, x1, x2)

inst_91223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000001ffff; valaddr_reg:x3; val_offset:273669*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273669*0 + 3*599*FLEN/8, x4, x1, x2)

inst_91224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000003ffff; valaddr_reg:x3; val_offset:273672*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273672*0 + 3*600*FLEN/8, x4, x1, x2)

inst_91225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000007ffff; valaddr_reg:x3; val_offset:273675*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273675*0 + 3*601*FLEN/8, x4, x1, x2)

inst_91226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000000fffff; valaddr_reg:x3; val_offset:273678*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273678*0 + 3*602*FLEN/8, x4, x1, x2)

inst_91227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000001fffff; valaddr_reg:x3; val_offset:273681*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273681*0 + 3*603*FLEN/8, x4, x1, x2)

inst_91228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000003fffff; valaddr_reg:x3; val_offset:273684*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273684*0 + 3*604*FLEN/8, x4, x1, x2)

inst_91229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000007fffff; valaddr_reg:x3; val_offset:273687*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273687*0 + 3*605*FLEN/8, x4, x1, x2)

inst_91230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000000ffffff; valaddr_reg:x3; val_offset:273690*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273690*0 + 3*606*FLEN/8, x4, x1, x2)

inst_91231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000001ffffff; valaddr_reg:x3; val_offset:273693*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273693*0 + 3*607*FLEN/8, x4, x1, x2)

inst_91232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000003ffffff; valaddr_reg:x3; val_offset:273696*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273696*0 + 3*608*FLEN/8, x4, x1, x2)

inst_91233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000007ffffff; valaddr_reg:x3; val_offset:273699*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273699*0 + 3*609*FLEN/8, x4, x1, x2)

inst_91234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000000fffffff; valaddr_reg:x3; val_offset:273702*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273702*0 + 3*610*FLEN/8, x4, x1, x2)

inst_91235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000001fffffff; valaddr_reg:x3; val_offset:273705*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273705*0 + 3*611*FLEN/8, x4, x1, x2)

inst_91236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000003fffffff; valaddr_reg:x3; val_offset:273708*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273708*0 + 3*612*FLEN/8, x4, x1, x2)

inst_91237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000007fffffff; valaddr_reg:x3; val_offset:273711*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273711*0 + 3*613*FLEN/8, x4, x1, x2)

inst_91238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00000ffffffff; valaddr_reg:x3; val_offset:273714*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273714*0 + 3*614*FLEN/8, x4, x1, x2)

inst_91239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00001ffffffff; valaddr_reg:x3; val_offset:273717*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273717*0 + 3*615*FLEN/8, x4, x1, x2)

inst_91240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00003ffffffff; valaddr_reg:x3; val_offset:273720*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273720*0 + 3*616*FLEN/8, x4, x1, x2)

inst_91241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00007ffffffff; valaddr_reg:x3; val_offset:273723*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273723*0 + 3*617*FLEN/8, x4, x1, x2)

inst_91242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0000fffffffff; valaddr_reg:x3; val_offset:273726*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273726*0 + 3*618*FLEN/8, x4, x1, x2)

inst_91243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0001fffffffff; valaddr_reg:x3; val_offset:273729*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273729*0 + 3*619*FLEN/8, x4, x1, x2)

inst_91244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0003fffffffff; valaddr_reg:x3; val_offset:273732*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273732*0 + 3*620*FLEN/8, x4, x1, x2)

inst_91245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0007fffffffff; valaddr_reg:x3; val_offset:273735*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273735*0 + 3*621*FLEN/8, x4, x1, x2)

inst_91246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe000ffffffffff; valaddr_reg:x3; val_offset:273738*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273738*0 + 3*622*FLEN/8, x4, x1, x2)

inst_91247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe001ffffffffff; valaddr_reg:x3; val_offset:273741*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273741*0 + 3*623*FLEN/8, x4, x1, x2)

inst_91248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe003ffffffffff; valaddr_reg:x3; val_offset:273744*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273744*0 + 3*624*FLEN/8, x4, x1, x2)

inst_91249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe007ffffffffff; valaddr_reg:x3; val_offset:273747*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273747*0 + 3*625*FLEN/8, x4, x1, x2)

inst_91250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe00fffffffffff; valaddr_reg:x3; val_offset:273750*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273750*0 + 3*626*FLEN/8, x4, x1, x2)

inst_91251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe01fffffffffff; valaddr_reg:x3; val_offset:273753*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273753*0 + 3*627*FLEN/8, x4, x1, x2)

inst_91252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe03fffffffffff; valaddr_reg:x3; val_offset:273756*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273756*0 + 3*628*FLEN/8, x4, x1, x2)

inst_91253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe07fffffffffff; valaddr_reg:x3; val_offset:273759*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273759*0 + 3*629*FLEN/8, x4, x1, x2)

inst_91254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe0ffffffffffff; valaddr_reg:x3; val_offset:273762*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273762*0 + 3*630*FLEN/8, x4, x1, x2)

inst_91255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe1ffffffffffff; valaddr_reg:x3; val_offset:273765*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273765*0 + 3*631*FLEN/8, x4, x1, x2)

inst_91256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe3ffffffffffff; valaddr_reg:x3; val_offset:273768*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273768*0 + 3*632*FLEN/8, x4, x1, x2)

inst_91257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe7ffffffffffff; valaddr_reg:x3; val_offset:273771*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273771*0 + 3*633*FLEN/8, x4, x1, x2)

inst_91258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fe8000000000000; valaddr_reg:x3; val_offset:273774*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273774*0 + 3*634*FLEN/8, x4, x1, x2)

inst_91259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fec000000000000; valaddr_reg:x3; val_offset:273777*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273777*0 + 3*635*FLEN/8, x4, x1, x2)

inst_91260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fee000000000000; valaddr_reg:x3; val_offset:273780*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273780*0 + 3*636*FLEN/8, x4, x1, x2)

inst_91261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fef000000000000; valaddr_reg:x3; val_offset:273783*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273783*0 + 3*637*FLEN/8, x4, x1, x2)

inst_91262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fef800000000000; valaddr_reg:x3; val_offset:273786*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273786*0 + 3*638*FLEN/8, x4, x1, x2)

inst_91263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefc00000000000; valaddr_reg:x3; val_offset:273789*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273789*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_91264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefe00000000000; valaddr_reg:x3; val_offset:273792*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273792*0 + 3*640*FLEN/8, x4, x1, x2)

inst_91265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feff00000000000; valaddr_reg:x3; val_offset:273795*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273795*0 + 3*641*FLEN/8, x4, x1, x2)

inst_91266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feff80000000000; valaddr_reg:x3; val_offset:273798*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273798*0 + 3*642*FLEN/8, x4, x1, x2)

inst_91267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffc0000000000; valaddr_reg:x3; val_offset:273801*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273801*0 + 3*643*FLEN/8, x4, x1, x2)

inst_91268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffe0000000000; valaddr_reg:x3; val_offset:273804*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273804*0 + 3*644*FLEN/8, x4, x1, x2)

inst_91269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefff0000000000; valaddr_reg:x3; val_offset:273807*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273807*0 + 3*645*FLEN/8, x4, x1, x2)

inst_91270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefff8000000000; valaddr_reg:x3; val_offset:273810*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273810*0 + 3*646*FLEN/8, x4, x1, x2)

inst_91271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffc000000000; valaddr_reg:x3; val_offset:273813*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273813*0 + 3*647*FLEN/8, x4, x1, x2)

inst_91272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffe000000000; valaddr_reg:x3; val_offset:273816*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273816*0 + 3*648*FLEN/8, x4, x1, x2)

inst_91273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffff000000000; valaddr_reg:x3; val_offset:273819*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273819*0 + 3*649*FLEN/8, x4, x1, x2)

inst_91274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffff800000000; valaddr_reg:x3; val_offset:273822*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273822*0 + 3*650*FLEN/8, x4, x1, x2)

inst_91275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffc00000000; valaddr_reg:x3; val_offset:273825*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273825*0 + 3*651*FLEN/8, x4, x1, x2)

inst_91276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffe00000000; valaddr_reg:x3; val_offset:273828*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273828*0 + 3*652*FLEN/8, x4, x1, x2)

inst_91277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffff00000000; valaddr_reg:x3; val_offset:273831*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273831*0 + 3*653*FLEN/8, x4, x1, x2)

inst_91278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffff80000000; valaddr_reg:x3; val_offset:273834*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273834*0 + 3*654*FLEN/8, x4, x1, x2)

inst_91279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffc0000000; valaddr_reg:x3; val_offset:273837*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273837*0 + 3*655*FLEN/8, x4, x1, x2)

inst_91280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffe0000000; valaddr_reg:x3; val_offset:273840*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273840*0 + 3*656*FLEN/8, x4, x1, x2)

inst_91281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffff0000000; valaddr_reg:x3; val_offset:273843*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273843*0 + 3*657*FLEN/8, x4, x1, x2)

inst_91282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffff8000000; valaddr_reg:x3; val_offset:273846*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273846*0 + 3*658*FLEN/8, x4, x1, x2)

inst_91283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffc000000; valaddr_reg:x3; val_offset:273849*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273849*0 + 3*659*FLEN/8, x4, x1, x2)

inst_91284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffe000000; valaddr_reg:x3; val_offset:273852*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273852*0 + 3*660*FLEN/8, x4, x1, x2)

inst_91285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffff000000; valaddr_reg:x3; val_offset:273855*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273855*0 + 3*661*FLEN/8, x4, x1, x2)

inst_91286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffff800000; valaddr_reg:x3; val_offset:273858*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273858*0 + 3*662*FLEN/8, x4, x1, x2)

inst_91287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffc00000; valaddr_reg:x3; val_offset:273861*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273861*0 + 3*663*FLEN/8, x4, x1, x2)

inst_91288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffe00000; valaddr_reg:x3; val_offset:273864*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273864*0 + 3*664*FLEN/8, x4, x1, x2)

inst_91289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffff00000; valaddr_reg:x3; val_offset:273867*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273867*0 + 3*665*FLEN/8, x4, x1, x2)

inst_91290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffff80000; valaddr_reg:x3; val_offset:273870*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273870*0 + 3*666*FLEN/8, x4, x1, x2)

inst_91291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffc0000; valaddr_reg:x3; val_offset:273873*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273873*0 + 3*667*FLEN/8, x4, x1, x2)

inst_91292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffe0000; valaddr_reg:x3; val_offset:273876*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273876*0 + 3*668*FLEN/8, x4, x1, x2)

inst_91293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffff0000; valaddr_reg:x3; val_offset:273879*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273879*0 + 3*669*FLEN/8, x4, x1, x2)

inst_91294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffff8000; valaddr_reg:x3; val_offset:273882*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273882*0 + 3*670*FLEN/8, x4, x1, x2)

inst_91295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffc000; valaddr_reg:x3; val_offset:273885*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273885*0 + 3*671*FLEN/8, x4, x1, x2)

inst_91296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffe000; valaddr_reg:x3; val_offset:273888*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273888*0 + 3*672*FLEN/8, x4, x1, x2)

inst_91297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffff000; valaddr_reg:x3; val_offset:273891*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273891*0 + 3*673*FLEN/8, x4, x1, x2)

inst_91298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffff800; valaddr_reg:x3; val_offset:273894*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273894*0 + 3*674*FLEN/8, x4, x1, x2)

inst_91299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffffc00; valaddr_reg:x3; val_offset:273897*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273897*0 + 3*675*FLEN/8, x4, x1, x2)

inst_91300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffffe00; valaddr_reg:x3; val_offset:273900*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273900*0 + 3*676*FLEN/8, x4, x1, x2)

inst_91301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffff00; valaddr_reg:x3; val_offset:273903*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273903*0 + 3*677*FLEN/8, x4, x1, x2)

inst_91302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffff80; valaddr_reg:x3; val_offset:273906*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273906*0 + 3*678*FLEN/8, x4, x1, x2)

inst_91303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffffc0; valaddr_reg:x3; val_offset:273909*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273909*0 + 3*679*FLEN/8, x4, x1, x2)

inst_91304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffffe0; valaddr_reg:x3; val_offset:273912*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273912*0 + 3*680*FLEN/8, x4, x1, x2)

inst_91305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffffff0; valaddr_reg:x3; val_offset:273915*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273915*0 + 3*681*FLEN/8, x4, x1, x2)

inst_91306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffffff8; valaddr_reg:x3; val_offset:273918*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273918*0 + 3*682*FLEN/8, x4, x1, x2)

inst_91307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffffffc; valaddr_reg:x3; val_offset:273921*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273921*0 + 3*683*FLEN/8, x4, x1, x2)

inst_91308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3feffffffffffffe; valaddr_reg:x3; val_offset:273924*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273924*0 + 3*684*FLEN/8, x4, x1, x2)

inst_91309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fefffffffffffff; valaddr_reg:x3; val_offset:273927*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273927*0 + 3*685*FLEN/8, x4, x1, x2)

inst_91310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:273930*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273930*0 + 3*686*FLEN/8, x4, x1, x2)

inst_91311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:273933*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273933*0 + 3*687*FLEN/8, x4, x1, x2)

inst_91312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:273936*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273936*0 + 3*688*FLEN/8, x4, x1, x2)

inst_91313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:273939*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273939*0 + 3*689*FLEN/8, x4, x1, x2)

inst_91314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:273942*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273942*0 + 3*690*FLEN/8, x4, x1, x2)

inst_91315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:273945*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273945*0 + 3*691*FLEN/8, x4, x1, x2)

inst_91316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:273948*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273948*0 + 3*692*FLEN/8, x4, x1, x2)

inst_91317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:273951*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273951*0 + 3*693*FLEN/8, x4, x1, x2)

inst_91318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:273954*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273954*0 + 3*694*FLEN/8, x4, x1, x2)

inst_91319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:273957*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273957*0 + 3*695*FLEN/8, x4, x1, x2)

inst_91320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:273960*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273960*0 + 3*696*FLEN/8, x4, x1, x2)

inst_91321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:273963*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273963*0 + 3*697*FLEN/8, x4, x1, x2)

inst_91322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:273966*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273966*0 + 3*698*FLEN/8, x4, x1, x2)

inst_91323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:273969*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273969*0 + 3*699*FLEN/8, x4, x1, x2)

inst_91324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:273972*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273972*0 + 3*700*FLEN/8, x4, x1, x2)

inst_91325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:273975*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273975*0 + 3*701*FLEN/8, x4, x1, x2)

inst_91326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:273978*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273978*0 + 3*702*FLEN/8, x4, x1, x2)

inst_91327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:273981*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273981*0 + 3*703*FLEN/8, x4, x1, x2)

inst_91328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:273984*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273984*0 + 3*704*FLEN/8, x4, x1, x2)

inst_91329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:273987*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273987*0 + 3*705*FLEN/8, x4, x1, x2)

inst_91330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:273990*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273990*0 + 3*706*FLEN/8, x4, x1, x2)

inst_91331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1ddfaae044819 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faca7f05ab9b50e; op2val:0x2031ddfaae044819;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:273993*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273993*0 + 3*707*FLEN/8, x4, x1, x2)

inst_91332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:273996*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273996*0 + 3*708*FLEN/8, x4, x1, x2)

inst_91333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:273999*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273999*0 + 3*709*FLEN/8, x4, x1, x2)

inst_91334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:274002*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274002*0 + 3*710*FLEN/8, x4, x1, x2)

inst_91335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:274005*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274005*0 + 3*711*FLEN/8, x4, x1, x2)

inst_91336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:274008*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274008*0 + 3*712*FLEN/8, x4, x1, x2)

inst_91337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:274011*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274011*0 + 3*713*FLEN/8, x4, x1, x2)

inst_91338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:274014*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274014*0 + 3*714*FLEN/8, x4, x1, x2)

inst_91339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:274017*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274017*0 + 3*715*FLEN/8, x4, x1, x2)

inst_91340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:274020*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274020*0 + 3*716*FLEN/8, x4, x1, x2)

inst_91341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:274023*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274023*0 + 3*717*FLEN/8, x4, x1, x2)

inst_91342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:274026*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274026*0 + 3*718*FLEN/8, x4, x1, x2)

inst_91343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:274029*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274029*0 + 3*719*FLEN/8, x4, x1, x2)

inst_91344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:274032*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274032*0 + 3*720*FLEN/8, x4, x1, x2)

inst_91345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:274035*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274035*0 + 3*721*FLEN/8, x4, x1, x2)

inst_91346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:274038*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274038*0 + 3*722*FLEN/8, x4, x1, x2)

inst_91347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:274041*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274041*0 + 3*723*FLEN/8, x4, x1, x2)

inst_91348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:274044*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274044*0 + 3*724*FLEN/8, x4, x1, x2)

inst_91349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:274047*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274047*0 + 3*725*FLEN/8, x4, x1, x2)

inst_91350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:274050*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274050*0 + 3*726*FLEN/8, x4, x1, x2)

inst_91351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:274053*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274053*0 + 3*727*FLEN/8, x4, x1, x2)

inst_91352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:274056*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274056*0 + 3*728*FLEN/8, x4, x1, x2)

inst_91353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:274059*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274059*0 + 3*729*FLEN/8, x4, x1, x2)

inst_91354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000000000; valaddr_reg:x3; val_offset:274062*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274062*0 + 3*730*FLEN/8, x4, x1, x2)

inst_91355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000000001; valaddr_reg:x3; val_offset:274065*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274065*0 + 3*731*FLEN/8, x4, x1, x2)

inst_91356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000000003; valaddr_reg:x3; val_offset:274068*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274068*0 + 3*732*FLEN/8, x4, x1, x2)

inst_91357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000000007; valaddr_reg:x3; val_offset:274071*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274071*0 + 3*733*FLEN/8, x4, x1, x2)

inst_91358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000000000f; valaddr_reg:x3; val_offset:274074*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274074*0 + 3*734*FLEN/8, x4, x1, x2)

inst_91359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000000001f; valaddr_reg:x3; val_offset:274077*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274077*0 + 3*735*FLEN/8, x4, x1, x2)

inst_91360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000000003f; valaddr_reg:x3; val_offset:274080*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274080*0 + 3*736*FLEN/8, x4, x1, x2)

inst_91361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000000007f; valaddr_reg:x3; val_offset:274083*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274083*0 + 3*737*FLEN/8, x4, x1, x2)

inst_91362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000000000ff; valaddr_reg:x3; val_offset:274086*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274086*0 + 3*738*FLEN/8, x4, x1, x2)

inst_91363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000000001ff; valaddr_reg:x3; val_offset:274089*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274089*0 + 3*739*FLEN/8, x4, x1, x2)

inst_91364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000000003ff; valaddr_reg:x3; val_offset:274092*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274092*0 + 3*740*FLEN/8, x4, x1, x2)

inst_91365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000000007ff; valaddr_reg:x3; val_offset:274095*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274095*0 + 3*741*FLEN/8, x4, x1, x2)

inst_91366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000000fff; valaddr_reg:x3; val_offset:274098*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274098*0 + 3*742*FLEN/8, x4, x1, x2)

inst_91367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000001fff; valaddr_reg:x3; val_offset:274101*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274101*0 + 3*743*FLEN/8, x4, x1, x2)

inst_91368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000003fff; valaddr_reg:x3; val_offset:274104*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274104*0 + 3*744*FLEN/8, x4, x1, x2)

inst_91369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000007fff; valaddr_reg:x3; val_offset:274107*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274107*0 + 3*745*FLEN/8, x4, x1, x2)

inst_91370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000000ffff; valaddr_reg:x3; val_offset:274110*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274110*0 + 3*746*FLEN/8, x4, x1, x2)

inst_91371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000001ffff; valaddr_reg:x3; val_offset:274113*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274113*0 + 3*747*FLEN/8, x4, x1, x2)

inst_91372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000003ffff; valaddr_reg:x3; val_offset:274116*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274116*0 + 3*748*FLEN/8, x4, x1, x2)

inst_91373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000007ffff; valaddr_reg:x3; val_offset:274119*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274119*0 + 3*749*FLEN/8, x4, x1, x2)

inst_91374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000000fffff; valaddr_reg:x3; val_offset:274122*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274122*0 + 3*750*FLEN/8, x4, x1, x2)

inst_91375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000001fffff; valaddr_reg:x3; val_offset:274125*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274125*0 + 3*751*FLEN/8, x4, x1, x2)

inst_91376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000003fffff; valaddr_reg:x3; val_offset:274128*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274128*0 + 3*752*FLEN/8, x4, x1, x2)

inst_91377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000007fffff; valaddr_reg:x3; val_offset:274131*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274131*0 + 3*753*FLEN/8, x4, x1, x2)

inst_91378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000000ffffff; valaddr_reg:x3; val_offset:274134*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274134*0 + 3*754*FLEN/8, x4, x1, x2)

inst_91379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000001ffffff; valaddr_reg:x3; val_offset:274137*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274137*0 + 3*755*FLEN/8, x4, x1, x2)

inst_91380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000003ffffff; valaddr_reg:x3; val_offset:274140*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274140*0 + 3*756*FLEN/8, x4, x1, x2)

inst_91381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000007ffffff; valaddr_reg:x3; val_offset:274143*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274143*0 + 3*757*FLEN/8, x4, x1, x2)

inst_91382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000000fffffff; valaddr_reg:x3; val_offset:274146*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274146*0 + 3*758*FLEN/8, x4, x1, x2)

inst_91383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000001fffffff; valaddr_reg:x3; val_offset:274149*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274149*0 + 3*759*FLEN/8, x4, x1, x2)

inst_91384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000003fffffff; valaddr_reg:x3; val_offset:274152*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274152*0 + 3*760*FLEN/8, x4, x1, x2)

inst_91385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x803000007fffffff; valaddr_reg:x3; val_offset:274155*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274155*0 + 3*761*FLEN/8, x4, x1, x2)

inst_91386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300000ffffffff; valaddr_reg:x3; val_offset:274158*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274158*0 + 3*762*FLEN/8, x4, x1, x2)

inst_91387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300001ffffffff; valaddr_reg:x3; val_offset:274161*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274161*0 + 3*763*FLEN/8, x4, x1, x2)

inst_91388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300003ffffffff; valaddr_reg:x3; val_offset:274164*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274164*0 + 3*764*FLEN/8, x4, x1, x2)

inst_91389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x80300007ffffffff; valaddr_reg:x3; val_offset:274167*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274167*0 + 3*765*FLEN/8, x4, x1, x2)

inst_91390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030000fffffffff; valaddr_reg:x3; val_offset:274170*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274170*0 + 3*766*FLEN/8, x4, x1, x2)

inst_91391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcaba21121ceb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facaba21121ceb3; op2val:0x8000;
op3val:0x8030001fffffffff; valaddr_reg:x3; val_offset:274173*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274173*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6893999676995112145,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150912,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150913,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150915,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150919,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150927,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150943,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150975,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151039,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151167,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151423,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151935,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802152959,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802155007,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802159103,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802167295,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802183679,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802216447,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802281983,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802413055,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802675199,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191803199487,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191804248063,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191806345215,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191810539519,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191818928127,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191835705343,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191869259775,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191936368639,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192070586367,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192339021823,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192875892735,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079193949634559,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079196097118207,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079200392085503,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079208982020095,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079226161889279,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079260521627647,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079329241104383,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079466680057855,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079741557964799,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99080291313778687,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99081390825406463,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99083589848662015,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99087987895173119,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99096783988195327,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99114376174239743,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99149560546328575,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99219929290506239,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99360666778861567,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99642141755572223,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(100205091708993535,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836159,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836160,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(102456891522678784,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103019841476100096,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103301316452810752,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103442053941166080,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103512422685343744,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103547607057432576,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103565199243476992,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103573995336499200,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103578393383010304,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103580592406265856,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103581691917893632,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582241673707520,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582516551614464,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582653990567936,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582722710044672,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582757069783040,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582774249652224,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582782839586816,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582787134554112,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582789282037760,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790355779584,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790892650496,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791161085952,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791295303680,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791362412544,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791395966976,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791412744192,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791421132800,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791425327104,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791427424256,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428472832,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428997120,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429259264,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429390336,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429455872,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429488640,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429505024,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429513216,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429517312,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429519360,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520384,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520896,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521152,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521280,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521344,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521376,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521392,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521400,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521404,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521406,64,FLEN)
NAN_BOXED(6894036355589425207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521407,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226368,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226369,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226371,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226375,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226383,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226399,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226431,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226495,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226623,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226879,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703227391,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703228415,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703230463,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703234559,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703242751,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703259135,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703291903,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703357439,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703488511,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703750655,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787704274943,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787705323519,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787707420671,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787711614975,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787720003583,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787736780799,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787770335231,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787837444095,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787971661823,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788240097279,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788776968191,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618789850710015,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618791998193663,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618796293160959,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618804883095551,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618822062964735,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618856422703103,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618925142179839,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619062581133311,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619337459040255,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619887214854143,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148620986726481919,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148623185749737471,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148627583796248575,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148636379889270783,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148653972075315199,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148689156447404031,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148759525191581695,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148900262679937023,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149181737656647679,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149744687610068991,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911615,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911616,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(151996487423754240,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152559437377175552,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152840912353886208,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152981649842241536,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153052018586419200,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153087202958508032,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153104795144552448,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153113591237574656,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153117989284085760,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153120188307341312,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121287818969088,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121837574782976,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122112452689920,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122249891643392,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122318611120128,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122352970858496,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122370150727680,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122378740662272,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122383035629568,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122385183113216,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386256855040,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386793725952,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387062161408,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387196379136,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387263488000,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387297042432,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387313819648,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387322208256,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387326402560,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387328499712,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387329548288,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330072576,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330334720,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330465792,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330531328,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330564096,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330580480,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330588672,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330592768,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330594816,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330595840,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596352,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596608,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596736,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596800,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596832,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596848,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596856,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596860,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596862,64,FLEN)
NAN_BOXED(6894052407127856440,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596863,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261184,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261185,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261187,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261191,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261199,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261215,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261247,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261311,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261439,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261695,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303262207,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303263231,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303265279,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303269375,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303277567,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303293951,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303326719,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303392255,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303523327,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303785471,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625304309759,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625305358335,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625307455487,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625311649791,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625320038399,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625336815615,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625370370047,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625437478911,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625571696639,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625840132095,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983626377003007,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983627450744831,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983629598228479,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983633893195775,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983642483130367,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983659662999551,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983694022737919,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983762742214655,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983900181168127,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984175059075071,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984724814888959,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362985824326516735,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362988023349772287,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362992421396283391,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363001217489305599,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363018809675350015,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363053994047438847,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363124362791616511,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363265100279971839,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363546575256682495,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9364109525210103807,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946431,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946432,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366361325023789056,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366924274977210368,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367205749953921024,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367346487442276352,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367416856186454016,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367452040558542848,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367469632744587264,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367478428837609472,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367482826884120576,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367485025907376128,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486125419003904,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486675174817792,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486950052724736,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487087491678208,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487156211154944,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487190570893312,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487207750762496,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487216340697088,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487220635664384,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487222783148032,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487223856889856,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224393760768,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224662196224,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224796413952,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224863522816,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224897077248,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224913854464,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224922243072,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224926437376,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224928534528,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224929583104,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930107392,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930369536,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930500608,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930566144,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930598912,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930615296,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930623488,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930627584,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930629632,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930630656,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631168,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631424,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631552,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631616,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631648,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631664,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631672,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631676,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631678,64,FLEN)
NAN_BOXED(6894062554711120710,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631679,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592704,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592705,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592707,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592711,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592719,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592735,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592767,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592831,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115592959,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115593215,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115593727,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115594751,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115596799,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115600895,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115609087,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115625471,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115658239,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115723775,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301115854847,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301116116991,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301116641279,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301117689855,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301119787007,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301123981311,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301132369919,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301149147135,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301182701567,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301249810431,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301384028159,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115301652463615,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115302189334527,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115303263076351,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115305410559999,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115309705527295,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115318295461887,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115335475331071,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115369835069439,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115438554546175,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115575993499647,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281115850871406591,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281116400627220479,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281117500138848255,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281119699162103807,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281124097208614911,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281132893301637119,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281150485487681535,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281185669859770367,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281256038603948031,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281396776092303359,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13281678251069014015,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13282241201022435327,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13283367100929277951,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13283367100929277952,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13284493000836120576,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285055950789541888,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285337425766252544,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285478163254607872,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285548531998785536,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285583716370874368,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285601308556918784,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285610104649940992,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285614502696452096,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285616701719707648,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285617801231335424,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618350987149312,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618625865056256,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618763304009728,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618832023486464,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618866383224832,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618883563094016,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618892153028608,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618896447995904,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618898595479552,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618899669221376,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900206092288,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900474527744,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900608745472,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900675854336,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900709408768,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900726185984,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900734574592,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900738768896,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900740866048,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900741914624,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742438912,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742701056,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742832128,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742897664,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742930432,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742946816,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742955008,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742959104,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742961152,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742962176,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742962688,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742962944,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963072,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963136,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963168,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963184,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963192,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963196,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963198,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13285618900742963199,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894064342688418458,64,FLEN)
NAN_BOXED(11511729583953940916,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646912,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646913,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646915,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646919,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646927,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646943,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172646975,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172647039,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172647167,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172647423,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172647935,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172648959,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172651007,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172655103,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172663295,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172679679,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172712447,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172777983,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819172909055,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819173171199,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819173695487,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819174744063,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819176841215,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819181035519,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819189424127,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819206201343,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819239755775,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819306864639,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819441082367,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678819709517823,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678820246388735,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678821320130559,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678823467614207,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678827762581503,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678836352516095,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678853532385279,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678887892123647,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602678956611600383,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602679094050553855,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602679368928460799,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602679918684274687,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602681018195902463,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602683217219158015,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602687615265669119,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602696411358691327,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602714003544735743,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602749187916824575,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602819556661002239,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4602960294149357567,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4603241769126068223,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4603804719079489535,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4604930618986332159,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4604930618986332160,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4606056518893174784,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4606619468846596096,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4606900943823306752,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607041681311662080,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607112050055839744,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607147234427928576,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607164826613972992,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607173622706995200,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607178020753506304,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607180219776761856,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607181319288389632,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607181869044203520,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182143922110464,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182281361063936,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182350080540672,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182384440279040,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182401620148224,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182410210082816,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182414505050112,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182416652533760,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182417726275584,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418263146496,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418531581952,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418665799680,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418732908544,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418766462976,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418783240192,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418791628800,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418795823104,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418797920256,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418798968832,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418799493120,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418799755264,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418799886336,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418799951872,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418799984640,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800001024,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800009216,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800013312,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800015360,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800016384,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800016896,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017152,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017280,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017344,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017376,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017392,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017400,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017404,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017406,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017407,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894069780353496334,64,FLEN)
NAN_BOXED(2319879351803594777,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887296,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887297,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887299,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887303,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887311,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887327,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887359,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887423,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887551,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887807,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736888319,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736889343,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736891391,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736895487,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736903679,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736920063,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736952831,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737018367,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737149439,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737411583,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737935871,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835738984447,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835741081599,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835745275903,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835753664511,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835770441727,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835803996159,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835871105023,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836005322751,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836273758207,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836810629119,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882837884370943,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882840031854591,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882844326821887,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882852916756479,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882870096625663,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882904456364031,64,FLEN)
NAN_BOXED(6894073842157866675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882973175840767,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
