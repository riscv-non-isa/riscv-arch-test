
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_15360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:46080*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46080*0 + 3*0*FLEN/8, x4, x1, x2)

inst_15361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:46083*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46083*0 + 3*1*FLEN/8, x4, x1, x2)

inst_15362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:46086*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46086*0 + 3*2*FLEN/8, x4, x1, x2)

inst_15363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:46089*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46089*0 + 3*3*FLEN/8, x4, x1, x2)

inst_15364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:46092*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46092*0 + 3*4*FLEN/8, x4, x1, x2)

inst_15365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:46095*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46095*0 + 3*5*FLEN/8, x4, x1, x2)

inst_15366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:46098*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46098*0 + 3*6*FLEN/8, x4, x1, x2)

inst_15367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:46101*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46101*0 + 3*7*FLEN/8, x4, x1, x2)

inst_15368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:46104*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46104*0 + 3*8*FLEN/8, x4, x1, x2)

inst_15369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:46107*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46107*0 + 3*9*FLEN/8, x4, x1, x2)

inst_15370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:46110*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46110*0 + 3*10*FLEN/8, x4, x1, x2)

inst_15371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:46113*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46113*0 + 3*11*FLEN/8, x4, x1, x2)

inst_15372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:46116*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46116*0 + 3*12*FLEN/8, x4, x1, x2)

inst_15373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:46119*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46119*0 + 3*13*FLEN/8, x4, x1, x2)

inst_15374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:46122*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46122*0 + 3*14*FLEN/8, x4, x1, x2)

inst_15375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:46125*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46125*0 + 3*15*FLEN/8, x4, x1, x2)

inst_15376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:46128*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46128*0 + 3*16*FLEN/8, x4, x1, x2)

inst_15377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:46131*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46131*0 + 3*17*FLEN/8, x4, x1, x2)

inst_15378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:46134*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46134*0 + 3*18*FLEN/8, x4, x1, x2)

inst_15379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:46137*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46137*0 + 3*19*FLEN/8, x4, x1, x2)

inst_15380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:46140*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46140*0 + 3*20*FLEN/8, x4, x1, x2)

inst_15381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:46143*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46143*0 + 3*21*FLEN/8, x4, x1, x2)

inst_15382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000000000; valaddr_reg:x3; val_offset:46146*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46146*0 + 3*22*FLEN/8, x4, x1, x2)

inst_15383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000000001; valaddr_reg:x3; val_offset:46149*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46149*0 + 3*23*FLEN/8, x4, x1, x2)

inst_15384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000000003; valaddr_reg:x3; val_offset:46152*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46152*0 + 3*24*FLEN/8, x4, x1, x2)

inst_15385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000000007; valaddr_reg:x3; val_offset:46155*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46155*0 + 3*25*FLEN/8, x4, x1, x2)

inst_15386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000000000f; valaddr_reg:x3; val_offset:46158*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46158*0 + 3*26*FLEN/8, x4, x1, x2)

inst_15387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000000001f; valaddr_reg:x3; val_offset:46161*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46161*0 + 3*27*FLEN/8, x4, x1, x2)

inst_15388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000000003f; valaddr_reg:x3; val_offset:46164*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46164*0 + 3*28*FLEN/8, x4, x1, x2)

inst_15389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000000007f; valaddr_reg:x3; val_offset:46167*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46167*0 + 3*29*FLEN/8, x4, x1, x2)

inst_15390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000000000ff; valaddr_reg:x3; val_offset:46170*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46170*0 + 3*30*FLEN/8, x4, x1, x2)

inst_15391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000000001ff; valaddr_reg:x3; val_offset:46173*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46173*0 + 3*31*FLEN/8, x4, x1, x2)

inst_15392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000000003ff; valaddr_reg:x3; val_offset:46176*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46176*0 + 3*32*FLEN/8, x4, x1, x2)

inst_15393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000000007ff; valaddr_reg:x3; val_offset:46179*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46179*0 + 3*33*FLEN/8, x4, x1, x2)

inst_15394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000000fff; valaddr_reg:x3; val_offset:46182*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46182*0 + 3*34*FLEN/8, x4, x1, x2)

inst_15395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000001fff; valaddr_reg:x3; val_offset:46185*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46185*0 + 3*35*FLEN/8, x4, x1, x2)

inst_15396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000003fff; valaddr_reg:x3; val_offset:46188*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46188*0 + 3*36*FLEN/8, x4, x1, x2)

inst_15397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000007fff; valaddr_reg:x3; val_offset:46191*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46191*0 + 3*37*FLEN/8, x4, x1, x2)

inst_15398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000000ffff; valaddr_reg:x3; val_offset:46194*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46194*0 + 3*38*FLEN/8, x4, x1, x2)

inst_15399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000001ffff; valaddr_reg:x3; val_offset:46197*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46197*0 + 3*39*FLEN/8, x4, x1, x2)

inst_15400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000003ffff; valaddr_reg:x3; val_offset:46200*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46200*0 + 3*40*FLEN/8, x4, x1, x2)

inst_15401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000007ffff; valaddr_reg:x3; val_offset:46203*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46203*0 + 3*41*FLEN/8, x4, x1, x2)

inst_15402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000000fffff; valaddr_reg:x3; val_offset:46206*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46206*0 + 3*42*FLEN/8, x4, x1, x2)

inst_15403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000001fffff; valaddr_reg:x3; val_offset:46209*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46209*0 + 3*43*FLEN/8, x4, x1, x2)

inst_15404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000003fffff; valaddr_reg:x3; val_offset:46212*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46212*0 + 3*44*FLEN/8, x4, x1, x2)

inst_15405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000007fffff; valaddr_reg:x3; val_offset:46215*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46215*0 + 3*45*FLEN/8, x4, x1, x2)

inst_15406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000000ffffff; valaddr_reg:x3; val_offset:46218*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46218*0 + 3*46*FLEN/8, x4, x1, x2)

inst_15407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000001ffffff; valaddr_reg:x3; val_offset:46221*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46221*0 + 3*47*FLEN/8, x4, x1, x2)

inst_15408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000003ffffff; valaddr_reg:x3; val_offset:46224*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46224*0 + 3*48*FLEN/8, x4, x1, x2)

inst_15409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000007ffffff; valaddr_reg:x3; val_offset:46227*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46227*0 + 3*49*FLEN/8, x4, x1, x2)

inst_15410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000000fffffff; valaddr_reg:x3; val_offset:46230*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46230*0 + 3*50*FLEN/8, x4, x1, x2)

inst_15411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000001fffffff; valaddr_reg:x3; val_offset:46233*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46233*0 + 3*51*FLEN/8, x4, x1, x2)

inst_15412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000003fffffff; valaddr_reg:x3; val_offset:46236*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46236*0 + 3*52*FLEN/8, x4, x1, x2)

inst_15413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000007fffffff; valaddr_reg:x3; val_offset:46239*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46239*0 + 3*53*FLEN/8, x4, x1, x2)

inst_15414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900000ffffffff; valaddr_reg:x3; val_offset:46242*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46242*0 + 3*54*FLEN/8, x4, x1, x2)

inst_15415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900001ffffffff; valaddr_reg:x3; val_offset:46245*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46245*0 + 3*55*FLEN/8, x4, x1, x2)

inst_15416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900003ffffffff; valaddr_reg:x3; val_offset:46248*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46248*0 + 3*56*FLEN/8, x4, x1, x2)

inst_15417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900007ffffffff; valaddr_reg:x3; val_offset:46251*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46251*0 + 3*57*FLEN/8, x4, x1, x2)

inst_15418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190000fffffffff; valaddr_reg:x3; val_offset:46254*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46254*0 + 3*58*FLEN/8, x4, x1, x2)

inst_15419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190001fffffffff; valaddr_reg:x3; val_offset:46257*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46257*0 + 3*59*FLEN/8, x4, x1, x2)

inst_15420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190003fffffffff; valaddr_reg:x3; val_offset:46260*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46260*0 + 3*60*FLEN/8, x4, x1, x2)

inst_15421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190007fffffffff; valaddr_reg:x3; val_offset:46263*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46263*0 + 3*61*FLEN/8, x4, x1, x2)

inst_15422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19000ffffffffff; valaddr_reg:x3; val_offset:46266*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46266*0 + 3*62*FLEN/8, x4, x1, x2)

inst_15423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19001ffffffffff; valaddr_reg:x3; val_offset:46269*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46269*0 + 3*63*FLEN/8, x4, x1, x2)

inst_15424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19003ffffffffff; valaddr_reg:x3; val_offset:46272*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46272*0 + 3*64*FLEN/8, x4, x1, x2)

inst_15425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19007ffffffffff; valaddr_reg:x3; val_offset:46275*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46275*0 + 3*65*FLEN/8, x4, x1, x2)

inst_15426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1900fffffffffff; valaddr_reg:x3; val_offset:46278*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46278*0 + 3*66*FLEN/8, x4, x1, x2)

inst_15427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1901fffffffffff; valaddr_reg:x3; val_offset:46281*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46281*0 + 3*67*FLEN/8, x4, x1, x2)

inst_15428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1903fffffffffff; valaddr_reg:x3; val_offset:46284*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46284*0 + 3*68*FLEN/8, x4, x1, x2)

inst_15429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x1907fffffffffff; valaddr_reg:x3; val_offset:46287*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46287*0 + 3*69*FLEN/8, x4, x1, x2)

inst_15430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x190ffffffffffff; valaddr_reg:x3; val_offset:46290*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46290*0 + 3*70*FLEN/8, x4, x1, x2)

inst_15431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x191ffffffffffff; valaddr_reg:x3; val_offset:46293*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46293*0 + 3*71*FLEN/8, x4, x1, x2)

inst_15432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x193ffffffffffff; valaddr_reg:x3; val_offset:46296*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46296*0 + 3*72*FLEN/8, x4, x1, x2)

inst_15433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x197ffffffffffff; valaddr_reg:x3; val_offset:46299*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46299*0 + 3*73*FLEN/8, x4, x1, x2)

inst_15434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x198000000000000; valaddr_reg:x3; val_offset:46302*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46302*0 + 3*74*FLEN/8, x4, x1, x2)

inst_15435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19c000000000000; valaddr_reg:x3; val_offset:46305*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46305*0 + 3*75*FLEN/8, x4, x1, x2)

inst_15436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19e000000000000; valaddr_reg:x3; val_offset:46308*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46308*0 + 3*76*FLEN/8, x4, x1, x2)

inst_15437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19f000000000000; valaddr_reg:x3; val_offset:46311*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46311*0 + 3*77*FLEN/8, x4, x1, x2)

inst_15438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19f800000000000; valaddr_reg:x3; val_offset:46314*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46314*0 + 3*78*FLEN/8, x4, x1, x2)

inst_15439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fc00000000000; valaddr_reg:x3; val_offset:46317*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46317*0 + 3*79*FLEN/8, x4, x1, x2)

inst_15440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fe00000000000; valaddr_reg:x3; val_offset:46320*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46320*0 + 3*80*FLEN/8, x4, x1, x2)

inst_15441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ff00000000000; valaddr_reg:x3; val_offset:46323*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46323*0 + 3*81*FLEN/8, x4, x1, x2)

inst_15442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ff80000000000; valaddr_reg:x3; val_offset:46326*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46326*0 + 3*82*FLEN/8, x4, x1, x2)

inst_15443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffc0000000000; valaddr_reg:x3; val_offset:46329*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46329*0 + 3*83*FLEN/8, x4, x1, x2)

inst_15444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffe0000000000; valaddr_reg:x3; val_offset:46332*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46332*0 + 3*84*FLEN/8, x4, x1, x2)

inst_15445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fff0000000000; valaddr_reg:x3; val_offset:46335*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46335*0 + 3*85*FLEN/8, x4, x1, x2)

inst_15446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fff8000000000; valaddr_reg:x3; val_offset:46338*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46338*0 + 3*86*FLEN/8, x4, x1, x2)

inst_15447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffc000000000; valaddr_reg:x3; val_offset:46341*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46341*0 + 3*87*FLEN/8, x4, x1, x2)

inst_15448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffe000000000; valaddr_reg:x3; val_offset:46344*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46344*0 + 3*88*FLEN/8, x4, x1, x2)

inst_15449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffff000000000; valaddr_reg:x3; val_offset:46347*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46347*0 + 3*89*FLEN/8, x4, x1, x2)

inst_15450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffff800000000; valaddr_reg:x3; val_offset:46350*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46350*0 + 3*90*FLEN/8, x4, x1, x2)

inst_15451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffc00000000; valaddr_reg:x3; val_offset:46353*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46353*0 + 3*91*FLEN/8, x4, x1, x2)

inst_15452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffe00000000; valaddr_reg:x3; val_offset:46356*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46356*0 + 3*92*FLEN/8, x4, x1, x2)

inst_15453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffff00000000; valaddr_reg:x3; val_offset:46359*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46359*0 + 3*93*FLEN/8, x4, x1, x2)

inst_15454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffff80000000; valaddr_reg:x3; val_offset:46362*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46362*0 + 3*94*FLEN/8, x4, x1, x2)

inst_15455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffc0000000; valaddr_reg:x3; val_offset:46365*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46365*0 + 3*95*FLEN/8, x4, x1, x2)

inst_15456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffe0000000; valaddr_reg:x3; val_offset:46368*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46368*0 + 3*96*FLEN/8, x4, x1, x2)

inst_15457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffff0000000; valaddr_reg:x3; val_offset:46371*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46371*0 + 3*97*FLEN/8, x4, x1, x2)

inst_15458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffff8000000; valaddr_reg:x3; val_offset:46374*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46374*0 + 3*98*FLEN/8, x4, x1, x2)

inst_15459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffc000000; valaddr_reg:x3; val_offset:46377*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46377*0 + 3*99*FLEN/8, x4, x1, x2)

inst_15460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffe000000; valaddr_reg:x3; val_offset:46380*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46380*0 + 3*100*FLEN/8, x4, x1, x2)

inst_15461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffff000000; valaddr_reg:x3; val_offset:46383*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46383*0 + 3*101*FLEN/8, x4, x1, x2)

inst_15462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffff800000; valaddr_reg:x3; val_offset:46386*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46386*0 + 3*102*FLEN/8, x4, x1, x2)

inst_15463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffc00000; valaddr_reg:x3; val_offset:46389*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46389*0 + 3*103*FLEN/8, x4, x1, x2)

inst_15464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffe00000; valaddr_reg:x3; val_offset:46392*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46392*0 + 3*104*FLEN/8, x4, x1, x2)

inst_15465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffff00000; valaddr_reg:x3; val_offset:46395*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46395*0 + 3*105*FLEN/8, x4, x1, x2)

inst_15466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffff80000; valaddr_reg:x3; val_offset:46398*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46398*0 + 3*106*FLEN/8, x4, x1, x2)

inst_15467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffc0000; valaddr_reg:x3; val_offset:46401*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46401*0 + 3*107*FLEN/8, x4, x1, x2)

inst_15468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffe0000; valaddr_reg:x3; val_offset:46404*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46404*0 + 3*108*FLEN/8, x4, x1, x2)

inst_15469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffff0000; valaddr_reg:x3; val_offset:46407*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46407*0 + 3*109*FLEN/8, x4, x1, x2)

inst_15470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffff8000; valaddr_reg:x3; val_offset:46410*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46410*0 + 3*110*FLEN/8, x4, x1, x2)

inst_15471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffc000; valaddr_reg:x3; val_offset:46413*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46413*0 + 3*111*FLEN/8, x4, x1, x2)

inst_15472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffe000; valaddr_reg:x3; val_offset:46416*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46416*0 + 3*112*FLEN/8, x4, x1, x2)

inst_15473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffff000; valaddr_reg:x3; val_offset:46419*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46419*0 + 3*113*FLEN/8, x4, x1, x2)

inst_15474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffff800; valaddr_reg:x3; val_offset:46422*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46422*0 + 3*114*FLEN/8, x4, x1, x2)

inst_15475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffffc00; valaddr_reg:x3; val_offset:46425*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46425*0 + 3*115*FLEN/8, x4, x1, x2)

inst_15476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffffe00; valaddr_reg:x3; val_offset:46428*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46428*0 + 3*116*FLEN/8, x4, x1, x2)

inst_15477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffff00; valaddr_reg:x3; val_offset:46431*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46431*0 + 3*117*FLEN/8, x4, x1, x2)

inst_15478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffff80; valaddr_reg:x3; val_offset:46434*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46434*0 + 3*118*FLEN/8, x4, x1, x2)

inst_15479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffffc0; valaddr_reg:x3; val_offset:46437*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46437*0 + 3*119*FLEN/8, x4, x1, x2)

inst_15480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffffe0; valaddr_reg:x3; val_offset:46440*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46440*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffffff0; valaddr_reg:x3; val_offset:46443*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46443*0 + 3*121*FLEN/8, x4, x1, x2)

inst_15482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffffff8; valaddr_reg:x3; val_offset:46446*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46446*0 + 3*122*FLEN/8, x4, x1, x2)

inst_15483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffffffc; valaddr_reg:x3; val_offset:46449*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46449*0 + 3*123*FLEN/8, x4, x1, x2)

inst_15484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19ffffffffffffe; valaddr_reg:x3; val_offset:46452*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46452*0 + 3*124*FLEN/8, x4, x1, x2)

inst_15485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2658546d7fb1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82658546d7fb1b; op2val:0x0;
op3val:0x19fffffffffffff; valaddr_reg:x3; val_offset:46455*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46455*0 + 3*125*FLEN/8, x4, x1, x2)

inst_15486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000000000; valaddr_reg:x3; val_offset:46458*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46458*0 + 3*126*FLEN/8, x4, x1, x2)

inst_15487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000000001; valaddr_reg:x3; val_offset:46461*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46461*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_15488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000000003; valaddr_reg:x3; val_offset:46464*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46464*0 + 3*128*FLEN/8, x4, x1, x2)

inst_15489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000000007; valaddr_reg:x3; val_offset:46467*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46467*0 + 3*129*FLEN/8, x4, x1, x2)

inst_15490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000000000f; valaddr_reg:x3; val_offset:46470*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46470*0 + 3*130*FLEN/8, x4, x1, x2)

inst_15491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000000001f; valaddr_reg:x3; val_offset:46473*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46473*0 + 3*131*FLEN/8, x4, x1, x2)

inst_15492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000000003f; valaddr_reg:x3; val_offset:46476*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46476*0 + 3*132*FLEN/8, x4, x1, x2)

inst_15493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000000007f; valaddr_reg:x3; val_offset:46479*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46479*0 + 3*133*FLEN/8, x4, x1, x2)

inst_15494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000000000ff; valaddr_reg:x3; val_offset:46482*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46482*0 + 3*134*FLEN/8, x4, x1, x2)

inst_15495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000000001ff; valaddr_reg:x3; val_offset:46485*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46485*0 + 3*135*FLEN/8, x4, x1, x2)

inst_15496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000000003ff; valaddr_reg:x3; val_offset:46488*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46488*0 + 3*136*FLEN/8, x4, x1, x2)

inst_15497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000000007ff; valaddr_reg:x3; val_offset:46491*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46491*0 + 3*137*FLEN/8, x4, x1, x2)

inst_15498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000000fff; valaddr_reg:x3; val_offset:46494*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46494*0 + 3*138*FLEN/8, x4, x1, x2)

inst_15499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000001fff; valaddr_reg:x3; val_offset:46497*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46497*0 + 3*139*FLEN/8, x4, x1, x2)

inst_15500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000003fff; valaddr_reg:x3; val_offset:46500*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46500*0 + 3*140*FLEN/8, x4, x1, x2)

inst_15501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000007fff; valaddr_reg:x3; val_offset:46503*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46503*0 + 3*141*FLEN/8, x4, x1, x2)

inst_15502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000000ffff; valaddr_reg:x3; val_offset:46506*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46506*0 + 3*142*FLEN/8, x4, x1, x2)

inst_15503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000001ffff; valaddr_reg:x3; val_offset:46509*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46509*0 + 3*143*FLEN/8, x4, x1, x2)

inst_15504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000003ffff; valaddr_reg:x3; val_offset:46512*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46512*0 + 3*144*FLEN/8, x4, x1, x2)

inst_15505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000007ffff; valaddr_reg:x3; val_offset:46515*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46515*0 + 3*145*FLEN/8, x4, x1, x2)

inst_15506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000000fffff; valaddr_reg:x3; val_offset:46518*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46518*0 + 3*146*FLEN/8, x4, x1, x2)

inst_15507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000001fffff; valaddr_reg:x3; val_offset:46521*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46521*0 + 3*147*FLEN/8, x4, x1, x2)

inst_15508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000003fffff; valaddr_reg:x3; val_offset:46524*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46524*0 + 3*148*FLEN/8, x4, x1, x2)

inst_15509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000007fffff; valaddr_reg:x3; val_offset:46527*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46527*0 + 3*149*FLEN/8, x4, x1, x2)

inst_15510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000000ffffff; valaddr_reg:x3; val_offset:46530*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46530*0 + 3*150*FLEN/8, x4, x1, x2)

inst_15511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000001ffffff; valaddr_reg:x3; val_offset:46533*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46533*0 + 3*151*FLEN/8, x4, x1, x2)

inst_15512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000003ffffff; valaddr_reg:x3; val_offset:46536*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46536*0 + 3*152*FLEN/8, x4, x1, x2)

inst_15513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000007ffffff; valaddr_reg:x3; val_offset:46539*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46539*0 + 3*153*FLEN/8, x4, x1, x2)

inst_15514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000000fffffff; valaddr_reg:x3; val_offset:46542*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46542*0 + 3*154*FLEN/8, x4, x1, x2)

inst_15515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000001fffffff; valaddr_reg:x3; val_offset:46545*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46545*0 + 3*155*FLEN/8, x4, x1, x2)

inst_15516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000003fffffff; valaddr_reg:x3; val_offset:46548*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46548*0 + 3*156*FLEN/8, x4, x1, x2)

inst_15517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000007fffffff; valaddr_reg:x3; val_offset:46551*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46551*0 + 3*157*FLEN/8, x4, x1, x2)

inst_15518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300000ffffffff; valaddr_reg:x3; val_offset:46554*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46554*0 + 3*158*FLEN/8, x4, x1, x2)

inst_15519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300001ffffffff; valaddr_reg:x3; val_offset:46557*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46557*0 + 3*159*FLEN/8, x4, x1, x2)

inst_15520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300003ffffffff; valaddr_reg:x3; val_offset:46560*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46560*0 + 3*160*FLEN/8, x4, x1, x2)

inst_15521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300007ffffffff; valaddr_reg:x3; val_offset:46563*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46563*0 + 3*161*FLEN/8, x4, x1, x2)

inst_15522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830000fffffffff; valaddr_reg:x3; val_offset:46566*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46566*0 + 3*162*FLEN/8, x4, x1, x2)

inst_15523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830001fffffffff; valaddr_reg:x3; val_offset:46569*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46569*0 + 3*163*FLEN/8, x4, x1, x2)

inst_15524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830003fffffffff; valaddr_reg:x3; val_offset:46572*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46572*0 + 3*164*FLEN/8, x4, x1, x2)

inst_15525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830007fffffffff; valaddr_reg:x3; val_offset:46575*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46575*0 + 3*165*FLEN/8, x4, x1, x2)

inst_15526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383000ffffffffff; valaddr_reg:x3; val_offset:46578*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46578*0 + 3*166*FLEN/8, x4, x1, x2)

inst_15527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383001ffffffffff; valaddr_reg:x3; val_offset:46581*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46581*0 + 3*167*FLEN/8, x4, x1, x2)

inst_15528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383003ffffffffff; valaddr_reg:x3; val_offset:46584*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46584*0 + 3*168*FLEN/8, x4, x1, x2)

inst_15529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383007ffffffffff; valaddr_reg:x3; val_offset:46587*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46587*0 + 3*169*FLEN/8, x4, x1, x2)

inst_15530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38300fffffffffff; valaddr_reg:x3; val_offset:46590*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46590*0 + 3*170*FLEN/8, x4, x1, x2)

inst_15531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38301fffffffffff; valaddr_reg:x3; val_offset:46593*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46593*0 + 3*171*FLEN/8, x4, x1, x2)

inst_15532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38303fffffffffff; valaddr_reg:x3; val_offset:46596*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46596*0 + 3*172*FLEN/8, x4, x1, x2)

inst_15533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x38307fffffffffff; valaddr_reg:x3; val_offset:46599*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46599*0 + 3*173*FLEN/8, x4, x1, x2)

inst_15534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3830ffffffffffff; valaddr_reg:x3; val_offset:46602*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46602*0 + 3*174*FLEN/8, x4, x1, x2)

inst_15535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3831ffffffffffff; valaddr_reg:x3; val_offset:46605*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46605*0 + 3*175*FLEN/8, x4, x1, x2)

inst_15536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3833ffffffffffff; valaddr_reg:x3; val_offset:46608*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46608*0 + 3*176*FLEN/8, x4, x1, x2)

inst_15537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3837ffffffffffff; valaddr_reg:x3; val_offset:46611*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46611*0 + 3*177*FLEN/8, x4, x1, x2)

inst_15538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3838000000000000; valaddr_reg:x3; val_offset:46614*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46614*0 + 3*178*FLEN/8, x4, x1, x2)

inst_15539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383c000000000000; valaddr_reg:x3; val_offset:46617*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46617*0 + 3*179*FLEN/8, x4, x1, x2)

inst_15540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383e000000000000; valaddr_reg:x3; val_offset:46620*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46620*0 + 3*180*FLEN/8, x4, x1, x2)

inst_15541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383f000000000000; valaddr_reg:x3; val_offset:46623*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46623*0 + 3*181*FLEN/8, x4, x1, x2)

inst_15542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383f800000000000; valaddr_reg:x3; val_offset:46626*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46626*0 + 3*182*FLEN/8, x4, x1, x2)

inst_15543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fc00000000000; valaddr_reg:x3; val_offset:46629*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46629*0 + 3*183*FLEN/8, x4, x1, x2)

inst_15544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fe00000000000; valaddr_reg:x3; val_offset:46632*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46632*0 + 3*184*FLEN/8, x4, x1, x2)

inst_15545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ff00000000000; valaddr_reg:x3; val_offset:46635*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46635*0 + 3*185*FLEN/8, x4, x1, x2)

inst_15546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ff80000000000; valaddr_reg:x3; val_offset:46638*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46638*0 + 3*186*FLEN/8, x4, x1, x2)

inst_15547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffc0000000000; valaddr_reg:x3; val_offset:46641*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46641*0 + 3*187*FLEN/8, x4, x1, x2)

inst_15548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffe0000000000; valaddr_reg:x3; val_offset:46644*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46644*0 + 3*188*FLEN/8, x4, x1, x2)

inst_15549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fff0000000000; valaddr_reg:x3; val_offset:46647*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46647*0 + 3*189*FLEN/8, x4, x1, x2)

inst_15550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fff8000000000; valaddr_reg:x3; val_offset:46650*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46650*0 + 3*190*FLEN/8, x4, x1, x2)

inst_15551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffc000000000; valaddr_reg:x3; val_offset:46653*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46653*0 + 3*191*FLEN/8, x4, x1, x2)

inst_15552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffe000000000; valaddr_reg:x3; val_offset:46656*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46656*0 + 3*192*FLEN/8, x4, x1, x2)

inst_15553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffff000000000; valaddr_reg:x3; val_offset:46659*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46659*0 + 3*193*FLEN/8, x4, x1, x2)

inst_15554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffff800000000; valaddr_reg:x3; val_offset:46662*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46662*0 + 3*194*FLEN/8, x4, x1, x2)

inst_15555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffc00000000; valaddr_reg:x3; val_offset:46665*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46665*0 + 3*195*FLEN/8, x4, x1, x2)

inst_15556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffe00000000; valaddr_reg:x3; val_offset:46668*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46668*0 + 3*196*FLEN/8, x4, x1, x2)

inst_15557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffff00000000; valaddr_reg:x3; val_offset:46671*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46671*0 + 3*197*FLEN/8, x4, x1, x2)

inst_15558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffff80000000; valaddr_reg:x3; val_offset:46674*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46674*0 + 3*198*FLEN/8, x4, x1, x2)

inst_15559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffc0000000; valaddr_reg:x3; val_offset:46677*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46677*0 + 3*199*FLEN/8, x4, x1, x2)

inst_15560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffe0000000; valaddr_reg:x3; val_offset:46680*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46680*0 + 3*200*FLEN/8, x4, x1, x2)

inst_15561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffff0000000; valaddr_reg:x3; val_offset:46683*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46683*0 + 3*201*FLEN/8, x4, x1, x2)

inst_15562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffff8000000; valaddr_reg:x3; val_offset:46686*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46686*0 + 3*202*FLEN/8, x4, x1, x2)

inst_15563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffc000000; valaddr_reg:x3; val_offset:46689*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46689*0 + 3*203*FLEN/8, x4, x1, x2)

inst_15564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffe000000; valaddr_reg:x3; val_offset:46692*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46692*0 + 3*204*FLEN/8, x4, x1, x2)

inst_15565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffff000000; valaddr_reg:x3; val_offset:46695*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46695*0 + 3*205*FLEN/8, x4, x1, x2)

inst_15566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffff800000; valaddr_reg:x3; val_offset:46698*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46698*0 + 3*206*FLEN/8, x4, x1, x2)

inst_15567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffc00000; valaddr_reg:x3; val_offset:46701*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46701*0 + 3*207*FLEN/8, x4, x1, x2)

inst_15568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffe00000; valaddr_reg:x3; val_offset:46704*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46704*0 + 3*208*FLEN/8, x4, x1, x2)

inst_15569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffff00000; valaddr_reg:x3; val_offset:46707*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46707*0 + 3*209*FLEN/8, x4, x1, x2)

inst_15570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffff80000; valaddr_reg:x3; val_offset:46710*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46710*0 + 3*210*FLEN/8, x4, x1, x2)

inst_15571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffc0000; valaddr_reg:x3; val_offset:46713*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46713*0 + 3*211*FLEN/8, x4, x1, x2)

inst_15572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffe0000; valaddr_reg:x3; val_offset:46716*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46716*0 + 3*212*FLEN/8, x4, x1, x2)

inst_15573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffff0000; valaddr_reg:x3; val_offset:46719*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46719*0 + 3*213*FLEN/8, x4, x1, x2)

inst_15574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffff8000; valaddr_reg:x3; val_offset:46722*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46722*0 + 3*214*FLEN/8, x4, x1, x2)

inst_15575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffc000; valaddr_reg:x3; val_offset:46725*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46725*0 + 3*215*FLEN/8, x4, x1, x2)

inst_15576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffe000; valaddr_reg:x3; val_offset:46728*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46728*0 + 3*216*FLEN/8, x4, x1, x2)

inst_15577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffff000; valaddr_reg:x3; val_offset:46731*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46731*0 + 3*217*FLEN/8, x4, x1, x2)

inst_15578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffff800; valaddr_reg:x3; val_offset:46734*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46734*0 + 3*218*FLEN/8, x4, x1, x2)

inst_15579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffffc00; valaddr_reg:x3; val_offset:46737*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46737*0 + 3*219*FLEN/8, x4, x1, x2)

inst_15580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffffe00; valaddr_reg:x3; val_offset:46740*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46740*0 + 3*220*FLEN/8, x4, x1, x2)

inst_15581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffff00; valaddr_reg:x3; val_offset:46743*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46743*0 + 3*221*FLEN/8, x4, x1, x2)

inst_15582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffff80; valaddr_reg:x3; val_offset:46746*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46746*0 + 3*222*FLEN/8, x4, x1, x2)

inst_15583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffffc0; valaddr_reg:x3; val_offset:46749*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46749*0 + 3*223*FLEN/8, x4, x1, x2)

inst_15584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffffe0; valaddr_reg:x3; val_offset:46752*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46752*0 + 3*224*FLEN/8, x4, x1, x2)

inst_15585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffffff0; valaddr_reg:x3; val_offset:46755*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46755*0 + 3*225*FLEN/8, x4, x1, x2)

inst_15586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffffff8; valaddr_reg:x3; val_offset:46758*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46758*0 + 3*226*FLEN/8, x4, x1, x2)

inst_15587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffffffc; valaddr_reg:x3; val_offset:46761*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46761*0 + 3*227*FLEN/8, x4, x1, x2)

inst_15588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383ffffffffffffe; valaddr_reg:x3; val_offset:46764*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46764*0 + 3*228*FLEN/8, x4, x1, x2)

inst_15589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x383fffffffffffff; valaddr_reg:x3; val_offset:46767*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46767*0 + 3*229*FLEN/8, x4, x1, x2)

inst_15590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:46770*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46770*0 + 3*230*FLEN/8, x4, x1, x2)

inst_15591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:46773*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46773*0 + 3*231*FLEN/8, x4, x1, x2)

inst_15592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:46776*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46776*0 + 3*232*FLEN/8, x4, x1, x2)

inst_15593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:46779*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46779*0 + 3*233*FLEN/8, x4, x1, x2)

inst_15594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:46782*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46782*0 + 3*234*FLEN/8, x4, x1, x2)

inst_15595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:46785*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46785*0 + 3*235*FLEN/8, x4, x1, x2)

inst_15596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:46788*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46788*0 + 3*236*FLEN/8, x4, x1, x2)

inst_15597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:46791*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46791*0 + 3*237*FLEN/8, x4, x1, x2)

inst_15598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:46794*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46794*0 + 3*238*FLEN/8, x4, x1, x2)

inst_15599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:46797*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46797*0 + 3*239*FLEN/8, x4, x1, x2)

inst_15600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:46800*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46800*0 + 3*240*FLEN/8, x4, x1, x2)

inst_15601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:46803*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46803*0 + 3*241*FLEN/8, x4, x1, x2)

inst_15602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:46806*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46806*0 + 3*242*FLEN/8, x4, x1, x2)

inst_15603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:46809*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46809*0 + 3*243*FLEN/8, x4, x1, x2)

inst_15604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:46812*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46812*0 + 3*244*FLEN/8, x4, x1, x2)

inst_15605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:46815*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46815*0 + 3*245*FLEN/8, x4, x1, x2)

inst_15606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:46818*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46818*0 + 3*246*FLEN/8, x4, x1, x2)

inst_15607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:46821*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46821*0 + 3*247*FLEN/8, x4, x1, x2)

inst_15608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:46824*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46824*0 + 3*248*FLEN/8, x4, x1, x2)

inst_15609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:46827*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46827*0 + 3*249*FLEN/8, x4, x1, x2)

inst_15610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:46830*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46830*0 + 3*250*FLEN/8, x4, x1, x2)

inst_15611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xbcf8ae9b16f2b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826900fdfdb837; op2val:0x205bcf8ae9b16f2b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:46833*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46833*0 + 3*251*FLEN/8, x4, x1, x2)

inst_15612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:46836*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46836*0 + 3*252*FLEN/8, x4, x1, x2)

inst_15613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:46839*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46839*0 + 3*253*FLEN/8, x4, x1, x2)

inst_15614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:46842*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46842*0 + 3*254*FLEN/8, x4, x1, x2)

inst_15615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:46845*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46845*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_15616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:46848*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46848*0 + 3*256*FLEN/8, x4, x1, x2)

inst_15617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:46851*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46851*0 + 3*257*FLEN/8, x4, x1, x2)

inst_15618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:46854*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46854*0 + 3*258*FLEN/8, x4, x1, x2)

inst_15619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:46857*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46857*0 + 3*259*FLEN/8, x4, x1, x2)

inst_15620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:46860*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46860*0 + 3*260*FLEN/8, x4, x1, x2)

inst_15621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:46863*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46863*0 + 3*261*FLEN/8, x4, x1, x2)

inst_15622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:46866*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46866*0 + 3*262*FLEN/8, x4, x1, x2)

inst_15623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:46869*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46869*0 + 3*263*FLEN/8, x4, x1, x2)

inst_15624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:46872*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46872*0 + 3*264*FLEN/8, x4, x1, x2)

inst_15625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:46875*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46875*0 + 3*265*FLEN/8, x4, x1, x2)

inst_15626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:46878*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46878*0 + 3*266*FLEN/8, x4, x1, x2)

inst_15627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:46881*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46881*0 + 3*267*FLEN/8, x4, x1, x2)

inst_15628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:46884*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46884*0 + 3*268*FLEN/8, x4, x1, x2)

inst_15629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:46887*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46887*0 + 3*269*FLEN/8, x4, x1, x2)

inst_15630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:46890*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46890*0 + 3*270*FLEN/8, x4, x1, x2)

inst_15631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:46893*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46893*0 + 3*271*FLEN/8, x4, x1, x2)

inst_15632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:46896*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46896*0 + 3*272*FLEN/8, x4, x1, x2)

inst_15633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:46899*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46899*0 + 3*273*FLEN/8, x4, x1, x2)

inst_15634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000000000; valaddr_reg:x3; val_offset:46902*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46902*0 + 3*274*FLEN/8, x4, x1, x2)

inst_15635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000000001; valaddr_reg:x3; val_offset:46905*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46905*0 + 3*275*FLEN/8, x4, x1, x2)

inst_15636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000000003; valaddr_reg:x3; val_offset:46908*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46908*0 + 3*276*FLEN/8, x4, x1, x2)

inst_15637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000000007; valaddr_reg:x3; val_offset:46911*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46911*0 + 3*277*FLEN/8, x4, x1, x2)

inst_15638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000000000f; valaddr_reg:x3; val_offset:46914*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46914*0 + 3*278*FLEN/8, x4, x1, x2)

inst_15639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000000001f; valaddr_reg:x3; val_offset:46917*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46917*0 + 3*279*FLEN/8, x4, x1, x2)

inst_15640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000000003f; valaddr_reg:x3; val_offset:46920*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46920*0 + 3*280*FLEN/8, x4, x1, x2)

inst_15641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000000007f; valaddr_reg:x3; val_offset:46923*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46923*0 + 3*281*FLEN/8, x4, x1, x2)

inst_15642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000000000ff; valaddr_reg:x3; val_offset:46926*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46926*0 + 3*282*FLEN/8, x4, x1, x2)

inst_15643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000000001ff; valaddr_reg:x3; val_offset:46929*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46929*0 + 3*283*FLEN/8, x4, x1, x2)

inst_15644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000000003ff; valaddr_reg:x3; val_offset:46932*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46932*0 + 3*284*FLEN/8, x4, x1, x2)

inst_15645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000000007ff; valaddr_reg:x3; val_offset:46935*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46935*0 + 3*285*FLEN/8, x4, x1, x2)

inst_15646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000000fff; valaddr_reg:x3; val_offset:46938*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46938*0 + 3*286*FLEN/8, x4, x1, x2)

inst_15647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000001fff; valaddr_reg:x3; val_offset:46941*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46941*0 + 3*287*FLEN/8, x4, x1, x2)

inst_15648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000003fff; valaddr_reg:x3; val_offset:46944*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46944*0 + 3*288*FLEN/8, x4, x1, x2)

inst_15649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000007fff; valaddr_reg:x3; val_offset:46947*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46947*0 + 3*289*FLEN/8, x4, x1, x2)

inst_15650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000000ffff; valaddr_reg:x3; val_offset:46950*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46950*0 + 3*290*FLEN/8, x4, x1, x2)

inst_15651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000001ffff; valaddr_reg:x3; val_offset:46953*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46953*0 + 3*291*FLEN/8, x4, x1, x2)

inst_15652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000003ffff; valaddr_reg:x3; val_offset:46956*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46956*0 + 3*292*FLEN/8, x4, x1, x2)

inst_15653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000007ffff; valaddr_reg:x3; val_offset:46959*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46959*0 + 3*293*FLEN/8, x4, x1, x2)

inst_15654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000000fffff; valaddr_reg:x3; val_offset:46962*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46962*0 + 3*294*FLEN/8, x4, x1, x2)

inst_15655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000001fffff; valaddr_reg:x3; val_offset:46965*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46965*0 + 3*295*FLEN/8, x4, x1, x2)

inst_15656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000003fffff; valaddr_reg:x3; val_offset:46968*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46968*0 + 3*296*FLEN/8, x4, x1, x2)

inst_15657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000007fffff; valaddr_reg:x3; val_offset:46971*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46971*0 + 3*297*FLEN/8, x4, x1, x2)

inst_15658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000000ffffff; valaddr_reg:x3; val_offset:46974*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46974*0 + 3*298*FLEN/8, x4, x1, x2)

inst_15659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000001ffffff; valaddr_reg:x3; val_offset:46977*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46977*0 + 3*299*FLEN/8, x4, x1, x2)

inst_15660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000003ffffff; valaddr_reg:x3; val_offset:46980*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46980*0 + 3*300*FLEN/8, x4, x1, x2)

inst_15661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000007ffffff; valaddr_reg:x3; val_offset:46983*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46983*0 + 3*301*FLEN/8, x4, x1, x2)

inst_15662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000000fffffff; valaddr_reg:x3; val_offset:46986*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46986*0 + 3*302*FLEN/8, x4, x1, x2)

inst_15663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000001fffffff; valaddr_reg:x3; val_offset:46989*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46989*0 + 3*303*FLEN/8, x4, x1, x2)

inst_15664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000003fffffff; valaddr_reg:x3; val_offset:46992*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46992*0 + 3*304*FLEN/8, x4, x1, x2)

inst_15665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000007fffffff; valaddr_reg:x3; val_offset:46995*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46995*0 + 3*305*FLEN/8, x4, x1, x2)

inst_15666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00000ffffffff; valaddr_reg:x3; val_offset:46998*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 46998*0 + 3*306*FLEN/8, x4, x1, x2)

inst_15667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00001ffffffff; valaddr_reg:x3; val_offset:47001*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47001*0 + 3*307*FLEN/8, x4, x1, x2)

inst_15668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00003ffffffff; valaddr_reg:x3; val_offset:47004*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47004*0 + 3*308*FLEN/8, x4, x1, x2)

inst_15669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00007ffffffff; valaddr_reg:x3; val_offset:47007*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47007*0 + 3*309*FLEN/8, x4, x1, x2)

inst_15670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0000fffffffff; valaddr_reg:x3; val_offset:47010*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47010*0 + 3*310*FLEN/8, x4, x1, x2)

inst_15671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0001fffffffff; valaddr_reg:x3; val_offset:47013*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47013*0 + 3*311*FLEN/8, x4, x1, x2)

inst_15672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0003fffffffff; valaddr_reg:x3; val_offset:47016*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47016*0 + 3*312*FLEN/8, x4, x1, x2)

inst_15673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0007fffffffff; valaddr_reg:x3; val_offset:47019*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47019*0 + 3*313*FLEN/8, x4, x1, x2)

inst_15674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b000ffffffffff; valaddr_reg:x3; val_offset:47022*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47022*0 + 3*314*FLEN/8, x4, x1, x2)

inst_15675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b001ffffffffff; valaddr_reg:x3; val_offset:47025*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47025*0 + 3*315*FLEN/8, x4, x1, x2)

inst_15676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b003ffffffffff; valaddr_reg:x3; val_offset:47028*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47028*0 + 3*316*FLEN/8, x4, x1, x2)

inst_15677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b007ffffffffff; valaddr_reg:x3; val_offset:47031*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47031*0 + 3*317*FLEN/8, x4, x1, x2)

inst_15678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b00fffffffffff; valaddr_reg:x3; val_offset:47034*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47034*0 + 3*318*FLEN/8, x4, x1, x2)

inst_15679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b01fffffffffff; valaddr_reg:x3; val_offset:47037*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47037*0 + 3*319*FLEN/8, x4, x1, x2)

inst_15680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b03fffffffffff; valaddr_reg:x3; val_offset:47040*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47040*0 + 3*320*FLEN/8, x4, x1, x2)

inst_15681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b07fffffffffff; valaddr_reg:x3; val_offset:47043*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47043*0 + 3*321*FLEN/8, x4, x1, x2)

inst_15682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b0ffffffffffff; valaddr_reg:x3; val_offset:47046*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47046*0 + 3*322*FLEN/8, x4, x1, x2)

inst_15683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b1ffffffffffff; valaddr_reg:x3; val_offset:47049*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47049*0 + 3*323*FLEN/8, x4, x1, x2)

inst_15684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b3ffffffffffff; valaddr_reg:x3; val_offset:47052*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47052*0 + 3*324*FLEN/8, x4, x1, x2)

inst_15685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b7ffffffffffff; valaddr_reg:x3; val_offset:47055*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47055*0 + 3*325*FLEN/8, x4, x1, x2)

inst_15686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80b8000000000000; valaddr_reg:x3; val_offset:47058*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47058*0 + 3*326*FLEN/8, x4, x1, x2)

inst_15687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bc000000000000; valaddr_reg:x3; val_offset:47061*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47061*0 + 3*327*FLEN/8, x4, x1, x2)

inst_15688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80be000000000000; valaddr_reg:x3; val_offset:47064*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47064*0 + 3*328*FLEN/8, x4, x1, x2)

inst_15689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bf000000000000; valaddr_reg:x3; val_offset:47067*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47067*0 + 3*329*FLEN/8, x4, x1, x2)

inst_15690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bf800000000000; valaddr_reg:x3; val_offset:47070*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47070*0 + 3*330*FLEN/8, x4, x1, x2)

inst_15691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfc00000000000; valaddr_reg:x3; val_offset:47073*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47073*0 + 3*331*FLEN/8, x4, x1, x2)

inst_15692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfe00000000000; valaddr_reg:x3; val_offset:47076*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47076*0 + 3*332*FLEN/8, x4, x1, x2)

inst_15693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bff00000000000; valaddr_reg:x3; val_offset:47079*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47079*0 + 3*333*FLEN/8, x4, x1, x2)

inst_15694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bff80000000000; valaddr_reg:x3; val_offset:47082*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47082*0 + 3*334*FLEN/8, x4, x1, x2)

inst_15695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffc0000000000; valaddr_reg:x3; val_offset:47085*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47085*0 + 3*335*FLEN/8, x4, x1, x2)

inst_15696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffe0000000000; valaddr_reg:x3; val_offset:47088*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47088*0 + 3*336*FLEN/8, x4, x1, x2)

inst_15697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfff0000000000; valaddr_reg:x3; val_offset:47091*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47091*0 + 3*337*FLEN/8, x4, x1, x2)

inst_15698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfff8000000000; valaddr_reg:x3; val_offset:47094*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47094*0 + 3*338*FLEN/8, x4, x1, x2)

inst_15699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffc000000000; valaddr_reg:x3; val_offset:47097*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47097*0 + 3*339*FLEN/8, x4, x1, x2)

inst_15700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffe000000000; valaddr_reg:x3; val_offset:47100*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47100*0 + 3*340*FLEN/8, x4, x1, x2)

inst_15701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffff000000000; valaddr_reg:x3; val_offset:47103*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47103*0 + 3*341*FLEN/8, x4, x1, x2)

inst_15702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffff800000000; valaddr_reg:x3; val_offset:47106*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47106*0 + 3*342*FLEN/8, x4, x1, x2)

inst_15703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffc00000000; valaddr_reg:x3; val_offset:47109*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47109*0 + 3*343*FLEN/8, x4, x1, x2)

inst_15704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffe00000000; valaddr_reg:x3; val_offset:47112*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47112*0 + 3*344*FLEN/8, x4, x1, x2)

inst_15705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffff00000000; valaddr_reg:x3; val_offset:47115*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47115*0 + 3*345*FLEN/8, x4, x1, x2)

inst_15706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffff80000000; valaddr_reg:x3; val_offset:47118*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47118*0 + 3*346*FLEN/8, x4, x1, x2)

inst_15707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffc0000000; valaddr_reg:x3; val_offset:47121*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47121*0 + 3*347*FLEN/8, x4, x1, x2)

inst_15708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffe0000000; valaddr_reg:x3; val_offset:47124*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47124*0 + 3*348*FLEN/8, x4, x1, x2)

inst_15709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffff0000000; valaddr_reg:x3; val_offset:47127*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47127*0 + 3*349*FLEN/8, x4, x1, x2)

inst_15710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffff8000000; valaddr_reg:x3; val_offset:47130*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47130*0 + 3*350*FLEN/8, x4, x1, x2)

inst_15711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffc000000; valaddr_reg:x3; val_offset:47133*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47133*0 + 3*351*FLEN/8, x4, x1, x2)

inst_15712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffe000000; valaddr_reg:x3; val_offset:47136*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47136*0 + 3*352*FLEN/8, x4, x1, x2)

inst_15713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffff000000; valaddr_reg:x3; val_offset:47139*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47139*0 + 3*353*FLEN/8, x4, x1, x2)

inst_15714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffff800000; valaddr_reg:x3; val_offset:47142*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47142*0 + 3*354*FLEN/8, x4, x1, x2)

inst_15715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffc00000; valaddr_reg:x3; val_offset:47145*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47145*0 + 3*355*FLEN/8, x4, x1, x2)

inst_15716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffe00000; valaddr_reg:x3; val_offset:47148*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47148*0 + 3*356*FLEN/8, x4, x1, x2)

inst_15717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffff00000; valaddr_reg:x3; val_offset:47151*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47151*0 + 3*357*FLEN/8, x4, x1, x2)

inst_15718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffff80000; valaddr_reg:x3; val_offset:47154*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47154*0 + 3*358*FLEN/8, x4, x1, x2)

inst_15719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffc0000; valaddr_reg:x3; val_offset:47157*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47157*0 + 3*359*FLEN/8, x4, x1, x2)

inst_15720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffe0000; valaddr_reg:x3; val_offset:47160*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47160*0 + 3*360*FLEN/8, x4, x1, x2)

inst_15721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffff0000; valaddr_reg:x3; val_offset:47163*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47163*0 + 3*361*FLEN/8, x4, x1, x2)

inst_15722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffff8000; valaddr_reg:x3; val_offset:47166*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47166*0 + 3*362*FLEN/8, x4, x1, x2)

inst_15723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffc000; valaddr_reg:x3; val_offset:47169*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47169*0 + 3*363*FLEN/8, x4, x1, x2)

inst_15724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffe000; valaddr_reg:x3; val_offset:47172*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47172*0 + 3*364*FLEN/8, x4, x1, x2)

inst_15725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffff000; valaddr_reg:x3; val_offset:47175*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47175*0 + 3*365*FLEN/8, x4, x1, x2)

inst_15726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffff800; valaddr_reg:x3; val_offset:47178*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47178*0 + 3*366*FLEN/8, x4, x1, x2)

inst_15727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffffc00; valaddr_reg:x3; val_offset:47181*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47181*0 + 3*367*FLEN/8, x4, x1, x2)

inst_15728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffffe00; valaddr_reg:x3; val_offset:47184*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47184*0 + 3*368*FLEN/8, x4, x1, x2)

inst_15729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffff00; valaddr_reg:x3; val_offset:47187*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47187*0 + 3*369*FLEN/8, x4, x1, x2)

inst_15730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffff80; valaddr_reg:x3; val_offset:47190*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47190*0 + 3*370*FLEN/8, x4, x1, x2)

inst_15731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffffc0; valaddr_reg:x3; val_offset:47193*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47193*0 + 3*371*FLEN/8, x4, x1, x2)

inst_15732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffffe0; valaddr_reg:x3; val_offset:47196*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47196*0 + 3*372*FLEN/8, x4, x1, x2)

inst_15733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffffff0; valaddr_reg:x3; val_offset:47199*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47199*0 + 3*373*FLEN/8, x4, x1, x2)

inst_15734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffffff8; valaddr_reg:x3; val_offset:47202*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47202*0 + 3*374*FLEN/8, x4, x1, x2)

inst_15735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffffffc; valaddr_reg:x3; val_offset:47205*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47205*0 + 3*375*FLEN/8, x4, x1, x2)

inst_15736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bffffffffffffe; valaddr_reg:x3; val_offset:47208*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47208*0 + 3*376*FLEN/8, x4, x1, x2)

inst_15737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x26ffb22d6ee1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f826ffb22d6ee1f; op2val:0x8000;
op3val:0x80bfffffffffffff; valaddr_reg:x3; val_offset:47211*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47211*0 + 3*377*FLEN/8, x4, x1, x2)

inst_15738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:47214*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47214*0 + 3*378*FLEN/8, x4, x1, x2)

inst_15739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:47217*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47217*0 + 3*379*FLEN/8, x4, x1, x2)

inst_15740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:47220*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47220*0 + 3*380*FLEN/8, x4, x1, x2)

inst_15741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:47223*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47223*0 + 3*381*FLEN/8, x4, x1, x2)

inst_15742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:47226*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47226*0 + 3*382*FLEN/8, x4, x1, x2)

inst_15743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:47229*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47229*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_15744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:47232*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47232*0 + 3*384*FLEN/8, x4, x1, x2)

inst_15745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:47235*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47235*0 + 3*385*FLEN/8, x4, x1, x2)

inst_15746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:47238*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47238*0 + 3*386*FLEN/8, x4, x1, x2)

inst_15747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:47241*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47241*0 + 3*387*FLEN/8, x4, x1, x2)

inst_15748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:47244*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47244*0 + 3*388*FLEN/8, x4, x1, x2)

inst_15749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:47247*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47247*0 + 3*389*FLEN/8, x4, x1, x2)

inst_15750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:47250*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47250*0 + 3*390*FLEN/8, x4, x1, x2)

inst_15751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:47253*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47253*0 + 3*391*FLEN/8, x4, x1, x2)

inst_15752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:47256*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47256*0 + 3*392*FLEN/8, x4, x1, x2)

inst_15753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:47259*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47259*0 + 3*393*FLEN/8, x4, x1, x2)

inst_15754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:47262*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47262*0 + 3*394*FLEN/8, x4, x1, x2)

inst_15755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:47265*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47265*0 + 3*395*FLEN/8, x4, x1, x2)

inst_15756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:47268*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47268*0 + 3*396*FLEN/8, x4, x1, x2)

inst_15757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:47271*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47271*0 + 3*397*FLEN/8, x4, x1, x2)

inst_15758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:47274*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47274*0 + 3*398*FLEN/8, x4, x1, x2)

inst_15759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:47277*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47277*0 + 3*399*FLEN/8, x4, x1, x2)

inst_15760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000000000; valaddr_reg:x3; val_offset:47280*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47280*0 + 3*400*FLEN/8, x4, x1, x2)

inst_15761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000000001; valaddr_reg:x3; val_offset:47283*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47283*0 + 3*401*FLEN/8, x4, x1, x2)

inst_15762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000000003; valaddr_reg:x3; val_offset:47286*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47286*0 + 3*402*FLEN/8, x4, x1, x2)

inst_15763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000000007; valaddr_reg:x3; val_offset:47289*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47289*0 + 3*403*FLEN/8, x4, x1, x2)

inst_15764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000000000f; valaddr_reg:x3; val_offset:47292*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47292*0 + 3*404*FLEN/8, x4, x1, x2)

inst_15765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000000001f; valaddr_reg:x3; val_offset:47295*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47295*0 + 3*405*FLEN/8, x4, x1, x2)

inst_15766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000000003f; valaddr_reg:x3; val_offset:47298*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47298*0 + 3*406*FLEN/8, x4, x1, x2)

inst_15767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000000007f; valaddr_reg:x3; val_offset:47301*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47301*0 + 3*407*FLEN/8, x4, x1, x2)

inst_15768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000000000ff; valaddr_reg:x3; val_offset:47304*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47304*0 + 3*408*FLEN/8, x4, x1, x2)

inst_15769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000000001ff; valaddr_reg:x3; val_offset:47307*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47307*0 + 3*409*FLEN/8, x4, x1, x2)

inst_15770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000000003ff; valaddr_reg:x3; val_offset:47310*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47310*0 + 3*410*FLEN/8, x4, x1, x2)

inst_15771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000000007ff; valaddr_reg:x3; val_offset:47313*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47313*0 + 3*411*FLEN/8, x4, x1, x2)

inst_15772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000000fff; valaddr_reg:x3; val_offset:47316*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47316*0 + 3*412*FLEN/8, x4, x1, x2)

inst_15773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000001fff; valaddr_reg:x3; val_offset:47319*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47319*0 + 3*413*FLEN/8, x4, x1, x2)

inst_15774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000003fff; valaddr_reg:x3; val_offset:47322*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47322*0 + 3*414*FLEN/8, x4, x1, x2)

inst_15775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000007fff; valaddr_reg:x3; val_offset:47325*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47325*0 + 3*415*FLEN/8, x4, x1, x2)

inst_15776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000000ffff; valaddr_reg:x3; val_offset:47328*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47328*0 + 3*416*FLEN/8, x4, x1, x2)

inst_15777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000001ffff; valaddr_reg:x3; val_offset:47331*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47331*0 + 3*417*FLEN/8, x4, x1, x2)

inst_15778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000003ffff; valaddr_reg:x3; val_offset:47334*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47334*0 + 3*418*FLEN/8, x4, x1, x2)

inst_15779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000007ffff; valaddr_reg:x3; val_offset:47337*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47337*0 + 3*419*FLEN/8, x4, x1, x2)

inst_15780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000000fffff; valaddr_reg:x3; val_offset:47340*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47340*0 + 3*420*FLEN/8, x4, x1, x2)

inst_15781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000001fffff; valaddr_reg:x3; val_offset:47343*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47343*0 + 3*421*FLEN/8, x4, x1, x2)

inst_15782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000003fffff; valaddr_reg:x3; val_offset:47346*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47346*0 + 3*422*FLEN/8, x4, x1, x2)

inst_15783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000007fffff; valaddr_reg:x3; val_offset:47349*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47349*0 + 3*423*FLEN/8, x4, x1, x2)

inst_15784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000000ffffff; valaddr_reg:x3; val_offset:47352*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47352*0 + 3*424*FLEN/8, x4, x1, x2)

inst_15785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000001ffffff; valaddr_reg:x3; val_offset:47355*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47355*0 + 3*425*FLEN/8, x4, x1, x2)

inst_15786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000003ffffff; valaddr_reg:x3; val_offset:47358*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47358*0 + 3*426*FLEN/8, x4, x1, x2)

inst_15787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000007ffffff; valaddr_reg:x3; val_offset:47361*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47361*0 + 3*427*FLEN/8, x4, x1, x2)

inst_15788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000000fffffff; valaddr_reg:x3; val_offset:47364*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47364*0 + 3*428*FLEN/8, x4, x1, x2)

inst_15789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000001fffffff; valaddr_reg:x3; val_offset:47367*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47367*0 + 3*429*FLEN/8, x4, x1, x2)

inst_15790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000003fffffff; valaddr_reg:x3; val_offset:47370*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47370*0 + 3*430*FLEN/8, x4, x1, x2)

inst_15791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000007fffffff; valaddr_reg:x3; val_offset:47373*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47373*0 + 3*431*FLEN/8, x4, x1, x2)

inst_15792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400000ffffffff; valaddr_reg:x3; val_offset:47376*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47376*0 + 3*432*FLEN/8, x4, x1, x2)

inst_15793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400001ffffffff; valaddr_reg:x3; val_offset:47379*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47379*0 + 3*433*FLEN/8, x4, x1, x2)

inst_15794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400003ffffffff; valaddr_reg:x3; val_offset:47382*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47382*0 + 3*434*FLEN/8, x4, x1, x2)

inst_15795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400007ffffffff; valaddr_reg:x3; val_offset:47385*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47385*0 + 3*435*FLEN/8, x4, x1, x2)

inst_15796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340000fffffffff; valaddr_reg:x3; val_offset:47388*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47388*0 + 3*436*FLEN/8, x4, x1, x2)

inst_15797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340001fffffffff; valaddr_reg:x3; val_offset:47391*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47391*0 + 3*437*FLEN/8, x4, x1, x2)

inst_15798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340003fffffffff; valaddr_reg:x3; val_offset:47394*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47394*0 + 3*438*FLEN/8, x4, x1, x2)

inst_15799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340007fffffffff; valaddr_reg:x3; val_offset:47397*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47397*0 + 3*439*FLEN/8, x4, x1, x2)

inst_15800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34000ffffffffff; valaddr_reg:x3; val_offset:47400*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47400*0 + 3*440*FLEN/8, x4, x1, x2)

inst_15801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34001ffffffffff; valaddr_reg:x3; val_offset:47403*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47403*0 + 3*441*FLEN/8, x4, x1, x2)

inst_15802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34003ffffffffff; valaddr_reg:x3; val_offset:47406*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47406*0 + 3*442*FLEN/8, x4, x1, x2)

inst_15803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34007ffffffffff; valaddr_reg:x3; val_offset:47409*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47409*0 + 3*443*FLEN/8, x4, x1, x2)

inst_15804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3400fffffffffff; valaddr_reg:x3; val_offset:47412*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47412*0 + 3*444*FLEN/8, x4, x1, x2)

inst_15805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3401fffffffffff; valaddr_reg:x3; val_offset:47415*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47415*0 + 3*445*FLEN/8, x4, x1, x2)

inst_15806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3403fffffffffff; valaddr_reg:x3; val_offset:47418*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47418*0 + 3*446*FLEN/8, x4, x1, x2)

inst_15807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x3407fffffffffff; valaddr_reg:x3; val_offset:47421*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47421*0 + 3*447*FLEN/8, x4, x1, x2)

inst_15808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x340ffffffffffff; valaddr_reg:x3; val_offset:47424*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47424*0 + 3*448*FLEN/8, x4, x1, x2)

inst_15809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x341ffffffffffff; valaddr_reg:x3; val_offset:47427*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47427*0 + 3*449*FLEN/8, x4, x1, x2)

inst_15810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x343ffffffffffff; valaddr_reg:x3; val_offset:47430*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47430*0 + 3*450*FLEN/8, x4, x1, x2)

inst_15811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x347ffffffffffff; valaddr_reg:x3; val_offset:47433*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47433*0 + 3*451*FLEN/8, x4, x1, x2)

inst_15812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x348000000000000; valaddr_reg:x3; val_offset:47436*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47436*0 + 3*452*FLEN/8, x4, x1, x2)

inst_15813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34c000000000000; valaddr_reg:x3; val_offset:47439*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47439*0 + 3*453*FLEN/8, x4, x1, x2)

inst_15814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34e000000000000; valaddr_reg:x3; val_offset:47442*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47442*0 + 3*454*FLEN/8, x4, x1, x2)

inst_15815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34f000000000000; valaddr_reg:x3; val_offset:47445*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47445*0 + 3*455*FLEN/8, x4, x1, x2)

inst_15816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34f800000000000; valaddr_reg:x3; val_offset:47448*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47448*0 + 3*456*FLEN/8, x4, x1, x2)

inst_15817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fc00000000000; valaddr_reg:x3; val_offset:47451*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47451*0 + 3*457*FLEN/8, x4, x1, x2)

inst_15818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fe00000000000; valaddr_reg:x3; val_offset:47454*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47454*0 + 3*458*FLEN/8, x4, x1, x2)

inst_15819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ff00000000000; valaddr_reg:x3; val_offset:47457*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47457*0 + 3*459*FLEN/8, x4, x1, x2)

inst_15820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ff80000000000; valaddr_reg:x3; val_offset:47460*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47460*0 + 3*460*FLEN/8, x4, x1, x2)

inst_15821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffc0000000000; valaddr_reg:x3; val_offset:47463*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47463*0 + 3*461*FLEN/8, x4, x1, x2)

inst_15822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffe0000000000; valaddr_reg:x3; val_offset:47466*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47466*0 + 3*462*FLEN/8, x4, x1, x2)

inst_15823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fff0000000000; valaddr_reg:x3; val_offset:47469*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47469*0 + 3*463*FLEN/8, x4, x1, x2)

inst_15824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fff8000000000; valaddr_reg:x3; val_offset:47472*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47472*0 + 3*464*FLEN/8, x4, x1, x2)

inst_15825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffc000000000; valaddr_reg:x3; val_offset:47475*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47475*0 + 3*465*FLEN/8, x4, x1, x2)

inst_15826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffe000000000; valaddr_reg:x3; val_offset:47478*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47478*0 + 3*466*FLEN/8, x4, x1, x2)

inst_15827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffff000000000; valaddr_reg:x3; val_offset:47481*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47481*0 + 3*467*FLEN/8, x4, x1, x2)

inst_15828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffff800000000; valaddr_reg:x3; val_offset:47484*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47484*0 + 3*468*FLEN/8, x4, x1, x2)

inst_15829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffc00000000; valaddr_reg:x3; val_offset:47487*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47487*0 + 3*469*FLEN/8, x4, x1, x2)

inst_15830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffe00000000; valaddr_reg:x3; val_offset:47490*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47490*0 + 3*470*FLEN/8, x4, x1, x2)

inst_15831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffff00000000; valaddr_reg:x3; val_offset:47493*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47493*0 + 3*471*FLEN/8, x4, x1, x2)

inst_15832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffff80000000; valaddr_reg:x3; val_offset:47496*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47496*0 + 3*472*FLEN/8, x4, x1, x2)

inst_15833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffc0000000; valaddr_reg:x3; val_offset:47499*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47499*0 + 3*473*FLEN/8, x4, x1, x2)

inst_15834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffe0000000; valaddr_reg:x3; val_offset:47502*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47502*0 + 3*474*FLEN/8, x4, x1, x2)

inst_15835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffff0000000; valaddr_reg:x3; val_offset:47505*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47505*0 + 3*475*FLEN/8, x4, x1, x2)

inst_15836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffff8000000; valaddr_reg:x3; val_offset:47508*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47508*0 + 3*476*FLEN/8, x4, x1, x2)

inst_15837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffc000000; valaddr_reg:x3; val_offset:47511*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47511*0 + 3*477*FLEN/8, x4, x1, x2)

inst_15838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffe000000; valaddr_reg:x3; val_offset:47514*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47514*0 + 3*478*FLEN/8, x4, x1, x2)

inst_15839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffff000000; valaddr_reg:x3; val_offset:47517*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47517*0 + 3*479*FLEN/8, x4, x1, x2)

inst_15840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffff800000; valaddr_reg:x3; val_offset:47520*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47520*0 + 3*480*FLEN/8, x4, x1, x2)

inst_15841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffc00000; valaddr_reg:x3; val_offset:47523*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47523*0 + 3*481*FLEN/8, x4, x1, x2)

inst_15842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffe00000; valaddr_reg:x3; val_offset:47526*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47526*0 + 3*482*FLEN/8, x4, x1, x2)

inst_15843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffff00000; valaddr_reg:x3; val_offset:47529*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47529*0 + 3*483*FLEN/8, x4, x1, x2)

inst_15844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffff80000; valaddr_reg:x3; val_offset:47532*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47532*0 + 3*484*FLEN/8, x4, x1, x2)

inst_15845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffc0000; valaddr_reg:x3; val_offset:47535*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47535*0 + 3*485*FLEN/8, x4, x1, x2)

inst_15846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffe0000; valaddr_reg:x3; val_offset:47538*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47538*0 + 3*486*FLEN/8, x4, x1, x2)

inst_15847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffff0000; valaddr_reg:x3; val_offset:47541*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47541*0 + 3*487*FLEN/8, x4, x1, x2)

inst_15848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffff8000; valaddr_reg:x3; val_offset:47544*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47544*0 + 3*488*FLEN/8, x4, x1, x2)

inst_15849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffc000; valaddr_reg:x3; val_offset:47547*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47547*0 + 3*489*FLEN/8, x4, x1, x2)

inst_15850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffe000; valaddr_reg:x3; val_offset:47550*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47550*0 + 3*490*FLEN/8, x4, x1, x2)

inst_15851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffff000; valaddr_reg:x3; val_offset:47553*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47553*0 + 3*491*FLEN/8, x4, x1, x2)

inst_15852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffff800; valaddr_reg:x3; val_offset:47556*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47556*0 + 3*492*FLEN/8, x4, x1, x2)

inst_15853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffffc00; valaddr_reg:x3; val_offset:47559*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47559*0 + 3*493*FLEN/8, x4, x1, x2)

inst_15854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffffe00; valaddr_reg:x3; val_offset:47562*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47562*0 + 3*494*FLEN/8, x4, x1, x2)

inst_15855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffff00; valaddr_reg:x3; val_offset:47565*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47565*0 + 3*495*FLEN/8, x4, x1, x2)

inst_15856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffff80; valaddr_reg:x3; val_offset:47568*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47568*0 + 3*496*FLEN/8, x4, x1, x2)

inst_15857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffffc0; valaddr_reg:x3; val_offset:47571*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47571*0 + 3*497*FLEN/8, x4, x1, x2)

inst_15858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffffe0; valaddr_reg:x3; val_offset:47574*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47574*0 + 3*498*FLEN/8, x4, x1, x2)

inst_15859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffffff0; valaddr_reg:x3; val_offset:47577*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47577*0 + 3*499*FLEN/8, x4, x1, x2)

inst_15860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffffff8; valaddr_reg:x3; val_offset:47580*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47580*0 + 3*500*FLEN/8, x4, x1, x2)

inst_15861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffffffc; valaddr_reg:x3; val_offset:47583*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47583*0 + 3*501*FLEN/8, x4, x1, x2)

inst_15862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34ffffffffffffe; valaddr_reg:x3; val_offset:47586*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47586*0 + 3*502*FLEN/8, x4, x1, x2)

inst_15863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x27de20991ceef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f827de20991ceef; op2val:0x0;
op3val:0x34fffffffffffff; valaddr_reg:x3; val_offset:47589*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47589*0 + 3*503*FLEN/8, x4, x1, x2)

inst_15864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000000000; valaddr_reg:x3; val_offset:47592*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47592*0 + 3*504*FLEN/8, x4, x1, x2)

inst_15865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000000001; valaddr_reg:x3; val_offset:47595*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47595*0 + 3*505*FLEN/8, x4, x1, x2)

inst_15866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000000003; valaddr_reg:x3; val_offset:47598*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47598*0 + 3*506*FLEN/8, x4, x1, x2)

inst_15867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000000007; valaddr_reg:x3; val_offset:47601*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47601*0 + 3*507*FLEN/8, x4, x1, x2)

inst_15868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000000000f; valaddr_reg:x3; val_offset:47604*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47604*0 + 3*508*FLEN/8, x4, x1, x2)

inst_15869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000000001f; valaddr_reg:x3; val_offset:47607*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47607*0 + 3*509*FLEN/8, x4, x1, x2)

inst_15870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000000003f; valaddr_reg:x3; val_offset:47610*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47610*0 + 3*510*FLEN/8, x4, x1, x2)

inst_15871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000000007f; valaddr_reg:x3; val_offset:47613*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47613*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_15872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000000000ff; valaddr_reg:x3; val_offset:47616*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47616*0 + 3*512*FLEN/8, x4, x1, x2)

inst_15873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000000001ff; valaddr_reg:x3; val_offset:47619*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47619*0 + 3*513*FLEN/8, x4, x1, x2)

inst_15874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000000003ff; valaddr_reg:x3; val_offset:47622*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47622*0 + 3*514*FLEN/8, x4, x1, x2)

inst_15875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000000007ff; valaddr_reg:x3; val_offset:47625*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47625*0 + 3*515*FLEN/8, x4, x1, x2)

inst_15876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000000fff; valaddr_reg:x3; val_offset:47628*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47628*0 + 3*516*FLEN/8, x4, x1, x2)

inst_15877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000001fff; valaddr_reg:x3; val_offset:47631*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47631*0 + 3*517*FLEN/8, x4, x1, x2)

inst_15878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000003fff; valaddr_reg:x3; val_offset:47634*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47634*0 + 3*518*FLEN/8, x4, x1, x2)

inst_15879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000007fff; valaddr_reg:x3; val_offset:47637*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47637*0 + 3*519*FLEN/8, x4, x1, x2)

inst_15880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000000ffff; valaddr_reg:x3; val_offset:47640*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47640*0 + 3*520*FLEN/8, x4, x1, x2)

inst_15881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000001ffff; valaddr_reg:x3; val_offset:47643*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47643*0 + 3*521*FLEN/8, x4, x1, x2)

inst_15882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000003ffff; valaddr_reg:x3; val_offset:47646*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47646*0 + 3*522*FLEN/8, x4, x1, x2)

inst_15883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000007ffff; valaddr_reg:x3; val_offset:47649*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47649*0 + 3*523*FLEN/8, x4, x1, x2)

inst_15884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000000fffff; valaddr_reg:x3; val_offset:47652*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47652*0 + 3*524*FLEN/8, x4, x1, x2)

inst_15885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000001fffff; valaddr_reg:x3; val_offset:47655*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47655*0 + 3*525*FLEN/8, x4, x1, x2)

inst_15886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000003fffff; valaddr_reg:x3; val_offset:47658*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47658*0 + 3*526*FLEN/8, x4, x1, x2)

inst_15887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000007fffff; valaddr_reg:x3; val_offset:47661*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47661*0 + 3*527*FLEN/8, x4, x1, x2)

inst_15888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000000ffffff; valaddr_reg:x3; val_offset:47664*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47664*0 + 3*528*FLEN/8, x4, x1, x2)

inst_15889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000001ffffff; valaddr_reg:x3; val_offset:47667*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47667*0 + 3*529*FLEN/8, x4, x1, x2)

inst_15890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000003ffffff; valaddr_reg:x3; val_offset:47670*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47670*0 + 3*530*FLEN/8, x4, x1, x2)

inst_15891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000007ffffff; valaddr_reg:x3; val_offset:47673*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47673*0 + 3*531*FLEN/8, x4, x1, x2)

inst_15892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000000fffffff; valaddr_reg:x3; val_offset:47676*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47676*0 + 3*532*FLEN/8, x4, x1, x2)

inst_15893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000001fffffff; valaddr_reg:x3; val_offset:47679*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47679*0 + 3*533*FLEN/8, x4, x1, x2)

inst_15894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000003fffffff; valaddr_reg:x3; val_offset:47682*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47682*0 + 3*534*FLEN/8, x4, x1, x2)

inst_15895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000007fffffff; valaddr_reg:x3; val_offset:47685*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47685*0 + 3*535*FLEN/8, x4, x1, x2)

inst_15896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00000ffffffff; valaddr_reg:x3; val_offset:47688*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47688*0 + 3*536*FLEN/8, x4, x1, x2)

inst_15897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00001ffffffff; valaddr_reg:x3; val_offset:47691*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47691*0 + 3*537*FLEN/8, x4, x1, x2)

inst_15898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00003ffffffff; valaddr_reg:x3; val_offset:47694*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47694*0 + 3*538*FLEN/8, x4, x1, x2)

inst_15899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00007ffffffff; valaddr_reg:x3; val_offset:47697*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47697*0 + 3*539*FLEN/8, x4, x1, x2)

inst_15900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0000fffffffff; valaddr_reg:x3; val_offset:47700*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47700*0 + 3*540*FLEN/8, x4, x1, x2)

inst_15901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0001fffffffff; valaddr_reg:x3; val_offset:47703*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47703*0 + 3*541*FLEN/8, x4, x1, x2)

inst_15902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0003fffffffff; valaddr_reg:x3; val_offset:47706*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47706*0 + 3*542*FLEN/8, x4, x1, x2)

inst_15903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0007fffffffff; valaddr_reg:x3; val_offset:47709*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47709*0 + 3*543*FLEN/8, x4, x1, x2)

inst_15904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c000ffffffffff; valaddr_reg:x3; val_offset:47712*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47712*0 + 3*544*FLEN/8, x4, x1, x2)

inst_15905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c001ffffffffff; valaddr_reg:x3; val_offset:47715*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47715*0 + 3*545*FLEN/8, x4, x1, x2)

inst_15906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c003ffffffffff; valaddr_reg:x3; val_offset:47718*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47718*0 + 3*546*FLEN/8, x4, x1, x2)

inst_15907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c007ffffffffff; valaddr_reg:x3; val_offset:47721*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47721*0 + 3*547*FLEN/8, x4, x1, x2)

inst_15908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c00fffffffffff; valaddr_reg:x3; val_offset:47724*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47724*0 + 3*548*FLEN/8, x4, x1, x2)

inst_15909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c01fffffffffff; valaddr_reg:x3; val_offset:47727*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47727*0 + 3*549*FLEN/8, x4, x1, x2)

inst_15910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c03fffffffffff; valaddr_reg:x3; val_offset:47730*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47730*0 + 3*550*FLEN/8, x4, x1, x2)

inst_15911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c07fffffffffff; valaddr_reg:x3; val_offset:47733*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47733*0 + 3*551*FLEN/8, x4, x1, x2)

inst_15912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c0ffffffffffff; valaddr_reg:x3; val_offset:47736*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47736*0 + 3*552*FLEN/8, x4, x1, x2)

inst_15913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c1ffffffffffff; valaddr_reg:x3; val_offset:47739*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47739*0 + 3*553*FLEN/8, x4, x1, x2)

inst_15914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c3ffffffffffff; valaddr_reg:x3; val_offset:47742*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47742*0 + 3*554*FLEN/8, x4, x1, x2)

inst_15915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c7ffffffffffff; valaddr_reg:x3; val_offset:47745*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47745*0 + 3*555*FLEN/8, x4, x1, x2)

inst_15916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8c8000000000000; valaddr_reg:x3; val_offset:47748*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47748*0 + 3*556*FLEN/8, x4, x1, x2)

inst_15917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cc000000000000; valaddr_reg:x3; val_offset:47751*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47751*0 + 3*557*FLEN/8, x4, x1, x2)

inst_15918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8ce000000000000; valaddr_reg:x3; val_offset:47754*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47754*0 + 3*558*FLEN/8, x4, x1, x2)

inst_15919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cf000000000000; valaddr_reg:x3; val_offset:47757*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47757*0 + 3*559*FLEN/8, x4, x1, x2)

inst_15920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cf800000000000; valaddr_reg:x3; val_offset:47760*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47760*0 + 3*560*FLEN/8, x4, x1, x2)

inst_15921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfc00000000000; valaddr_reg:x3; val_offset:47763*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47763*0 + 3*561*FLEN/8, x4, x1, x2)

inst_15922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfe00000000000; valaddr_reg:x3; val_offset:47766*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47766*0 + 3*562*FLEN/8, x4, x1, x2)

inst_15923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cff00000000000; valaddr_reg:x3; val_offset:47769*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47769*0 + 3*563*FLEN/8, x4, x1, x2)

inst_15924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cff80000000000; valaddr_reg:x3; val_offset:47772*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47772*0 + 3*564*FLEN/8, x4, x1, x2)

inst_15925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffc0000000000; valaddr_reg:x3; val_offset:47775*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47775*0 + 3*565*FLEN/8, x4, x1, x2)

inst_15926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffe0000000000; valaddr_reg:x3; val_offset:47778*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47778*0 + 3*566*FLEN/8, x4, x1, x2)

inst_15927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfff0000000000; valaddr_reg:x3; val_offset:47781*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47781*0 + 3*567*FLEN/8, x4, x1, x2)

inst_15928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfff8000000000; valaddr_reg:x3; val_offset:47784*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47784*0 + 3*568*FLEN/8, x4, x1, x2)

inst_15929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffc000000000; valaddr_reg:x3; val_offset:47787*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47787*0 + 3*569*FLEN/8, x4, x1, x2)

inst_15930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffe000000000; valaddr_reg:x3; val_offset:47790*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47790*0 + 3*570*FLEN/8, x4, x1, x2)

inst_15931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffff000000000; valaddr_reg:x3; val_offset:47793*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47793*0 + 3*571*FLEN/8, x4, x1, x2)

inst_15932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffff800000000; valaddr_reg:x3; val_offset:47796*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47796*0 + 3*572*FLEN/8, x4, x1, x2)

inst_15933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffc00000000; valaddr_reg:x3; val_offset:47799*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47799*0 + 3*573*FLEN/8, x4, x1, x2)

inst_15934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffe00000000; valaddr_reg:x3; val_offset:47802*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47802*0 + 3*574*FLEN/8, x4, x1, x2)

inst_15935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffff00000000; valaddr_reg:x3; val_offset:47805*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47805*0 + 3*575*FLEN/8, x4, x1, x2)

inst_15936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffff80000000; valaddr_reg:x3; val_offset:47808*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47808*0 + 3*576*FLEN/8, x4, x1, x2)

inst_15937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffc0000000; valaddr_reg:x3; val_offset:47811*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47811*0 + 3*577*FLEN/8, x4, x1, x2)

inst_15938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffe0000000; valaddr_reg:x3; val_offset:47814*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47814*0 + 3*578*FLEN/8, x4, x1, x2)

inst_15939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffff0000000; valaddr_reg:x3; val_offset:47817*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47817*0 + 3*579*FLEN/8, x4, x1, x2)

inst_15940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffff8000000; valaddr_reg:x3; val_offset:47820*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47820*0 + 3*580*FLEN/8, x4, x1, x2)

inst_15941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffc000000; valaddr_reg:x3; val_offset:47823*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47823*0 + 3*581*FLEN/8, x4, x1, x2)

inst_15942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffe000000; valaddr_reg:x3; val_offset:47826*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47826*0 + 3*582*FLEN/8, x4, x1, x2)

inst_15943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffff000000; valaddr_reg:x3; val_offset:47829*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47829*0 + 3*583*FLEN/8, x4, x1, x2)

inst_15944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffff800000; valaddr_reg:x3; val_offset:47832*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47832*0 + 3*584*FLEN/8, x4, x1, x2)

inst_15945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffc00000; valaddr_reg:x3; val_offset:47835*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47835*0 + 3*585*FLEN/8, x4, x1, x2)

inst_15946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffe00000; valaddr_reg:x3; val_offset:47838*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47838*0 + 3*586*FLEN/8, x4, x1, x2)

inst_15947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffff00000; valaddr_reg:x3; val_offset:47841*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47841*0 + 3*587*FLEN/8, x4, x1, x2)

inst_15948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffff80000; valaddr_reg:x3; val_offset:47844*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47844*0 + 3*588*FLEN/8, x4, x1, x2)

inst_15949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffc0000; valaddr_reg:x3; val_offset:47847*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47847*0 + 3*589*FLEN/8, x4, x1, x2)

inst_15950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffe0000; valaddr_reg:x3; val_offset:47850*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47850*0 + 3*590*FLEN/8, x4, x1, x2)

inst_15951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffff0000; valaddr_reg:x3; val_offset:47853*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47853*0 + 3*591*FLEN/8, x4, x1, x2)

inst_15952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffff8000; valaddr_reg:x3; val_offset:47856*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47856*0 + 3*592*FLEN/8, x4, x1, x2)

inst_15953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffc000; valaddr_reg:x3; val_offset:47859*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47859*0 + 3*593*FLEN/8, x4, x1, x2)

inst_15954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffe000; valaddr_reg:x3; val_offset:47862*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47862*0 + 3*594*FLEN/8, x4, x1, x2)

inst_15955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffff000; valaddr_reg:x3; val_offset:47865*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47865*0 + 3*595*FLEN/8, x4, x1, x2)

inst_15956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffff800; valaddr_reg:x3; val_offset:47868*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47868*0 + 3*596*FLEN/8, x4, x1, x2)

inst_15957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffffc00; valaddr_reg:x3; val_offset:47871*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47871*0 + 3*597*FLEN/8, x4, x1, x2)

inst_15958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffffe00; valaddr_reg:x3; val_offset:47874*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47874*0 + 3*598*FLEN/8, x4, x1, x2)

inst_15959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffff00; valaddr_reg:x3; val_offset:47877*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47877*0 + 3*599*FLEN/8, x4, x1, x2)

inst_15960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffff80; valaddr_reg:x3; val_offset:47880*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47880*0 + 3*600*FLEN/8, x4, x1, x2)

inst_15961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffffc0; valaddr_reg:x3; val_offset:47883*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47883*0 + 3*601*FLEN/8, x4, x1, x2)

inst_15962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffffe0; valaddr_reg:x3; val_offset:47886*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47886*0 + 3*602*FLEN/8, x4, x1, x2)

inst_15963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffffff0; valaddr_reg:x3; val_offset:47889*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47889*0 + 3*603*FLEN/8, x4, x1, x2)

inst_15964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffffff8; valaddr_reg:x3; val_offset:47892*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47892*0 + 3*604*FLEN/8, x4, x1, x2)

inst_15965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffffffc; valaddr_reg:x3; val_offset:47895*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47895*0 + 3*605*FLEN/8, x4, x1, x2)

inst_15966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cffffffffffffe; valaddr_reg:x3; val_offset:47898*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47898*0 + 3*606*FLEN/8, x4, x1, x2)

inst_15967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xb8cfffffffffffff; valaddr_reg:x3; val_offset:47901*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47901*0 + 3*607*FLEN/8, x4, x1, x2)

inst_15968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:47904*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47904*0 + 3*608*FLEN/8, x4, x1, x2)

inst_15969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:47907*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47907*0 + 3*609*FLEN/8, x4, x1, x2)

inst_15970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:47910*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47910*0 + 3*610*FLEN/8, x4, x1, x2)

inst_15971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:47913*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47913*0 + 3*611*FLEN/8, x4, x1, x2)

inst_15972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:47916*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47916*0 + 3*612*FLEN/8, x4, x1, x2)

inst_15973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:47919*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47919*0 + 3*613*FLEN/8, x4, x1, x2)

inst_15974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:47922*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47922*0 + 3*614*FLEN/8, x4, x1, x2)

inst_15975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:47925*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47925*0 + 3*615*FLEN/8, x4, x1, x2)

inst_15976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:47928*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47928*0 + 3*616*FLEN/8, x4, x1, x2)

inst_15977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:47931*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47931*0 + 3*617*FLEN/8, x4, x1, x2)

inst_15978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:47934*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47934*0 + 3*618*FLEN/8, x4, x1, x2)

inst_15979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:47937*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47937*0 + 3*619*FLEN/8, x4, x1, x2)

inst_15980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:47940*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47940*0 + 3*620*FLEN/8, x4, x1, x2)

inst_15981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:47943*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47943*0 + 3*621*FLEN/8, x4, x1, x2)

inst_15982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:47946*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47946*0 + 3*622*FLEN/8, x4, x1, x2)

inst_15983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:47949*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47949*0 + 3*623*FLEN/8, x4, x1, x2)

inst_15984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:47952*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47952*0 + 3*624*FLEN/8, x4, x1, x2)

inst_15985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:47955*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47955*0 + 3*625*FLEN/8, x4, x1, x2)

inst_15986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:47958*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47958*0 + 3*626*FLEN/8, x4, x1, x2)

inst_15987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:47961*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47961*0 + 3*627*FLEN/8, x4, x1, x2)

inst_15988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:47964*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47964*0 + 3*628*FLEN/8, x4, x1, x2)

inst_15989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xba188273aa113 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8287a907776fa3; op2val:0x9feba188273aa113;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:47967*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47967*0 + 3*629*FLEN/8, x4, x1, x2)

inst_15990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:47970*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47970*0 + 3*630*FLEN/8, x4, x1, x2)

inst_15991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:47973*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47973*0 + 3*631*FLEN/8, x4, x1, x2)

inst_15992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:47976*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47976*0 + 3*632*FLEN/8, x4, x1, x2)

inst_15993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:47979*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47979*0 + 3*633*FLEN/8, x4, x1, x2)

inst_15994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:47982*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47982*0 + 3*634*FLEN/8, x4, x1, x2)

inst_15995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:47985*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47985*0 + 3*635*FLEN/8, x4, x1, x2)

inst_15996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:47988*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47988*0 + 3*636*FLEN/8, x4, x1, x2)

inst_15997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:47991*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47991*0 + 3*637*FLEN/8, x4, x1, x2)

inst_15998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:47994*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47994*0 + 3*638*FLEN/8, x4, x1, x2)

inst_15999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:47997*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 47997*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_16000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:48000*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48000*0 + 3*640*FLEN/8, x4, x1, x2)

inst_16001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:48003*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48003*0 + 3*641*FLEN/8, x4, x1, x2)

inst_16002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:48006*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48006*0 + 3*642*FLEN/8, x4, x1, x2)

inst_16003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:48009*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48009*0 + 3*643*FLEN/8, x4, x1, x2)

inst_16004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:48012*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48012*0 + 3*644*FLEN/8, x4, x1, x2)

inst_16005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:48015*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48015*0 + 3*645*FLEN/8, x4, x1, x2)

inst_16006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:48018*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48018*0 + 3*646*FLEN/8, x4, x1, x2)

inst_16007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:48021*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48021*0 + 3*647*FLEN/8, x4, x1, x2)

inst_16008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:48024*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48024*0 + 3*648*FLEN/8, x4, x1, x2)

inst_16009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:48027*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48027*0 + 3*649*FLEN/8, x4, x1, x2)

inst_16010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:48030*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48030*0 + 3*650*FLEN/8, x4, x1, x2)

inst_16011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:48033*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48033*0 + 3*651*FLEN/8, x4, x1, x2)

inst_16012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:48036*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48036*0 + 3*652*FLEN/8, x4, x1, x2)

inst_16013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:48039*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48039*0 + 3*653*FLEN/8, x4, x1, x2)

inst_16014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:48042*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48042*0 + 3*654*FLEN/8, x4, x1, x2)

inst_16015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:48045*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48045*0 + 3*655*FLEN/8, x4, x1, x2)

inst_16016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:48048*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48048*0 + 3*656*FLEN/8, x4, x1, x2)

inst_16017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:48051*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48051*0 + 3*657*FLEN/8, x4, x1, x2)

inst_16018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:48054*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48054*0 + 3*658*FLEN/8, x4, x1, x2)

inst_16019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:48057*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48057*0 + 3*659*FLEN/8, x4, x1, x2)

inst_16020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:48060*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48060*0 + 3*660*FLEN/8, x4, x1, x2)

inst_16021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:48063*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48063*0 + 3*661*FLEN/8, x4, x1, x2)

inst_16022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:48066*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48066*0 + 3*662*FLEN/8, x4, x1, x2)

inst_16023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:48069*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48069*0 + 3*663*FLEN/8, x4, x1, x2)

inst_16024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:48072*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48072*0 + 3*664*FLEN/8, x4, x1, x2)

inst_16025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:48075*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48075*0 + 3*665*FLEN/8, x4, x1, x2)

inst_16026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:48078*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48078*0 + 3*666*FLEN/8, x4, x1, x2)

inst_16027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:48081*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48081*0 + 3*667*FLEN/8, x4, x1, x2)

inst_16028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:48084*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48084*0 + 3*668*FLEN/8, x4, x1, x2)

inst_16029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:48087*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48087*0 + 3*669*FLEN/8, x4, x1, x2)

inst_16030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:48090*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48090*0 + 3*670*FLEN/8, x4, x1, x2)

inst_16031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:48093*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48093*0 + 3*671*FLEN/8, x4, x1, x2)

inst_16032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:48096*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48096*0 + 3*672*FLEN/8, x4, x1, x2)

inst_16033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:48099*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48099*0 + 3*673*FLEN/8, x4, x1, x2)

inst_16034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:48102*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48102*0 + 3*674*FLEN/8, x4, x1, x2)

inst_16035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:48105*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48105*0 + 3*675*FLEN/8, x4, x1, x2)

inst_16036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:48108*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48108*0 + 3*676*FLEN/8, x4, x1, x2)

inst_16037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:48111*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48111*0 + 3*677*FLEN/8, x4, x1, x2)

inst_16038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:48114*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48114*0 + 3*678*FLEN/8, x4, x1, x2)

inst_16039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:48117*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48117*0 + 3*679*FLEN/8, x4, x1, x2)

inst_16040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:48120*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48120*0 + 3*680*FLEN/8, x4, x1, x2)

inst_16041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:48123*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48123*0 + 3*681*FLEN/8, x4, x1, x2)

inst_16042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:48126*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48126*0 + 3*682*FLEN/8, x4, x1, x2)

inst_16043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:48129*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48129*0 + 3*683*FLEN/8, x4, x1, x2)

inst_16044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:48132*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48132*0 + 3*684*FLEN/8, x4, x1, x2)

inst_16045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:48135*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48135*0 + 3*685*FLEN/8, x4, x1, x2)

inst_16046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:48138*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48138*0 + 3*686*FLEN/8, x4, x1, x2)

inst_16047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:48141*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48141*0 + 3*687*FLEN/8, x4, x1, x2)

inst_16048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:48144*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48144*0 + 3*688*FLEN/8, x4, x1, x2)

inst_16049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:48147*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48147*0 + 3*689*FLEN/8, x4, x1, x2)

inst_16050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:48150*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48150*0 + 3*690*FLEN/8, x4, x1, x2)

inst_16051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:48153*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48153*0 + 3*691*FLEN/8, x4, x1, x2)

inst_16052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:48156*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48156*0 + 3*692*FLEN/8, x4, x1, x2)

inst_16053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:48159*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48159*0 + 3*693*FLEN/8, x4, x1, x2)

inst_16054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:48162*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48162*0 + 3*694*FLEN/8, x4, x1, x2)

inst_16055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:48165*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48165*0 + 3*695*FLEN/8, x4, x1, x2)

inst_16056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:48168*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48168*0 + 3*696*FLEN/8, x4, x1, x2)

inst_16057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:48171*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48171*0 + 3*697*FLEN/8, x4, x1, x2)

inst_16058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:48174*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48174*0 + 3*698*FLEN/8, x4, x1, x2)

inst_16059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:48177*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48177*0 + 3*699*FLEN/8, x4, x1, x2)

inst_16060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:48180*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48180*0 + 3*700*FLEN/8, x4, x1, x2)

inst_16061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:48183*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48183*0 + 3*701*FLEN/8, x4, x1, x2)

inst_16062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:48186*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48186*0 + 3*702*FLEN/8, x4, x1, x2)

inst_16063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:48189*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48189*0 + 3*703*FLEN/8, x4, x1, x2)

inst_16064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:48192*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48192*0 + 3*704*FLEN/8, x4, x1, x2)

inst_16065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:48195*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48195*0 + 3*705*FLEN/8, x4, x1, x2)

inst_16066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:48198*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48198*0 + 3*706*FLEN/8, x4, x1, x2)

inst_16067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:48201*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48201*0 + 3*707*FLEN/8, x4, x1, x2)

inst_16068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:48204*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48204*0 + 3*708*FLEN/8, x4, x1, x2)

inst_16069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:48207*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48207*0 + 3*709*FLEN/8, x4, x1, x2)

inst_16070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:48210*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48210*0 + 3*710*FLEN/8, x4, x1, x2)

inst_16071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:48213*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48213*0 + 3*711*FLEN/8, x4, x1, x2)

inst_16072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:48216*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48216*0 + 3*712*FLEN/8, x4, x1, x2)

inst_16073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:48219*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48219*0 + 3*713*FLEN/8, x4, x1, x2)

inst_16074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:48222*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48222*0 + 3*714*FLEN/8, x4, x1, x2)

inst_16075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:48225*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48225*0 + 3*715*FLEN/8, x4, x1, x2)

inst_16076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:48228*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48228*0 + 3*716*FLEN/8, x4, x1, x2)

inst_16077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:48231*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48231*0 + 3*717*FLEN/8, x4, x1, x2)

inst_16078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:48234*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48234*0 + 3*718*FLEN/8, x4, x1, x2)

inst_16079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:48237*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48237*0 + 3*719*FLEN/8, x4, x1, x2)

inst_16080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:48240*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48240*0 + 3*720*FLEN/8, x4, x1, x2)

inst_16081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:48243*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48243*0 + 3*721*FLEN/8, x4, x1, x2)

inst_16082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:48246*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48246*0 + 3*722*FLEN/8, x4, x1, x2)

inst_16083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:48249*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48249*0 + 3*723*FLEN/8, x4, x1, x2)

inst_16084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:48252*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48252*0 + 3*724*FLEN/8, x4, x1, x2)

inst_16085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:48255*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48255*0 + 3*725*FLEN/8, x4, x1, x2)

inst_16086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:48258*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48258*0 + 3*726*FLEN/8, x4, x1, x2)

inst_16087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:48261*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48261*0 + 3*727*FLEN/8, x4, x1, x2)

inst_16088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:48264*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48264*0 + 3*728*FLEN/8, x4, x1, x2)

inst_16089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:48267*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48267*0 + 3*729*FLEN/8, x4, x1, x2)

inst_16090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:48270*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48270*0 + 3*730*FLEN/8, x4, x1, x2)

inst_16091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:48273*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48273*0 + 3*731*FLEN/8, x4, x1, x2)

inst_16092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:48276*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48276*0 + 3*732*FLEN/8, x4, x1, x2)

inst_16093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:48279*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48279*0 + 3*733*FLEN/8, x4, x1, x2)

inst_16094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:48282*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48282*0 + 3*734*FLEN/8, x4, x1, x2)

inst_16095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:48285*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48285*0 + 3*735*FLEN/8, x4, x1, x2)

inst_16096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:48288*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48288*0 + 3*736*FLEN/8, x4, x1, x2)

inst_16097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:48291*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48291*0 + 3*737*FLEN/8, x4, x1, x2)

inst_16098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:48294*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48294*0 + 3*738*FLEN/8, x4, x1, x2)

inst_16099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:48297*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48297*0 + 3*739*FLEN/8, x4, x1, x2)

inst_16100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:48300*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48300*0 + 3*740*FLEN/8, x4, x1, x2)

inst_16101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:48303*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48303*0 + 3*741*FLEN/8, x4, x1, x2)

inst_16102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:48306*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48306*0 + 3*742*FLEN/8, x4, x1, x2)

inst_16103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:48309*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48309*0 + 3*743*FLEN/8, x4, x1, x2)

inst_16104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:48312*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48312*0 + 3*744*FLEN/8, x4, x1, x2)

inst_16105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:48315*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48315*0 + 3*745*FLEN/8, x4, x1, x2)

inst_16106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:48318*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48318*0 + 3*746*FLEN/8, x4, x1, x2)

inst_16107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:48321*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48321*0 + 3*747*FLEN/8, x4, x1, x2)

inst_16108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:48324*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48324*0 + 3*748*FLEN/8, x4, x1, x2)

inst_16109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:48327*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48327*0 + 3*749*FLEN/8, x4, x1, x2)

inst_16110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:48330*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48330*0 + 3*750*FLEN/8, x4, x1, x2)

inst_16111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:48333*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48333*0 + 3*751*FLEN/8, x4, x1, x2)

inst_16112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:48336*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48336*0 + 3*752*FLEN/8, x4, x1, x2)

inst_16113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:48339*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48339*0 + 3*753*FLEN/8, x4, x1, x2)

inst_16114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:48342*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48342*0 + 3*754*FLEN/8, x4, x1, x2)

inst_16115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x28ab2aa5780fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f828ab2aa5780fb; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:48345*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48345*0 + 3*755*FLEN/8, x4, x1, x2)

inst_16116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000000000; valaddr_reg:x3; val_offset:48348*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48348*0 + 3*756*FLEN/8, x4, x1, x2)

inst_16117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000000001; valaddr_reg:x3; val_offset:48351*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48351*0 + 3*757*FLEN/8, x4, x1, x2)

inst_16118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000000003; valaddr_reg:x3; val_offset:48354*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48354*0 + 3*758*FLEN/8, x4, x1, x2)

inst_16119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000000007; valaddr_reg:x3; val_offset:48357*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48357*0 + 3*759*FLEN/8, x4, x1, x2)

inst_16120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000000000f; valaddr_reg:x3; val_offset:48360*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48360*0 + 3*760*FLEN/8, x4, x1, x2)

inst_16121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000000001f; valaddr_reg:x3; val_offset:48363*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48363*0 + 3*761*FLEN/8, x4, x1, x2)

inst_16122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000000003f; valaddr_reg:x3; val_offset:48366*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48366*0 + 3*762*FLEN/8, x4, x1, x2)

inst_16123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000000007f; valaddr_reg:x3; val_offset:48369*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48369*0 + 3*763*FLEN/8, x4, x1, x2)

inst_16124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000000000ff; valaddr_reg:x3; val_offset:48372*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48372*0 + 3*764*FLEN/8, x4, x1, x2)

inst_16125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000000001ff; valaddr_reg:x3; val_offset:48375*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48375*0 + 3*765*FLEN/8, x4, x1, x2)

inst_16126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000000003ff; valaddr_reg:x3; val_offset:48378*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48378*0 + 3*766*FLEN/8, x4, x1, x2)

inst_16127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000000007ff; valaddr_reg:x3; val_offset:48381*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48381*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262400,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262401,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262403,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262407,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262415,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262431,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262463,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262527,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262655,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262911,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684263423,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684264447,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684266495,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684270591,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684278783,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684295167,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684327935,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684393471,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684524543,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684786687,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990685310975,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990686359551,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990688456703,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990692651007,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990701039615,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990717816831,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990751371263,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990818480127,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990952697855,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991221133311,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991758004223,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589992831746047,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589994979229695,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589999274196991,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590007864131583,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590025044000767,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590059403739135,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590128123215871,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590265562169343,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590540440076287,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112591090195890175,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112592189707517951,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112594388730773503,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112598786777284607,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112607582870306815,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112625175056351231,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112660359428440063,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112730728172617727,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112871465660973055,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113152940637683711,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113715890591105023,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947647,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947648,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(115967690404790272,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116530640358211584,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116812115334922240,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116952852823277568,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117023221567455232,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117058405939544064,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117075998125588480,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117084794218610688,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117089192265121792,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117091391288377344,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117092490800005120,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093040555819008,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093315433725952,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093452872679424,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093521592156160,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093555951894528,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093573131763712,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093581721698304,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093586016665600,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093588164149248,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589237891072,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589774761984,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590043197440,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590177415168,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590244524032,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590278078464,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590294855680,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590303244288,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590307438592,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590309535744,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590310584320,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311108608,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311370752,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311501824,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311567360,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311600128,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311616512,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311624704,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311628800,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311630848,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311631872,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632384,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632640,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632768,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632832,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632864,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632880,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632888,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632892,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632894,64,FLEN)
NAN_BOXED(6882174803669154587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632895,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075904,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075905,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075907,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075911,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075919,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075935,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006075967,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006076031,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006076159,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006076415,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006076927,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006077951,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006079999,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006084095,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006092287,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006108671,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006141439,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006206975,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006338047,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065006600191,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065007124479,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065008173055,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065010270207,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065014464511,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065022853119,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065039630335,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065073184767,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065140293631,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065274511359,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736065542946815,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736066079817727,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736067153559551,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736069301043199,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736073596010495,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736082185945087,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736099365814271,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736133725552639,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736202445029375,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736339883982847,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048736614761889791,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048737164517703679,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048738264029331455,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048740463052587007,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048744861099098111,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048753657192120319,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048771249378164735,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048806433750253567,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4048876802494431231,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4049017539982786559,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4049299014959497215,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4049861964912918527,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4050987864819761151,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4050987864819761152,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4052113764726603776,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4052676714680025088,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4052958189656735744,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053098927145091072,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053169295889268736,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053204480261357568,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053222072447401984,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053230868540424192,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053235266586935296,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053237465610190848,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053238565121818624,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239114877632512,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239389755539456,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239527194492928,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239595913969664,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239630273708032,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239647453577216,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239656043511808,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239660338479104,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239662485962752,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239663559704576,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664096575488,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664365010944,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664499228672,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664566337536,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664599891968,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664616669184,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664625057792,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664629252096,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664631349248,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664632397824,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664632922112,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633184256,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633315328,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633380864,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633413632,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633430016,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633438208,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633442304,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633444352,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633445376,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633445888,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446144,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446272,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446336,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446368,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446384,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446392,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446396,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446398,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4053239664633446399,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882178633557719095,64,FLEN)
NAN_BOXED(2331685427627519787,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851264,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851265,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851267,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851271,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851279,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851295,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851327,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851391,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851519,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851775,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755852287,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755853311,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755855359,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755859455,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755867647,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755884031,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755916799,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755982335,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756113407,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756375551,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756899839,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632757948415,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632760045567,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632764239871,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632772628479,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632789405695,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632822960127,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632890068991,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633024286719,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633292722175,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633829593087,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911634903334911,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911637050818559,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911641345785855,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911649935720447,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911667115589631,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911701475327999,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911770194804735,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911907633758207,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272912182511665151,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272912732267479039,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272913831779106815,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272916030802362367,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272920428848873471,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272929224941895679,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272946817127940095,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272982001500028927,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273052370244206591,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273193107732561919,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273474582709272575,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9274037532662693887,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9275163432569536511,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9275163432569536512,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9276289332476379136,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9276852282429800448,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277133757406511104,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277274494894866432,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277344863639044096,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277380048011132928,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277397640197177344,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277406436290199552,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277410834336710656,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277413033359966208,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414132871593984,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414682627407872,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414957505314816,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415094944268288,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415163663745024,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415198023483392,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415215203352576,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415223793287168,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415228088254464,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415230235738112,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415231309479936,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415231846350848,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232114786304,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232249004032,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232316112896,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232349667328,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232366444544,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232374833152,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232379027456,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232381124608,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382173184,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382697472,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382959616,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383090688,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383156224,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383188992,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383205376,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383213568,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383217664,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383219712,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383220736,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221248,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221504,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221632,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221696,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221728,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221744,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221752,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221756,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221758,64,FLEN)
NAN_BOXED(6882186304987524639,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221759,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265792,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265793,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265795,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265799,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265807,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265823,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265855,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265919,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266047,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266303,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266815,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623267839,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623269887,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623273983,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623282175,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623298559,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623331327,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623396863,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623527935,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623790079,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180624314367,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180625362943,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180627460095,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180631654399,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180640043007,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180656820223,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180690374655,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180757483519,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180891701247,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181160136703,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181697007615,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187182770749439,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187184918233087,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187189213200383,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187197803134975,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187214983004159,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187249342742527,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187318062219263,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187455501172735,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187730379079679,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234188280134893567,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234189379646521343,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234191578669776895,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234195976716287999,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234204772809310207,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234222364995354623,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234257549367443455,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234327918111621119,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234468655599976447,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234750130576687103,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(235313080530108415,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951039,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951040,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(237564880343793664,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238127830297214976,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238409305273925632,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238550042762280960,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238620411506458624,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238655595878547456,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238673188064591872,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238681984157614080,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238686382204125184,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238688581227380736,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238689680739008512,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690230494822400,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690505372729344,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690642811682816,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690711531159552,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690745890897920,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690763070767104,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690771660701696,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690775955668992,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690778103152640,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779176894464,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779713765376,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779982200832,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780116418560,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780183527424,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780217081856,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780233859072,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780242247680,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780246441984,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780248539136,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780249587712,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250112000,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250374144,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250505216,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250570752,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250603520,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250619904,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250628096,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250632192,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250634240,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635264,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635776,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636032,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636160,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636224,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636256,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636272,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636280,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636284,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636286,64,FLEN)
NAN_BOXED(6882201590352170735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636287,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186176,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186177,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186179,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186183,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186191,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186207,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186239,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186303,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186431,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507186687,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507187199,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507188223,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507190271,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507194367,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507202559,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507218943,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507251711,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507317247,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507448319,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498507710463,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498508234751,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498509283327,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498511380479,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498515574783,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498523963391,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498540740607,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498574295039,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498641403903,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640498775621631,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640499044057087,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640499580927999,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640500654669823,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640502802153471,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640507097120767,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640515687055359,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640532866924543,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640567226662911,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640635946139647,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312640773385093119,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312641048263000063,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312641598018813951,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312642697530441727,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312644896553697279,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312649294600208383,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312658090693230591,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312675682879275007,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312710867251363839,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312781235995541503,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13312921973483896831,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13313203448460607487,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13313766398414028799,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13314892298320871423,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13314892298320871424,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13316018198227714048,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13316581148181135360,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13316862623157846016,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317003360646201344,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317073729390379008,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317108913762467840,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317126505948512256,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317135302041534464,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317139700088045568,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317141899111301120,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317142998622928896,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317143548378742784,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317143823256649728,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317143960695603200,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144029415079936,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144063774818304,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144080954687488,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144089544622080,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144093839589376,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144095987073024,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144097060814848,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144097597685760,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144097866121216,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098000338944,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098067447808,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098101002240,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098117779456,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098126168064,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098130362368,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098132459520,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098133508096,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134032384,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134294528,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134425600,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134491136,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134523904,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134540288,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134548480,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134552576,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134554624,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134555648,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556160,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556416,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556544,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556608,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556640,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556656,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556664,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556668,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556670,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13317144098134556671,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6882212340620029859,64,FLEN)
NAN_BOXED(11523481677703323923,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6882215680542212347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164928,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164929,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164931,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164935,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164943,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164959,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663164991,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663165055,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663165183,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663165439,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663165951,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663166975,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
