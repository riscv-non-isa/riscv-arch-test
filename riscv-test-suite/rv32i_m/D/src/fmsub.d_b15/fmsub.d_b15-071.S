
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_53760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:161280*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161280*0 + 3*0*FLEN/8, x4, x1, x2)

inst_53761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:161283*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161283*0 + 3*1*FLEN/8, x4, x1, x2)

inst_53762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:161286*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161286*0 + 3*2*FLEN/8, x4, x1, x2)

inst_53763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:161289*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161289*0 + 3*3*FLEN/8, x4, x1, x2)

inst_53764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:161292*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161292*0 + 3*4*FLEN/8, x4, x1, x2)

inst_53765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:161295*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161295*0 + 3*5*FLEN/8, x4, x1, x2)

inst_53766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:161298*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161298*0 + 3*6*FLEN/8, x4, x1, x2)

inst_53767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:161301*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161301*0 + 3*7*FLEN/8, x4, x1, x2)

inst_53768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:161304*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161304*0 + 3*8*FLEN/8, x4, x1, x2)

inst_53769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:161307*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161307*0 + 3*9*FLEN/8, x4, x1, x2)

inst_53770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:161310*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161310*0 + 3*10*FLEN/8, x4, x1, x2)

inst_53771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:161313*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161313*0 + 3*11*FLEN/8, x4, x1, x2)

inst_53772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:161316*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161316*0 + 3*12*FLEN/8, x4, x1, x2)

inst_53773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:161319*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161319*0 + 3*13*FLEN/8, x4, x1, x2)

inst_53774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:161322*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161322*0 + 3*14*FLEN/8, x4, x1, x2)

inst_53775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:161325*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161325*0 + 3*15*FLEN/8, x4, x1, x2)

inst_53776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:161328*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161328*0 + 3*16*FLEN/8, x4, x1, x2)

inst_53777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:161331*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161331*0 + 3*17*FLEN/8, x4, x1, x2)

inst_53778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:161334*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161334*0 + 3*18*FLEN/8, x4, x1, x2)

inst_53779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:161337*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161337*0 + 3*19*FLEN/8, x4, x1, x2)

inst_53780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:161340*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161340*0 + 3*20*FLEN/8, x4, x1, x2)

inst_53781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:161343*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161343*0 + 3*21*FLEN/8, x4, x1, x2)

inst_53782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:161346*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161346*0 + 3*22*FLEN/8, x4, x1, x2)

inst_53783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:161349*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161349*0 + 3*23*FLEN/8, x4, x1, x2)

inst_53784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:161352*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161352*0 + 3*24*FLEN/8, x4, x1, x2)

inst_53785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:161355*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161355*0 + 3*25*FLEN/8, x4, x1, x2)

inst_53786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:161358*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161358*0 + 3*26*FLEN/8, x4, x1, x2)

inst_53787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:161361*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161361*0 + 3*27*FLEN/8, x4, x1, x2)

inst_53788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:161364*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161364*0 + 3*28*FLEN/8, x4, x1, x2)

inst_53789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:161367*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161367*0 + 3*29*FLEN/8, x4, x1, x2)

inst_53790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffe0000; valaddr_reg:x3; val_offset:161370*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161370*0 + 3*30*FLEN/8, x4, x1, x2)

inst_53791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffff0000; valaddr_reg:x3; val_offset:161373*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161373*0 + 3*31*FLEN/8, x4, x1, x2)

inst_53792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffff8000; valaddr_reg:x3; val_offset:161376*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161376*0 + 3*32*FLEN/8, x4, x1, x2)

inst_53793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffc000; valaddr_reg:x3; val_offset:161379*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161379*0 + 3*33*FLEN/8, x4, x1, x2)

inst_53794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffe000; valaddr_reg:x3; val_offset:161382*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161382*0 + 3*34*FLEN/8, x4, x1, x2)

inst_53795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffff000; valaddr_reg:x3; val_offset:161385*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161385*0 + 3*35*FLEN/8, x4, x1, x2)

inst_53796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffff800; valaddr_reg:x3; val_offset:161388*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161388*0 + 3*36*FLEN/8, x4, x1, x2)

inst_53797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffffc00; valaddr_reg:x3; val_offset:161391*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161391*0 + 3*37*FLEN/8, x4, x1, x2)

inst_53798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffffe00; valaddr_reg:x3; val_offset:161394*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161394*0 + 3*38*FLEN/8, x4, x1, x2)

inst_53799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffff00; valaddr_reg:x3; val_offset:161397*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161397*0 + 3*39*FLEN/8, x4, x1, x2)

inst_53800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffff80; valaddr_reg:x3; val_offset:161400*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161400*0 + 3*40*FLEN/8, x4, x1, x2)

inst_53801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffffc0; valaddr_reg:x3; val_offset:161403*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161403*0 + 3*41*FLEN/8, x4, x1, x2)

inst_53802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffffe0; valaddr_reg:x3; val_offset:161406*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161406*0 + 3*42*FLEN/8, x4, x1, x2)

inst_53803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffffff0; valaddr_reg:x3; val_offset:161409*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161409*0 + 3*43*FLEN/8, x4, x1, x2)

inst_53804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffffff8; valaddr_reg:x3; val_offset:161412*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161412*0 + 3*44*FLEN/8, x4, x1, x2)

inst_53805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffffffc; valaddr_reg:x3; val_offset:161415*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161415*0 + 3*45*FLEN/8, x4, x1, x2)

inst_53806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3affffffffffffe; valaddr_reg:x3; val_offset:161418*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161418*0 + 3*46*FLEN/8, x4, x1, x2)

inst_53807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05df6a6a460e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05df6a6a460e0; op2val:0x0;
op3val:0x3afffffffffffff; valaddr_reg:x3; val_offset:161421*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161421*0 + 3*47*FLEN/8, x4, x1, x2)

inst_53808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000000000; valaddr_reg:x3; val_offset:161424*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161424*0 + 3*48*FLEN/8, x4, x1, x2)

inst_53809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000000001; valaddr_reg:x3; val_offset:161427*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161427*0 + 3*49*FLEN/8, x4, x1, x2)

inst_53810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000000003; valaddr_reg:x3; val_offset:161430*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161430*0 + 3*50*FLEN/8, x4, x1, x2)

inst_53811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000000007; valaddr_reg:x3; val_offset:161433*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161433*0 + 3*51*FLEN/8, x4, x1, x2)

inst_53812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000000000f; valaddr_reg:x3; val_offset:161436*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161436*0 + 3*52*FLEN/8, x4, x1, x2)

inst_53813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000000001f; valaddr_reg:x3; val_offset:161439*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161439*0 + 3*53*FLEN/8, x4, x1, x2)

inst_53814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000000003f; valaddr_reg:x3; val_offset:161442*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161442*0 + 3*54*FLEN/8, x4, x1, x2)

inst_53815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000000007f; valaddr_reg:x3; val_offset:161445*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161445*0 + 3*55*FLEN/8, x4, x1, x2)

inst_53816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000000000ff; valaddr_reg:x3; val_offset:161448*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161448*0 + 3*56*FLEN/8, x4, x1, x2)

inst_53817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000000001ff; valaddr_reg:x3; val_offset:161451*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161451*0 + 3*57*FLEN/8, x4, x1, x2)

inst_53818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000000003ff; valaddr_reg:x3; val_offset:161454*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161454*0 + 3*58*FLEN/8, x4, x1, x2)

inst_53819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000000007ff; valaddr_reg:x3; val_offset:161457*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161457*0 + 3*59*FLEN/8, x4, x1, x2)

inst_53820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000000fff; valaddr_reg:x3; val_offset:161460*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161460*0 + 3*60*FLEN/8, x4, x1, x2)

inst_53821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000001fff; valaddr_reg:x3; val_offset:161463*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161463*0 + 3*61*FLEN/8, x4, x1, x2)

inst_53822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000003fff; valaddr_reg:x3; val_offset:161466*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161466*0 + 3*62*FLEN/8, x4, x1, x2)

inst_53823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000007fff; valaddr_reg:x3; val_offset:161469*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161469*0 + 3*63*FLEN/8, x4, x1, x2)

inst_53824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000000ffff; valaddr_reg:x3; val_offset:161472*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161472*0 + 3*64*FLEN/8, x4, x1, x2)

inst_53825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000001ffff; valaddr_reg:x3; val_offset:161475*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161475*0 + 3*65*FLEN/8, x4, x1, x2)

inst_53826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000003ffff; valaddr_reg:x3; val_offset:161478*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161478*0 + 3*66*FLEN/8, x4, x1, x2)

inst_53827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000007ffff; valaddr_reg:x3; val_offset:161481*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161481*0 + 3*67*FLEN/8, x4, x1, x2)

inst_53828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000000fffff; valaddr_reg:x3; val_offset:161484*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161484*0 + 3*68*FLEN/8, x4, x1, x2)

inst_53829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000001fffff; valaddr_reg:x3; val_offset:161487*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161487*0 + 3*69*FLEN/8, x4, x1, x2)

inst_53830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000003fffff; valaddr_reg:x3; val_offset:161490*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161490*0 + 3*70*FLEN/8, x4, x1, x2)

inst_53831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000007fffff; valaddr_reg:x3; val_offset:161493*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161493*0 + 3*71*FLEN/8, x4, x1, x2)

inst_53832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000000ffffff; valaddr_reg:x3; val_offset:161496*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161496*0 + 3*72*FLEN/8, x4, x1, x2)

inst_53833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000001ffffff; valaddr_reg:x3; val_offset:161499*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161499*0 + 3*73*FLEN/8, x4, x1, x2)

inst_53834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000003ffffff; valaddr_reg:x3; val_offset:161502*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161502*0 + 3*74*FLEN/8, x4, x1, x2)

inst_53835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000007ffffff; valaddr_reg:x3; val_offset:161505*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161505*0 + 3*75*FLEN/8, x4, x1, x2)

inst_53836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000000fffffff; valaddr_reg:x3; val_offset:161508*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161508*0 + 3*76*FLEN/8, x4, x1, x2)

inst_53837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000001fffffff; valaddr_reg:x3; val_offset:161511*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161511*0 + 3*77*FLEN/8, x4, x1, x2)

inst_53838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000003fffffff; valaddr_reg:x3; val_offset:161514*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161514*0 + 3*78*FLEN/8, x4, x1, x2)

inst_53839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000007fffffff; valaddr_reg:x3; val_offset:161517*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161517*0 + 3*79*FLEN/8, x4, x1, x2)

inst_53840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100000ffffffff; valaddr_reg:x3; val_offset:161520*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161520*0 + 3*80*FLEN/8, x4, x1, x2)

inst_53841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100001ffffffff; valaddr_reg:x3; val_offset:161523*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161523*0 + 3*81*FLEN/8, x4, x1, x2)

inst_53842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100003ffffffff; valaddr_reg:x3; val_offset:161526*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161526*0 + 3*82*FLEN/8, x4, x1, x2)

inst_53843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100007ffffffff; valaddr_reg:x3; val_offset:161529*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161529*0 + 3*83*FLEN/8, x4, x1, x2)

inst_53844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10000fffffffff; valaddr_reg:x3; val_offset:161532*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161532*0 + 3*84*FLEN/8, x4, x1, x2)

inst_53845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10001fffffffff; valaddr_reg:x3; val_offset:161535*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161535*0 + 3*85*FLEN/8, x4, x1, x2)

inst_53846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10003fffffffff; valaddr_reg:x3; val_offset:161538*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161538*0 + 3*86*FLEN/8, x4, x1, x2)

inst_53847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10007fffffffff; valaddr_reg:x3; val_offset:161541*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161541*0 + 3*87*FLEN/8, x4, x1, x2)

inst_53848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1000ffffffffff; valaddr_reg:x3; val_offset:161544*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161544*0 + 3*88*FLEN/8, x4, x1, x2)

inst_53849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1001ffffffffff; valaddr_reg:x3; val_offset:161547*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161547*0 + 3*89*FLEN/8, x4, x1, x2)

inst_53850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1003ffffffffff; valaddr_reg:x3; val_offset:161550*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161550*0 + 3*90*FLEN/8, x4, x1, x2)

inst_53851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1007ffffffffff; valaddr_reg:x3; val_offset:161553*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161553*0 + 3*91*FLEN/8, x4, x1, x2)

inst_53852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b100fffffffffff; valaddr_reg:x3; val_offset:161556*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161556*0 + 3*92*FLEN/8, x4, x1, x2)

inst_53853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b101fffffffffff; valaddr_reg:x3; val_offset:161559*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161559*0 + 3*93*FLEN/8, x4, x1, x2)

inst_53854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b103fffffffffff; valaddr_reg:x3; val_offset:161562*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161562*0 + 3*94*FLEN/8, x4, x1, x2)

inst_53855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b107fffffffffff; valaddr_reg:x3; val_offset:161565*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161565*0 + 3*95*FLEN/8, x4, x1, x2)

inst_53856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b10ffffffffffff; valaddr_reg:x3; val_offset:161568*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161568*0 + 3*96*FLEN/8, x4, x1, x2)

inst_53857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b11ffffffffffff; valaddr_reg:x3; val_offset:161571*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161571*0 + 3*97*FLEN/8, x4, x1, x2)

inst_53858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b13ffffffffffff; valaddr_reg:x3; val_offset:161574*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161574*0 + 3*98*FLEN/8, x4, x1, x2)

inst_53859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b17ffffffffffff; valaddr_reg:x3; val_offset:161577*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161577*0 + 3*99*FLEN/8, x4, x1, x2)

inst_53860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b18000000000000; valaddr_reg:x3; val_offset:161580*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161580*0 + 3*100*FLEN/8, x4, x1, x2)

inst_53861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1c000000000000; valaddr_reg:x3; val_offset:161583*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161583*0 + 3*101*FLEN/8, x4, x1, x2)

inst_53862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1e000000000000; valaddr_reg:x3; val_offset:161586*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161586*0 + 3*102*FLEN/8, x4, x1, x2)

inst_53863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1f000000000000; valaddr_reg:x3; val_offset:161589*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161589*0 + 3*103*FLEN/8, x4, x1, x2)

inst_53864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1f800000000000; valaddr_reg:x3; val_offset:161592*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161592*0 + 3*104*FLEN/8, x4, x1, x2)

inst_53865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fc00000000000; valaddr_reg:x3; val_offset:161595*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161595*0 + 3*105*FLEN/8, x4, x1, x2)

inst_53866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fe00000000000; valaddr_reg:x3; val_offset:161598*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161598*0 + 3*106*FLEN/8, x4, x1, x2)

inst_53867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ff00000000000; valaddr_reg:x3; val_offset:161601*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161601*0 + 3*107*FLEN/8, x4, x1, x2)

inst_53868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ff80000000000; valaddr_reg:x3; val_offset:161604*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161604*0 + 3*108*FLEN/8, x4, x1, x2)

inst_53869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffc0000000000; valaddr_reg:x3; val_offset:161607*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161607*0 + 3*109*FLEN/8, x4, x1, x2)

inst_53870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffe0000000000; valaddr_reg:x3; val_offset:161610*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161610*0 + 3*110*FLEN/8, x4, x1, x2)

inst_53871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fff0000000000; valaddr_reg:x3; val_offset:161613*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161613*0 + 3*111*FLEN/8, x4, x1, x2)

inst_53872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fff8000000000; valaddr_reg:x3; val_offset:161616*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161616*0 + 3*112*FLEN/8, x4, x1, x2)

inst_53873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffc000000000; valaddr_reg:x3; val_offset:161619*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161619*0 + 3*113*FLEN/8, x4, x1, x2)

inst_53874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffe000000000; valaddr_reg:x3; val_offset:161622*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161622*0 + 3*114*FLEN/8, x4, x1, x2)

inst_53875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffff000000000; valaddr_reg:x3; val_offset:161625*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161625*0 + 3*115*FLEN/8, x4, x1, x2)

inst_53876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffff800000000; valaddr_reg:x3; val_offset:161628*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161628*0 + 3*116*FLEN/8, x4, x1, x2)

inst_53877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffc00000000; valaddr_reg:x3; val_offset:161631*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161631*0 + 3*117*FLEN/8, x4, x1, x2)

inst_53878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffe00000000; valaddr_reg:x3; val_offset:161634*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161634*0 + 3*118*FLEN/8, x4, x1, x2)

inst_53879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffff00000000; valaddr_reg:x3; val_offset:161637*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161637*0 + 3*119*FLEN/8, x4, x1, x2)

inst_53880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffff80000000; valaddr_reg:x3; val_offset:161640*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161640*0 + 3*120*FLEN/8, x4, x1, x2)

inst_53881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffc0000000; valaddr_reg:x3; val_offset:161643*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161643*0 + 3*121*FLEN/8, x4, x1, x2)

inst_53882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffe0000000; valaddr_reg:x3; val_offset:161646*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161646*0 + 3*122*FLEN/8, x4, x1, x2)

inst_53883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffff0000000; valaddr_reg:x3; val_offset:161649*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161649*0 + 3*123*FLEN/8, x4, x1, x2)

inst_53884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffff8000000; valaddr_reg:x3; val_offset:161652*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161652*0 + 3*124*FLEN/8, x4, x1, x2)

inst_53885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffc000000; valaddr_reg:x3; val_offset:161655*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161655*0 + 3*125*FLEN/8, x4, x1, x2)

inst_53886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffe000000; valaddr_reg:x3; val_offset:161658*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161658*0 + 3*126*FLEN/8, x4, x1, x2)

inst_53887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffff000000; valaddr_reg:x3; val_offset:161661*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161661*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_53888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffff800000; valaddr_reg:x3; val_offset:161664*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161664*0 + 3*128*FLEN/8, x4, x1, x2)

inst_53889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffc00000; valaddr_reg:x3; val_offset:161667*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161667*0 + 3*129*FLEN/8, x4, x1, x2)

inst_53890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffe00000; valaddr_reg:x3; val_offset:161670*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161670*0 + 3*130*FLEN/8, x4, x1, x2)

inst_53891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffff00000; valaddr_reg:x3; val_offset:161673*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161673*0 + 3*131*FLEN/8, x4, x1, x2)

inst_53892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffff80000; valaddr_reg:x3; val_offset:161676*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161676*0 + 3*132*FLEN/8, x4, x1, x2)

inst_53893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffc0000; valaddr_reg:x3; val_offset:161679*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161679*0 + 3*133*FLEN/8, x4, x1, x2)

inst_53894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffe0000; valaddr_reg:x3; val_offset:161682*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161682*0 + 3*134*FLEN/8, x4, x1, x2)

inst_53895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffff0000; valaddr_reg:x3; val_offset:161685*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161685*0 + 3*135*FLEN/8, x4, x1, x2)

inst_53896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffff8000; valaddr_reg:x3; val_offset:161688*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161688*0 + 3*136*FLEN/8, x4, x1, x2)

inst_53897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffc000; valaddr_reg:x3; val_offset:161691*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161691*0 + 3*137*FLEN/8, x4, x1, x2)

inst_53898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffe000; valaddr_reg:x3; val_offset:161694*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161694*0 + 3*138*FLEN/8, x4, x1, x2)

inst_53899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffff000; valaddr_reg:x3; val_offset:161697*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161697*0 + 3*139*FLEN/8, x4, x1, x2)

inst_53900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffff800; valaddr_reg:x3; val_offset:161700*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161700*0 + 3*140*FLEN/8, x4, x1, x2)

inst_53901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffffc00; valaddr_reg:x3; val_offset:161703*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161703*0 + 3*141*FLEN/8, x4, x1, x2)

inst_53902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffffe00; valaddr_reg:x3; val_offset:161706*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161706*0 + 3*142*FLEN/8, x4, x1, x2)

inst_53903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffff00; valaddr_reg:x3; val_offset:161709*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161709*0 + 3*143*FLEN/8, x4, x1, x2)

inst_53904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffff80; valaddr_reg:x3; val_offset:161712*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161712*0 + 3*144*FLEN/8, x4, x1, x2)

inst_53905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffffc0; valaddr_reg:x3; val_offset:161715*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161715*0 + 3*145*FLEN/8, x4, x1, x2)

inst_53906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffffe0; valaddr_reg:x3; val_offset:161718*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161718*0 + 3*146*FLEN/8, x4, x1, x2)

inst_53907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffffff0; valaddr_reg:x3; val_offset:161721*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161721*0 + 3*147*FLEN/8, x4, x1, x2)

inst_53908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffffff8; valaddr_reg:x3; val_offset:161724*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161724*0 + 3*148*FLEN/8, x4, x1, x2)

inst_53909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffffffc; valaddr_reg:x3; val_offset:161727*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161727*0 + 3*149*FLEN/8, x4, x1, x2)

inst_53910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1ffffffffffffe; valaddr_reg:x3; val_offset:161730*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161730*0 + 3*150*FLEN/8, x4, x1, x2)

inst_53911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3b1fffffffffffff; valaddr_reg:x3; val_offset:161733*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161733*0 + 3*151*FLEN/8, x4, x1, x2)

inst_53912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:161736*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161736*0 + 3*152*FLEN/8, x4, x1, x2)

inst_53913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:161739*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161739*0 + 3*153*FLEN/8, x4, x1, x2)

inst_53914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:161742*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161742*0 + 3*154*FLEN/8, x4, x1, x2)

inst_53915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:161745*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161745*0 + 3*155*FLEN/8, x4, x1, x2)

inst_53916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:161748*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161748*0 + 3*156*FLEN/8, x4, x1, x2)

inst_53917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:161751*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161751*0 + 3*157*FLEN/8, x4, x1, x2)

inst_53918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:161754*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161754*0 + 3*158*FLEN/8, x4, x1, x2)

inst_53919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:161757*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161757*0 + 3*159*FLEN/8, x4, x1, x2)

inst_53920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:161760*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161760*0 + 3*160*FLEN/8, x4, x1, x2)

inst_53921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:161763*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161763*0 + 3*161*FLEN/8, x4, x1, x2)

inst_53922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:161766*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161766*0 + 3*162*FLEN/8, x4, x1, x2)

inst_53923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:161769*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161769*0 + 3*163*FLEN/8, x4, x1, x2)

inst_53924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:161772*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161772*0 + 3*164*FLEN/8, x4, x1, x2)

inst_53925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:161775*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161775*0 + 3*165*FLEN/8, x4, x1, x2)

inst_53926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:161778*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161778*0 + 3*166*FLEN/8, x4, x1, x2)

inst_53927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:161781*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161781*0 + 3*167*FLEN/8, x4, x1, x2)

inst_53928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:161784*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161784*0 + 3*168*FLEN/8, x4, x1, x2)

inst_53929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:161787*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161787*0 + 3*169*FLEN/8, x4, x1, x2)

inst_53930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:161790*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161790*0 + 3*170*FLEN/8, x4, x1, x2)

inst_53931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:161793*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161793*0 + 3*171*FLEN/8, x4, x1, x2)

inst_53932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:161796*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161796*0 + 3*172*FLEN/8, x4, x1, x2)

inst_53933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf47cc935fadb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05e381015d598; op2val:0x203f47cc935fadb0;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:161799*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161799*0 + 3*173*FLEN/8, x4, x1, x2)

inst_53934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000000000; valaddr_reg:x3; val_offset:161802*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161802*0 + 3*174*FLEN/8, x4, x1, x2)

inst_53935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000000001; valaddr_reg:x3; val_offset:161805*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161805*0 + 3*175*FLEN/8, x4, x1, x2)

inst_53936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000000003; valaddr_reg:x3; val_offset:161808*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161808*0 + 3*176*FLEN/8, x4, x1, x2)

inst_53937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000000007; valaddr_reg:x3; val_offset:161811*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161811*0 + 3*177*FLEN/8, x4, x1, x2)

inst_53938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000000000f; valaddr_reg:x3; val_offset:161814*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161814*0 + 3*178*FLEN/8, x4, x1, x2)

inst_53939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000000001f; valaddr_reg:x3; val_offset:161817*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161817*0 + 3*179*FLEN/8, x4, x1, x2)

inst_53940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000000003f; valaddr_reg:x3; val_offset:161820*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161820*0 + 3*180*FLEN/8, x4, x1, x2)

inst_53941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000000007f; valaddr_reg:x3; val_offset:161823*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161823*0 + 3*181*FLEN/8, x4, x1, x2)

inst_53942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000000000ff; valaddr_reg:x3; val_offset:161826*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161826*0 + 3*182*FLEN/8, x4, x1, x2)

inst_53943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000000001ff; valaddr_reg:x3; val_offset:161829*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161829*0 + 3*183*FLEN/8, x4, x1, x2)

inst_53944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000000003ff; valaddr_reg:x3; val_offset:161832*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161832*0 + 3*184*FLEN/8, x4, x1, x2)

inst_53945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000000007ff; valaddr_reg:x3; val_offset:161835*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161835*0 + 3*185*FLEN/8, x4, x1, x2)

inst_53946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000000fff; valaddr_reg:x3; val_offset:161838*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161838*0 + 3*186*FLEN/8, x4, x1, x2)

inst_53947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000001fff; valaddr_reg:x3; val_offset:161841*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161841*0 + 3*187*FLEN/8, x4, x1, x2)

inst_53948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000003fff; valaddr_reg:x3; val_offset:161844*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161844*0 + 3*188*FLEN/8, x4, x1, x2)

inst_53949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000007fff; valaddr_reg:x3; val_offset:161847*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161847*0 + 3*189*FLEN/8, x4, x1, x2)

inst_53950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000000ffff; valaddr_reg:x3; val_offset:161850*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161850*0 + 3*190*FLEN/8, x4, x1, x2)

inst_53951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000001ffff; valaddr_reg:x3; val_offset:161853*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161853*0 + 3*191*FLEN/8, x4, x1, x2)

inst_53952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000003ffff; valaddr_reg:x3; val_offset:161856*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161856*0 + 3*192*FLEN/8, x4, x1, x2)

inst_53953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000007ffff; valaddr_reg:x3; val_offset:161859*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161859*0 + 3*193*FLEN/8, x4, x1, x2)

inst_53954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000000fffff; valaddr_reg:x3; val_offset:161862*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161862*0 + 3*194*FLEN/8, x4, x1, x2)

inst_53955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000001fffff; valaddr_reg:x3; val_offset:161865*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161865*0 + 3*195*FLEN/8, x4, x1, x2)

inst_53956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000003fffff; valaddr_reg:x3; val_offset:161868*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161868*0 + 3*196*FLEN/8, x4, x1, x2)

inst_53957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000007fffff; valaddr_reg:x3; val_offset:161871*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161871*0 + 3*197*FLEN/8, x4, x1, x2)

inst_53958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000000ffffff; valaddr_reg:x3; val_offset:161874*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161874*0 + 3*198*FLEN/8, x4, x1, x2)

inst_53959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000001ffffff; valaddr_reg:x3; val_offset:161877*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161877*0 + 3*199*FLEN/8, x4, x1, x2)

inst_53960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000003ffffff; valaddr_reg:x3; val_offset:161880*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161880*0 + 3*200*FLEN/8, x4, x1, x2)

inst_53961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000007ffffff; valaddr_reg:x3; val_offset:161883*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161883*0 + 3*201*FLEN/8, x4, x1, x2)

inst_53962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000000fffffff; valaddr_reg:x3; val_offset:161886*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161886*0 + 3*202*FLEN/8, x4, x1, x2)

inst_53963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000001fffffff; valaddr_reg:x3; val_offset:161889*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161889*0 + 3*203*FLEN/8, x4, x1, x2)

inst_53964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000003fffffff; valaddr_reg:x3; val_offset:161892*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161892*0 + 3*204*FLEN/8, x4, x1, x2)

inst_53965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000007fffffff; valaddr_reg:x3; val_offset:161895*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161895*0 + 3*205*FLEN/8, x4, x1, x2)

inst_53966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200000ffffffff; valaddr_reg:x3; val_offset:161898*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161898*0 + 3*206*FLEN/8, x4, x1, x2)

inst_53967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200001ffffffff; valaddr_reg:x3; val_offset:161901*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161901*0 + 3*207*FLEN/8, x4, x1, x2)

inst_53968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200003ffffffff; valaddr_reg:x3; val_offset:161904*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161904*0 + 3*208*FLEN/8, x4, x1, x2)

inst_53969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200007ffffffff; valaddr_reg:x3; val_offset:161907*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161907*0 + 3*209*FLEN/8, x4, x1, x2)

inst_53970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820000fffffffff; valaddr_reg:x3; val_offset:161910*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161910*0 + 3*210*FLEN/8, x4, x1, x2)

inst_53971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820001fffffffff; valaddr_reg:x3; val_offset:161913*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161913*0 + 3*211*FLEN/8, x4, x1, x2)

inst_53972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820003fffffffff; valaddr_reg:x3; val_offset:161916*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161916*0 + 3*212*FLEN/8, x4, x1, x2)

inst_53973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820007fffffffff; valaddr_reg:x3; val_offset:161919*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161919*0 + 3*213*FLEN/8, x4, x1, x2)

inst_53974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382000ffffffffff; valaddr_reg:x3; val_offset:161922*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161922*0 + 3*214*FLEN/8, x4, x1, x2)

inst_53975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382001ffffffffff; valaddr_reg:x3; val_offset:161925*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161925*0 + 3*215*FLEN/8, x4, x1, x2)

inst_53976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382003ffffffffff; valaddr_reg:x3; val_offset:161928*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161928*0 + 3*216*FLEN/8, x4, x1, x2)

inst_53977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382007ffffffffff; valaddr_reg:x3; val_offset:161931*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161931*0 + 3*217*FLEN/8, x4, x1, x2)

inst_53978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38200fffffffffff; valaddr_reg:x3; val_offset:161934*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161934*0 + 3*218*FLEN/8, x4, x1, x2)

inst_53979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38201fffffffffff; valaddr_reg:x3; val_offset:161937*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161937*0 + 3*219*FLEN/8, x4, x1, x2)

inst_53980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38203fffffffffff; valaddr_reg:x3; val_offset:161940*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161940*0 + 3*220*FLEN/8, x4, x1, x2)

inst_53981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x38207fffffffffff; valaddr_reg:x3; val_offset:161943*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161943*0 + 3*221*FLEN/8, x4, x1, x2)

inst_53982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3820ffffffffffff; valaddr_reg:x3; val_offset:161946*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161946*0 + 3*222*FLEN/8, x4, x1, x2)

inst_53983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3821ffffffffffff; valaddr_reg:x3; val_offset:161949*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161949*0 + 3*223*FLEN/8, x4, x1, x2)

inst_53984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3823ffffffffffff; valaddr_reg:x3; val_offset:161952*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161952*0 + 3*224*FLEN/8, x4, x1, x2)

inst_53985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3827ffffffffffff; valaddr_reg:x3; val_offset:161955*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161955*0 + 3*225*FLEN/8, x4, x1, x2)

inst_53986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3828000000000000; valaddr_reg:x3; val_offset:161958*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161958*0 + 3*226*FLEN/8, x4, x1, x2)

inst_53987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382c000000000000; valaddr_reg:x3; val_offset:161961*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161961*0 + 3*227*FLEN/8, x4, x1, x2)

inst_53988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382e000000000000; valaddr_reg:x3; val_offset:161964*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161964*0 + 3*228*FLEN/8, x4, x1, x2)

inst_53989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382f000000000000; valaddr_reg:x3; val_offset:161967*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161967*0 + 3*229*FLEN/8, x4, x1, x2)

inst_53990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382f800000000000; valaddr_reg:x3; val_offset:161970*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161970*0 + 3*230*FLEN/8, x4, x1, x2)

inst_53991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fc00000000000; valaddr_reg:x3; val_offset:161973*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161973*0 + 3*231*FLEN/8, x4, x1, x2)

inst_53992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fe00000000000; valaddr_reg:x3; val_offset:161976*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161976*0 + 3*232*FLEN/8, x4, x1, x2)

inst_53993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ff00000000000; valaddr_reg:x3; val_offset:161979*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161979*0 + 3*233*FLEN/8, x4, x1, x2)

inst_53994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ff80000000000; valaddr_reg:x3; val_offset:161982*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161982*0 + 3*234*FLEN/8, x4, x1, x2)

inst_53995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffc0000000000; valaddr_reg:x3; val_offset:161985*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161985*0 + 3*235*FLEN/8, x4, x1, x2)

inst_53996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffe0000000000; valaddr_reg:x3; val_offset:161988*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161988*0 + 3*236*FLEN/8, x4, x1, x2)

inst_53997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fff0000000000; valaddr_reg:x3; val_offset:161991*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161991*0 + 3*237*FLEN/8, x4, x1, x2)

inst_53998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fff8000000000; valaddr_reg:x3; val_offset:161994*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161994*0 + 3*238*FLEN/8, x4, x1, x2)

inst_53999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffc000000000; valaddr_reg:x3; val_offset:161997*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161997*0 + 3*239*FLEN/8, x4, x1, x2)

inst_54000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffe000000000; valaddr_reg:x3; val_offset:162000*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162000*0 + 3*240*FLEN/8, x4, x1, x2)

inst_54001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffff000000000; valaddr_reg:x3; val_offset:162003*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162003*0 + 3*241*FLEN/8, x4, x1, x2)

inst_54002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffff800000000; valaddr_reg:x3; val_offset:162006*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162006*0 + 3*242*FLEN/8, x4, x1, x2)

inst_54003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffc00000000; valaddr_reg:x3; val_offset:162009*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162009*0 + 3*243*FLEN/8, x4, x1, x2)

inst_54004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffe00000000; valaddr_reg:x3; val_offset:162012*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162012*0 + 3*244*FLEN/8, x4, x1, x2)

inst_54005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffff00000000; valaddr_reg:x3; val_offset:162015*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162015*0 + 3*245*FLEN/8, x4, x1, x2)

inst_54006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffff80000000; valaddr_reg:x3; val_offset:162018*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162018*0 + 3*246*FLEN/8, x4, x1, x2)

inst_54007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffc0000000; valaddr_reg:x3; val_offset:162021*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162021*0 + 3*247*FLEN/8, x4, x1, x2)

inst_54008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffe0000000; valaddr_reg:x3; val_offset:162024*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162024*0 + 3*248*FLEN/8, x4, x1, x2)

inst_54009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffff0000000; valaddr_reg:x3; val_offset:162027*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162027*0 + 3*249*FLEN/8, x4, x1, x2)

inst_54010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffff8000000; valaddr_reg:x3; val_offset:162030*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162030*0 + 3*250*FLEN/8, x4, x1, x2)

inst_54011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffc000000; valaddr_reg:x3; val_offset:162033*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162033*0 + 3*251*FLEN/8, x4, x1, x2)

inst_54012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffe000000; valaddr_reg:x3; val_offset:162036*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162036*0 + 3*252*FLEN/8, x4, x1, x2)

inst_54013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffff000000; valaddr_reg:x3; val_offset:162039*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162039*0 + 3*253*FLEN/8, x4, x1, x2)

inst_54014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffff800000; valaddr_reg:x3; val_offset:162042*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162042*0 + 3*254*FLEN/8, x4, x1, x2)

inst_54015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffc00000; valaddr_reg:x3; val_offset:162045*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162045*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_54016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffe00000; valaddr_reg:x3; val_offset:162048*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162048*0 + 3*256*FLEN/8, x4, x1, x2)

inst_54017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffff00000; valaddr_reg:x3; val_offset:162051*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162051*0 + 3*257*FLEN/8, x4, x1, x2)

inst_54018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffff80000; valaddr_reg:x3; val_offset:162054*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162054*0 + 3*258*FLEN/8, x4, x1, x2)

inst_54019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffc0000; valaddr_reg:x3; val_offset:162057*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162057*0 + 3*259*FLEN/8, x4, x1, x2)

inst_54020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffe0000; valaddr_reg:x3; val_offset:162060*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162060*0 + 3*260*FLEN/8, x4, x1, x2)

inst_54021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffff0000; valaddr_reg:x3; val_offset:162063*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162063*0 + 3*261*FLEN/8, x4, x1, x2)

inst_54022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffff8000; valaddr_reg:x3; val_offset:162066*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162066*0 + 3*262*FLEN/8, x4, x1, x2)

inst_54023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffc000; valaddr_reg:x3; val_offset:162069*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162069*0 + 3*263*FLEN/8, x4, x1, x2)

inst_54024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffe000; valaddr_reg:x3; val_offset:162072*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162072*0 + 3*264*FLEN/8, x4, x1, x2)

inst_54025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffff000; valaddr_reg:x3; val_offset:162075*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162075*0 + 3*265*FLEN/8, x4, x1, x2)

inst_54026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffff800; valaddr_reg:x3; val_offset:162078*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162078*0 + 3*266*FLEN/8, x4, x1, x2)

inst_54027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffffc00; valaddr_reg:x3; val_offset:162081*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162081*0 + 3*267*FLEN/8, x4, x1, x2)

inst_54028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffffe00; valaddr_reg:x3; val_offset:162084*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162084*0 + 3*268*FLEN/8, x4, x1, x2)

inst_54029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffff00; valaddr_reg:x3; val_offset:162087*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162087*0 + 3*269*FLEN/8, x4, x1, x2)

inst_54030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffff80; valaddr_reg:x3; val_offset:162090*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162090*0 + 3*270*FLEN/8, x4, x1, x2)

inst_54031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffffc0; valaddr_reg:x3; val_offset:162093*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162093*0 + 3*271*FLEN/8, x4, x1, x2)

inst_54032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffffe0; valaddr_reg:x3; val_offset:162096*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162096*0 + 3*272*FLEN/8, x4, x1, x2)

inst_54033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffffff0; valaddr_reg:x3; val_offset:162099*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162099*0 + 3*273*FLEN/8, x4, x1, x2)

inst_54034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffffff8; valaddr_reg:x3; val_offset:162102*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162102*0 + 3*274*FLEN/8, x4, x1, x2)

inst_54035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffffffc; valaddr_reg:x3; val_offset:162105*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162105*0 + 3*275*FLEN/8, x4, x1, x2)

inst_54036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382ffffffffffffe; valaddr_reg:x3; val_offset:162108*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162108*0 + 3*276*FLEN/8, x4, x1, x2)

inst_54037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x382fffffffffffff; valaddr_reg:x3; val_offset:162111*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162111*0 + 3*277*FLEN/8, x4, x1, x2)

inst_54038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:162114*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162114*0 + 3*278*FLEN/8, x4, x1, x2)

inst_54039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:162117*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162117*0 + 3*279*FLEN/8, x4, x1, x2)

inst_54040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:162120*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162120*0 + 3*280*FLEN/8, x4, x1, x2)

inst_54041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:162123*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162123*0 + 3*281*FLEN/8, x4, x1, x2)

inst_54042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:162126*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162126*0 + 3*282*FLEN/8, x4, x1, x2)

inst_54043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:162129*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162129*0 + 3*283*FLEN/8, x4, x1, x2)

inst_54044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:162132*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162132*0 + 3*284*FLEN/8, x4, x1, x2)

inst_54045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:162135*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162135*0 + 3*285*FLEN/8, x4, x1, x2)

inst_54046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:162138*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162138*0 + 3*286*FLEN/8, x4, x1, x2)

inst_54047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:162141*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162141*0 + 3*287*FLEN/8, x4, x1, x2)

inst_54048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:162144*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162144*0 + 3*288*FLEN/8, x4, x1, x2)

inst_54049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:162147*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162147*0 + 3*289*FLEN/8, x4, x1, x2)

inst_54050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:162150*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162150*0 + 3*290*FLEN/8, x4, x1, x2)

inst_54051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:162153*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162153*0 + 3*291*FLEN/8, x4, x1, x2)

inst_54052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:162156*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162156*0 + 3*292*FLEN/8, x4, x1, x2)

inst_54053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:162159*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162159*0 + 3*293*FLEN/8, x4, x1, x2)

inst_54054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:162162*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162162*0 + 3*294*FLEN/8, x4, x1, x2)

inst_54055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:162165*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162165*0 + 3*295*FLEN/8, x4, x1, x2)

inst_54056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:162168*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162168*0 + 3*296*FLEN/8, x4, x1, x2)

inst_54057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:162171*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162171*0 + 3*297*FLEN/8, x4, x1, x2)

inst_54058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:162174*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162174*0 + 3*298*FLEN/8, x4, x1, x2)

inst_54059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf14723f33b497 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07943814fd4f4; op2val:0x203f14723f33b497;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:162177*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162177*0 + 3*299*FLEN/8, x4, x1, x2)

inst_54060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:162180*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162180*0 + 3*300*FLEN/8, x4, x1, x2)

inst_54061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:162183*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162183*0 + 3*301*FLEN/8, x4, x1, x2)

inst_54062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:162186*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162186*0 + 3*302*FLEN/8, x4, x1, x2)

inst_54063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:162189*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162189*0 + 3*303*FLEN/8, x4, x1, x2)

inst_54064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:162192*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162192*0 + 3*304*FLEN/8, x4, x1, x2)

inst_54065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:162195*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162195*0 + 3*305*FLEN/8, x4, x1, x2)

inst_54066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:162198*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162198*0 + 3*306*FLEN/8, x4, x1, x2)

inst_54067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:162201*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162201*0 + 3*307*FLEN/8, x4, x1, x2)

inst_54068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:162204*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162204*0 + 3*308*FLEN/8, x4, x1, x2)

inst_54069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:162207*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162207*0 + 3*309*FLEN/8, x4, x1, x2)

inst_54070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:162210*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162210*0 + 3*310*FLEN/8, x4, x1, x2)

inst_54071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:162213*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162213*0 + 3*311*FLEN/8, x4, x1, x2)

inst_54072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:162216*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162216*0 + 3*312*FLEN/8, x4, x1, x2)

inst_54073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:162219*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162219*0 + 3*313*FLEN/8, x4, x1, x2)

inst_54074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:162222*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162222*0 + 3*314*FLEN/8, x4, x1, x2)

inst_54075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:162225*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162225*0 + 3*315*FLEN/8, x4, x1, x2)

inst_54076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:162228*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162228*0 + 3*316*FLEN/8, x4, x1, x2)

inst_54077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:162231*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162231*0 + 3*317*FLEN/8, x4, x1, x2)

inst_54078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:162234*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162234*0 + 3*318*FLEN/8, x4, x1, x2)

inst_54079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:162237*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162237*0 + 3*319*FLEN/8, x4, x1, x2)

inst_54080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:162240*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162240*0 + 3*320*FLEN/8, x4, x1, x2)

inst_54081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:162243*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162243*0 + 3*321*FLEN/8, x4, x1, x2)

inst_54082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000000000; valaddr_reg:x3; val_offset:162246*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162246*0 + 3*322*FLEN/8, x4, x1, x2)

inst_54083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000000001; valaddr_reg:x3; val_offset:162249*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162249*0 + 3*323*FLEN/8, x4, x1, x2)

inst_54084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000000003; valaddr_reg:x3; val_offset:162252*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162252*0 + 3*324*FLEN/8, x4, x1, x2)

inst_54085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000000007; valaddr_reg:x3; val_offset:162255*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162255*0 + 3*325*FLEN/8, x4, x1, x2)

inst_54086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000000000f; valaddr_reg:x3; val_offset:162258*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162258*0 + 3*326*FLEN/8, x4, x1, x2)

inst_54087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000000001f; valaddr_reg:x3; val_offset:162261*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162261*0 + 3*327*FLEN/8, x4, x1, x2)

inst_54088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000000003f; valaddr_reg:x3; val_offset:162264*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162264*0 + 3*328*FLEN/8, x4, x1, x2)

inst_54089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000000007f; valaddr_reg:x3; val_offset:162267*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162267*0 + 3*329*FLEN/8, x4, x1, x2)

inst_54090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000000000ff; valaddr_reg:x3; val_offset:162270*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162270*0 + 3*330*FLEN/8, x4, x1, x2)

inst_54091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000000001ff; valaddr_reg:x3; val_offset:162273*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162273*0 + 3*331*FLEN/8, x4, x1, x2)

inst_54092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000000003ff; valaddr_reg:x3; val_offset:162276*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162276*0 + 3*332*FLEN/8, x4, x1, x2)

inst_54093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000000007ff; valaddr_reg:x3; val_offset:162279*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162279*0 + 3*333*FLEN/8, x4, x1, x2)

inst_54094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000000fff; valaddr_reg:x3; val_offset:162282*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162282*0 + 3*334*FLEN/8, x4, x1, x2)

inst_54095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000001fff; valaddr_reg:x3; val_offset:162285*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162285*0 + 3*335*FLEN/8, x4, x1, x2)

inst_54096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000003fff; valaddr_reg:x3; val_offset:162288*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162288*0 + 3*336*FLEN/8, x4, x1, x2)

inst_54097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000007fff; valaddr_reg:x3; val_offset:162291*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162291*0 + 3*337*FLEN/8, x4, x1, x2)

inst_54098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000000ffff; valaddr_reg:x3; val_offset:162294*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162294*0 + 3*338*FLEN/8, x4, x1, x2)

inst_54099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000001ffff; valaddr_reg:x3; val_offset:162297*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162297*0 + 3*339*FLEN/8, x4, x1, x2)

inst_54100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000003ffff; valaddr_reg:x3; val_offset:162300*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162300*0 + 3*340*FLEN/8, x4, x1, x2)

inst_54101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000007ffff; valaddr_reg:x3; val_offset:162303*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162303*0 + 3*341*FLEN/8, x4, x1, x2)

inst_54102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000000fffff; valaddr_reg:x3; val_offset:162306*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162306*0 + 3*342*FLEN/8, x4, x1, x2)

inst_54103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000001fffff; valaddr_reg:x3; val_offset:162309*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162309*0 + 3*343*FLEN/8, x4, x1, x2)

inst_54104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000003fffff; valaddr_reg:x3; val_offset:162312*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162312*0 + 3*344*FLEN/8, x4, x1, x2)

inst_54105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000007fffff; valaddr_reg:x3; val_offset:162315*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162315*0 + 3*345*FLEN/8, x4, x1, x2)

inst_54106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000000ffffff; valaddr_reg:x3; val_offset:162318*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162318*0 + 3*346*FLEN/8, x4, x1, x2)

inst_54107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000001ffffff; valaddr_reg:x3; val_offset:162321*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162321*0 + 3*347*FLEN/8, x4, x1, x2)

inst_54108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000003ffffff; valaddr_reg:x3; val_offset:162324*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162324*0 + 3*348*FLEN/8, x4, x1, x2)

inst_54109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000007ffffff; valaddr_reg:x3; val_offset:162327*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162327*0 + 3*349*FLEN/8, x4, x1, x2)

inst_54110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000000fffffff; valaddr_reg:x3; val_offset:162330*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162330*0 + 3*350*FLEN/8, x4, x1, x2)

inst_54111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000001fffffff; valaddr_reg:x3; val_offset:162333*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162333*0 + 3*351*FLEN/8, x4, x1, x2)

inst_54112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000003fffffff; valaddr_reg:x3; val_offset:162336*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162336*0 + 3*352*FLEN/8, x4, x1, x2)

inst_54113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000007fffffff; valaddr_reg:x3; val_offset:162339*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162339*0 + 3*353*FLEN/8, x4, x1, x2)

inst_54114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700000ffffffff; valaddr_reg:x3; val_offset:162342*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162342*0 + 3*354*FLEN/8, x4, x1, x2)

inst_54115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700001ffffffff; valaddr_reg:x3; val_offset:162345*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162345*0 + 3*355*FLEN/8, x4, x1, x2)

inst_54116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700003ffffffff; valaddr_reg:x3; val_offset:162348*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162348*0 + 3*356*FLEN/8, x4, x1, x2)

inst_54117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700007ffffffff; valaddr_reg:x3; val_offset:162351*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162351*0 + 3*357*FLEN/8, x4, x1, x2)

inst_54118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370000fffffffff; valaddr_reg:x3; val_offset:162354*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162354*0 + 3*358*FLEN/8, x4, x1, x2)

inst_54119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370001fffffffff; valaddr_reg:x3; val_offset:162357*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162357*0 + 3*359*FLEN/8, x4, x1, x2)

inst_54120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370003fffffffff; valaddr_reg:x3; val_offset:162360*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162360*0 + 3*360*FLEN/8, x4, x1, x2)

inst_54121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370007fffffffff; valaddr_reg:x3; val_offset:162363*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162363*0 + 3*361*FLEN/8, x4, x1, x2)

inst_54122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837000ffffffffff; valaddr_reg:x3; val_offset:162366*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162366*0 + 3*362*FLEN/8, x4, x1, x2)

inst_54123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837001ffffffffff; valaddr_reg:x3; val_offset:162369*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162369*0 + 3*363*FLEN/8, x4, x1, x2)

inst_54124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837003ffffffffff; valaddr_reg:x3; val_offset:162372*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162372*0 + 3*364*FLEN/8, x4, x1, x2)

inst_54125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837007ffffffffff; valaddr_reg:x3; val_offset:162375*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162375*0 + 3*365*FLEN/8, x4, x1, x2)

inst_54126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83700fffffffffff; valaddr_reg:x3; val_offset:162378*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162378*0 + 3*366*FLEN/8, x4, x1, x2)

inst_54127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83701fffffffffff; valaddr_reg:x3; val_offset:162381*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162381*0 + 3*367*FLEN/8, x4, x1, x2)

inst_54128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83703fffffffffff; valaddr_reg:x3; val_offset:162384*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162384*0 + 3*368*FLEN/8, x4, x1, x2)

inst_54129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x83707fffffffffff; valaddr_reg:x3; val_offset:162387*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162387*0 + 3*369*FLEN/8, x4, x1, x2)

inst_54130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8370ffffffffffff; valaddr_reg:x3; val_offset:162390*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162390*0 + 3*370*FLEN/8, x4, x1, x2)

inst_54131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8371ffffffffffff; valaddr_reg:x3; val_offset:162393*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162393*0 + 3*371*FLEN/8, x4, x1, x2)

inst_54132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8373ffffffffffff; valaddr_reg:x3; val_offset:162396*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162396*0 + 3*372*FLEN/8, x4, x1, x2)

inst_54133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8377ffffffffffff; valaddr_reg:x3; val_offset:162399*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162399*0 + 3*373*FLEN/8, x4, x1, x2)

inst_54134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x8378000000000000; valaddr_reg:x3; val_offset:162402*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162402*0 + 3*374*FLEN/8, x4, x1, x2)

inst_54135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837c000000000000; valaddr_reg:x3; val_offset:162405*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162405*0 + 3*375*FLEN/8, x4, x1, x2)

inst_54136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837e000000000000; valaddr_reg:x3; val_offset:162408*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162408*0 + 3*376*FLEN/8, x4, x1, x2)

inst_54137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837f000000000000; valaddr_reg:x3; val_offset:162411*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162411*0 + 3*377*FLEN/8, x4, x1, x2)

inst_54138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837f800000000000; valaddr_reg:x3; val_offset:162414*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162414*0 + 3*378*FLEN/8, x4, x1, x2)

inst_54139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fc00000000000; valaddr_reg:x3; val_offset:162417*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162417*0 + 3*379*FLEN/8, x4, x1, x2)

inst_54140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fe00000000000; valaddr_reg:x3; val_offset:162420*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162420*0 + 3*380*FLEN/8, x4, x1, x2)

inst_54141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ff00000000000; valaddr_reg:x3; val_offset:162423*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162423*0 + 3*381*FLEN/8, x4, x1, x2)

inst_54142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ff80000000000; valaddr_reg:x3; val_offset:162426*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162426*0 + 3*382*FLEN/8, x4, x1, x2)

inst_54143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffc0000000000; valaddr_reg:x3; val_offset:162429*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162429*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_54144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffe0000000000; valaddr_reg:x3; val_offset:162432*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162432*0 + 3*384*FLEN/8, x4, x1, x2)

inst_54145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fff0000000000; valaddr_reg:x3; val_offset:162435*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162435*0 + 3*385*FLEN/8, x4, x1, x2)

inst_54146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fff8000000000; valaddr_reg:x3; val_offset:162438*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162438*0 + 3*386*FLEN/8, x4, x1, x2)

inst_54147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffc000000000; valaddr_reg:x3; val_offset:162441*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162441*0 + 3*387*FLEN/8, x4, x1, x2)

inst_54148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffe000000000; valaddr_reg:x3; val_offset:162444*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162444*0 + 3*388*FLEN/8, x4, x1, x2)

inst_54149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffff000000000; valaddr_reg:x3; val_offset:162447*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162447*0 + 3*389*FLEN/8, x4, x1, x2)

inst_54150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffff800000000; valaddr_reg:x3; val_offset:162450*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162450*0 + 3*390*FLEN/8, x4, x1, x2)

inst_54151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffc00000000; valaddr_reg:x3; val_offset:162453*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162453*0 + 3*391*FLEN/8, x4, x1, x2)

inst_54152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffe00000000; valaddr_reg:x3; val_offset:162456*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162456*0 + 3*392*FLEN/8, x4, x1, x2)

inst_54153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffff00000000; valaddr_reg:x3; val_offset:162459*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162459*0 + 3*393*FLEN/8, x4, x1, x2)

inst_54154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffff80000000; valaddr_reg:x3; val_offset:162462*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162462*0 + 3*394*FLEN/8, x4, x1, x2)

inst_54155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffc0000000; valaddr_reg:x3; val_offset:162465*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162465*0 + 3*395*FLEN/8, x4, x1, x2)

inst_54156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffe0000000; valaddr_reg:x3; val_offset:162468*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162468*0 + 3*396*FLEN/8, x4, x1, x2)

inst_54157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffff0000000; valaddr_reg:x3; val_offset:162471*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162471*0 + 3*397*FLEN/8, x4, x1, x2)

inst_54158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffff8000000; valaddr_reg:x3; val_offset:162474*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162474*0 + 3*398*FLEN/8, x4, x1, x2)

inst_54159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffc000000; valaddr_reg:x3; val_offset:162477*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162477*0 + 3*399*FLEN/8, x4, x1, x2)

inst_54160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffe000000; valaddr_reg:x3; val_offset:162480*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162480*0 + 3*400*FLEN/8, x4, x1, x2)

inst_54161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffff000000; valaddr_reg:x3; val_offset:162483*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162483*0 + 3*401*FLEN/8, x4, x1, x2)

inst_54162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffff800000; valaddr_reg:x3; val_offset:162486*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162486*0 + 3*402*FLEN/8, x4, x1, x2)

inst_54163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffc00000; valaddr_reg:x3; val_offset:162489*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162489*0 + 3*403*FLEN/8, x4, x1, x2)

inst_54164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffe00000; valaddr_reg:x3; val_offset:162492*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162492*0 + 3*404*FLEN/8, x4, x1, x2)

inst_54165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffff00000; valaddr_reg:x3; val_offset:162495*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162495*0 + 3*405*FLEN/8, x4, x1, x2)

inst_54166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffff80000; valaddr_reg:x3; val_offset:162498*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162498*0 + 3*406*FLEN/8, x4, x1, x2)

inst_54167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffc0000; valaddr_reg:x3; val_offset:162501*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162501*0 + 3*407*FLEN/8, x4, x1, x2)

inst_54168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffe0000; valaddr_reg:x3; val_offset:162504*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162504*0 + 3*408*FLEN/8, x4, x1, x2)

inst_54169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffff0000; valaddr_reg:x3; val_offset:162507*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162507*0 + 3*409*FLEN/8, x4, x1, x2)

inst_54170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffff8000; valaddr_reg:x3; val_offset:162510*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162510*0 + 3*410*FLEN/8, x4, x1, x2)

inst_54171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffc000; valaddr_reg:x3; val_offset:162513*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162513*0 + 3*411*FLEN/8, x4, x1, x2)

inst_54172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffe000; valaddr_reg:x3; val_offset:162516*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162516*0 + 3*412*FLEN/8, x4, x1, x2)

inst_54173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffff000; valaddr_reg:x3; val_offset:162519*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162519*0 + 3*413*FLEN/8, x4, x1, x2)

inst_54174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffff800; valaddr_reg:x3; val_offset:162522*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162522*0 + 3*414*FLEN/8, x4, x1, x2)

inst_54175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffffc00; valaddr_reg:x3; val_offset:162525*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162525*0 + 3*415*FLEN/8, x4, x1, x2)

inst_54176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffffe00; valaddr_reg:x3; val_offset:162528*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162528*0 + 3*416*FLEN/8, x4, x1, x2)

inst_54177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffff00; valaddr_reg:x3; val_offset:162531*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162531*0 + 3*417*FLEN/8, x4, x1, x2)

inst_54178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffff80; valaddr_reg:x3; val_offset:162534*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162534*0 + 3*418*FLEN/8, x4, x1, x2)

inst_54179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffffc0; valaddr_reg:x3; val_offset:162537*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162537*0 + 3*419*FLEN/8, x4, x1, x2)

inst_54180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffffe0; valaddr_reg:x3; val_offset:162540*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162540*0 + 3*420*FLEN/8, x4, x1, x2)

inst_54181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffffff0; valaddr_reg:x3; val_offset:162543*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162543*0 + 3*421*FLEN/8, x4, x1, x2)

inst_54182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffffff8; valaddr_reg:x3; val_offset:162546*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162546*0 + 3*422*FLEN/8, x4, x1, x2)

inst_54183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffffffc; valaddr_reg:x3; val_offset:162549*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162549*0 + 3*423*FLEN/8, x4, x1, x2)

inst_54184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837ffffffffffffe; valaddr_reg:x3; val_offset:162552*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162552*0 + 3*424*FLEN/8, x4, x1, x2)

inst_54185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08664d345aed6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08664d345aed6; op2val:0x8000;
op3val:0x837fffffffffffff; valaddr_reg:x3; val_offset:162555*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162555*0 + 3*425*FLEN/8, x4, x1, x2)

inst_54186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000000000; valaddr_reg:x3; val_offset:162558*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162558*0 + 3*426*FLEN/8, x4, x1, x2)

inst_54187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000000001; valaddr_reg:x3; val_offset:162561*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162561*0 + 3*427*FLEN/8, x4, x1, x2)

inst_54188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000000003; valaddr_reg:x3; val_offset:162564*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162564*0 + 3*428*FLEN/8, x4, x1, x2)

inst_54189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000000007; valaddr_reg:x3; val_offset:162567*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162567*0 + 3*429*FLEN/8, x4, x1, x2)

inst_54190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000000000f; valaddr_reg:x3; val_offset:162570*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162570*0 + 3*430*FLEN/8, x4, x1, x2)

inst_54191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000000001f; valaddr_reg:x3; val_offset:162573*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162573*0 + 3*431*FLEN/8, x4, x1, x2)

inst_54192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000000003f; valaddr_reg:x3; val_offset:162576*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162576*0 + 3*432*FLEN/8, x4, x1, x2)

inst_54193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000000007f; valaddr_reg:x3; val_offset:162579*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162579*0 + 3*433*FLEN/8, x4, x1, x2)

inst_54194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000000000ff; valaddr_reg:x3; val_offset:162582*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162582*0 + 3*434*FLEN/8, x4, x1, x2)

inst_54195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000000001ff; valaddr_reg:x3; val_offset:162585*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162585*0 + 3*435*FLEN/8, x4, x1, x2)

inst_54196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000000003ff; valaddr_reg:x3; val_offset:162588*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162588*0 + 3*436*FLEN/8, x4, x1, x2)

inst_54197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000000007ff; valaddr_reg:x3; val_offset:162591*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162591*0 + 3*437*FLEN/8, x4, x1, x2)

inst_54198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000000fff; valaddr_reg:x3; val_offset:162594*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162594*0 + 3*438*FLEN/8, x4, x1, x2)

inst_54199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000001fff; valaddr_reg:x3; val_offset:162597*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162597*0 + 3*439*FLEN/8, x4, x1, x2)

inst_54200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000003fff; valaddr_reg:x3; val_offset:162600*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162600*0 + 3*440*FLEN/8, x4, x1, x2)

inst_54201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000007fff; valaddr_reg:x3; val_offset:162603*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162603*0 + 3*441*FLEN/8, x4, x1, x2)

inst_54202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000000ffff; valaddr_reg:x3; val_offset:162606*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162606*0 + 3*442*FLEN/8, x4, x1, x2)

inst_54203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000001ffff; valaddr_reg:x3; val_offset:162609*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162609*0 + 3*443*FLEN/8, x4, x1, x2)

inst_54204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000003ffff; valaddr_reg:x3; val_offset:162612*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162612*0 + 3*444*FLEN/8, x4, x1, x2)

inst_54205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000007ffff; valaddr_reg:x3; val_offset:162615*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162615*0 + 3*445*FLEN/8, x4, x1, x2)

inst_54206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000000fffff; valaddr_reg:x3; val_offset:162618*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162618*0 + 3*446*FLEN/8, x4, x1, x2)

inst_54207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000001fffff; valaddr_reg:x3; val_offset:162621*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162621*0 + 3*447*FLEN/8, x4, x1, x2)

inst_54208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000003fffff; valaddr_reg:x3; val_offset:162624*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162624*0 + 3*448*FLEN/8, x4, x1, x2)

inst_54209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000007fffff; valaddr_reg:x3; val_offset:162627*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162627*0 + 3*449*FLEN/8, x4, x1, x2)

inst_54210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000000ffffff; valaddr_reg:x3; val_offset:162630*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162630*0 + 3*450*FLEN/8, x4, x1, x2)

inst_54211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000001ffffff; valaddr_reg:x3; val_offset:162633*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162633*0 + 3*451*FLEN/8, x4, x1, x2)

inst_54212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000003ffffff; valaddr_reg:x3; val_offset:162636*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162636*0 + 3*452*FLEN/8, x4, x1, x2)

inst_54213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000007ffffff; valaddr_reg:x3; val_offset:162639*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162639*0 + 3*453*FLEN/8, x4, x1, x2)

inst_54214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000000fffffff; valaddr_reg:x3; val_offset:162642*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162642*0 + 3*454*FLEN/8, x4, x1, x2)

inst_54215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000001fffffff; valaddr_reg:x3; val_offset:162645*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162645*0 + 3*455*FLEN/8, x4, x1, x2)

inst_54216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000003fffffff; valaddr_reg:x3; val_offset:162648*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162648*0 + 3*456*FLEN/8, x4, x1, x2)

inst_54217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000007fffffff; valaddr_reg:x3; val_offset:162651*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162651*0 + 3*457*FLEN/8, x4, x1, x2)

inst_54218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200000ffffffff; valaddr_reg:x3; val_offset:162654*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162654*0 + 3*458*FLEN/8, x4, x1, x2)

inst_54219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200001ffffffff; valaddr_reg:x3; val_offset:162657*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162657*0 + 3*459*FLEN/8, x4, x1, x2)

inst_54220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200003ffffffff; valaddr_reg:x3; val_offset:162660*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162660*0 + 3*460*FLEN/8, x4, x1, x2)

inst_54221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200007ffffffff; valaddr_reg:x3; val_offset:162663*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162663*0 + 3*461*FLEN/8, x4, x1, x2)

inst_54222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820000fffffffff; valaddr_reg:x3; val_offset:162666*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162666*0 + 3*462*FLEN/8, x4, x1, x2)

inst_54223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820001fffffffff; valaddr_reg:x3; val_offset:162669*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162669*0 + 3*463*FLEN/8, x4, x1, x2)

inst_54224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820003fffffffff; valaddr_reg:x3; val_offset:162672*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162672*0 + 3*464*FLEN/8, x4, x1, x2)

inst_54225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820007fffffffff; valaddr_reg:x3; val_offset:162675*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162675*0 + 3*465*FLEN/8, x4, x1, x2)

inst_54226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82000ffffffffff; valaddr_reg:x3; val_offset:162678*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162678*0 + 3*466*FLEN/8, x4, x1, x2)

inst_54227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82001ffffffffff; valaddr_reg:x3; val_offset:162681*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162681*0 + 3*467*FLEN/8, x4, x1, x2)

inst_54228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82003ffffffffff; valaddr_reg:x3; val_offset:162684*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162684*0 + 3*468*FLEN/8, x4, x1, x2)

inst_54229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82007ffffffffff; valaddr_reg:x3; val_offset:162687*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162687*0 + 3*469*FLEN/8, x4, x1, x2)

inst_54230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8200fffffffffff; valaddr_reg:x3; val_offset:162690*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162690*0 + 3*470*FLEN/8, x4, x1, x2)

inst_54231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8201fffffffffff; valaddr_reg:x3; val_offset:162693*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162693*0 + 3*471*FLEN/8, x4, x1, x2)

inst_54232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8203fffffffffff; valaddr_reg:x3; val_offset:162696*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162696*0 + 3*472*FLEN/8, x4, x1, x2)

inst_54233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb8207fffffffffff; valaddr_reg:x3; val_offset:162699*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162699*0 + 3*473*FLEN/8, x4, x1, x2)

inst_54234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb820ffffffffffff; valaddr_reg:x3; val_offset:162702*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162702*0 + 3*474*FLEN/8, x4, x1, x2)

inst_54235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb821ffffffffffff; valaddr_reg:x3; val_offset:162705*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162705*0 + 3*475*FLEN/8, x4, x1, x2)

inst_54236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb823ffffffffffff; valaddr_reg:x3; val_offset:162708*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162708*0 + 3*476*FLEN/8, x4, x1, x2)

inst_54237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb827ffffffffffff; valaddr_reg:x3; val_offset:162711*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162711*0 + 3*477*FLEN/8, x4, x1, x2)

inst_54238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb828000000000000; valaddr_reg:x3; val_offset:162714*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162714*0 + 3*478*FLEN/8, x4, x1, x2)

inst_54239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82c000000000000; valaddr_reg:x3; val_offset:162717*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162717*0 + 3*479*FLEN/8, x4, x1, x2)

inst_54240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82e000000000000; valaddr_reg:x3; val_offset:162720*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162720*0 + 3*480*FLEN/8, x4, x1, x2)

inst_54241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82f000000000000; valaddr_reg:x3; val_offset:162723*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162723*0 + 3*481*FLEN/8, x4, x1, x2)

inst_54242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82f800000000000; valaddr_reg:x3; val_offset:162726*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162726*0 + 3*482*FLEN/8, x4, x1, x2)

inst_54243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fc00000000000; valaddr_reg:x3; val_offset:162729*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162729*0 + 3*483*FLEN/8, x4, x1, x2)

inst_54244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fe00000000000; valaddr_reg:x3; val_offset:162732*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162732*0 + 3*484*FLEN/8, x4, x1, x2)

inst_54245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ff00000000000; valaddr_reg:x3; val_offset:162735*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162735*0 + 3*485*FLEN/8, x4, x1, x2)

inst_54246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ff80000000000; valaddr_reg:x3; val_offset:162738*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162738*0 + 3*486*FLEN/8, x4, x1, x2)

inst_54247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffc0000000000; valaddr_reg:x3; val_offset:162741*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162741*0 + 3*487*FLEN/8, x4, x1, x2)

inst_54248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffe0000000000; valaddr_reg:x3; val_offset:162744*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162744*0 + 3*488*FLEN/8, x4, x1, x2)

inst_54249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fff0000000000; valaddr_reg:x3; val_offset:162747*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162747*0 + 3*489*FLEN/8, x4, x1, x2)

inst_54250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fff8000000000; valaddr_reg:x3; val_offset:162750*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162750*0 + 3*490*FLEN/8, x4, x1, x2)

inst_54251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffc000000000; valaddr_reg:x3; val_offset:162753*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162753*0 + 3*491*FLEN/8, x4, x1, x2)

inst_54252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffe000000000; valaddr_reg:x3; val_offset:162756*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162756*0 + 3*492*FLEN/8, x4, x1, x2)

inst_54253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffff000000000; valaddr_reg:x3; val_offset:162759*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162759*0 + 3*493*FLEN/8, x4, x1, x2)

inst_54254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffff800000000; valaddr_reg:x3; val_offset:162762*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162762*0 + 3*494*FLEN/8, x4, x1, x2)

inst_54255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffc00000000; valaddr_reg:x3; val_offset:162765*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162765*0 + 3*495*FLEN/8, x4, x1, x2)

inst_54256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffe00000000; valaddr_reg:x3; val_offset:162768*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162768*0 + 3*496*FLEN/8, x4, x1, x2)

inst_54257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffff00000000; valaddr_reg:x3; val_offset:162771*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162771*0 + 3*497*FLEN/8, x4, x1, x2)

inst_54258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffff80000000; valaddr_reg:x3; val_offset:162774*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162774*0 + 3*498*FLEN/8, x4, x1, x2)

inst_54259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffc0000000; valaddr_reg:x3; val_offset:162777*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162777*0 + 3*499*FLEN/8, x4, x1, x2)

inst_54260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffe0000000; valaddr_reg:x3; val_offset:162780*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162780*0 + 3*500*FLEN/8, x4, x1, x2)

inst_54261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffff0000000; valaddr_reg:x3; val_offset:162783*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162783*0 + 3*501*FLEN/8, x4, x1, x2)

inst_54262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffff8000000; valaddr_reg:x3; val_offset:162786*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162786*0 + 3*502*FLEN/8, x4, x1, x2)

inst_54263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffc000000; valaddr_reg:x3; val_offset:162789*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162789*0 + 3*503*FLEN/8, x4, x1, x2)

inst_54264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffe000000; valaddr_reg:x3; val_offset:162792*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162792*0 + 3*504*FLEN/8, x4, x1, x2)

inst_54265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffff000000; valaddr_reg:x3; val_offset:162795*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162795*0 + 3*505*FLEN/8, x4, x1, x2)

inst_54266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffff800000; valaddr_reg:x3; val_offset:162798*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162798*0 + 3*506*FLEN/8, x4, x1, x2)

inst_54267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffc00000; valaddr_reg:x3; val_offset:162801*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162801*0 + 3*507*FLEN/8, x4, x1, x2)

inst_54268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffe00000; valaddr_reg:x3; val_offset:162804*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162804*0 + 3*508*FLEN/8, x4, x1, x2)

inst_54269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffff00000; valaddr_reg:x3; val_offset:162807*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162807*0 + 3*509*FLEN/8, x4, x1, x2)

inst_54270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffff80000; valaddr_reg:x3; val_offset:162810*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162810*0 + 3*510*FLEN/8, x4, x1, x2)

inst_54271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffc0000; valaddr_reg:x3; val_offset:162813*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162813*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_54272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffe0000; valaddr_reg:x3; val_offset:162816*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162816*0 + 3*512*FLEN/8, x4, x1, x2)

inst_54273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffff0000; valaddr_reg:x3; val_offset:162819*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162819*0 + 3*513*FLEN/8, x4, x1, x2)

inst_54274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffff8000; valaddr_reg:x3; val_offset:162822*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162822*0 + 3*514*FLEN/8, x4, x1, x2)

inst_54275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffc000; valaddr_reg:x3; val_offset:162825*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162825*0 + 3*515*FLEN/8, x4, x1, x2)

inst_54276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffe000; valaddr_reg:x3; val_offset:162828*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162828*0 + 3*516*FLEN/8, x4, x1, x2)

inst_54277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffff000; valaddr_reg:x3; val_offset:162831*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162831*0 + 3*517*FLEN/8, x4, x1, x2)

inst_54278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffff800; valaddr_reg:x3; val_offset:162834*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162834*0 + 3*518*FLEN/8, x4, x1, x2)

inst_54279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffffc00; valaddr_reg:x3; val_offset:162837*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162837*0 + 3*519*FLEN/8, x4, x1, x2)

inst_54280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffffe00; valaddr_reg:x3; val_offset:162840*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162840*0 + 3*520*FLEN/8, x4, x1, x2)

inst_54281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffff00; valaddr_reg:x3; val_offset:162843*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162843*0 + 3*521*FLEN/8, x4, x1, x2)

inst_54282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffff80; valaddr_reg:x3; val_offset:162846*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162846*0 + 3*522*FLEN/8, x4, x1, x2)

inst_54283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffffc0; valaddr_reg:x3; val_offset:162849*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162849*0 + 3*523*FLEN/8, x4, x1, x2)

inst_54284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffffe0; valaddr_reg:x3; val_offset:162852*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162852*0 + 3*524*FLEN/8, x4, x1, x2)

inst_54285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffffff0; valaddr_reg:x3; val_offset:162855*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162855*0 + 3*525*FLEN/8, x4, x1, x2)

inst_54286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffffff8; valaddr_reg:x3; val_offset:162858*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162858*0 + 3*526*FLEN/8, x4, x1, x2)

inst_54287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffffffc; valaddr_reg:x3; val_offset:162861*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162861*0 + 3*527*FLEN/8, x4, x1, x2)

inst_54288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82ffffffffffffe; valaddr_reg:x3; val_offset:162864*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162864*0 + 3*528*FLEN/8, x4, x1, x2)

inst_54289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xb82fffffffffffff; valaddr_reg:x3; val_offset:162867*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162867*0 + 3*529*FLEN/8, x4, x1, x2)

inst_54290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:162870*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162870*0 + 3*530*FLEN/8, x4, x1, x2)

inst_54291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:162873*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162873*0 + 3*531*FLEN/8, x4, x1, x2)

inst_54292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:162876*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162876*0 + 3*532*FLEN/8, x4, x1, x2)

inst_54293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:162879*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162879*0 + 3*533*FLEN/8, x4, x1, x2)

inst_54294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:162882*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162882*0 + 3*534*FLEN/8, x4, x1, x2)

inst_54295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:162885*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162885*0 + 3*535*FLEN/8, x4, x1, x2)

inst_54296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:162888*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162888*0 + 3*536*FLEN/8, x4, x1, x2)

inst_54297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:162891*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162891*0 + 3*537*FLEN/8, x4, x1, x2)

inst_54298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:162894*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162894*0 + 3*538*FLEN/8, x4, x1, x2)

inst_54299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:162897*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162897*0 + 3*539*FLEN/8, x4, x1, x2)

inst_54300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:162900*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162900*0 + 3*540*FLEN/8, x4, x1, x2)

inst_54301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:162903*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162903*0 + 3*541*FLEN/8, x4, x1, x2)

inst_54302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:162906*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162906*0 + 3*542*FLEN/8, x4, x1, x2)

inst_54303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:162909*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162909*0 + 3*543*FLEN/8, x4, x1, x2)

inst_54304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:162912*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162912*0 + 3*544*FLEN/8, x4, x1, x2)

inst_54305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:162915*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162915*0 + 3*545*FLEN/8, x4, x1, x2)

inst_54306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:162918*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162918*0 + 3*546*FLEN/8, x4, x1, x2)

inst_54307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:162921*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162921*0 + 3*547*FLEN/8, x4, x1, x2)

inst_54308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:162924*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162924*0 + 3*548*FLEN/8, x4, x1, x2)

inst_54309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:162927*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162927*0 + 3*549*FLEN/8, x4, x1, x2)

inst_54310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:162930*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162930*0 + 3*550*FLEN/8, x4, x1, x2)

inst_54311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0872ddcfe913f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xefa47792a7001 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0872ddcfe913f; op2val:0x9fcefa47792a7001;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:162933*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162933*0 + 3*551*FLEN/8, x4, x1, x2)

inst_54312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:162936*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162936*0 + 3*552*FLEN/8, x4, x1, x2)

inst_54313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:162939*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162939*0 + 3*553*FLEN/8, x4, x1, x2)

inst_54314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:162942*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162942*0 + 3*554*FLEN/8, x4, x1, x2)

inst_54315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:162945*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162945*0 + 3*555*FLEN/8, x4, x1, x2)

inst_54316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:162948*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162948*0 + 3*556*FLEN/8, x4, x1, x2)

inst_54317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:162951*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162951*0 + 3*557*FLEN/8, x4, x1, x2)

inst_54318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:162954*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162954*0 + 3*558*FLEN/8, x4, x1, x2)

inst_54319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:162957*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162957*0 + 3*559*FLEN/8, x4, x1, x2)

inst_54320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:162960*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162960*0 + 3*560*FLEN/8, x4, x1, x2)

inst_54321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:162963*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162963*0 + 3*561*FLEN/8, x4, x1, x2)

inst_54322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:162966*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162966*0 + 3*562*FLEN/8, x4, x1, x2)

inst_54323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:162969*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162969*0 + 3*563*FLEN/8, x4, x1, x2)

inst_54324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:162972*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162972*0 + 3*564*FLEN/8, x4, x1, x2)

inst_54325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:162975*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162975*0 + 3*565*FLEN/8, x4, x1, x2)

inst_54326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:162978*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162978*0 + 3*566*FLEN/8, x4, x1, x2)

inst_54327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:162981*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162981*0 + 3*567*FLEN/8, x4, x1, x2)

inst_54328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:162984*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162984*0 + 3*568*FLEN/8, x4, x1, x2)

inst_54329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:162987*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162987*0 + 3*569*FLEN/8, x4, x1, x2)

inst_54330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:162990*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162990*0 + 3*570*FLEN/8, x4, x1, x2)

inst_54331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:162993*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162993*0 + 3*571*FLEN/8, x4, x1, x2)

inst_54332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:162996*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162996*0 + 3*572*FLEN/8, x4, x1, x2)

inst_54333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:162999*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162999*0 + 3*573*FLEN/8, x4, x1, x2)

inst_54334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000000000; valaddr_reg:x3; val_offset:163002*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163002*0 + 3*574*FLEN/8, x4, x1, x2)

inst_54335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000000001; valaddr_reg:x3; val_offset:163005*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163005*0 + 3*575*FLEN/8, x4, x1, x2)

inst_54336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000000003; valaddr_reg:x3; val_offset:163008*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163008*0 + 3*576*FLEN/8, x4, x1, x2)

inst_54337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000000007; valaddr_reg:x3; val_offset:163011*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163011*0 + 3*577*FLEN/8, x4, x1, x2)

inst_54338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000000000f; valaddr_reg:x3; val_offset:163014*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163014*0 + 3*578*FLEN/8, x4, x1, x2)

inst_54339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000000001f; valaddr_reg:x3; val_offset:163017*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163017*0 + 3*579*FLEN/8, x4, x1, x2)

inst_54340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000000003f; valaddr_reg:x3; val_offset:163020*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163020*0 + 3*580*FLEN/8, x4, x1, x2)

inst_54341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000000007f; valaddr_reg:x3; val_offset:163023*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163023*0 + 3*581*FLEN/8, x4, x1, x2)

inst_54342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000000000ff; valaddr_reg:x3; val_offset:163026*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163026*0 + 3*582*FLEN/8, x4, x1, x2)

inst_54343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000000001ff; valaddr_reg:x3; val_offset:163029*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163029*0 + 3*583*FLEN/8, x4, x1, x2)

inst_54344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000000003ff; valaddr_reg:x3; val_offset:163032*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163032*0 + 3*584*FLEN/8, x4, x1, x2)

inst_54345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000000007ff; valaddr_reg:x3; val_offset:163035*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163035*0 + 3*585*FLEN/8, x4, x1, x2)

inst_54346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000000fff; valaddr_reg:x3; val_offset:163038*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163038*0 + 3*586*FLEN/8, x4, x1, x2)

inst_54347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000001fff; valaddr_reg:x3; val_offset:163041*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163041*0 + 3*587*FLEN/8, x4, x1, x2)

inst_54348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000003fff; valaddr_reg:x3; val_offset:163044*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163044*0 + 3*588*FLEN/8, x4, x1, x2)

inst_54349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000007fff; valaddr_reg:x3; val_offset:163047*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163047*0 + 3*589*FLEN/8, x4, x1, x2)

inst_54350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000000ffff; valaddr_reg:x3; val_offset:163050*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163050*0 + 3*590*FLEN/8, x4, x1, x2)

inst_54351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000001ffff; valaddr_reg:x3; val_offset:163053*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163053*0 + 3*591*FLEN/8, x4, x1, x2)

inst_54352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000003ffff; valaddr_reg:x3; val_offset:163056*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163056*0 + 3*592*FLEN/8, x4, x1, x2)

inst_54353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000007ffff; valaddr_reg:x3; val_offset:163059*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163059*0 + 3*593*FLEN/8, x4, x1, x2)

inst_54354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000000fffff; valaddr_reg:x3; val_offset:163062*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163062*0 + 3*594*FLEN/8, x4, x1, x2)

inst_54355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000001fffff; valaddr_reg:x3; val_offset:163065*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163065*0 + 3*595*FLEN/8, x4, x1, x2)

inst_54356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000003fffff; valaddr_reg:x3; val_offset:163068*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163068*0 + 3*596*FLEN/8, x4, x1, x2)

inst_54357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000007fffff; valaddr_reg:x3; val_offset:163071*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163071*0 + 3*597*FLEN/8, x4, x1, x2)

inst_54358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000000ffffff; valaddr_reg:x3; val_offset:163074*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163074*0 + 3*598*FLEN/8, x4, x1, x2)

inst_54359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000001ffffff; valaddr_reg:x3; val_offset:163077*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163077*0 + 3*599*FLEN/8, x4, x1, x2)

inst_54360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000003ffffff; valaddr_reg:x3; val_offset:163080*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163080*0 + 3*600*FLEN/8, x4, x1, x2)

inst_54361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000007ffffff; valaddr_reg:x3; val_offset:163083*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163083*0 + 3*601*FLEN/8, x4, x1, x2)

inst_54362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000000fffffff; valaddr_reg:x3; val_offset:163086*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163086*0 + 3*602*FLEN/8, x4, x1, x2)

inst_54363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000001fffffff; valaddr_reg:x3; val_offset:163089*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163089*0 + 3*603*FLEN/8, x4, x1, x2)

inst_54364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000003fffffff; valaddr_reg:x3; val_offset:163092*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163092*0 + 3*604*FLEN/8, x4, x1, x2)

inst_54365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000007fffffff; valaddr_reg:x3; val_offset:163095*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163095*0 + 3*605*FLEN/8, x4, x1, x2)

inst_54366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00000ffffffff; valaddr_reg:x3; val_offset:163098*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163098*0 + 3*606*FLEN/8, x4, x1, x2)

inst_54367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00001ffffffff; valaddr_reg:x3; val_offset:163101*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163101*0 + 3*607*FLEN/8, x4, x1, x2)

inst_54368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00003ffffffff; valaddr_reg:x3; val_offset:163104*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163104*0 + 3*608*FLEN/8, x4, x1, x2)

inst_54369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00007ffffffff; valaddr_reg:x3; val_offset:163107*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163107*0 + 3*609*FLEN/8, x4, x1, x2)

inst_54370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0000fffffffff; valaddr_reg:x3; val_offset:163110*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163110*0 + 3*610*FLEN/8, x4, x1, x2)

inst_54371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0001fffffffff; valaddr_reg:x3; val_offset:163113*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163113*0 + 3*611*FLEN/8, x4, x1, x2)

inst_54372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0003fffffffff; valaddr_reg:x3; val_offset:163116*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163116*0 + 3*612*FLEN/8, x4, x1, x2)

inst_54373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0007fffffffff; valaddr_reg:x3; val_offset:163119*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163119*0 + 3*613*FLEN/8, x4, x1, x2)

inst_54374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d000ffffffffff; valaddr_reg:x3; val_offset:163122*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163122*0 + 3*614*FLEN/8, x4, x1, x2)

inst_54375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d001ffffffffff; valaddr_reg:x3; val_offset:163125*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163125*0 + 3*615*FLEN/8, x4, x1, x2)

inst_54376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d003ffffffffff; valaddr_reg:x3; val_offset:163128*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163128*0 + 3*616*FLEN/8, x4, x1, x2)

inst_54377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d007ffffffffff; valaddr_reg:x3; val_offset:163131*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163131*0 + 3*617*FLEN/8, x4, x1, x2)

inst_54378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d00fffffffffff; valaddr_reg:x3; val_offset:163134*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163134*0 + 3*618*FLEN/8, x4, x1, x2)

inst_54379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d01fffffffffff; valaddr_reg:x3; val_offset:163137*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163137*0 + 3*619*FLEN/8, x4, x1, x2)

inst_54380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d03fffffffffff; valaddr_reg:x3; val_offset:163140*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163140*0 + 3*620*FLEN/8, x4, x1, x2)

inst_54381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d07fffffffffff; valaddr_reg:x3; val_offset:163143*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163143*0 + 3*621*FLEN/8, x4, x1, x2)

inst_54382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d0ffffffffffff; valaddr_reg:x3; val_offset:163146*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163146*0 + 3*622*FLEN/8, x4, x1, x2)

inst_54383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d1ffffffffffff; valaddr_reg:x3; val_offset:163149*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163149*0 + 3*623*FLEN/8, x4, x1, x2)

inst_54384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d3ffffffffffff; valaddr_reg:x3; val_offset:163152*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163152*0 + 3*624*FLEN/8, x4, x1, x2)

inst_54385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d7ffffffffffff; valaddr_reg:x3; val_offset:163155*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163155*0 + 3*625*FLEN/8, x4, x1, x2)

inst_54386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82d8000000000000; valaddr_reg:x3; val_offset:163158*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163158*0 + 3*626*FLEN/8, x4, x1, x2)

inst_54387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dc000000000000; valaddr_reg:x3; val_offset:163161*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163161*0 + 3*627*FLEN/8, x4, x1, x2)

inst_54388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82de000000000000; valaddr_reg:x3; val_offset:163164*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163164*0 + 3*628*FLEN/8, x4, x1, x2)

inst_54389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82df000000000000; valaddr_reg:x3; val_offset:163167*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163167*0 + 3*629*FLEN/8, x4, x1, x2)

inst_54390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82df800000000000; valaddr_reg:x3; val_offset:163170*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163170*0 + 3*630*FLEN/8, x4, x1, x2)

inst_54391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfc00000000000; valaddr_reg:x3; val_offset:163173*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163173*0 + 3*631*FLEN/8, x4, x1, x2)

inst_54392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfe00000000000; valaddr_reg:x3; val_offset:163176*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163176*0 + 3*632*FLEN/8, x4, x1, x2)

inst_54393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dff00000000000; valaddr_reg:x3; val_offset:163179*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163179*0 + 3*633*FLEN/8, x4, x1, x2)

inst_54394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dff80000000000; valaddr_reg:x3; val_offset:163182*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163182*0 + 3*634*FLEN/8, x4, x1, x2)

inst_54395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffc0000000000; valaddr_reg:x3; val_offset:163185*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163185*0 + 3*635*FLEN/8, x4, x1, x2)

inst_54396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffe0000000000; valaddr_reg:x3; val_offset:163188*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163188*0 + 3*636*FLEN/8, x4, x1, x2)

inst_54397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfff0000000000; valaddr_reg:x3; val_offset:163191*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163191*0 + 3*637*FLEN/8, x4, x1, x2)

inst_54398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfff8000000000; valaddr_reg:x3; val_offset:163194*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163194*0 + 3*638*FLEN/8, x4, x1, x2)

inst_54399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffc000000000; valaddr_reg:x3; val_offset:163197*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163197*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_54400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffe000000000; valaddr_reg:x3; val_offset:163200*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163200*0 + 3*640*FLEN/8, x4, x1, x2)

inst_54401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffff000000000; valaddr_reg:x3; val_offset:163203*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163203*0 + 3*641*FLEN/8, x4, x1, x2)

inst_54402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffff800000000; valaddr_reg:x3; val_offset:163206*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163206*0 + 3*642*FLEN/8, x4, x1, x2)

inst_54403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffc00000000; valaddr_reg:x3; val_offset:163209*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163209*0 + 3*643*FLEN/8, x4, x1, x2)

inst_54404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffe00000000; valaddr_reg:x3; val_offset:163212*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163212*0 + 3*644*FLEN/8, x4, x1, x2)

inst_54405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffff00000000; valaddr_reg:x3; val_offset:163215*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163215*0 + 3*645*FLEN/8, x4, x1, x2)

inst_54406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffff80000000; valaddr_reg:x3; val_offset:163218*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163218*0 + 3*646*FLEN/8, x4, x1, x2)

inst_54407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffc0000000; valaddr_reg:x3; val_offset:163221*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163221*0 + 3*647*FLEN/8, x4, x1, x2)

inst_54408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffe0000000; valaddr_reg:x3; val_offset:163224*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163224*0 + 3*648*FLEN/8, x4, x1, x2)

inst_54409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffff0000000; valaddr_reg:x3; val_offset:163227*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163227*0 + 3*649*FLEN/8, x4, x1, x2)

inst_54410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffff8000000; valaddr_reg:x3; val_offset:163230*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163230*0 + 3*650*FLEN/8, x4, x1, x2)

inst_54411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffc000000; valaddr_reg:x3; val_offset:163233*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163233*0 + 3*651*FLEN/8, x4, x1, x2)

inst_54412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffe000000; valaddr_reg:x3; val_offset:163236*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163236*0 + 3*652*FLEN/8, x4, x1, x2)

inst_54413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffff000000; valaddr_reg:x3; val_offset:163239*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163239*0 + 3*653*FLEN/8, x4, x1, x2)

inst_54414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffff800000; valaddr_reg:x3; val_offset:163242*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163242*0 + 3*654*FLEN/8, x4, x1, x2)

inst_54415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffc00000; valaddr_reg:x3; val_offset:163245*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163245*0 + 3*655*FLEN/8, x4, x1, x2)

inst_54416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffe00000; valaddr_reg:x3; val_offset:163248*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163248*0 + 3*656*FLEN/8, x4, x1, x2)

inst_54417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffff00000; valaddr_reg:x3; val_offset:163251*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163251*0 + 3*657*FLEN/8, x4, x1, x2)

inst_54418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffff80000; valaddr_reg:x3; val_offset:163254*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163254*0 + 3*658*FLEN/8, x4, x1, x2)

inst_54419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffc0000; valaddr_reg:x3; val_offset:163257*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163257*0 + 3*659*FLEN/8, x4, x1, x2)

inst_54420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffe0000; valaddr_reg:x3; val_offset:163260*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163260*0 + 3*660*FLEN/8, x4, x1, x2)

inst_54421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffff0000; valaddr_reg:x3; val_offset:163263*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163263*0 + 3*661*FLEN/8, x4, x1, x2)

inst_54422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffff8000; valaddr_reg:x3; val_offset:163266*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163266*0 + 3*662*FLEN/8, x4, x1, x2)

inst_54423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffc000; valaddr_reg:x3; val_offset:163269*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163269*0 + 3*663*FLEN/8, x4, x1, x2)

inst_54424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffe000; valaddr_reg:x3; val_offset:163272*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163272*0 + 3*664*FLEN/8, x4, x1, x2)

inst_54425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffff000; valaddr_reg:x3; val_offset:163275*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163275*0 + 3*665*FLEN/8, x4, x1, x2)

inst_54426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffff800; valaddr_reg:x3; val_offset:163278*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163278*0 + 3*666*FLEN/8, x4, x1, x2)

inst_54427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffffc00; valaddr_reg:x3; val_offset:163281*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163281*0 + 3*667*FLEN/8, x4, x1, x2)

inst_54428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffffe00; valaddr_reg:x3; val_offset:163284*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163284*0 + 3*668*FLEN/8, x4, x1, x2)

inst_54429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffff00; valaddr_reg:x3; val_offset:163287*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163287*0 + 3*669*FLEN/8, x4, x1, x2)

inst_54430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffff80; valaddr_reg:x3; val_offset:163290*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163290*0 + 3*670*FLEN/8, x4, x1, x2)

inst_54431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffffc0; valaddr_reg:x3; val_offset:163293*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163293*0 + 3*671*FLEN/8, x4, x1, x2)

inst_54432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffffe0; valaddr_reg:x3; val_offset:163296*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163296*0 + 3*672*FLEN/8, x4, x1, x2)

inst_54433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffffff0; valaddr_reg:x3; val_offset:163299*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163299*0 + 3*673*FLEN/8, x4, x1, x2)

inst_54434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffffff8; valaddr_reg:x3; val_offset:163302*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163302*0 + 3*674*FLEN/8, x4, x1, x2)

inst_54435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffffffc; valaddr_reg:x3; val_offset:163305*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163305*0 + 3*675*FLEN/8, x4, x1, x2)

inst_54436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dffffffffffffe; valaddr_reg:x3; val_offset:163308*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163308*0 + 3*676*FLEN/8, x4, x1, x2)

inst_54437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08edbaffc3398 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08edbaffc3398; op2val:0x8000;
op3val:0x82dfffffffffffff; valaddr_reg:x3; val_offset:163311*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163311*0 + 3*677*FLEN/8, x4, x1, x2)

inst_54438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000000000; valaddr_reg:x3; val_offset:163314*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163314*0 + 3*678*FLEN/8, x4, x1, x2)

inst_54439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000000001; valaddr_reg:x3; val_offset:163317*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163317*0 + 3*679*FLEN/8, x4, x1, x2)

inst_54440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000000003; valaddr_reg:x3; val_offset:163320*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163320*0 + 3*680*FLEN/8, x4, x1, x2)

inst_54441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000000007; valaddr_reg:x3; val_offset:163323*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163323*0 + 3*681*FLEN/8, x4, x1, x2)

inst_54442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000000000f; valaddr_reg:x3; val_offset:163326*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163326*0 + 3*682*FLEN/8, x4, x1, x2)

inst_54443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000000001f; valaddr_reg:x3; val_offset:163329*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163329*0 + 3*683*FLEN/8, x4, x1, x2)

inst_54444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000000003f; valaddr_reg:x3; val_offset:163332*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163332*0 + 3*684*FLEN/8, x4, x1, x2)

inst_54445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000000007f; valaddr_reg:x3; val_offset:163335*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163335*0 + 3*685*FLEN/8, x4, x1, x2)

inst_54446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000000000ff; valaddr_reg:x3; val_offset:163338*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163338*0 + 3*686*FLEN/8, x4, x1, x2)

inst_54447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000000001ff; valaddr_reg:x3; val_offset:163341*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163341*0 + 3*687*FLEN/8, x4, x1, x2)

inst_54448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000000003ff; valaddr_reg:x3; val_offset:163344*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163344*0 + 3*688*FLEN/8, x4, x1, x2)

inst_54449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000000007ff; valaddr_reg:x3; val_offset:163347*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163347*0 + 3*689*FLEN/8, x4, x1, x2)

inst_54450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000000fff; valaddr_reg:x3; val_offset:163350*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163350*0 + 3*690*FLEN/8, x4, x1, x2)

inst_54451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000001fff; valaddr_reg:x3; val_offset:163353*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163353*0 + 3*691*FLEN/8, x4, x1, x2)

inst_54452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000003fff; valaddr_reg:x3; val_offset:163356*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163356*0 + 3*692*FLEN/8, x4, x1, x2)

inst_54453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000007fff; valaddr_reg:x3; val_offset:163359*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163359*0 + 3*693*FLEN/8, x4, x1, x2)

inst_54454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000000ffff; valaddr_reg:x3; val_offset:163362*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163362*0 + 3*694*FLEN/8, x4, x1, x2)

inst_54455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000001ffff; valaddr_reg:x3; val_offset:163365*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163365*0 + 3*695*FLEN/8, x4, x1, x2)

inst_54456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000003ffff; valaddr_reg:x3; val_offset:163368*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163368*0 + 3*696*FLEN/8, x4, x1, x2)

inst_54457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000007ffff; valaddr_reg:x3; val_offset:163371*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163371*0 + 3*697*FLEN/8, x4, x1, x2)

inst_54458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000000fffff; valaddr_reg:x3; val_offset:163374*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163374*0 + 3*698*FLEN/8, x4, x1, x2)

inst_54459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000001fffff; valaddr_reg:x3; val_offset:163377*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163377*0 + 3*699*FLEN/8, x4, x1, x2)

inst_54460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000003fffff; valaddr_reg:x3; val_offset:163380*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163380*0 + 3*700*FLEN/8, x4, x1, x2)

inst_54461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000007fffff; valaddr_reg:x3; val_offset:163383*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163383*0 + 3*701*FLEN/8, x4, x1, x2)

inst_54462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000000ffffff; valaddr_reg:x3; val_offset:163386*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163386*0 + 3*702*FLEN/8, x4, x1, x2)

inst_54463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000001ffffff; valaddr_reg:x3; val_offset:163389*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163389*0 + 3*703*FLEN/8, x4, x1, x2)

inst_54464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000003ffffff; valaddr_reg:x3; val_offset:163392*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163392*0 + 3*704*FLEN/8, x4, x1, x2)

inst_54465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000007ffffff; valaddr_reg:x3; val_offset:163395*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163395*0 + 3*705*FLEN/8, x4, x1, x2)

inst_54466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000000fffffff; valaddr_reg:x3; val_offset:163398*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163398*0 + 3*706*FLEN/8, x4, x1, x2)

inst_54467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000001fffffff; valaddr_reg:x3; val_offset:163401*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163401*0 + 3*707*FLEN/8, x4, x1, x2)

inst_54468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000003fffffff; valaddr_reg:x3; val_offset:163404*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163404*0 + 3*708*FLEN/8, x4, x1, x2)

inst_54469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000007fffffff; valaddr_reg:x3; val_offset:163407*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163407*0 + 3*709*FLEN/8, x4, x1, x2)

inst_54470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00000ffffffff; valaddr_reg:x3; val_offset:163410*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163410*0 + 3*710*FLEN/8, x4, x1, x2)

inst_54471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00001ffffffff; valaddr_reg:x3; val_offset:163413*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163413*0 + 3*711*FLEN/8, x4, x1, x2)

inst_54472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00003ffffffff; valaddr_reg:x3; val_offset:163416*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163416*0 + 3*712*FLEN/8, x4, x1, x2)

inst_54473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00007ffffffff; valaddr_reg:x3; val_offset:163419*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163419*0 + 3*713*FLEN/8, x4, x1, x2)

inst_54474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0000fffffffff; valaddr_reg:x3; val_offset:163422*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163422*0 + 3*714*FLEN/8, x4, x1, x2)

inst_54475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0001fffffffff; valaddr_reg:x3; val_offset:163425*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163425*0 + 3*715*FLEN/8, x4, x1, x2)

inst_54476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0003fffffffff; valaddr_reg:x3; val_offset:163428*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163428*0 + 3*716*FLEN/8, x4, x1, x2)

inst_54477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0007fffffffff; valaddr_reg:x3; val_offset:163431*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163431*0 + 3*717*FLEN/8, x4, x1, x2)

inst_54478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba000ffffffffff; valaddr_reg:x3; val_offset:163434*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163434*0 + 3*718*FLEN/8, x4, x1, x2)

inst_54479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba001ffffffffff; valaddr_reg:x3; val_offset:163437*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163437*0 + 3*719*FLEN/8, x4, x1, x2)

inst_54480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba003ffffffffff; valaddr_reg:x3; val_offset:163440*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163440*0 + 3*720*FLEN/8, x4, x1, x2)

inst_54481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba007ffffffffff; valaddr_reg:x3; val_offset:163443*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163443*0 + 3*721*FLEN/8, x4, x1, x2)

inst_54482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba00fffffffffff; valaddr_reg:x3; val_offset:163446*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163446*0 + 3*722*FLEN/8, x4, x1, x2)

inst_54483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba01fffffffffff; valaddr_reg:x3; val_offset:163449*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163449*0 + 3*723*FLEN/8, x4, x1, x2)

inst_54484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba03fffffffffff; valaddr_reg:x3; val_offset:163452*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163452*0 + 3*724*FLEN/8, x4, x1, x2)

inst_54485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba07fffffffffff; valaddr_reg:x3; val_offset:163455*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163455*0 + 3*725*FLEN/8, x4, x1, x2)

inst_54486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba0ffffffffffff; valaddr_reg:x3; val_offset:163458*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163458*0 + 3*726*FLEN/8, x4, x1, x2)

inst_54487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba1ffffffffffff; valaddr_reg:x3; val_offset:163461*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163461*0 + 3*727*FLEN/8, x4, x1, x2)

inst_54488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba3ffffffffffff; valaddr_reg:x3; val_offset:163464*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163464*0 + 3*728*FLEN/8, x4, x1, x2)

inst_54489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba7ffffffffffff; valaddr_reg:x3; val_offset:163467*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163467*0 + 3*729*FLEN/8, x4, x1, x2)

inst_54490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3ba8000000000000; valaddr_reg:x3; val_offset:163470*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163470*0 + 3*730*FLEN/8, x4, x1, x2)

inst_54491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bac000000000000; valaddr_reg:x3; val_offset:163473*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163473*0 + 3*731*FLEN/8, x4, x1, x2)

inst_54492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bae000000000000; valaddr_reg:x3; val_offset:163476*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163476*0 + 3*732*FLEN/8, x4, x1, x2)

inst_54493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baf000000000000; valaddr_reg:x3; val_offset:163479*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163479*0 + 3*733*FLEN/8, x4, x1, x2)

inst_54494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baf800000000000; valaddr_reg:x3; val_offset:163482*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163482*0 + 3*734*FLEN/8, x4, x1, x2)

inst_54495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafc00000000000; valaddr_reg:x3; val_offset:163485*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163485*0 + 3*735*FLEN/8, x4, x1, x2)

inst_54496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafe00000000000; valaddr_reg:x3; val_offset:163488*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163488*0 + 3*736*FLEN/8, x4, x1, x2)

inst_54497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baff00000000000; valaddr_reg:x3; val_offset:163491*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163491*0 + 3*737*FLEN/8, x4, x1, x2)

inst_54498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baff80000000000; valaddr_reg:x3; val_offset:163494*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163494*0 + 3*738*FLEN/8, x4, x1, x2)

inst_54499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffc0000000000; valaddr_reg:x3; val_offset:163497*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163497*0 + 3*739*FLEN/8, x4, x1, x2)

inst_54500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffe0000000000; valaddr_reg:x3; val_offset:163500*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163500*0 + 3*740*FLEN/8, x4, x1, x2)

inst_54501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafff0000000000; valaddr_reg:x3; val_offset:163503*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163503*0 + 3*741*FLEN/8, x4, x1, x2)

inst_54502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafff8000000000; valaddr_reg:x3; val_offset:163506*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163506*0 + 3*742*FLEN/8, x4, x1, x2)

inst_54503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffc000000000; valaddr_reg:x3; val_offset:163509*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163509*0 + 3*743*FLEN/8, x4, x1, x2)

inst_54504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffe000000000; valaddr_reg:x3; val_offset:163512*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163512*0 + 3*744*FLEN/8, x4, x1, x2)

inst_54505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffff000000000; valaddr_reg:x3; val_offset:163515*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163515*0 + 3*745*FLEN/8, x4, x1, x2)

inst_54506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffff800000000; valaddr_reg:x3; val_offset:163518*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163518*0 + 3*746*FLEN/8, x4, x1, x2)

inst_54507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffc00000000; valaddr_reg:x3; val_offset:163521*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163521*0 + 3*747*FLEN/8, x4, x1, x2)

inst_54508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffe00000000; valaddr_reg:x3; val_offset:163524*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163524*0 + 3*748*FLEN/8, x4, x1, x2)

inst_54509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffff00000000; valaddr_reg:x3; val_offset:163527*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163527*0 + 3*749*FLEN/8, x4, x1, x2)

inst_54510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffff80000000; valaddr_reg:x3; val_offset:163530*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163530*0 + 3*750*FLEN/8, x4, x1, x2)

inst_54511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffc0000000; valaddr_reg:x3; val_offset:163533*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163533*0 + 3*751*FLEN/8, x4, x1, x2)

inst_54512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffe0000000; valaddr_reg:x3; val_offset:163536*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163536*0 + 3*752*FLEN/8, x4, x1, x2)

inst_54513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffff0000000; valaddr_reg:x3; val_offset:163539*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163539*0 + 3*753*FLEN/8, x4, x1, x2)

inst_54514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffff8000000; valaddr_reg:x3; val_offset:163542*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163542*0 + 3*754*FLEN/8, x4, x1, x2)

inst_54515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffffc000000; valaddr_reg:x3; val_offset:163545*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163545*0 + 3*755*FLEN/8, x4, x1, x2)

inst_54516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffffe000000; valaddr_reg:x3; val_offset:163548*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163548*0 + 3*756*FLEN/8, x4, x1, x2)

inst_54517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffff000000; valaddr_reg:x3; val_offset:163551*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163551*0 + 3*757*FLEN/8, x4, x1, x2)

inst_54518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffff800000; valaddr_reg:x3; val_offset:163554*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163554*0 + 3*758*FLEN/8, x4, x1, x2)

inst_54519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffffc00000; valaddr_reg:x3; val_offset:163557*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163557*0 + 3*759*FLEN/8, x4, x1, x2)

inst_54520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffffe00000; valaddr_reg:x3; val_offset:163560*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163560*0 + 3*760*FLEN/8, x4, x1, x2)

inst_54521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffffff00000; valaddr_reg:x3; val_offset:163563*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163563*0 + 3*761*FLEN/8, x4, x1, x2)

inst_54522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffffff80000; valaddr_reg:x3; val_offset:163566*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163566*0 + 3*762*FLEN/8, x4, x1, x2)

inst_54523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffffffc0000; valaddr_reg:x3; val_offset:163569*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163569*0 + 3*763*FLEN/8, x4, x1, x2)

inst_54524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3baffffffffe0000; valaddr_reg:x3; val_offset:163572*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163572*0 + 3*764*FLEN/8, x4, x1, x2)

inst_54525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffffff0000; valaddr_reg:x3; val_offset:163575*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163575*0 + 3*765*FLEN/8, x4, x1, x2)

inst_54526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffffff8000; valaddr_reg:x3; val_offset:163578*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163578*0 + 3*766*FLEN/8, x4, x1, x2)

inst_54527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x203 and fm2 == 0xed0e9b108bb5a and fs3 == 0 and fe3 == 0x3ba and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09d5da3d7b9db; op2val:0x203ed0e9b108bb5a;
op3val:0x3bafffffffffc000; valaddr_reg:x3; val_offset:163581*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163581*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014728192,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014793728,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014826496,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014842880,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014851072,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014855168,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014857216,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858240,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858752,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859008,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859136,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859200,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859232,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859248,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859256,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859260,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859262,64,FLEN)
NAN_BOXED(6890610743815987424,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859263,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118720,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118721,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118723,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118727,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118735,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118751,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118783,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118847,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865118975,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865119231,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865119743,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865120767,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865122815,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865126911,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865135103,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865151487,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865184255,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865249791,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865380863,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647865643007,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647866167295,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647867215871,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647869313023,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647873507327,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647881895935,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647898673151,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647932227583,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901647999336447,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901648133554175,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901648401989631,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901648938860543,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901650012602367,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901652160086015,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901656455053311,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901665044987903,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901682224857087,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901716584595455,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901785304072191,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255901922743025663,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255902197620932607,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255902747376746495,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255903846888374271,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255906045911629823,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255910443958140927,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255919240051163135,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255936832237207551,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4255972016609296383,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4256042385353474047,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4256183122841829375,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4256464597818540031,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4257027547771961343,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4258153447678803967,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4258153447678803968,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4259279347585646592,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4259842297539067904,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260123772515778560,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260264510004133888,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260334878748311552,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260370063120400384,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260387655306444800,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260396451399467008,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260400849445978112,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260403048469233664,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260404147980861440,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260404697736675328,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260404972614582272,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405110053535744,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405178773012480,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405213132750848,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405230312620032,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405238902554624,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405243197521920,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405245345005568,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405246418747392,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405246955618304,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247224053760,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247358271488,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247425380352,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247458934784,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247475712000,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247484100608,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247488294912,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247490392064,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247491440640,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247491964928,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492227072,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492358144,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492423680,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492456448,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492472832,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492481024,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492485120,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492487168,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492488192,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492488704,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492488960,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489088,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489152,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489184,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489200,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489208,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489212,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489214,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4260405247492489215,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890611024757904792,64,FLEN)
NAN_BOXED(2323654876717886896,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705408,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705409,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705411,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705415,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705423,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705439,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705471,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705535,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705663,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378705919,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378706431,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378707455,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378709503,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378713599,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378721791,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378738175,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378770943,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378836479,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465378967551,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465379229695,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465379753983,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465380802559,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465382899711,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465387094015,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465395482623,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465412259839,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465445814271,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465512923135,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465647140863,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232465915576319,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232466452447231,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232467526189055,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232469673672703,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232473968639999,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232482558574591,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232499738443775,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232534098182143,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232602817658879,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044232740256612351,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044233015134519295,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044233564890333183,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044234664401960959,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044236863425216511,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044241261471727615,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044250057564749823,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044267649750794239,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044302834122883071,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044373202867060735,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044513940355416063,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4044795415332126719,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4045358365285548031,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4046484265192390655,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4046484265192390656,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4047610165099233280,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048173115052654592,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048454590029365248,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048595327517720576,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048665696261898240,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048700880633987072,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048718472820031488,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048727268913053696,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048731666959564800,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048733865982820352,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048734965494448128,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048735515250262016,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048735790128168960,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048735927567122432,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048735996286599168,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736030646337536,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736047826206720,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736056416141312,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736060711108608,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736062858592256,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736063932334080,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064469204992,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064737640448,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064871858176,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064938967040,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064972521472,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064989298688,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736064997687296,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065001881600,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065003978752,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065005027328,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065005551616,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065005813760,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065005944832,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006010368,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006043136,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006059520,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006067712,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006071808,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006073856,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006074880,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075392,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075648,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075776,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075840,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075872,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075888,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075896,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075900,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075902,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4048736065006075903,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890640760716121332,64,FLEN)
NAN_BOXED(2323598413665645719,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153088,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153089,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153091,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153095,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153103,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153119,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153151,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153215,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153343,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153599,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360154111,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360155135,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360157183,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360161279,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360169471,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360185855,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360218623,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360284159,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360415231,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360677375,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016361201663,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016362250239,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016364347391,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016368541695,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016376930303,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016393707519,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016427261951,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016494370815,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016628588543,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016897023999,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070017433894911,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070018507636735,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070020655120383,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070024950087679,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070033540022271,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070050719891455,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070085079629823,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070153799106559,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070291238060031,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070566115966975,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471071115871780863,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471072215383408639,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471074414406664191,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471078812453175295,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471087608546197503,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471105200732241919,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471140385104330751,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471210753848508415,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471351491336863743,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471632966313574399,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9472195916266995711,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838335,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838336,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9474447716080680960,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475010666034102272,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475292141010812928,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475432878499168256,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475503247243345920,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475538431615434752,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475556023801479168,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475564819894501376,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475569217941012480,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475571416964268032,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475572516475895808,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573066231709696,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573341109616640,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573478548570112,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573547268046848,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573581627785216,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573598807654400,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573607397588992,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573611692556288,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573613840039936,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573614913781760,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615450652672,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615719088128,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615853305856,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615920414720,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615953969152,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615970746368,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615979134976,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615983329280,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615985426432,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986475008,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986999296,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987261440,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987392512,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987458048,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987490816,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987507200,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987515392,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987519488,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987521536,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987522560,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523072,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523328,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523456,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523520,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523552,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523568,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523576,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523580,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523582,64,FLEN)
NAN_BOXED(6890655197476269782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523583,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481216,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481217,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481219,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481223,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481231,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481247,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481279,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481343,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481471,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233481727,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233482239,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233483263,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233485311,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233489407,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233497599,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233513983,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233546751,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233612287,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502233743359,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502234005503,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502234529791,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502235578367,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502237675519,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502241869823,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502250258431,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502267035647,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502300590079,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502367698943,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502501916671,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604502770352127,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604503307223039,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604504380964863,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604506528448511,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604510823415807,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604519413350399,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604536593219583,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604570952957951,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604639672434687,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267604777111388159,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267605051989295103,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267605601745108991,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267606701256736767,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267608900279992319,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267613298326503423,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267622094419525631,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267639686605570047,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267674870977658879,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267745239721836543,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13267885977210191871,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13268167452186902527,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13268730402140323839,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13269856302047166463,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13269856302047166464,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13270982201954009088,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13271545151907430400,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13271826626884141056,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13271967364372496384,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272037733116674048,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272072917488762880,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272090509674807296,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272099305767829504,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272103703814340608,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272105902837596160,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272107002349223936,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272107552105037824,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272107826982944768,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272107964421898240,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108033141374976,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108067501113344,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108084680982528,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108093270917120,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108097565884416,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108099713368064,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108100787109888,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101323980800,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101592416256,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101726633984,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101793742848,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101827297280,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101844074496,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101852463104,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101856657408,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101858754560,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101859803136,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860327424,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860589568,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860720640,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860786176,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860818944,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860835328,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860843520,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860847616,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860849664,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860850688,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851200,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851456,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851584,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851648,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851680,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851696,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851704,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851708,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851710,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13272108101860851711,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890656060927807807,64,FLEN)
NAN_BOXED(11515416482115383297,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448128,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448129,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448131,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448135,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448143,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448159,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448191,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448255,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448383,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448639,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086449151,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086450175,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086452223,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086456319,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086464511,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086480895,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086513663,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086579199,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086710271,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086972415,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020087496703,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020088545279,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020090642431,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020094836735,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020103225343,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020120002559,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020153556991,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020220665855,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020354883583,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020623319039,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034021160189951,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034022233931775,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034024381415423,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034028676382719,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034037266317311,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034054446186495,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034088805924863,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034157525401599,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034294964355071,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034569842262015,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426035119598075903,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426036219109703679,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426038418132959231,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426042816179470335,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426051612272492543,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426069204458536959,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426104388830625791,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426174757574803455,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426315495063158783,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426596970039869439,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9427159919993290751,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9428285819900133375,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9428285819900133376,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9429411719806976000,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9429974669760397312,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430256144737107968,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430396882225463296,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430467250969640960,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430502435341729792,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430520027527774208,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430528823620796416,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430533221667307520,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430535420690563072,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430536520202190848,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537069958004736,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537344835911680,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537482274865152,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537550994341888,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537585354080256,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537602533949440,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537611123884032,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537615418851328,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537617566334976,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537618640076800,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619176947712,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619445383168,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619579600896,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619646709760,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619680264192,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619697041408,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619705430016,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619709624320,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619711721472,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619712770048,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713294336,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713556480,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713687552,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713753088,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713785856,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713802240,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713810432,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713814528,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713816576,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713817600,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818112,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818368,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818496,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818560,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818592,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818608,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818616,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818620,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818622,64,FLEN)
NAN_BOXED(6890664504078381976,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818623,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453184,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453185,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453187,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453191,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453199,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453215,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453247,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453311,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453439,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511453695,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511454207,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511455231,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511457279,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511461375,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511469567,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511485951,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511518719,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511584255,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511715327,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044511977471,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044512501759,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044513550335,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044515647487,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044519841791,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044528230399,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044545007615,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044578562047,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044645670911,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434044779888639,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434045048324095,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434045585195007,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434046658936831,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434048806420479,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434053101387775,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434061691322367,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434078871191551,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434113230929919,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434181950406655,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434319389360127,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296434594267267071,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296435144023080959,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296436243534708735,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296438442557964287,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296442840604475391,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296451636697497599,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296469228883542015,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296504413255630847,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296574781999808511,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296715519488163839,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4296996994464874495,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4297559944418295807,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4298685844325138431,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4298685844325138432,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4299811744231981056,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300374694185402368,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300656169162113024,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300796906650468352,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300867275394646016,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300902459766734848,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300920051952779264,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300928848045801472,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300933246092312576,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300935445115568128,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300936544627195904,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937094383009792,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937369260916736,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937506699870208,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937575419346944,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937609779085312,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937626958954496,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937635548889088,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937639843856384,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937641991340032,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937643065081856,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937643601952768,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937643870388224,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644004605952,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644071714816,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644105269248,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644122046464,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644130435072,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644134629376,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644136726528,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644137775104,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644138299392,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644138561536,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644138692608,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644138758144,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644138790912,64,FLEN)
NAN_BOXED(6890680455383202267,64,FLEN)
NAN_BOXED(2323524159885851482,64,FLEN)
NAN_BOXED(4300937644138807296,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
