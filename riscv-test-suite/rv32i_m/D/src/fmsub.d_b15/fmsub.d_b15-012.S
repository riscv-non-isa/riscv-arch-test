
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_8448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000000003f; valaddr_reg:x3; val_offset:25344*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25344*0 + 3*0*FLEN/8, x4, x1, x2)

inst_8449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000000007f; valaddr_reg:x3; val_offset:25347*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25347*0 + 3*1*FLEN/8, x4, x1, x2)

inst_8450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000000000ff; valaddr_reg:x3; val_offset:25350*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25350*0 + 3*2*FLEN/8, x4, x1, x2)

inst_8451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000000001ff; valaddr_reg:x3; val_offset:25353*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25353*0 + 3*3*FLEN/8, x4, x1, x2)

inst_8452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000000003ff; valaddr_reg:x3; val_offset:25356*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25356*0 + 3*4*FLEN/8, x4, x1, x2)

inst_8453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000000007ff; valaddr_reg:x3; val_offset:25359*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25359*0 + 3*5*FLEN/8, x4, x1, x2)

inst_8454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000000000fff; valaddr_reg:x3; val_offset:25362*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25362*0 + 3*6*FLEN/8, x4, x1, x2)

inst_8455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000000001fff; valaddr_reg:x3; val_offset:25365*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25365*0 + 3*7*FLEN/8, x4, x1, x2)

inst_8456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000000003fff; valaddr_reg:x3; val_offset:25368*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25368*0 + 3*8*FLEN/8, x4, x1, x2)

inst_8457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000000007fff; valaddr_reg:x3; val_offset:25371*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25371*0 + 3*9*FLEN/8, x4, x1, x2)

inst_8458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000000ffff; valaddr_reg:x3; val_offset:25374*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25374*0 + 3*10*FLEN/8, x4, x1, x2)

inst_8459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000001ffff; valaddr_reg:x3; val_offset:25377*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25377*0 + 3*11*FLEN/8, x4, x1, x2)

inst_8460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000003ffff; valaddr_reg:x3; val_offset:25380*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25380*0 + 3*12*FLEN/8, x4, x1, x2)

inst_8461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000007ffff; valaddr_reg:x3; val_offset:25383*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25383*0 + 3*13*FLEN/8, x4, x1, x2)

inst_8462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000000fffff; valaddr_reg:x3; val_offset:25386*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25386*0 + 3*14*FLEN/8, x4, x1, x2)

inst_8463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000001fffff; valaddr_reg:x3; val_offset:25389*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25389*0 + 3*15*FLEN/8, x4, x1, x2)

inst_8464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000003fffff; valaddr_reg:x3; val_offset:25392*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25392*0 + 3*16*FLEN/8, x4, x1, x2)

inst_8465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000007fffff; valaddr_reg:x3; val_offset:25395*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25395*0 + 3*17*FLEN/8, x4, x1, x2)

inst_8466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000000ffffff; valaddr_reg:x3; val_offset:25398*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25398*0 + 3*18*FLEN/8, x4, x1, x2)

inst_8467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000001ffffff; valaddr_reg:x3; val_offset:25401*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25401*0 + 3*19*FLEN/8, x4, x1, x2)

inst_8468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000003ffffff; valaddr_reg:x3; val_offset:25404*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25404*0 + 3*20*FLEN/8, x4, x1, x2)

inst_8469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000007ffffff; valaddr_reg:x3; val_offset:25407*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25407*0 + 3*21*FLEN/8, x4, x1, x2)

inst_8470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000000fffffff; valaddr_reg:x3; val_offset:25410*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25410*0 + 3*22*FLEN/8, x4, x1, x2)

inst_8471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000001fffffff; valaddr_reg:x3; val_offset:25413*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25413*0 + 3*23*FLEN/8, x4, x1, x2)

inst_8472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000003fffffff; valaddr_reg:x3; val_offset:25416*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25416*0 + 3*24*FLEN/8, x4, x1, x2)

inst_8473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000007fffffff; valaddr_reg:x3; val_offset:25419*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25419*0 + 3*25*FLEN/8, x4, x1, x2)

inst_8474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00000ffffffff; valaddr_reg:x3; val_offset:25422*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25422*0 + 3*26*FLEN/8, x4, x1, x2)

inst_8475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00001ffffffff; valaddr_reg:x3; val_offset:25425*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25425*0 + 3*27*FLEN/8, x4, x1, x2)

inst_8476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00003ffffffff; valaddr_reg:x3; val_offset:25428*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25428*0 + 3*28*FLEN/8, x4, x1, x2)

inst_8477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00007ffffffff; valaddr_reg:x3; val_offset:25431*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25431*0 + 3*29*FLEN/8, x4, x1, x2)

inst_8478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0000fffffffff; valaddr_reg:x3; val_offset:25434*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25434*0 + 3*30*FLEN/8, x4, x1, x2)

inst_8479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0001fffffffff; valaddr_reg:x3; val_offset:25437*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25437*0 + 3*31*FLEN/8, x4, x1, x2)

inst_8480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0003fffffffff; valaddr_reg:x3; val_offset:25440*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25440*0 + 3*32*FLEN/8, x4, x1, x2)

inst_8481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0007fffffffff; valaddr_reg:x3; val_offset:25443*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25443*0 + 3*33*FLEN/8, x4, x1, x2)

inst_8482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da000ffffffffff; valaddr_reg:x3; val_offset:25446*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25446*0 + 3*34*FLEN/8, x4, x1, x2)

inst_8483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da001ffffffffff; valaddr_reg:x3; val_offset:25449*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25449*0 + 3*35*FLEN/8, x4, x1, x2)

inst_8484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da003ffffffffff; valaddr_reg:x3; val_offset:25452*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25452*0 + 3*36*FLEN/8, x4, x1, x2)

inst_8485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da007ffffffffff; valaddr_reg:x3; val_offset:25455*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25455*0 + 3*37*FLEN/8, x4, x1, x2)

inst_8486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da00fffffffffff; valaddr_reg:x3; val_offset:25458*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25458*0 + 3*38*FLEN/8, x4, x1, x2)

inst_8487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da01fffffffffff; valaddr_reg:x3; val_offset:25461*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25461*0 + 3*39*FLEN/8, x4, x1, x2)

inst_8488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da03fffffffffff; valaddr_reg:x3; val_offset:25464*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25464*0 + 3*40*FLEN/8, x4, x1, x2)

inst_8489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da07fffffffffff; valaddr_reg:x3; val_offset:25467*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25467*0 + 3*41*FLEN/8, x4, x1, x2)

inst_8490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da0ffffffffffff; valaddr_reg:x3; val_offset:25470*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25470*0 + 3*42*FLEN/8, x4, x1, x2)

inst_8491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da1ffffffffffff; valaddr_reg:x3; val_offset:25473*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25473*0 + 3*43*FLEN/8, x4, x1, x2)

inst_8492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da3ffffffffffff; valaddr_reg:x3; val_offset:25476*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25476*0 + 3*44*FLEN/8, x4, x1, x2)

inst_8493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da7ffffffffffff; valaddr_reg:x3; val_offset:25479*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25479*0 + 3*45*FLEN/8, x4, x1, x2)

inst_8494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3da8000000000000; valaddr_reg:x3; val_offset:25482*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25482*0 + 3*46*FLEN/8, x4, x1, x2)

inst_8495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dac000000000000; valaddr_reg:x3; val_offset:25485*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25485*0 + 3*47*FLEN/8, x4, x1, x2)

inst_8496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dae000000000000; valaddr_reg:x3; val_offset:25488*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25488*0 + 3*48*FLEN/8, x4, x1, x2)

inst_8497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daf000000000000; valaddr_reg:x3; val_offset:25491*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25491*0 + 3*49*FLEN/8, x4, x1, x2)

inst_8498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daf800000000000; valaddr_reg:x3; val_offset:25494*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25494*0 + 3*50*FLEN/8, x4, x1, x2)

inst_8499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafc00000000000; valaddr_reg:x3; val_offset:25497*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25497*0 + 3*51*FLEN/8, x4, x1, x2)

inst_8500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafe00000000000; valaddr_reg:x3; val_offset:25500*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25500*0 + 3*52*FLEN/8, x4, x1, x2)

inst_8501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daff00000000000; valaddr_reg:x3; val_offset:25503*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25503*0 + 3*53*FLEN/8, x4, x1, x2)

inst_8502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daff80000000000; valaddr_reg:x3; val_offset:25506*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25506*0 + 3*54*FLEN/8, x4, x1, x2)

inst_8503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffc0000000000; valaddr_reg:x3; val_offset:25509*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25509*0 + 3*55*FLEN/8, x4, x1, x2)

inst_8504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffe0000000000; valaddr_reg:x3; val_offset:25512*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25512*0 + 3*56*FLEN/8, x4, x1, x2)

inst_8505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafff0000000000; valaddr_reg:x3; val_offset:25515*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25515*0 + 3*57*FLEN/8, x4, x1, x2)

inst_8506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafff8000000000; valaddr_reg:x3; val_offset:25518*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25518*0 + 3*58*FLEN/8, x4, x1, x2)

inst_8507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffc000000000; valaddr_reg:x3; val_offset:25521*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25521*0 + 3*59*FLEN/8, x4, x1, x2)

inst_8508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffe000000000; valaddr_reg:x3; val_offset:25524*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25524*0 + 3*60*FLEN/8, x4, x1, x2)

inst_8509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffff000000000; valaddr_reg:x3; val_offset:25527*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25527*0 + 3*61*FLEN/8, x4, x1, x2)

inst_8510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffff800000000; valaddr_reg:x3; val_offset:25530*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25530*0 + 3*62*FLEN/8, x4, x1, x2)

inst_8511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffc00000000; valaddr_reg:x3; val_offset:25533*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25533*0 + 3*63*FLEN/8, x4, x1, x2)

inst_8512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffe00000000; valaddr_reg:x3; val_offset:25536*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25536*0 + 3*64*FLEN/8, x4, x1, x2)

inst_8513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffff00000000; valaddr_reg:x3; val_offset:25539*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25539*0 + 3*65*FLEN/8, x4, x1, x2)

inst_8514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffff80000000; valaddr_reg:x3; val_offset:25542*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25542*0 + 3*66*FLEN/8, x4, x1, x2)

inst_8515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffc0000000; valaddr_reg:x3; val_offset:25545*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25545*0 + 3*67*FLEN/8, x4, x1, x2)

inst_8516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffe0000000; valaddr_reg:x3; val_offset:25548*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25548*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffff0000000; valaddr_reg:x3; val_offset:25551*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25551*0 + 3*69*FLEN/8, x4, x1, x2)

inst_8518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffff8000000; valaddr_reg:x3; val_offset:25554*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25554*0 + 3*70*FLEN/8, x4, x1, x2)

inst_8519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffc000000; valaddr_reg:x3; val_offset:25557*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25557*0 + 3*71*FLEN/8, x4, x1, x2)

inst_8520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffe000000; valaddr_reg:x3; val_offset:25560*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25560*0 + 3*72*FLEN/8, x4, x1, x2)

inst_8521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffff000000; valaddr_reg:x3; val_offset:25563*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25563*0 + 3*73*FLEN/8, x4, x1, x2)

inst_8522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffff800000; valaddr_reg:x3; val_offset:25566*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25566*0 + 3*74*FLEN/8, x4, x1, x2)

inst_8523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffc00000; valaddr_reg:x3; val_offset:25569*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25569*0 + 3*75*FLEN/8, x4, x1, x2)

inst_8524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffe00000; valaddr_reg:x3; val_offset:25572*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25572*0 + 3*76*FLEN/8, x4, x1, x2)

inst_8525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffff00000; valaddr_reg:x3; val_offset:25575*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25575*0 + 3*77*FLEN/8, x4, x1, x2)

inst_8526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffff80000; valaddr_reg:x3; val_offset:25578*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25578*0 + 3*78*FLEN/8, x4, x1, x2)

inst_8527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffc0000; valaddr_reg:x3; val_offset:25581*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25581*0 + 3*79*FLEN/8, x4, x1, x2)

inst_8528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffe0000; valaddr_reg:x3; val_offset:25584*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25584*0 + 3*80*FLEN/8, x4, x1, x2)

inst_8529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffff0000; valaddr_reg:x3; val_offset:25587*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25587*0 + 3*81*FLEN/8, x4, x1, x2)

inst_8530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffff8000; valaddr_reg:x3; val_offset:25590*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25590*0 + 3*82*FLEN/8, x4, x1, x2)

inst_8531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffc000; valaddr_reg:x3; val_offset:25593*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25593*0 + 3*83*FLEN/8, x4, x1, x2)

inst_8532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffe000; valaddr_reg:x3; val_offset:25596*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25596*0 + 3*84*FLEN/8, x4, x1, x2)

inst_8533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffff000; valaddr_reg:x3; val_offset:25599*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25599*0 + 3*85*FLEN/8, x4, x1, x2)

inst_8534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffff800; valaddr_reg:x3; val_offset:25602*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25602*0 + 3*86*FLEN/8, x4, x1, x2)

inst_8535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffffc00; valaddr_reg:x3; val_offset:25605*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25605*0 + 3*87*FLEN/8, x4, x1, x2)

inst_8536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffffe00; valaddr_reg:x3; val_offset:25608*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25608*0 + 3*88*FLEN/8, x4, x1, x2)

inst_8537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffff00; valaddr_reg:x3; val_offset:25611*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25611*0 + 3*89*FLEN/8, x4, x1, x2)

inst_8538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffff80; valaddr_reg:x3; val_offset:25614*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25614*0 + 3*90*FLEN/8, x4, x1, x2)

inst_8539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffffc0; valaddr_reg:x3; val_offset:25617*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25617*0 + 3*91*FLEN/8, x4, x1, x2)

inst_8540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffffe0; valaddr_reg:x3; val_offset:25620*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25620*0 + 3*92*FLEN/8, x4, x1, x2)

inst_8541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffffff0; valaddr_reg:x3; val_offset:25623*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25623*0 + 3*93*FLEN/8, x4, x1, x2)

inst_8542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffffff8; valaddr_reg:x3; val_offset:25626*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25626*0 + 3*94*FLEN/8, x4, x1, x2)

inst_8543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffffffc; valaddr_reg:x3; val_offset:25629*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25629*0 + 3*95*FLEN/8, x4, x1, x2)

inst_8544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3daffffffffffffe; valaddr_reg:x3; val_offset:25632*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25632*0 + 3*96*FLEN/8, x4, x1, x2)

inst_8545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3dafffffffffffff; valaddr_reg:x3; val_offset:25635*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25635*0 + 3*97*FLEN/8, x4, x1, x2)

inst_8546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:25638*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25638*0 + 3*98*FLEN/8, x4, x1, x2)

inst_8547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:25641*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25641*0 + 3*99*FLEN/8, x4, x1, x2)

inst_8548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:25644*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25644*0 + 3*100*FLEN/8, x4, x1, x2)

inst_8549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:25647*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25647*0 + 3*101*FLEN/8, x4, x1, x2)

inst_8550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:25650*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25650*0 + 3*102*FLEN/8, x4, x1, x2)

inst_8551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:25653*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25653*0 + 3*103*FLEN/8, x4, x1, x2)

inst_8552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:25656*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25656*0 + 3*104*FLEN/8, x4, x1, x2)

inst_8553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:25659*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25659*0 + 3*105*FLEN/8, x4, x1, x2)

inst_8554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:25662*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25662*0 + 3*106*FLEN/8, x4, x1, x2)

inst_8555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:25665*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25665*0 + 3*107*FLEN/8, x4, x1, x2)

inst_8556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:25668*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25668*0 + 3*108*FLEN/8, x4, x1, x2)

inst_8557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:25671*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25671*0 + 3*109*FLEN/8, x4, x1, x2)

inst_8558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:25674*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25674*0 + 3*110*FLEN/8, x4, x1, x2)

inst_8559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:25677*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25677*0 + 3*111*FLEN/8, x4, x1, x2)

inst_8560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:25680*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25680*0 + 3*112*FLEN/8, x4, x1, x2)

inst_8561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:25683*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25683*0 + 3*113*FLEN/8, x4, x1, x2)

inst_8562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:25686*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25686*0 + 3*114*FLEN/8, x4, x1, x2)

inst_8563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:25689*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25689*0 + 3*115*FLEN/8, x4, x1, x2)

inst_8564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:25692*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25692*0 + 3*116*FLEN/8, x4, x1, x2)

inst_8565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:25695*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25695*0 + 3*117*FLEN/8, x4, x1, x2)

inst_8566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:25698*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25698*0 + 3*118*FLEN/8, x4, x1, x2)

inst_8567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x8d766d998854a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f749c59b3bab527; op2val:0x2068d766d998854a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:25701*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25701*0 + 3*119*FLEN/8, x4, x1, x2)

inst_8568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:25704*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25704*0 + 3*120*FLEN/8, x4, x1, x2)

inst_8569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:25707*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25707*0 + 3*121*FLEN/8, x4, x1, x2)

inst_8570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:25710*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25710*0 + 3*122*FLEN/8, x4, x1, x2)

inst_8571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:25713*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25713*0 + 3*123*FLEN/8, x4, x1, x2)

inst_8572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:25716*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25716*0 + 3*124*FLEN/8, x4, x1, x2)

inst_8573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:25719*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25719*0 + 3*125*FLEN/8, x4, x1, x2)

inst_8574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:25722*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25722*0 + 3*126*FLEN/8, x4, x1, x2)

inst_8575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:25725*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25725*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_8576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:25728*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25728*0 + 3*128*FLEN/8, x4, x1, x2)

inst_8577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:25731*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25731*0 + 3*129*FLEN/8, x4, x1, x2)

inst_8578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:25734*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25734*0 + 3*130*FLEN/8, x4, x1, x2)

inst_8579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:25737*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25737*0 + 3*131*FLEN/8, x4, x1, x2)

inst_8580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:25740*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25740*0 + 3*132*FLEN/8, x4, x1, x2)

inst_8581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:25743*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25743*0 + 3*133*FLEN/8, x4, x1, x2)

inst_8582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:25746*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25746*0 + 3*134*FLEN/8, x4, x1, x2)

inst_8583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:25749*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25749*0 + 3*135*FLEN/8, x4, x1, x2)

inst_8584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:25752*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25752*0 + 3*136*FLEN/8, x4, x1, x2)

inst_8585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:25755*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25755*0 + 3*137*FLEN/8, x4, x1, x2)

inst_8586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:25758*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25758*0 + 3*138*FLEN/8, x4, x1, x2)

inst_8587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:25761*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25761*0 + 3*139*FLEN/8, x4, x1, x2)

inst_8588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:25764*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25764*0 + 3*140*FLEN/8, x4, x1, x2)

inst_8589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:25767*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25767*0 + 3*141*FLEN/8, x4, x1, x2)

inst_8590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:25770*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25770*0 + 3*142*FLEN/8, x4, x1, x2)

inst_8591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:25773*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25773*0 + 3*143*FLEN/8, x4, x1, x2)

inst_8592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:25776*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25776*0 + 3*144*FLEN/8, x4, x1, x2)

inst_8593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:25779*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25779*0 + 3*145*FLEN/8, x4, x1, x2)

inst_8594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:25782*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25782*0 + 3*146*FLEN/8, x4, x1, x2)

inst_8595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:25785*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25785*0 + 3*147*FLEN/8, x4, x1, x2)

inst_8596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:25788*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25788*0 + 3*148*FLEN/8, x4, x1, x2)

inst_8597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:25791*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25791*0 + 3*149*FLEN/8, x4, x1, x2)

inst_8598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:25794*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25794*0 + 3*150*FLEN/8, x4, x1, x2)

inst_8599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:25797*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25797*0 + 3*151*FLEN/8, x4, x1, x2)

inst_8600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:25800*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25800*0 + 3*152*FLEN/8, x4, x1, x2)

inst_8601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:25803*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25803*0 + 3*153*FLEN/8, x4, x1, x2)

inst_8602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:25806*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25806*0 + 3*154*FLEN/8, x4, x1, x2)

inst_8603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:25809*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25809*0 + 3*155*FLEN/8, x4, x1, x2)

inst_8604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:25812*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25812*0 + 3*156*FLEN/8, x4, x1, x2)

inst_8605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:25815*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25815*0 + 3*157*FLEN/8, x4, x1, x2)

inst_8606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:25818*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25818*0 + 3*158*FLEN/8, x4, x1, x2)

inst_8607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:25821*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25821*0 + 3*159*FLEN/8, x4, x1, x2)

inst_8608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:25824*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25824*0 + 3*160*FLEN/8, x4, x1, x2)

inst_8609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:25827*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25827*0 + 3*161*FLEN/8, x4, x1, x2)

inst_8610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:25830*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25830*0 + 3*162*FLEN/8, x4, x1, x2)

inst_8611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:25833*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25833*0 + 3*163*FLEN/8, x4, x1, x2)

inst_8612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:25836*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25836*0 + 3*164*FLEN/8, x4, x1, x2)

inst_8613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:25839*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25839*0 + 3*165*FLEN/8, x4, x1, x2)

inst_8614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:25842*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25842*0 + 3*166*FLEN/8, x4, x1, x2)

inst_8615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:25845*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25845*0 + 3*167*FLEN/8, x4, x1, x2)

inst_8616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:25848*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25848*0 + 3*168*FLEN/8, x4, x1, x2)

inst_8617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:25851*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25851*0 + 3*169*FLEN/8, x4, x1, x2)

inst_8618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:25854*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25854*0 + 3*170*FLEN/8, x4, x1, x2)

inst_8619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:25857*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25857*0 + 3*171*FLEN/8, x4, x1, x2)

inst_8620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:25860*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25860*0 + 3*172*FLEN/8, x4, x1, x2)

inst_8621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:25863*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25863*0 + 3*173*FLEN/8, x4, x1, x2)

inst_8622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:25866*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25866*0 + 3*174*FLEN/8, x4, x1, x2)

inst_8623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:25869*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25869*0 + 3*175*FLEN/8, x4, x1, x2)

inst_8624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:25872*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25872*0 + 3*176*FLEN/8, x4, x1, x2)

inst_8625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:25875*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25875*0 + 3*177*FLEN/8, x4, x1, x2)

inst_8626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:25878*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25878*0 + 3*178*FLEN/8, x4, x1, x2)

inst_8627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:25881*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25881*0 + 3*179*FLEN/8, x4, x1, x2)

inst_8628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:25884*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25884*0 + 3*180*FLEN/8, x4, x1, x2)

inst_8629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:25887*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25887*0 + 3*181*FLEN/8, x4, x1, x2)

inst_8630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:25890*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25890*0 + 3*182*FLEN/8, x4, x1, x2)

inst_8631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:25893*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25893*0 + 3*183*FLEN/8, x4, x1, x2)

inst_8632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:25896*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25896*0 + 3*184*FLEN/8, x4, x1, x2)

inst_8633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:25899*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25899*0 + 3*185*FLEN/8, x4, x1, x2)

inst_8634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:25902*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25902*0 + 3*186*FLEN/8, x4, x1, x2)

inst_8635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:25905*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25905*0 + 3*187*FLEN/8, x4, x1, x2)

inst_8636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:25908*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25908*0 + 3*188*FLEN/8, x4, x1, x2)

inst_8637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:25911*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25911*0 + 3*189*FLEN/8, x4, x1, x2)

inst_8638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:25914*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25914*0 + 3*190*FLEN/8, x4, x1, x2)

inst_8639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:25917*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25917*0 + 3*191*FLEN/8, x4, x1, x2)

inst_8640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:25920*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25920*0 + 3*192*FLEN/8, x4, x1, x2)

inst_8641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:25923*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25923*0 + 3*193*FLEN/8, x4, x1, x2)

inst_8642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:25926*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25926*0 + 3*194*FLEN/8, x4, x1, x2)

inst_8643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:25929*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25929*0 + 3*195*FLEN/8, x4, x1, x2)

inst_8644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:25932*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25932*0 + 3*196*FLEN/8, x4, x1, x2)

inst_8645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:25935*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25935*0 + 3*197*FLEN/8, x4, x1, x2)

inst_8646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:25938*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25938*0 + 3*198*FLEN/8, x4, x1, x2)

inst_8647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:25941*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25941*0 + 3*199*FLEN/8, x4, x1, x2)

inst_8648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:25944*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25944*0 + 3*200*FLEN/8, x4, x1, x2)

inst_8649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:25947*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25947*0 + 3*201*FLEN/8, x4, x1, x2)

inst_8650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:25950*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25950*0 + 3*202*FLEN/8, x4, x1, x2)

inst_8651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:25953*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25953*0 + 3*203*FLEN/8, x4, x1, x2)

inst_8652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:25956*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25956*0 + 3*204*FLEN/8, x4, x1, x2)

inst_8653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:25959*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25959*0 + 3*205*FLEN/8, x4, x1, x2)

inst_8654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:25962*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25962*0 + 3*206*FLEN/8, x4, x1, x2)

inst_8655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:25965*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25965*0 + 3*207*FLEN/8, x4, x1, x2)

inst_8656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:25968*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25968*0 + 3*208*FLEN/8, x4, x1, x2)

inst_8657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:25971*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25971*0 + 3*209*FLEN/8, x4, x1, x2)

inst_8658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:25974*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25974*0 + 3*210*FLEN/8, x4, x1, x2)

inst_8659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:25977*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25977*0 + 3*211*FLEN/8, x4, x1, x2)

inst_8660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:25980*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25980*0 + 3*212*FLEN/8, x4, x1, x2)

inst_8661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:25983*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25983*0 + 3*213*FLEN/8, x4, x1, x2)

inst_8662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:25986*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25986*0 + 3*214*FLEN/8, x4, x1, x2)

inst_8663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:25989*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25989*0 + 3*215*FLEN/8, x4, x1, x2)

inst_8664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:25992*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25992*0 + 3*216*FLEN/8, x4, x1, x2)

inst_8665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:25995*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25995*0 + 3*217*FLEN/8, x4, x1, x2)

inst_8666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:25998*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25998*0 + 3*218*FLEN/8, x4, x1, x2)

inst_8667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:26001*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26001*0 + 3*219*FLEN/8, x4, x1, x2)

inst_8668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:26004*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26004*0 + 3*220*FLEN/8, x4, x1, x2)

inst_8669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:26007*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26007*0 + 3*221*FLEN/8, x4, x1, x2)

inst_8670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:26010*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26010*0 + 3*222*FLEN/8, x4, x1, x2)

inst_8671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:26013*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26013*0 + 3*223*FLEN/8, x4, x1, x2)

inst_8672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:26016*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26016*0 + 3*224*FLEN/8, x4, x1, x2)

inst_8673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:26019*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26019*0 + 3*225*FLEN/8, x4, x1, x2)

inst_8674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:26022*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26022*0 + 3*226*FLEN/8, x4, x1, x2)

inst_8675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:26025*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26025*0 + 3*227*FLEN/8, x4, x1, x2)

inst_8676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:26028*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26028*0 + 3*228*FLEN/8, x4, x1, x2)

inst_8677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:26031*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26031*0 + 3*229*FLEN/8, x4, x1, x2)

inst_8678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:26034*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26034*0 + 3*230*FLEN/8, x4, x1, x2)

inst_8679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:26037*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26037*0 + 3*231*FLEN/8, x4, x1, x2)

inst_8680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:26040*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26040*0 + 3*232*FLEN/8, x4, x1, x2)

inst_8681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75ba2bcb8dc85f; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:26043*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26043*0 + 3*233*FLEN/8, x4, x1, x2)

inst_8682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000000000; valaddr_reg:x3; val_offset:26046*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26046*0 + 3*234*FLEN/8, x4, x1, x2)

inst_8683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000000001; valaddr_reg:x3; val_offset:26049*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26049*0 + 3*235*FLEN/8, x4, x1, x2)

inst_8684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000000003; valaddr_reg:x3; val_offset:26052*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26052*0 + 3*236*FLEN/8, x4, x1, x2)

inst_8685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000000007; valaddr_reg:x3; val_offset:26055*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26055*0 + 3*237*FLEN/8, x4, x1, x2)

inst_8686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000000000f; valaddr_reg:x3; val_offset:26058*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26058*0 + 3*238*FLEN/8, x4, x1, x2)

inst_8687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000000001f; valaddr_reg:x3; val_offset:26061*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26061*0 + 3*239*FLEN/8, x4, x1, x2)

inst_8688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000000003f; valaddr_reg:x3; val_offset:26064*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26064*0 + 3*240*FLEN/8, x4, x1, x2)

inst_8689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000000007f; valaddr_reg:x3; val_offset:26067*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26067*0 + 3*241*FLEN/8, x4, x1, x2)

inst_8690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000000000ff; valaddr_reg:x3; val_offset:26070*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26070*0 + 3*242*FLEN/8, x4, x1, x2)

inst_8691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000000001ff; valaddr_reg:x3; val_offset:26073*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26073*0 + 3*243*FLEN/8, x4, x1, x2)

inst_8692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000000003ff; valaddr_reg:x3; val_offset:26076*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26076*0 + 3*244*FLEN/8, x4, x1, x2)

inst_8693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000000007ff; valaddr_reg:x3; val_offset:26079*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26079*0 + 3*245*FLEN/8, x4, x1, x2)

inst_8694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000000fff; valaddr_reg:x3; val_offset:26082*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26082*0 + 3*246*FLEN/8, x4, x1, x2)

inst_8695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000001fff; valaddr_reg:x3; val_offset:26085*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26085*0 + 3*247*FLEN/8, x4, x1, x2)

inst_8696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000003fff; valaddr_reg:x3; val_offset:26088*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26088*0 + 3*248*FLEN/8, x4, x1, x2)

inst_8697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000007fff; valaddr_reg:x3; val_offset:26091*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26091*0 + 3*249*FLEN/8, x4, x1, x2)

inst_8698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000000ffff; valaddr_reg:x3; val_offset:26094*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26094*0 + 3*250*FLEN/8, x4, x1, x2)

inst_8699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000001ffff; valaddr_reg:x3; val_offset:26097*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26097*0 + 3*251*FLEN/8, x4, x1, x2)

inst_8700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000003ffff; valaddr_reg:x3; val_offset:26100*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26100*0 + 3*252*FLEN/8, x4, x1, x2)

inst_8701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000007ffff; valaddr_reg:x3; val_offset:26103*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26103*0 + 3*253*FLEN/8, x4, x1, x2)

inst_8702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000000fffff; valaddr_reg:x3; val_offset:26106*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26106*0 + 3*254*FLEN/8, x4, x1, x2)

inst_8703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000001fffff; valaddr_reg:x3; val_offset:26109*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26109*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_8704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000003fffff; valaddr_reg:x3; val_offset:26112*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26112*0 + 3*256*FLEN/8, x4, x1, x2)

inst_8705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000007fffff; valaddr_reg:x3; val_offset:26115*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26115*0 + 3*257*FLEN/8, x4, x1, x2)

inst_8706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000000ffffff; valaddr_reg:x3; val_offset:26118*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26118*0 + 3*258*FLEN/8, x4, x1, x2)

inst_8707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000001ffffff; valaddr_reg:x3; val_offset:26121*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26121*0 + 3*259*FLEN/8, x4, x1, x2)

inst_8708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000003ffffff; valaddr_reg:x3; val_offset:26124*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26124*0 + 3*260*FLEN/8, x4, x1, x2)

inst_8709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000007ffffff; valaddr_reg:x3; val_offset:26127*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26127*0 + 3*261*FLEN/8, x4, x1, x2)

inst_8710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000000fffffff; valaddr_reg:x3; val_offset:26130*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26130*0 + 3*262*FLEN/8, x4, x1, x2)

inst_8711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000001fffffff; valaddr_reg:x3; val_offset:26133*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26133*0 + 3*263*FLEN/8, x4, x1, x2)

inst_8712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000003fffffff; valaddr_reg:x3; val_offset:26136*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26136*0 + 3*264*FLEN/8, x4, x1, x2)

inst_8713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000007fffffff; valaddr_reg:x3; val_offset:26139*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26139*0 + 3*265*FLEN/8, x4, x1, x2)

inst_8714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00000ffffffff; valaddr_reg:x3; val_offset:26142*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26142*0 + 3*266*FLEN/8, x4, x1, x2)

inst_8715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00001ffffffff; valaddr_reg:x3; val_offset:26145*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26145*0 + 3*267*FLEN/8, x4, x1, x2)

inst_8716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00003ffffffff; valaddr_reg:x3; val_offset:26148*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26148*0 + 3*268*FLEN/8, x4, x1, x2)

inst_8717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00007ffffffff; valaddr_reg:x3; val_offset:26151*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26151*0 + 3*269*FLEN/8, x4, x1, x2)

inst_8718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0000fffffffff; valaddr_reg:x3; val_offset:26154*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26154*0 + 3*270*FLEN/8, x4, x1, x2)

inst_8719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0001fffffffff; valaddr_reg:x3; val_offset:26157*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26157*0 + 3*271*FLEN/8, x4, x1, x2)

inst_8720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0003fffffffff; valaddr_reg:x3; val_offset:26160*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26160*0 + 3*272*FLEN/8, x4, x1, x2)

inst_8721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0007fffffffff; valaddr_reg:x3; val_offset:26163*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26163*0 + 3*273*FLEN/8, x4, x1, x2)

inst_8722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd000ffffffffff; valaddr_reg:x3; val_offset:26166*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26166*0 + 3*274*FLEN/8, x4, x1, x2)

inst_8723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd001ffffffffff; valaddr_reg:x3; val_offset:26169*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26169*0 + 3*275*FLEN/8, x4, x1, x2)

inst_8724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd003ffffffffff; valaddr_reg:x3; val_offset:26172*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26172*0 + 3*276*FLEN/8, x4, x1, x2)

inst_8725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd007ffffffffff; valaddr_reg:x3; val_offset:26175*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26175*0 + 3*277*FLEN/8, x4, x1, x2)

inst_8726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd00fffffffffff; valaddr_reg:x3; val_offset:26178*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26178*0 + 3*278*FLEN/8, x4, x1, x2)

inst_8727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd01fffffffffff; valaddr_reg:x3; val_offset:26181*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26181*0 + 3*279*FLEN/8, x4, x1, x2)

inst_8728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd03fffffffffff; valaddr_reg:x3; val_offset:26184*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26184*0 + 3*280*FLEN/8, x4, x1, x2)

inst_8729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd07fffffffffff; valaddr_reg:x3; val_offset:26187*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26187*0 + 3*281*FLEN/8, x4, x1, x2)

inst_8730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd0ffffffffffff; valaddr_reg:x3; val_offset:26190*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26190*0 + 3*282*FLEN/8, x4, x1, x2)

inst_8731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd1ffffffffffff; valaddr_reg:x3; val_offset:26193*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26193*0 + 3*283*FLEN/8, x4, x1, x2)

inst_8732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd3ffffffffffff; valaddr_reg:x3; val_offset:26196*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26196*0 + 3*284*FLEN/8, x4, x1, x2)

inst_8733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd7ffffffffffff; valaddr_reg:x3; val_offset:26199*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26199*0 + 3*285*FLEN/8, x4, x1, x2)

inst_8734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fd8000000000000; valaddr_reg:x3; val_offset:26202*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26202*0 + 3*286*FLEN/8, x4, x1, x2)

inst_8735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdc000000000000; valaddr_reg:x3; val_offset:26205*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26205*0 + 3*287*FLEN/8, x4, x1, x2)

inst_8736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fde000000000000; valaddr_reg:x3; val_offset:26208*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26208*0 + 3*288*FLEN/8, x4, x1, x2)

inst_8737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdf000000000000; valaddr_reg:x3; val_offset:26211*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26211*0 + 3*289*FLEN/8, x4, x1, x2)

inst_8738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdf800000000000; valaddr_reg:x3; val_offset:26214*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26214*0 + 3*290*FLEN/8, x4, x1, x2)

inst_8739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfc00000000000; valaddr_reg:x3; val_offset:26217*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26217*0 + 3*291*FLEN/8, x4, x1, x2)

inst_8740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfe00000000000; valaddr_reg:x3; val_offset:26220*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26220*0 + 3*292*FLEN/8, x4, x1, x2)

inst_8741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdff00000000000; valaddr_reg:x3; val_offset:26223*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26223*0 + 3*293*FLEN/8, x4, x1, x2)

inst_8742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdff80000000000; valaddr_reg:x3; val_offset:26226*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26226*0 + 3*294*FLEN/8, x4, x1, x2)

inst_8743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffc0000000000; valaddr_reg:x3; val_offset:26229*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26229*0 + 3*295*FLEN/8, x4, x1, x2)

inst_8744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffe0000000000; valaddr_reg:x3; val_offset:26232*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26232*0 + 3*296*FLEN/8, x4, x1, x2)

inst_8745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfff0000000000; valaddr_reg:x3; val_offset:26235*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26235*0 + 3*297*FLEN/8, x4, x1, x2)

inst_8746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfff8000000000; valaddr_reg:x3; val_offset:26238*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26238*0 + 3*298*FLEN/8, x4, x1, x2)

inst_8747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffc000000000; valaddr_reg:x3; val_offset:26241*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26241*0 + 3*299*FLEN/8, x4, x1, x2)

inst_8748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffe000000000; valaddr_reg:x3; val_offset:26244*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26244*0 + 3*300*FLEN/8, x4, x1, x2)

inst_8749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffff000000000; valaddr_reg:x3; val_offset:26247*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26247*0 + 3*301*FLEN/8, x4, x1, x2)

inst_8750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffff800000000; valaddr_reg:x3; val_offset:26250*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26250*0 + 3*302*FLEN/8, x4, x1, x2)

inst_8751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffc00000000; valaddr_reg:x3; val_offset:26253*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26253*0 + 3*303*FLEN/8, x4, x1, x2)

inst_8752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffe00000000; valaddr_reg:x3; val_offset:26256*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26256*0 + 3*304*FLEN/8, x4, x1, x2)

inst_8753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffff00000000; valaddr_reg:x3; val_offset:26259*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26259*0 + 3*305*FLEN/8, x4, x1, x2)

inst_8754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffff80000000; valaddr_reg:x3; val_offset:26262*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26262*0 + 3*306*FLEN/8, x4, x1, x2)

inst_8755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffc0000000; valaddr_reg:x3; val_offset:26265*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26265*0 + 3*307*FLEN/8, x4, x1, x2)

inst_8756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffe0000000; valaddr_reg:x3; val_offset:26268*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26268*0 + 3*308*FLEN/8, x4, x1, x2)

inst_8757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffff0000000; valaddr_reg:x3; val_offset:26271*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26271*0 + 3*309*FLEN/8, x4, x1, x2)

inst_8758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffff8000000; valaddr_reg:x3; val_offset:26274*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26274*0 + 3*310*FLEN/8, x4, x1, x2)

inst_8759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffc000000; valaddr_reg:x3; val_offset:26277*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26277*0 + 3*311*FLEN/8, x4, x1, x2)

inst_8760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffe000000; valaddr_reg:x3; val_offset:26280*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26280*0 + 3*312*FLEN/8, x4, x1, x2)

inst_8761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffff000000; valaddr_reg:x3; val_offset:26283*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26283*0 + 3*313*FLEN/8, x4, x1, x2)

inst_8762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffff800000; valaddr_reg:x3; val_offset:26286*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26286*0 + 3*314*FLEN/8, x4, x1, x2)

inst_8763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffc00000; valaddr_reg:x3; val_offset:26289*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26289*0 + 3*315*FLEN/8, x4, x1, x2)

inst_8764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffe00000; valaddr_reg:x3; val_offset:26292*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26292*0 + 3*316*FLEN/8, x4, x1, x2)

inst_8765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffff00000; valaddr_reg:x3; val_offset:26295*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26295*0 + 3*317*FLEN/8, x4, x1, x2)

inst_8766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffff80000; valaddr_reg:x3; val_offset:26298*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26298*0 + 3*318*FLEN/8, x4, x1, x2)

inst_8767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffc0000; valaddr_reg:x3; val_offset:26301*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26301*0 + 3*319*FLEN/8, x4, x1, x2)

inst_8768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffe0000; valaddr_reg:x3; val_offset:26304*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26304*0 + 3*320*FLEN/8, x4, x1, x2)

inst_8769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffff0000; valaddr_reg:x3; val_offset:26307*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26307*0 + 3*321*FLEN/8, x4, x1, x2)

inst_8770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffff8000; valaddr_reg:x3; val_offset:26310*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26310*0 + 3*322*FLEN/8, x4, x1, x2)

inst_8771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffc000; valaddr_reg:x3; val_offset:26313*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26313*0 + 3*323*FLEN/8, x4, x1, x2)

inst_8772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffe000; valaddr_reg:x3; val_offset:26316*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26316*0 + 3*324*FLEN/8, x4, x1, x2)

inst_8773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffff000; valaddr_reg:x3; val_offset:26319*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26319*0 + 3*325*FLEN/8, x4, x1, x2)

inst_8774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffff800; valaddr_reg:x3; val_offset:26322*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26322*0 + 3*326*FLEN/8, x4, x1, x2)

inst_8775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffffc00; valaddr_reg:x3; val_offset:26325*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26325*0 + 3*327*FLEN/8, x4, x1, x2)

inst_8776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffffe00; valaddr_reg:x3; val_offset:26328*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26328*0 + 3*328*FLEN/8, x4, x1, x2)

inst_8777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffff00; valaddr_reg:x3; val_offset:26331*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26331*0 + 3*329*FLEN/8, x4, x1, x2)

inst_8778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffff80; valaddr_reg:x3; val_offset:26334*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26334*0 + 3*330*FLEN/8, x4, x1, x2)

inst_8779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffffc0; valaddr_reg:x3; val_offset:26337*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26337*0 + 3*331*FLEN/8, x4, x1, x2)

inst_8780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffffe0; valaddr_reg:x3; val_offset:26340*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26340*0 + 3*332*FLEN/8, x4, x1, x2)

inst_8781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffffff0; valaddr_reg:x3; val_offset:26343*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26343*0 + 3*333*FLEN/8, x4, x1, x2)

inst_8782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffffff8; valaddr_reg:x3; val_offset:26346*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26346*0 + 3*334*FLEN/8, x4, x1, x2)

inst_8783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffffffc; valaddr_reg:x3; val_offset:26349*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26349*0 + 3*335*FLEN/8, x4, x1, x2)

inst_8784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdffffffffffffe; valaddr_reg:x3; val_offset:26352*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26352*0 + 3*336*FLEN/8, x4, x1, x2)

inst_8785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fdfffffffffffff; valaddr_reg:x3; val_offset:26355*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26355*0 + 3*337*FLEN/8, x4, x1, x2)

inst_8786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:26358*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26358*0 + 3*338*FLEN/8, x4, x1, x2)

inst_8787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:26361*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26361*0 + 3*339*FLEN/8, x4, x1, x2)

inst_8788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:26364*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26364*0 + 3*340*FLEN/8, x4, x1, x2)

inst_8789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:26367*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26367*0 + 3*341*FLEN/8, x4, x1, x2)

inst_8790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:26370*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26370*0 + 3*342*FLEN/8, x4, x1, x2)

inst_8791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:26373*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26373*0 + 3*343*FLEN/8, x4, x1, x2)

inst_8792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:26376*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26376*0 + 3*344*FLEN/8, x4, x1, x2)

inst_8793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:26379*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26379*0 + 3*345*FLEN/8, x4, x1, x2)

inst_8794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:26382*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26382*0 + 3*346*FLEN/8, x4, x1, x2)

inst_8795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:26385*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26385*0 + 3*347*FLEN/8, x4, x1, x2)

inst_8796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:26388*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26388*0 + 3*348*FLEN/8, x4, x1, x2)

inst_8797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:26391*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26391*0 + 3*349*FLEN/8, x4, x1, x2)

inst_8798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:26394*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26394*0 + 3*350*FLEN/8, x4, x1, x2)

inst_8799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:26397*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26397*0 + 3*351*FLEN/8, x4, x1, x2)

inst_8800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:26400*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26400*0 + 3*352*FLEN/8, x4, x1, x2)

inst_8801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:26403*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26403*0 + 3*353*FLEN/8, x4, x1, x2)

inst_8802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:26406*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26406*0 + 3*354*FLEN/8, x4, x1, x2)

inst_8803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:26409*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26409*0 + 3*355*FLEN/8, x4, x1, x2)

inst_8804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:26412*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26412*0 + 3*356*FLEN/8, x4, x1, x2)

inst_8805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:26415*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26415*0 + 3*357*FLEN/8, x4, x1, x2)

inst_8806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:26418*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26418*0 + 3*358*FLEN/8, x4, x1, x2)

inst_8807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x7372ab67684af and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f760de25d29e92f; op2val:0x2067372ab67684af;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:26421*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26421*0 + 3*359*FLEN/8, x4, x1, x2)

inst_8808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:26424*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26424*0 + 3*360*FLEN/8, x4, x1, x2)

inst_8809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:26427*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26427*0 + 3*361*FLEN/8, x4, x1, x2)

inst_8810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:26430*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26430*0 + 3*362*FLEN/8, x4, x1, x2)

inst_8811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:26433*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26433*0 + 3*363*FLEN/8, x4, x1, x2)

inst_8812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:26436*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26436*0 + 3*364*FLEN/8, x4, x1, x2)

inst_8813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:26439*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26439*0 + 3*365*FLEN/8, x4, x1, x2)

inst_8814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:26442*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26442*0 + 3*366*FLEN/8, x4, x1, x2)

inst_8815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:26445*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26445*0 + 3*367*FLEN/8, x4, x1, x2)

inst_8816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:26448*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26448*0 + 3*368*FLEN/8, x4, x1, x2)

inst_8817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:26451*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26451*0 + 3*369*FLEN/8, x4, x1, x2)

inst_8818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:26454*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26454*0 + 3*370*FLEN/8, x4, x1, x2)

inst_8819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:26457*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26457*0 + 3*371*FLEN/8, x4, x1, x2)

inst_8820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:26460*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26460*0 + 3*372*FLEN/8, x4, x1, x2)

inst_8821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:26463*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26463*0 + 3*373*FLEN/8, x4, x1, x2)

inst_8822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:26466*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26466*0 + 3*374*FLEN/8, x4, x1, x2)

inst_8823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:26469*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26469*0 + 3*375*FLEN/8, x4, x1, x2)

inst_8824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:26472*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26472*0 + 3*376*FLEN/8, x4, x1, x2)

inst_8825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:26475*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26475*0 + 3*377*FLEN/8, x4, x1, x2)

inst_8826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:26478*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26478*0 + 3*378*FLEN/8, x4, x1, x2)

inst_8827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:26481*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26481*0 + 3*379*FLEN/8, x4, x1, x2)

inst_8828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:26484*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26484*0 + 3*380*FLEN/8, x4, x1, x2)

inst_8829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:26487*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26487*0 + 3*381*FLEN/8, x4, x1, x2)

inst_8830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000000000; valaddr_reg:x3; val_offset:26490*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26490*0 + 3*382*FLEN/8, x4, x1, x2)

inst_8831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000000001; valaddr_reg:x3; val_offset:26493*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26493*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_8832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000000003; valaddr_reg:x3; val_offset:26496*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26496*0 + 3*384*FLEN/8, x4, x1, x2)

inst_8833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000000007; valaddr_reg:x3; val_offset:26499*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26499*0 + 3*385*FLEN/8, x4, x1, x2)

inst_8834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000000000f; valaddr_reg:x3; val_offset:26502*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26502*0 + 3*386*FLEN/8, x4, x1, x2)

inst_8835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000000001f; valaddr_reg:x3; val_offset:26505*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26505*0 + 3*387*FLEN/8, x4, x1, x2)

inst_8836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000000003f; valaddr_reg:x3; val_offset:26508*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26508*0 + 3*388*FLEN/8, x4, x1, x2)

inst_8837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000000007f; valaddr_reg:x3; val_offset:26511*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26511*0 + 3*389*FLEN/8, x4, x1, x2)

inst_8838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000000000ff; valaddr_reg:x3; val_offset:26514*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26514*0 + 3*390*FLEN/8, x4, x1, x2)

inst_8839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000000001ff; valaddr_reg:x3; val_offset:26517*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26517*0 + 3*391*FLEN/8, x4, x1, x2)

inst_8840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000000003ff; valaddr_reg:x3; val_offset:26520*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26520*0 + 3*392*FLEN/8, x4, x1, x2)

inst_8841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000000007ff; valaddr_reg:x3; val_offset:26523*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26523*0 + 3*393*FLEN/8, x4, x1, x2)

inst_8842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000000fff; valaddr_reg:x3; val_offset:26526*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26526*0 + 3*394*FLEN/8, x4, x1, x2)

inst_8843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000001fff; valaddr_reg:x3; val_offset:26529*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26529*0 + 3*395*FLEN/8, x4, x1, x2)

inst_8844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000003fff; valaddr_reg:x3; val_offset:26532*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26532*0 + 3*396*FLEN/8, x4, x1, x2)

inst_8845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000007fff; valaddr_reg:x3; val_offset:26535*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26535*0 + 3*397*FLEN/8, x4, x1, x2)

inst_8846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000000ffff; valaddr_reg:x3; val_offset:26538*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26538*0 + 3*398*FLEN/8, x4, x1, x2)

inst_8847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000001ffff; valaddr_reg:x3; val_offset:26541*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26541*0 + 3*399*FLEN/8, x4, x1, x2)

inst_8848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000003ffff; valaddr_reg:x3; val_offset:26544*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26544*0 + 3*400*FLEN/8, x4, x1, x2)

inst_8849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000007ffff; valaddr_reg:x3; val_offset:26547*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26547*0 + 3*401*FLEN/8, x4, x1, x2)

inst_8850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000000fffff; valaddr_reg:x3; val_offset:26550*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26550*0 + 3*402*FLEN/8, x4, x1, x2)

inst_8851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000001fffff; valaddr_reg:x3; val_offset:26553*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26553*0 + 3*403*FLEN/8, x4, x1, x2)

inst_8852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000003fffff; valaddr_reg:x3; val_offset:26556*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26556*0 + 3*404*FLEN/8, x4, x1, x2)

inst_8853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000007fffff; valaddr_reg:x3; val_offset:26559*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26559*0 + 3*405*FLEN/8, x4, x1, x2)

inst_8854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000000ffffff; valaddr_reg:x3; val_offset:26562*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26562*0 + 3*406*FLEN/8, x4, x1, x2)

inst_8855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000001ffffff; valaddr_reg:x3; val_offset:26565*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26565*0 + 3*407*FLEN/8, x4, x1, x2)

inst_8856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000003ffffff; valaddr_reg:x3; val_offset:26568*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26568*0 + 3*408*FLEN/8, x4, x1, x2)

inst_8857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000007ffffff; valaddr_reg:x3; val_offset:26571*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26571*0 + 3*409*FLEN/8, x4, x1, x2)

inst_8858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000000fffffff; valaddr_reg:x3; val_offset:26574*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26574*0 + 3*410*FLEN/8, x4, x1, x2)

inst_8859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000001fffffff; valaddr_reg:x3; val_offset:26577*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26577*0 + 3*411*FLEN/8, x4, x1, x2)

inst_8860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000003fffffff; valaddr_reg:x3; val_offset:26580*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26580*0 + 3*412*FLEN/8, x4, x1, x2)

inst_8861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000007fffffff; valaddr_reg:x3; val_offset:26583*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26583*0 + 3*413*FLEN/8, x4, x1, x2)

inst_8862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00000ffffffff; valaddr_reg:x3; val_offset:26586*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26586*0 + 3*414*FLEN/8, x4, x1, x2)

inst_8863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00001ffffffff; valaddr_reg:x3; val_offset:26589*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26589*0 + 3*415*FLEN/8, x4, x1, x2)

inst_8864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00003ffffffff; valaddr_reg:x3; val_offset:26592*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26592*0 + 3*416*FLEN/8, x4, x1, x2)

inst_8865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00007ffffffff; valaddr_reg:x3; val_offset:26595*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26595*0 + 3*417*FLEN/8, x4, x1, x2)

inst_8866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0000fffffffff; valaddr_reg:x3; val_offset:26598*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26598*0 + 3*418*FLEN/8, x4, x1, x2)

inst_8867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0001fffffffff; valaddr_reg:x3; val_offset:26601*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26601*0 + 3*419*FLEN/8, x4, x1, x2)

inst_8868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0003fffffffff; valaddr_reg:x3; val_offset:26604*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26604*0 + 3*420*FLEN/8, x4, x1, x2)

inst_8869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0007fffffffff; valaddr_reg:x3; val_offset:26607*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26607*0 + 3*421*FLEN/8, x4, x1, x2)

inst_8870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c000ffffffffff; valaddr_reg:x3; val_offset:26610*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26610*0 + 3*422*FLEN/8, x4, x1, x2)

inst_8871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c001ffffffffff; valaddr_reg:x3; val_offset:26613*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26613*0 + 3*423*FLEN/8, x4, x1, x2)

inst_8872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c003ffffffffff; valaddr_reg:x3; val_offset:26616*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26616*0 + 3*424*FLEN/8, x4, x1, x2)

inst_8873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c007ffffffffff; valaddr_reg:x3; val_offset:26619*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26619*0 + 3*425*FLEN/8, x4, x1, x2)

inst_8874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c00fffffffffff; valaddr_reg:x3; val_offset:26622*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26622*0 + 3*426*FLEN/8, x4, x1, x2)

inst_8875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c01fffffffffff; valaddr_reg:x3; val_offset:26625*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26625*0 + 3*427*FLEN/8, x4, x1, x2)

inst_8876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c03fffffffffff; valaddr_reg:x3; val_offset:26628*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26628*0 + 3*428*FLEN/8, x4, x1, x2)

inst_8877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c07fffffffffff; valaddr_reg:x3; val_offset:26631*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26631*0 + 3*429*FLEN/8, x4, x1, x2)

inst_8878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c0ffffffffffff; valaddr_reg:x3; val_offset:26634*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26634*0 + 3*430*FLEN/8, x4, x1, x2)

inst_8879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c1ffffffffffff; valaddr_reg:x3; val_offset:26637*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26637*0 + 3*431*FLEN/8, x4, x1, x2)

inst_8880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c3ffffffffffff; valaddr_reg:x3; val_offset:26640*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26640*0 + 3*432*FLEN/8, x4, x1, x2)

inst_8881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c7ffffffffffff; valaddr_reg:x3; val_offset:26643*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26643*0 + 3*433*FLEN/8, x4, x1, x2)

inst_8882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2c8000000000000; valaddr_reg:x3; val_offset:26646*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26646*0 + 3*434*FLEN/8, x4, x1, x2)

inst_8883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cc000000000000; valaddr_reg:x3; val_offset:26649*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26649*0 + 3*435*FLEN/8, x4, x1, x2)

inst_8884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2ce000000000000; valaddr_reg:x3; val_offset:26652*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26652*0 + 3*436*FLEN/8, x4, x1, x2)

inst_8885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cf000000000000; valaddr_reg:x3; val_offset:26655*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26655*0 + 3*437*FLEN/8, x4, x1, x2)

inst_8886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cf800000000000; valaddr_reg:x3; val_offset:26658*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26658*0 + 3*438*FLEN/8, x4, x1, x2)

inst_8887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfc00000000000; valaddr_reg:x3; val_offset:26661*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26661*0 + 3*439*FLEN/8, x4, x1, x2)

inst_8888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfe00000000000; valaddr_reg:x3; val_offset:26664*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26664*0 + 3*440*FLEN/8, x4, x1, x2)

inst_8889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cff00000000000; valaddr_reg:x3; val_offset:26667*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26667*0 + 3*441*FLEN/8, x4, x1, x2)

inst_8890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cff80000000000; valaddr_reg:x3; val_offset:26670*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26670*0 + 3*442*FLEN/8, x4, x1, x2)

inst_8891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffc0000000000; valaddr_reg:x3; val_offset:26673*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26673*0 + 3*443*FLEN/8, x4, x1, x2)

inst_8892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffe0000000000; valaddr_reg:x3; val_offset:26676*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26676*0 + 3*444*FLEN/8, x4, x1, x2)

inst_8893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfff0000000000; valaddr_reg:x3; val_offset:26679*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26679*0 + 3*445*FLEN/8, x4, x1, x2)

inst_8894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfff8000000000; valaddr_reg:x3; val_offset:26682*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26682*0 + 3*446*FLEN/8, x4, x1, x2)

inst_8895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffc000000000; valaddr_reg:x3; val_offset:26685*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26685*0 + 3*447*FLEN/8, x4, x1, x2)

inst_8896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffe000000000; valaddr_reg:x3; val_offset:26688*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26688*0 + 3*448*FLEN/8, x4, x1, x2)

inst_8897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffff000000000; valaddr_reg:x3; val_offset:26691*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26691*0 + 3*449*FLEN/8, x4, x1, x2)

inst_8898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffff800000000; valaddr_reg:x3; val_offset:26694*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26694*0 + 3*450*FLEN/8, x4, x1, x2)

inst_8899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffc00000000; valaddr_reg:x3; val_offset:26697*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26697*0 + 3*451*FLEN/8, x4, x1, x2)

inst_8900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffe00000000; valaddr_reg:x3; val_offset:26700*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26700*0 + 3*452*FLEN/8, x4, x1, x2)

inst_8901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffff00000000; valaddr_reg:x3; val_offset:26703*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26703*0 + 3*453*FLEN/8, x4, x1, x2)

inst_8902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffff80000000; valaddr_reg:x3; val_offset:26706*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26706*0 + 3*454*FLEN/8, x4, x1, x2)

inst_8903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffc0000000; valaddr_reg:x3; val_offset:26709*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26709*0 + 3*455*FLEN/8, x4, x1, x2)

inst_8904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffe0000000; valaddr_reg:x3; val_offset:26712*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26712*0 + 3*456*FLEN/8, x4, x1, x2)

inst_8905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffff0000000; valaddr_reg:x3; val_offset:26715*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26715*0 + 3*457*FLEN/8, x4, x1, x2)

inst_8906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffff8000000; valaddr_reg:x3; val_offset:26718*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26718*0 + 3*458*FLEN/8, x4, x1, x2)

inst_8907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffc000000; valaddr_reg:x3; val_offset:26721*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26721*0 + 3*459*FLEN/8, x4, x1, x2)

inst_8908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffe000000; valaddr_reg:x3; val_offset:26724*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26724*0 + 3*460*FLEN/8, x4, x1, x2)

inst_8909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffff000000; valaddr_reg:x3; val_offset:26727*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26727*0 + 3*461*FLEN/8, x4, x1, x2)

inst_8910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffff800000; valaddr_reg:x3; val_offset:26730*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26730*0 + 3*462*FLEN/8, x4, x1, x2)

inst_8911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffc00000; valaddr_reg:x3; val_offset:26733*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26733*0 + 3*463*FLEN/8, x4, x1, x2)

inst_8912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffe00000; valaddr_reg:x3; val_offset:26736*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26736*0 + 3*464*FLEN/8, x4, x1, x2)

inst_8913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffff00000; valaddr_reg:x3; val_offset:26739*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26739*0 + 3*465*FLEN/8, x4, x1, x2)

inst_8914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffff80000; valaddr_reg:x3; val_offset:26742*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26742*0 + 3*466*FLEN/8, x4, x1, x2)

inst_8915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffc0000; valaddr_reg:x3; val_offset:26745*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26745*0 + 3*467*FLEN/8, x4, x1, x2)

inst_8916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffe0000; valaddr_reg:x3; val_offset:26748*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26748*0 + 3*468*FLEN/8, x4, x1, x2)

inst_8917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffff0000; valaddr_reg:x3; val_offset:26751*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26751*0 + 3*469*FLEN/8, x4, x1, x2)

inst_8918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffff8000; valaddr_reg:x3; val_offset:26754*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26754*0 + 3*470*FLEN/8, x4, x1, x2)

inst_8919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffc000; valaddr_reg:x3; val_offset:26757*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26757*0 + 3*471*FLEN/8, x4, x1, x2)

inst_8920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffe000; valaddr_reg:x3; val_offset:26760*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26760*0 + 3*472*FLEN/8, x4, x1, x2)

inst_8921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffff000; valaddr_reg:x3; val_offset:26763*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26763*0 + 3*473*FLEN/8, x4, x1, x2)

inst_8922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffff800; valaddr_reg:x3; val_offset:26766*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26766*0 + 3*474*FLEN/8, x4, x1, x2)

inst_8923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffffc00; valaddr_reg:x3; val_offset:26769*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26769*0 + 3*475*FLEN/8, x4, x1, x2)

inst_8924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffffe00; valaddr_reg:x3; val_offset:26772*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26772*0 + 3*476*FLEN/8, x4, x1, x2)

inst_8925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffff00; valaddr_reg:x3; val_offset:26775*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26775*0 + 3*477*FLEN/8, x4, x1, x2)

inst_8926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffff80; valaddr_reg:x3; val_offset:26778*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26778*0 + 3*478*FLEN/8, x4, x1, x2)

inst_8927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffffc0; valaddr_reg:x3; val_offset:26781*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26781*0 + 3*479*FLEN/8, x4, x1, x2)

inst_8928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffffe0; valaddr_reg:x3; val_offset:26784*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26784*0 + 3*480*FLEN/8, x4, x1, x2)

inst_8929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffffff0; valaddr_reg:x3; val_offset:26787*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26787*0 + 3*481*FLEN/8, x4, x1, x2)

inst_8930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffffff8; valaddr_reg:x3; val_offset:26790*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26790*0 + 3*482*FLEN/8, x4, x1, x2)

inst_8931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffffffc; valaddr_reg:x3; val_offset:26793*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26793*0 + 3*483*FLEN/8, x4, x1, x2)

inst_8932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cffffffffffffe; valaddr_reg:x3; val_offset:26796*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26796*0 + 3*484*FLEN/8, x4, x1, x2)

inst_8933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x673579c9815bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7673579c9815bf; op2val:0x0;
op3val:0x2cfffffffffffff; valaddr_reg:x3; val_offset:26799*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26799*0 + 3*485*FLEN/8, x4, x1, x2)

inst_8934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:26802*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26802*0 + 3*486*FLEN/8, x4, x1, x2)

inst_8935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:26805*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26805*0 + 3*487*FLEN/8, x4, x1, x2)

inst_8936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:26808*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26808*0 + 3*488*FLEN/8, x4, x1, x2)

inst_8937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:26811*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26811*0 + 3*489*FLEN/8, x4, x1, x2)

inst_8938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:26814*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26814*0 + 3*490*FLEN/8, x4, x1, x2)

inst_8939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:26817*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26817*0 + 3*491*FLEN/8, x4, x1, x2)

inst_8940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:26820*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26820*0 + 3*492*FLEN/8, x4, x1, x2)

inst_8941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:26823*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26823*0 + 3*493*FLEN/8, x4, x1, x2)

inst_8942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:26826*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26826*0 + 3*494*FLEN/8, x4, x1, x2)

inst_8943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:26829*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26829*0 + 3*495*FLEN/8, x4, x1, x2)

inst_8944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:26832*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26832*0 + 3*496*FLEN/8, x4, x1, x2)

inst_8945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:26835*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26835*0 + 3*497*FLEN/8, x4, x1, x2)

inst_8946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:26838*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26838*0 + 3*498*FLEN/8, x4, x1, x2)

inst_8947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:26841*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26841*0 + 3*499*FLEN/8, x4, x1, x2)

inst_8948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:26844*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26844*0 + 3*500*FLEN/8, x4, x1, x2)

inst_8949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:26847*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26847*0 + 3*501*FLEN/8, x4, x1, x2)

inst_8950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:26850*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26850*0 + 3*502*FLEN/8, x4, x1, x2)

inst_8951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:26853*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26853*0 + 3*503*FLEN/8, x4, x1, x2)

inst_8952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:26856*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26856*0 + 3*504*FLEN/8, x4, x1, x2)

inst_8953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:26859*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26859*0 + 3*505*FLEN/8, x4, x1, x2)

inst_8954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:26862*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26862*0 + 3*506*FLEN/8, x4, x1, x2)

inst_8955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:26865*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26865*0 + 3*507*FLEN/8, x4, x1, x2)

inst_8956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000000000; valaddr_reg:x3; val_offset:26868*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26868*0 + 3*508*FLEN/8, x4, x1, x2)

inst_8957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000000001; valaddr_reg:x3; val_offset:26871*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26871*0 + 3*509*FLEN/8, x4, x1, x2)

inst_8958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000000003; valaddr_reg:x3; val_offset:26874*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26874*0 + 3*510*FLEN/8, x4, x1, x2)

inst_8959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000000007; valaddr_reg:x3; val_offset:26877*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26877*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_8960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000000000f; valaddr_reg:x3; val_offset:26880*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26880*0 + 3*512*FLEN/8, x4, x1, x2)

inst_8961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000000001f; valaddr_reg:x3; val_offset:26883*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26883*0 + 3*513*FLEN/8, x4, x1, x2)

inst_8962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000000003f; valaddr_reg:x3; val_offset:26886*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26886*0 + 3*514*FLEN/8, x4, x1, x2)

inst_8963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000000007f; valaddr_reg:x3; val_offset:26889*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26889*0 + 3*515*FLEN/8, x4, x1, x2)

inst_8964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000000000ff; valaddr_reg:x3; val_offset:26892*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26892*0 + 3*516*FLEN/8, x4, x1, x2)

inst_8965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000000001ff; valaddr_reg:x3; val_offset:26895*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26895*0 + 3*517*FLEN/8, x4, x1, x2)

inst_8966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000000003ff; valaddr_reg:x3; val_offset:26898*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26898*0 + 3*518*FLEN/8, x4, x1, x2)

inst_8967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000000007ff; valaddr_reg:x3; val_offset:26901*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26901*0 + 3*519*FLEN/8, x4, x1, x2)

inst_8968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000000fff; valaddr_reg:x3; val_offset:26904*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26904*0 + 3*520*FLEN/8, x4, x1, x2)

inst_8969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000001fff; valaddr_reg:x3; val_offset:26907*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26907*0 + 3*521*FLEN/8, x4, x1, x2)

inst_8970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000003fff; valaddr_reg:x3; val_offset:26910*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26910*0 + 3*522*FLEN/8, x4, x1, x2)

inst_8971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000007fff; valaddr_reg:x3; val_offset:26913*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26913*0 + 3*523*FLEN/8, x4, x1, x2)

inst_8972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000000ffff; valaddr_reg:x3; val_offset:26916*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26916*0 + 3*524*FLEN/8, x4, x1, x2)

inst_8973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000001ffff; valaddr_reg:x3; val_offset:26919*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26919*0 + 3*525*FLEN/8, x4, x1, x2)

inst_8974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000003ffff; valaddr_reg:x3; val_offset:26922*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26922*0 + 3*526*FLEN/8, x4, x1, x2)

inst_8975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000007ffff; valaddr_reg:x3; val_offset:26925*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26925*0 + 3*527*FLEN/8, x4, x1, x2)

inst_8976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:26928*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26928*0 + 3*528*FLEN/8, x4, x1, x2)

inst_8977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:26931*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26931*0 + 3*529*FLEN/8, x4, x1, x2)

inst_8978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:26934*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26934*0 + 3*530*FLEN/8, x4, x1, x2)

inst_8979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:26937*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26937*0 + 3*531*FLEN/8, x4, x1, x2)

inst_8980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:26940*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26940*0 + 3*532*FLEN/8, x4, x1, x2)

inst_8981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:26943*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26943*0 + 3*533*FLEN/8, x4, x1, x2)

inst_8982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:26946*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26946*0 + 3*534*FLEN/8, x4, x1, x2)

inst_8983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:26949*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26949*0 + 3*535*FLEN/8, x4, x1, x2)

inst_8984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:26952*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26952*0 + 3*536*FLEN/8, x4, x1, x2)

inst_8985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:26955*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26955*0 + 3*537*FLEN/8, x4, x1, x2)

inst_8986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:26958*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26958*0 + 3*538*FLEN/8, x4, x1, x2)

inst_8987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:26961*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26961*0 + 3*539*FLEN/8, x4, x1, x2)

inst_8988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:26964*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26964*0 + 3*540*FLEN/8, x4, x1, x2)

inst_8989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:26967*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26967*0 + 3*541*FLEN/8, x4, x1, x2)

inst_8990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:26970*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26970*0 + 3*542*FLEN/8, x4, x1, x2)

inst_8991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:26973*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26973*0 + 3*543*FLEN/8, x4, x1, x2)

inst_8992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:26976*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26976*0 + 3*544*FLEN/8, x4, x1, x2)

inst_8993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:26979*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26979*0 + 3*545*FLEN/8, x4, x1, x2)

inst_8994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:26982*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26982*0 + 3*546*FLEN/8, x4, x1, x2)

inst_8995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:26985*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26985*0 + 3*547*FLEN/8, x4, x1, x2)

inst_8996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:26988*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26988*0 + 3*548*FLEN/8, x4, x1, x2)

inst_8997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:26991*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26991*0 + 3*549*FLEN/8, x4, x1, x2)

inst_8998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:26994*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26994*0 + 3*550*FLEN/8, x4, x1, x2)

inst_8999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:26997*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 26997*0 + 3*551*FLEN/8, x4, x1, x2)

inst_9000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:27000*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27000*0 + 3*552*FLEN/8, x4, x1, x2)

inst_9001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:27003*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27003*0 + 3*553*FLEN/8, x4, x1, x2)

inst_9002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:27006*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27006*0 + 3*554*FLEN/8, x4, x1, x2)

inst_9003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:27009*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27009*0 + 3*555*FLEN/8, x4, x1, x2)

inst_9004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:27012*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27012*0 + 3*556*FLEN/8, x4, x1, x2)

inst_9005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:27015*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27015*0 + 3*557*FLEN/8, x4, x1, x2)

inst_9006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:27018*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27018*0 + 3*558*FLEN/8, x4, x1, x2)

inst_9007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:27021*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27021*0 + 3*559*FLEN/8, x4, x1, x2)

inst_9008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:27024*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27024*0 + 3*560*FLEN/8, x4, x1, x2)

inst_9009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:27027*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27027*0 + 3*561*FLEN/8, x4, x1, x2)

inst_9010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:27030*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27030*0 + 3*562*FLEN/8, x4, x1, x2)

inst_9011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:27033*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27033*0 + 3*563*FLEN/8, x4, x1, x2)

inst_9012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:27036*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27036*0 + 3*564*FLEN/8, x4, x1, x2)

inst_9013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:27039*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27039*0 + 3*565*FLEN/8, x4, x1, x2)

inst_9014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:27042*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27042*0 + 3*566*FLEN/8, x4, x1, x2)

inst_9015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:27045*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27045*0 + 3*567*FLEN/8, x4, x1, x2)

inst_9016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:27048*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27048*0 + 3*568*FLEN/8, x4, x1, x2)

inst_9017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:27051*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27051*0 + 3*569*FLEN/8, x4, x1, x2)

inst_9018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:27054*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27054*0 + 3*570*FLEN/8, x4, x1, x2)

inst_9019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:27057*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27057*0 + 3*571*FLEN/8, x4, x1, x2)

inst_9020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:27060*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27060*0 + 3*572*FLEN/8, x4, x1, x2)

inst_9021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:27063*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27063*0 + 3*573*FLEN/8, x4, x1, x2)

inst_9022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:27066*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27066*0 + 3*574*FLEN/8, x4, x1, x2)

inst_9023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:27069*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27069*0 + 3*575*FLEN/8, x4, x1, x2)

inst_9024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:27072*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27072*0 + 3*576*FLEN/8, x4, x1, x2)

inst_9025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:27075*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27075*0 + 3*577*FLEN/8, x4, x1, x2)

inst_9026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:27078*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27078*0 + 3*578*FLEN/8, x4, x1, x2)

inst_9027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:27081*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27081*0 + 3*579*FLEN/8, x4, x1, x2)

inst_9028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:27084*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27084*0 + 3*580*FLEN/8, x4, x1, x2)

inst_9029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:27087*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27087*0 + 3*581*FLEN/8, x4, x1, x2)

inst_9030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:27090*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27090*0 + 3*582*FLEN/8, x4, x1, x2)

inst_9031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:27093*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27093*0 + 3*583*FLEN/8, x4, x1, x2)

inst_9032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:27096*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27096*0 + 3*584*FLEN/8, x4, x1, x2)

inst_9033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:27099*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27099*0 + 3*585*FLEN/8, x4, x1, x2)

inst_9034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:27102*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27102*0 + 3*586*FLEN/8, x4, x1, x2)

inst_9035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:27105*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27105*0 + 3*587*FLEN/8, x4, x1, x2)

inst_9036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:27108*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27108*0 + 3*588*FLEN/8, x4, x1, x2)

inst_9037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:27111*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27111*0 + 3*589*FLEN/8, x4, x1, x2)

inst_9038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:27114*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27114*0 + 3*590*FLEN/8, x4, x1, x2)

inst_9039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:27117*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27117*0 + 3*591*FLEN/8, x4, x1, x2)

inst_9040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:27120*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27120*0 + 3*592*FLEN/8, x4, x1, x2)

inst_9041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:27123*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27123*0 + 3*593*FLEN/8, x4, x1, x2)

inst_9042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:27126*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27126*0 + 3*594*FLEN/8, x4, x1, x2)

inst_9043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:27129*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27129*0 + 3*595*FLEN/8, x4, x1, x2)

inst_9044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:27132*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27132*0 + 3*596*FLEN/8, x4, x1, x2)

inst_9045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:27135*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27135*0 + 3*597*FLEN/8, x4, x1, x2)

inst_9046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:27138*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27138*0 + 3*598*FLEN/8, x4, x1, x2)

inst_9047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:27141*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27141*0 + 3*599*FLEN/8, x4, x1, x2)

inst_9048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:27144*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27144*0 + 3*600*FLEN/8, x4, x1, x2)

inst_9049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:27147*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27147*0 + 3*601*FLEN/8, x4, x1, x2)

inst_9050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:27150*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27150*0 + 3*602*FLEN/8, x4, x1, x2)

inst_9051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:27153*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27153*0 + 3*603*FLEN/8, x4, x1, x2)

inst_9052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:27156*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27156*0 + 3*604*FLEN/8, x4, x1, x2)

inst_9053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:27159*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27159*0 + 3*605*FLEN/8, x4, x1, x2)

inst_9054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:27162*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27162*0 + 3*606*FLEN/8, x4, x1, x2)

inst_9055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:27165*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27165*0 + 3*607*FLEN/8, x4, x1, x2)

inst_9056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:27168*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27168*0 + 3*608*FLEN/8, x4, x1, x2)

inst_9057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:27171*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27171*0 + 3*609*FLEN/8, x4, x1, x2)

inst_9058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:27174*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27174*0 + 3*610*FLEN/8, x4, x1, x2)

inst_9059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78842cac09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f778842cac09a97; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:27177*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27177*0 + 3*611*FLEN/8, x4, x1, x2)

inst_9060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:27180*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27180*0 + 3*612*FLEN/8, x4, x1, x2)

inst_9061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:27183*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27183*0 + 3*613*FLEN/8, x4, x1, x2)

inst_9062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:27186*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27186*0 + 3*614*FLEN/8, x4, x1, x2)

inst_9063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:27189*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27189*0 + 3*615*FLEN/8, x4, x1, x2)

inst_9064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:27192*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27192*0 + 3*616*FLEN/8, x4, x1, x2)

inst_9065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:27195*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27195*0 + 3*617*FLEN/8, x4, x1, x2)

inst_9066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:27198*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27198*0 + 3*618*FLEN/8, x4, x1, x2)

inst_9067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:27201*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27201*0 + 3*619*FLEN/8, x4, x1, x2)

inst_9068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:27204*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27204*0 + 3*620*FLEN/8, x4, x1, x2)

inst_9069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:27207*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27207*0 + 3*621*FLEN/8, x4, x1, x2)

inst_9070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:27210*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27210*0 + 3*622*FLEN/8, x4, x1, x2)

inst_9071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:27213*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27213*0 + 3*623*FLEN/8, x4, x1, x2)

inst_9072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:27216*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27216*0 + 3*624*FLEN/8, x4, x1, x2)

inst_9073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:27219*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27219*0 + 3*625*FLEN/8, x4, x1, x2)

inst_9074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:27222*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27222*0 + 3*626*FLEN/8, x4, x1, x2)

inst_9075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:27225*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27225*0 + 3*627*FLEN/8, x4, x1, x2)

inst_9076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:27228*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27228*0 + 3*628*FLEN/8, x4, x1, x2)

inst_9077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:27231*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27231*0 + 3*629*FLEN/8, x4, x1, x2)

inst_9078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:27234*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27234*0 + 3*630*FLEN/8, x4, x1, x2)

inst_9079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:27237*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27237*0 + 3*631*FLEN/8, x4, x1, x2)

inst_9080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:27240*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27240*0 + 3*632*FLEN/8, x4, x1, x2)

inst_9081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:27243*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27243*0 + 3*633*FLEN/8, x4, x1, x2)

inst_9082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000000000; valaddr_reg:x3; val_offset:27246*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27246*0 + 3*634*FLEN/8, x4, x1, x2)

inst_9083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000000001; valaddr_reg:x3; val_offset:27249*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27249*0 + 3*635*FLEN/8, x4, x1, x2)

inst_9084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000000003; valaddr_reg:x3; val_offset:27252*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27252*0 + 3*636*FLEN/8, x4, x1, x2)

inst_9085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000000007; valaddr_reg:x3; val_offset:27255*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27255*0 + 3*637*FLEN/8, x4, x1, x2)

inst_9086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000000000f; valaddr_reg:x3; val_offset:27258*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27258*0 + 3*638*FLEN/8, x4, x1, x2)

inst_9087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000000001f; valaddr_reg:x3; val_offset:27261*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27261*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_9088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000000003f; valaddr_reg:x3; val_offset:27264*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27264*0 + 3*640*FLEN/8, x4, x1, x2)

inst_9089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000000007f; valaddr_reg:x3; val_offset:27267*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27267*0 + 3*641*FLEN/8, x4, x1, x2)

inst_9090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000000000ff; valaddr_reg:x3; val_offset:27270*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27270*0 + 3*642*FLEN/8, x4, x1, x2)

inst_9091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000000001ff; valaddr_reg:x3; val_offset:27273*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27273*0 + 3*643*FLEN/8, x4, x1, x2)

inst_9092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000000003ff; valaddr_reg:x3; val_offset:27276*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27276*0 + 3*644*FLEN/8, x4, x1, x2)

inst_9093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000000007ff; valaddr_reg:x3; val_offset:27279*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27279*0 + 3*645*FLEN/8, x4, x1, x2)

inst_9094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000000fff; valaddr_reg:x3; val_offset:27282*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27282*0 + 3*646*FLEN/8, x4, x1, x2)

inst_9095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000001fff; valaddr_reg:x3; val_offset:27285*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27285*0 + 3*647*FLEN/8, x4, x1, x2)

inst_9096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000003fff; valaddr_reg:x3; val_offset:27288*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27288*0 + 3*648*FLEN/8, x4, x1, x2)

inst_9097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000007fff; valaddr_reg:x3; val_offset:27291*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27291*0 + 3*649*FLEN/8, x4, x1, x2)

inst_9098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000000ffff; valaddr_reg:x3; val_offset:27294*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27294*0 + 3*650*FLEN/8, x4, x1, x2)

inst_9099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000001ffff; valaddr_reg:x3; val_offset:27297*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27297*0 + 3*651*FLEN/8, x4, x1, x2)

inst_9100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000003ffff; valaddr_reg:x3; val_offset:27300*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27300*0 + 3*652*FLEN/8, x4, x1, x2)

inst_9101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000007ffff; valaddr_reg:x3; val_offset:27303*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27303*0 + 3*653*FLEN/8, x4, x1, x2)

inst_9102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000000fffff; valaddr_reg:x3; val_offset:27306*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27306*0 + 3*654*FLEN/8, x4, x1, x2)

inst_9103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000001fffff; valaddr_reg:x3; val_offset:27309*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27309*0 + 3*655*FLEN/8, x4, x1, x2)

inst_9104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000003fffff; valaddr_reg:x3; val_offset:27312*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27312*0 + 3*656*FLEN/8, x4, x1, x2)

inst_9105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000007fffff; valaddr_reg:x3; val_offset:27315*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27315*0 + 3*657*FLEN/8, x4, x1, x2)

inst_9106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000000ffffff; valaddr_reg:x3; val_offset:27318*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27318*0 + 3*658*FLEN/8, x4, x1, x2)

inst_9107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000001ffffff; valaddr_reg:x3; val_offset:27321*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27321*0 + 3*659*FLEN/8, x4, x1, x2)

inst_9108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000003ffffff; valaddr_reg:x3; val_offset:27324*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27324*0 + 3*660*FLEN/8, x4, x1, x2)

inst_9109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000007ffffff; valaddr_reg:x3; val_offset:27327*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27327*0 + 3*661*FLEN/8, x4, x1, x2)

inst_9110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000000fffffff; valaddr_reg:x3; val_offset:27330*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27330*0 + 3*662*FLEN/8, x4, x1, x2)

inst_9111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000001fffffff; valaddr_reg:x3; val_offset:27333*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27333*0 + 3*663*FLEN/8, x4, x1, x2)

inst_9112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000003fffffff; valaddr_reg:x3; val_offset:27336*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27336*0 + 3*664*FLEN/8, x4, x1, x2)

inst_9113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000007fffffff; valaddr_reg:x3; val_offset:27339*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27339*0 + 3*665*FLEN/8, x4, x1, x2)

inst_9114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00000ffffffff; valaddr_reg:x3; val_offset:27342*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27342*0 + 3*666*FLEN/8, x4, x1, x2)

inst_9115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00001ffffffff; valaddr_reg:x3; val_offset:27345*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27345*0 + 3*667*FLEN/8, x4, x1, x2)

inst_9116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00003ffffffff; valaddr_reg:x3; val_offset:27348*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27348*0 + 3*668*FLEN/8, x4, x1, x2)

inst_9117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00007ffffffff; valaddr_reg:x3; val_offset:27351*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27351*0 + 3*669*FLEN/8, x4, x1, x2)

inst_9118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0000fffffffff; valaddr_reg:x3; val_offset:27354*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27354*0 + 3*670*FLEN/8, x4, x1, x2)

inst_9119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0001fffffffff; valaddr_reg:x3; val_offset:27357*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27357*0 + 3*671*FLEN/8, x4, x1, x2)

inst_9120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0003fffffffff; valaddr_reg:x3; val_offset:27360*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27360*0 + 3*672*FLEN/8, x4, x1, x2)

inst_9121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0007fffffffff; valaddr_reg:x3; val_offset:27363*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27363*0 + 3*673*FLEN/8, x4, x1, x2)

inst_9122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c000ffffffffff; valaddr_reg:x3; val_offset:27366*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27366*0 + 3*674*FLEN/8, x4, x1, x2)

inst_9123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c001ffffffffff; valaddr_reg:x3; val_offset:27369*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27369*0 + 3*675*FLEN/8, x4, x1, x2)

inst_9124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c003ffffffffff; valaddr_reg:x3; val_offset:27372*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27372*0 + 3*676*FLEN/8, x4, x1, x2)

inst_9125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c007ffffffffff; valaddr_reg:x3; val_offset:27375*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27375*0 + 3*677*FLEN/8, x4, x1, x2)

inst_9126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c00fffffffffff; valaddr_reg:x3; val_offset:27378*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27378*0 + 3*678*FLEN/8, x4, x1, x2)

inst_9127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c01fffffffffff; valaddr_reg:x3; val_offset:27381*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27381*0 + 3*679*FLEN/8, x4, x1, x2)

inst_9128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c03fffffffffff; valaddr_reg:x3; val_offset:27384*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27384*0 + 3*680*FLEN/8, x4, x1, x2)

inst_9129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c07fffffffffff; valaddr_reg:x3; val_offset:27387*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27387*0 + 3*681*FLEN/8, x4, x1, x2)

inst_9130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c0ffffffffffff; valaddr_reg:x3; val_offset:27390*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27390*0 + 3*682*FLEN/8, x4, x1, x2)

inst_9131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c1ffffffffffff; valaddr_reg:x3; val_offset:27393*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27393*0 + 3*683*FLEN/8, x4, x1, x2)

inst_9132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c3ffffffffffff; valaddr_reg:x3; val_offset:27396*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27396*0 + 3*684*FLEN/8, x4, x1, x2)

inst_9133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c7ffffffffffff; valaddr_reg:x3; val_offset:27399*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27399*0 + 3*685*FLEN/8, x4, x1, x2)

inst_9134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3c8000000000000; valaddr_reg:x3; val_offset:27402*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27402*0 + 3*686*FLEN/8, x4, x1, x2)

inst_9135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cc000000000000; valaddr_reg:x3; val_offset:27405*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27405*0 + 3*687*FLEN/8, x4, x1, x2)

inst_9136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3ce000000000000; valaddr_reg:x3; val_offset:27408*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27408*0 + 3*688*FLEN/8, x4, x1, x2)

inst_9137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cf000000000000; valaddr_reg:x3; val_offset:27411*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27411*0 + 3*689*FLEN/8, x4, x1, x2)

inst_9138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cf800000000000; valaddr_reg:x3; val_offset:27414*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27414*0 + 3*690*FLEN/8, x4, x1, x2)

inst_9139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfc00000000000; valaddr_reg:x3; val_offset:27417*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27417*0 + 3*691*FLEN/8, x4, x1, x2)

inst_9140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfe00000000000; valaddr_reg:x3; val_offset:27420*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27420*0 + 3*692*FLEN/8, x4, x1, x2)

inst_9141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cff00000000000; valaddr_reg:x3; val_offset:27423*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27423*0 + 3*693*FLEN/8, x4, x1, x2)

inst_9142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cff80000000000; valaddr_reg:x3; val_offset:27426*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27426*0 + 3*694*FLEN/8, x4, x1, x2)

inst_9143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffc0000000000; valaddr_reg:x3; val_offset:27429*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27429*0 + 3*695*FLEN/8, x4, x1, x2)

inst_9144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffe0000000000; valaddr_reg:x3; val_offset:27432*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27432*0 + 3*696*FLEN/8, x4, x1, x2)

inst_9145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfff0000000000; valaddr_reg:x3; val_offset:27435*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27435*0 + 3*697*FLEN/8, x4, x1, x2)

inst_9146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfff8000000000; valaddr_reg:x3; val_offset:27438*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27438*0 + 3*698*FLEN/8, x4, x1, x2)

inst_9147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffc000000000; valaddr_reg:x3; val_offset:27441*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27441*0 + 3*699*FLEN/8, x4, x1, x2)

inst_9148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffe000000000; valaddr_reg:x3; val_offset:27444*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27444*0 + 3*700*FLEN/8, x4, x1, x2)

inst_9149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffff000000000; valaddr_reg:x3; val_offset:27447*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27447*0 + 3*701*FLEN/8, x4, x1, x2)

inst_9150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffff800000000; valaddr_reg:x3; val_offset:27450*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27450*0 + 3*702*FLEN/8, x4, x1, x2)

inst_9151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffc00000000; valaddr_reg:x3; val_offset:27453*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27453*0 + 3*703*FLEN/8, x4, x1, x2)

inst_9152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffe00000000; valaddr_reg:x3; val_offset:27456*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27456*0 + 3*704*FLEN/8, x4, x1, x2)

inst_9153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffff00000000; valaddr_reg:x3; val_offset:27459*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27459*0 + 3*705*FLEN/8, x4, x1, x2)

inst_9154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffff80000000; valaddr_reg:x3; val_offset:27462*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27462*0 + 3*706*FLEN/8, x4, x1, x2)

inst_9155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffc0000000; valaddr_reg:x3; val_offset:27465*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27465*0 + 3*707*FLEN/8, x4, x1, x2)

inst_9156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffe0000000; valaddr_reg:x3; val_offset:27468*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27468*0 + 3*708*FLEN/8, x4, x1, x2)

inst_9157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffff0000000; valaddr_reg:x3; val_offset:27471*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27471*0 + 3*709*FLEN/8, x4, x1, x2)

inst_9158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffff8000000; valaddr_reg:x3; val_offset:27474*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27474*0 + 3*710*FLEN/8, x4, x1, x2)

inst_9159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffc000000; valaddr_reg:x3; val_offset:27477*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27477*0 + 3*711*FLEN/8, x4, x1, x2)

inst_9160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffe000000; valaddr_reg:x3; val_offset:27480*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27480*0 + 3*712*FLEN/8, x4, x1, x2)

inst_9161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffff000000; valaddr_reg:x3; val_offset:27483*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27483*0 + 3*713*FLEN/8, x4, x1, x2)

inst_9162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffff800000; valaddr_reg:x3; val_offset:27486*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27486*0 + 3*714*FLEN/8, x4, x1, x2)

inst_9163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffc00000; valaddr_reg:x3; val_offset:27489*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27489*0 + 3*715*FLEN/8, x4, x1, x2)

inst_9164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffe00000; valaddr_reg:x3; val_offset:27492*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27492*0 + 3*716*FLEN/8, x4, x1, x2)

inst_9165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffff00000; valaddr_reg:x3; val_offset:27495*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27495*0 + 3*717*FLEN/8, x4, x1, x2)

inst_9166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffff80000; valaddr_reg:x3; val_offset:27498*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27498*0 + 3*718*FLEN/8, x4, x1, x2)

inst_9167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffc0000; valaddr_reg:x3; val_offset:27501*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27501*0 + 3*719*FLEN/8, x4, x1, x2)

inst_9168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffe0000; valaddr_reg:x3; val_offset:27504*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27504*0 + 3*720*FLEN/8, x4, x1, x2)

inst_9169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffff0000; valaddr_reg:x3; val_offset:27507*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27507*0 + 3*721*FLEN/8, x4, x1, x2)

inst_9170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffff8000; valaddr_reg:x3; val_offset:27510*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27510*0 + 3*722*FLEN/8, x4, x1, x2)

inst_9171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffc000; valaddr_reg:x3; val_offset:27513*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27513*0 + 3*723*FLEN/8, x4, x1, x2)

inst_9172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffe000; valaddr_reg:x3; val_offset:27516*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27516*0 + 3*724*FLEN/8, x4, x1, x2)

inst_9173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffff000; valaddr_reg:x3; val_offset:27519*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27519*0 + 3*725*FLEN/8, x4, x1, x2)

inst_9174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffff800; valaddr_reg:x3; val_offset:27522*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27522*0 + 3*726*FLEN/8, x4, x1, x2)

inst_9175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffffc00; valaddr_reg:x3; val_offset:27525*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27525*0 + 3*727*FLEN/8, x4, x1, x2)

inst_9176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffffe00; valaddr_reg:x3; val_offset:27528*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27528*0 + 3*728*FLEN/8, x4, x1, x2)

inst_9177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffff00; valaddr_reg:x3; val_offset:27531*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27531*0 + 3*729*FLEN/8, x4, x1, x2)

inst_9178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffff80; valaddr_reg:x3; val_offset:27534*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27534*0 + 3*730*FLEN/8, x4, x1, x2)

inst_9179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffffc0; valaddr_reg:x3; val_offset:27537*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27537*0 + 3*731*FLEN/8, x4, x1, x2)

inst_9180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffffe0; valaddr_reg:x3; val_offset:27540*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27540*0 + 3*732*FLEN/8, x4, x1, x2)

inst_9181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffffff0; valaddr_reg:x3; val_offset:27543*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27543*0 + 3*733*FLEN/8, x4, x1, x2)

inst_9182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffffff8; valaddr_reg:x3; val_offset:27546*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27546*0 + 3*734*FLEN/8, x4, x1, x2)

inst_9183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffffffc; valaddr_reg:x3; val_offset:27549*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27549*0 + 3*735*FLEN/8, x4, x1, x2)

inst_9184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cffffffffffffe; valaddr_reg:x3; val_offset:27552*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27552*0 + 3*736*FLEN/8, x4, x1, x2)

inst_9185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x79fc99f4b94bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f779fc99f4b94bf; op2val:0x0;
op3val:0x3cfffffffffffff; valaddr_reg:x3; val_offset:27555*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27555*0 + 3*737*FLEN/8, x4, x1, x2)

inst_9186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000000000; valaddr_reg:x3; val_offset:27558*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27558*0 + 3*738*FLEN/8, x4, x1, x2)

inst_9187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000000001; valaddr_reg:x3; val_offset:27561*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27561*0 + 3*739*FLEN/8, x4, x1, x2)

inst_9188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000000003; valaddr_reg:x3; val_offset:27564*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27564*0 + 3*740*FLEN/8, x4, x1, x2)

inst_9189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000000007; valaddr_reg:x3; val_offset:27567*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27567*0 + 3*741*FLEN/8, x4, x1, x2)

inst_9190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000000000f; valaddr_reg:x3; val_offset:27570*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27570*0 + 3*742*FLEN/8, x4, x1, x2)

inst_9191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000000001f; valaddr_reg:x3; val_offset:27573*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27573*0 + 3*743*FLEN/8, x4, x1, x2)

inst_9192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000000003f; valaddr_reg:x3; val_offset:27576*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27576*0 + 3*744*FLEN/8, x4, x1, x2)

inst_9193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000000007f; valaddr_reg:x3; val_offset:27579*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27579*0 + 3*745*FLEN/8, x4, x1, x2)

inst_9194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000000000ff; valaddr_reg:x3; val_offset:27582*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27582*0 + 3*746*FLEN/8, x4, x1, x2)

inst_9195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000000001ff; valaddr_reg:x3; val_offset:27585*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27585*0 + 3*747*FLEN/8, x4, x1, x2)

inst_9196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000000003ff; valaddr_reg:x3; val_offset:27588*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27588*0 + 3*748*FLEN/8, x4, x1, x2)

inst_9197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000000007ff; valaddr_reg:x3; val_offset:27591*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27591*0 + 3*749*FLEN/8, x4, x1, x2)

inst_9198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000000fff; valaddr_reg:x3; val_offset:27594*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27594*0 + 3*750*FLEN/8, x4, x1, x2)

inst_9199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000001fff; valaddr_reg:x3; val_offset:27597*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27597*0 + 3*751*FLEN/8, x4, x1, x2)

inst_9200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000003fff; valaddr_reg:x3; val_offset:27600*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27600*0 + 3*752*FLEN/8, x4, x1, x2)

inst_9201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000007fff; valaddr_reg:x3; val_offset:27603*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27603*0 + 3*753*FLEN/8, x4, x1, x2)

inst_9202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000000ffff; valaddr_reg:x3; val_offset:27606*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27606*0 + 3*754*FLEN/8, x4, x1, x2)

inst_9203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000001ffff; valaddr_reg:x3; val_offset:27609*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27609*0 + 3*755*FLEN/8, x4, x1, x2)

inst_9204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000003ffff; valaddr_reg:x3; val_offset:27612*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27612*0 + 3*756*FLEN/8, x4, x1, x2)

inst_9205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000007ffff; valaddr_reg:x3; val_offset:27615*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27615*0 + 3*757*FLEN/8, x4, x1, x2)

inst_9206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000000fffff; valaddr_reg:x3; val_offset:27618*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27618*0 + 3*758*FLEN/8, x4, x1, x2)

inst_9207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000001fffff; valaddr_reg:x3; val_offset:27621*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27621*0 + 3*759*FLEN/8, x4, x1, x2)

inst_9208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000003fffff; valaddr_reg:x3; val_offset:27624*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27624*0 + 3*760*FLEN/8, x4, x1, x2)

inst_9209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000007fffff; valaddr_reg:x3; val_offset:27627*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27627*0 + 3*761*FLEN/8, x4, x1, x2)

inst_9210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000000ffffff; valaddr_reg:x3; val_offset:27630*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27630*0 + 3*762*FLEN/8, x4, x1, x2)

inst_9211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000001ffffff; valaddr_reg:x3; val_offset:27633*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27633*0 + 3*763*FLEN/8, x4, x1, x2)

inst_9212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000003ffffff; valaddr_reg:x3; val_offset:27636*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27636*0 + 3*764*FLEN/8, x4, x1, x2)

inst_9213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000007ffffff; valaddr_reg:x3; val_offset:27639*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27639*0 + 3*765*FLEN/8, x4, x1, x2)

inst_9214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000000fffffff; valaddr_reg:x3; val_offset:27642*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27642*0 + 3*766*FLEN/8, x4, x1, x2)

inst_9215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000001fffffff; valaddr_reg:x3; val_offset:27645*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27645*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587309119,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587309183,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587309311,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587309567,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587310079,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587311103,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587313151,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587317247,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587325439,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587341823,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587374591,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587440127,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587571199,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232587833343,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232588357631,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232589406207,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232591503359,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232595697663,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232604086271,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232620863487,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232654417919,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232721526783,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549232855744511,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549233124179967,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549233661050879,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549234734792703,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549236882276351,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549241177243647,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549249767178239,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549266947047423,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549301306785791,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549370026262527,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549507465215999,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440549782343122943,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440550332098936831,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440551431610564607,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440553630633820159,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440558028680331263,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440566824773353471,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440584416959397887,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440619601331486719,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440689970075664383,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4440830707564019711,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4441112182540730367,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4441675132494151679,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4442801032400994303,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4442801032400994304,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4443926932307836928,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4444489882261258240,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4444771357237968896,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4444912094726324224,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4444982463470501888,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445017647842590720,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445035240028635136,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445044036121657344,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445048434168168448,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445050633191424000,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445051732703051776,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052282458865664,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052557336772608,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052694775726080,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052763495202816,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052797854941184,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052815034810368,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052823624744960,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052827919712256,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052830067195904,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052831140937728,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052831677808640,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052831946244096,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832080461824,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832147570688,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832181125120,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832197902336,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832206290944,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832210485248,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832212582400,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832213630976,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214155264,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214417408,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214548480,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214614016,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214646784,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214663168,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214671360,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214675456,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214677504,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214678528,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679040,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679296,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679424,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679488,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679520,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679536,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679544,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679548,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679550,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4445052832214679551,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6878294439982970151,64,FLEN)
NAN_BOXED(2335353243528889674,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6878608703139727455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276416,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276417,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276419,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276423,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276431,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276447,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276479,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276543,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276671,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545276927,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545277439,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545278463,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545280511,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545284607,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545292799,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545309183,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545341951,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545407487,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545538559,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219545800703,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219546324991,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219547373567,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219549470719,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219553665023,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219562053631,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219578830847,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219612385279,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219679494143,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175219813711871,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175220082147327,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175220619018239,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175221692760063,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175223840243711,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175228135211007,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175236725145599,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175253905014783,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175288264753151,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175356984229887,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175494423183359,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598175769301090303,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598176319056904191,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598177418568531967,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598179617591787519,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598184015638298623,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598192811731320831,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598210403917365247,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598245588289454079,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598315957033631743,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598456694521987071,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4598738169498697727,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4599301119452119039,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4600427019358961663,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4600427019358961664,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4601552919265804288,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602115869219225600,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602397344195936256,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602538081684291584,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602608450428469248,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602643634800558080,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602661226986602496,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602670023079624704,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602674421126135808,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602676620149391360,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602677719661019136,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678269416833024,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678544294739968,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678681733693440,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678750453170176,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678784812908544,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678801992777728,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678810582712320,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678814877679616,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678817025163264,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678818098905088,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678818635776000,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678818904211456,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819038429184,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819105538048,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819139092480,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819155869696,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819164258304,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819168452608,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819170549760,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819171598336,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172122624,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172384768,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172515840,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172581376,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172614144,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172630528,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172638720,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172642816,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172644864,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172645888,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646400,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646656,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646784,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646848,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646880,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646896,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646904,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646908,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646910,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4602678819172646911,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6878700746731809071,64,FLEN)
NAN_BOXED(2334895588404266159,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301824,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301825,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301827,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301831,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301839,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301855,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301887,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301951,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302079,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302335,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302847,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604303871,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604305919,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604310015,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604318207,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604334591,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604367359,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604432895,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604563967,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604826111,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383605350399,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383606398975,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383608496127,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383612690431,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383621079039,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383637856255,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383671410687,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383738519551,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383872737279,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384141172735,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384678043647,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158385751785471,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158387899269119,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158392194236415,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158400784171007,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158417964040191,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158452323778559,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158521043255295,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158658482208767,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158933360115711,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198159483115929599,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198160582627557375,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198162781650812927,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198167179697324031,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198175975790346239,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198193567976390655,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198228752348479487,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198299121092657151,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198439858581012479,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198721333557723135,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(199284283511144447,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987071,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987072,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(201536083324829696,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202099033278251008,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202380508254961664,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202521245743316992,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202591614487494656,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202626798859583488,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202644391045627904,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202653187138650112,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202657585185161216,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202659784208416768,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202660883720044544,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661433475858432,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661708353765376,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661845792718848,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661914512195584,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661948871933952,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661966051803136,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661974641737728,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661978936705024,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661981084188672,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982157930496,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982694801408,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982963236864,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983097454592,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983164563456,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983198117888,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983214895104,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983223283712,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983227478016,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983229575168,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983230623744,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231148032,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231410176,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231541248,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231606784,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231639552,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231655936,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231664128,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231668224,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231670272,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671296,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671808,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672064,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672192,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672256,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672288,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672304,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672312,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672316,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672318,64,FLEN)
NAN_BOXED(6878812300981573055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672319,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412096,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412097,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412099,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412103,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412111,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412127,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412159,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412223,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412351,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412607,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105413119,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105414143,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105416191,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105420287,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105428479,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105444863,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105477631,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105543167,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105674239,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105936383,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6879116776282561175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229760,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229761,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229763,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229767,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229775,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229791,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229823,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229887,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230015,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230271,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230783,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642231807,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642233855,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642237951,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642246143,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642262527,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642295295,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642360831,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642491903,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642754047,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977643278335,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977644326911,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977646424063,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977650618367,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977659006975,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977675784191,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977709338623,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977776447487,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977910665215,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978179100671,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978715971583,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215979789713407,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215981937197055,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215986232164351,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215994822098943,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216012001968127,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216046361706495,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216115081183231,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216252520136703,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216527398043647,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270217077153857535,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270218176665485311,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270220375688740863,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270224773735251967,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270233569828274175,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270251162014318591,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270286346386407423,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270356715130585087,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270497452618940415,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270778927595651071,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(271341877549072383,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915007,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915008,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(273593677362757632,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274156627316178944,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274438102292889600,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274578839781244928,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274649208525422592,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274684392897511424,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274701985083555840,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274710781176578048,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274715179223089152,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274717378246344704,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274718477757972480,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719027513786368,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719302391693312,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719439830646784,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719508550123520,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719542909861888,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719560089731072,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719568679665664,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719572974632960,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719575122116608,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719576195858432,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719576732729344,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577001164800,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577135382528,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577202491392,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577236045824,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577252823040,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577261211648,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577265405952,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577267503104,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577268551680,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269075968,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269338112,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269469184,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269534720,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269567488,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269583872,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269592064,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269596160,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269598208,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269599232,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269599744,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600000,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600128,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600192,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600224,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600240,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600248,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600252,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600254,64,FLEN)
NAN_BOXED(6879142644141495487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600255,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235776,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235777,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235779,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235783,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235791,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235807,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235839,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244235903,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244236031,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244236287,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244236799,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244237823,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244239871,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244243967,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244252159,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244268543,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244301311,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244366847,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244497919,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461244760063,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461245284351,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461246332927,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461248430079,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461252624383,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461261012991,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461277790207,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461311344639,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461378453503,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461512671231,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000461781106687,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
